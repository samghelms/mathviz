[{"file": "1601.06524.tex", "nexttext": "\n\n\\item[(P2)] \\emph{Non-idling}: There is always a packet departing from the queue if and only if the controller sends a departure request, and there are packets in the queue or there is an arriving packet. In other words,\n    \n", "itemtype": "equation", "pos": 9508, "prevtext": "\n\n\\title{Constructing Sub-exponentially Large\\\\Optical Priority Queues with Switches and\\\\ Fiber Delay Lines}\n\n\\author{\\IEEEauthorblockN{Bin~Tang, Xiaoliang~Wang, Cam-Tu Nguyen, Sanglu Lu}\n\\IEEEauthorblockA{National Key Laboratory for Novel Software Technology\\\\\n Nanjing University, Nanjing 210023, China\\\\\nEmail: \\{tb, waxili, nguyenct,sanglu\\}@nju.edu.cn\\\\\n}}\n\n\n\\maketitle\n\n\n\n\\begin{abstract}\nOptical switching has been considered as a natural choice to keep pace with growing fiber link capacity. One key research issue of all-optical switching is the design of optical queues by using optical crossbar switches and fiber delay lines (SDL). In this paper, we focus on the construction of an optical \\emph{priority queue} with a single $(M+2)\\times (M+2)$ crossbar switch and $M$ fiber delay lines, and evaluate it in terms of the buffer size of the priority queue. Currently, the best known upper bound of the buffer size is $O(2^M)$, while existing methods can only construct a priority queue with buffer $O(M^3)$.\n\nIn this paper, we make a great step towards closing the above huge gap. We propose a very efficient construction of priority queues with buffer $2^{\\Theta(\\sqrt{M})}$.\n\nWe use 4-to-1 multiplexers with different buffer sizes, which can be constructed efficiently with SDL, as intermediate building blocks to simplify the design. The key idea in our construction is to route each packet entering the switch to some group of four 4-to-1 multiplexers according to its current priority, which is shown to be collision-free.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{abstract}\n\n\\IEEEpeerreviewmaketitle\n\n\n\n\\section{Introduction}\n\nAll-optical packet switching is very attractive for making good use of the enormous bandwidth of optical networks since it eliminates the complicated and quite expensive optical-electronic-optical conversions. One main issue for implementing the all-optical packet switching is the construction of optical queues for conflict resolutions among packets competing for the same resources. As optical-RAM is not available yet, a common approach for constructing the optical queues is to use a combination of bufferless optical crossbar Switches and fiber Delay Lines (SDLs)~\\cite{R03tso,H98slo,Y00aip}, where fiber delay lines act as storage devices for optical packets. However, fiber delay lines are much more inflexible than traditional electronic memories since one packet entering a fiber delay line can only be retrieved after a fixed amount of time. Such inflexibility makes the design of SDL-based optical queues with the same throughput and delay performance as that of the electronic ones quite challenging. In the past many years, great efforts have been made on constructing various kinds of optical queues, such as first-in-first-out (FIFO) multiplexers (e.g., \\cite{C96cod,C07fsc,C96cor,C04rco,C06usd,C06ana,J07cof,J08oco}), FIFO queues (e.g., \\cite{C06coo,L11mdq,H07rco,C13ana}), last-in-first-out (LIFO) queues (e.g., \\cite{S07ams,H07rco,W11edo}), priority queues (e.g., \\cite{S06eeo,C07asp,C07uas,K07oco}), shared queues (e.g., \\cite{W09aco,W12cnt}), etc.\n\nIn this paper, we focus on the design of optical \\emph{priority queues} with SDLs. In a priority queue, each packet is associated with a priority, and the packet with the highest priority is always sent to the output link when a departure request comes, whereas the packet with the lowest priority will be dropped when buffer overflow happens. Sarwate and Anatharam presented the first construction of optical priority queues in \\cite{S06eeo}, where they considered a feedback system consisting of an $(M+2)\\times (M+2)$ crossbar switch and $M$ fiber delay lines as illustrated in Fig.~\\ref{fig:general}. Let $B^*$ be the maximum achievable buffer size of this feedback system acting as a priority queue. In \\cite{S06eeo}, Sarwate and Anatharam showed that $B^*=O(2^M)$. They also gave an explicit construction of a priority queue using a sorting-based routing policy, which shows that $B^*=\\Omega (M^2)$. A simpler proof for this result is given in \\cite{C07asp}. Later, Chiu \\emph{et al}.~\\cite{C07uas} showed that $B^*=\\Omega (M^3)$ by improving the Sarwate-Anatharam's sorting-based routing policy.\nDespite the huge gap between the best known upper bound $O(2^M)$ and the best known lower bound $\\Omega(M^3)$, little progress has been made on the bounds for almost ten years.\n\n\\begin{figure}[!tb]\n    \\centering\n        \\includegraphics[width=2.1in]{feedbackdesign.pdf}\n    \\caption{A construction of an optical priority queue with an $(M+2)\\times (M+2)$ crossbar switch and $M$ fiber delay lines with delays $d_1$, \\ldots $d_M$.}\n    \\label{fig:general}\n\\end{figure}\n\nIn this paper, we make a great step towards closing the above gap by giving a very efficient construction of optical priority queues, which leads to $B^*=2^{\\Omega (\\sqrt{M})}$. Instead of considering fiber delay lines as basic building elements, we use (FIFO) multiplexers with different buffer sizes as intermediate building blocks, which simplifies our design significantly. An $n$-to-1 multiplexer has $n$ input links and one departure link.  It always has a departure packet whenever it is nonempty and packets depart in the FIFO order. Our main idea is to let the packets with priorities currently belonging to a same properly chosen interval enter a corresponding group of multiplexers, and to introduce multiple multiplexers for each group and enough input links for each multiplexer to handle possible packet collisions. In particular, we show that using four 4-to-1 multiplexers in each group is enough for the system to be collision-free. Fortunately, a 4-to-1 multiplexer can be constructed by concatenating three 2-to-1 multiplexers with the same buffer size, whereas it has been proved in~\\cite{C06ana} that an $(M+2)\\times (M+2)$ crossbar switch and $M$ fiber delay lines are enough for constructing a 2-to-1 multiplexer with buffer $O(2^M)$. By further combining all the switches used into one, we finally have a construction of a priority queue with buffer $2^{\\Theta (\\sqrt{M})}$ using an $(M+2)\\times (M+2)$ crossbar switch and $M$ fiber delay lines.\n\n\n\n\\section{Preliminaries}\n\\label{sec:preliminaries}\nIn this section, we first introduce the basic assumptions and network elements adopted in this paper and then introduce the definition of priority queues.\n\n\\subsection{Assumptions and Network Elements}\n\nAs in most work about the SDL-based optical queue designs~\\cite{C06coo,C04rco,S06eeo,K07oco}, we assume that all packets have the same size, and time is slotted and synchronized so that every packet can be transmitted within one time slot. Since there is at most one packet in a link, we can use 0-1 variables to characterize the state of a link. We say that a link is in state 1 at time $t$ if there is a packet in the link at time $t$, and the link is in state 0 at time $t$ otherwise.\n\nSwitches and fiber delay lines are defined as follows.\n\\begin{definition}[\\textbf{Switch}]\n  An $M\\times M$ (optical) crossbar switch is a network element that has $M$ input links and $M$ output links, which can realize all the $M!$ permutations between its inputs and outputs.\n\\end{definition}\n\\begin{definition}[\\textbf{Fiber delay line}]\nA fiber delay line with delay $d$ (a non-negative integer) is a network element that has one input link and one output link, through which $d$ time slots are required for a packet to traverse.\n\\end{definition}\n\n\n\\subsection{Priority Queues}\n\n\nIn this paper, we focus on the design of optical priority queue with switches and fiber delay lines. A priority queue with buffer $B$ is a network element with certain properties, which has one input link, one controller, and two output links, one for departing packets and the other for loss packets. See Fig.~\\ref{fig:priorityQ} for an illustration. To formally define the properties of a priority queue, we first introduce some basic notations describing the state of the priority queue at each time $t$ (i.e., the $t$-th time slot).\n\\begin{itemize}\n  \\item Let $a(t)$, $d(t)$ and $l(t)$ denote the states of the input link, the departure link and the loss link at time $t$, respectively.\n\n\n  \\item Let $c(t)=1$ if the controller sends a departure request at time $t$ or $c(t)=0$ otherwise.\n  \\item Denote by $q(t)$ the number of packets in the queue at time $t$.\n\\end{itemize}\n\n\\begin{definition}[\\textbf{Priority}]\nWhen a packet arrives at the queue, it is assigned with a priority, which indicates the expected departure order of this packet among all the buffered packets. Let $i$ be an arriving packet or a packet buffered in the queue at time $t$. Let $r_i(t)$ denote the priority order of $i$ among all the packets buffered in the queue and the arriving packet (if any) at time $t$, i.e., if $i$ has the $j$-th highest priority, then $r_i(t)=j$.\n\\end{definition}\n\n\\begin{figure}\n    \\centering\n        \\includegraphics[width=2.7in]{priorityQ.pdf}\n    \\caption{An optical priority queue with buffer size $B$}\n    \\label{fig:priorityQ}\n\\end{figure}\n\nBased on the aforementioned notations, a discrete-time priority queue can be defined as follows.\n\n\\begin{definition}[Priority queue~\\cite{S06eeo}]\n\\label{def:sharequeue}\nThe network element shown in Fig.\\ref{fig:priorityQ} is called a priority queue with buffer $B$ if it satisfies the following properties:\n\\begin{enumerate}\n\\item[(P1)] \\emph{Flow conservation}: arriving packets are either stored in the queue or transmitted through the departure link or the loss link, i.e.,\n\n\n\n\n\n\n", "index": 1, "text": "\\begin{equation}\n  q(t)=q(t-1)+a(t)-d(t)-l(t).\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"q(t)=q(t-1)+a(t)-d(t)-l(t).\" display=\"block\"><mrow><mrow><mrow><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mrow><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>-</mo><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>l</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n\n\\item[(P3)] \\emph{Maximum buffer usage}: There is a lost packet if and only if there is no departure request, the buffer is full and there is an arriving packet, i.e.,\n\n", "itemtype": "equation", "pos": 9796, "prevtext": "\n\n\\item[(P2)] \\emph{Non-idling}: There is always a packet departing from the queue if and only if the controller sends a departure request, and there are packets in the queue or there is an arriving packet. In other words,\n    \n", "index": 3, "text": "\\begin{equation}\n      d(t)=\n      \\begin{cases}\n        1 & \\textrm{if }c(t)=1 \\textrm{ and }q(t-1)+a(t)>0\\\\\n        0 & \\textrm{otherwise.}\n      \\end{cases}\n    \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"d(t)=\\begin{cases}1&amp;\\textrm{if }c(t)=1\\textrm{ and }q(t-1)+a(t)&gt;0\\\\&#10;0&amp;\\textrm{otherwise.}\\end{cases}\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mn>1</mn><mo>\u2062</mo><mtext>\u00a0and\u00a0</mtext><mo>\u2062</mo><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>&gt;</mo><mn>0</mn></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>0</mn></mtd><mtd columnalign=\"left\"><mtext>otherwise.</mtext></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\nAlso arriving packets are dropped only when the queue is full, i.e.,\n    \\begin{eqnarray}\n     l(t)= [q(t-1)+a(t)-d(t)-B]^{+}\n    \\end{eqnarray}\nwhere $[x]^{+}=x$ if $x > 0$ and is otherwise 0.\n\\item[(P4)] \\emph{Priority departure}: If there is a departure packet $i$ at time $t$, then $i$ has the highest priority among all the packets buffered in the queue and the arriving packet (if any) at time $t$, i.e.,\n    \n", "itemtype": "equation", "pos": 10144, "prevtext": "\n\n\\item[(P3)] \\emph{Maximum buffer usage}: There is a lost packet if and only if there is no departure request, the buffer is full and there is an arriving packet, i.e.,\n\n", "index": 5, "text": "\\begin{equation}\n  l(t)=\n  \\begin{cases}\n    1 & \\textrm{if }c(t)=0, q(t-1)=B \\textrm{ and }a(t)=1\\\\\n    0 & \\textrm{otherwise.}\n  \\end{cases}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"l(t)=\\begin{cases}1&amp;\\textrm{if }c(t)=0,q(t-1)=B\\textrm{ and }a(t)=1\\\\&#10;0&amp;\\textrm{otherwise.}\\end{cases}\" display=\"block\"><mrow><mrow><mi>l</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>,</mo><mrow><mrow><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mi>B</mi><mo>\u2062</mo><mtext>\u00a0and\u00a0</mtext><mo>\u2062</mo><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>1</mn></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>0</mn></mtd><mtd columnalign=\"left\"><mtext>otherwise.</mtext></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n\n\\item[(P5)] \\emph{Priority loss}: If there is a loss packet $i$ at time $t$, then $i$ has the lowest priority among the packets buffered in the queue and the arriving packet at time $t$, i.e.,\n    \n", "itemtype": "equation", "pos": 10717, "prevtext": "\nAlso arriving packets are dropped only when the queue is full, i.e.,\n    \\begin{eqnarray}\n     l(t)= [q(t-1)+a(t)-d(t)-B]^{+}\n    \\end{eqnarray}\nwhere $[x]^{+}=x$ if $x > 0$ and is otherwise 0.\n\\item[(P4)] \\emph{Priority departure}: If there is a departure packet $i$ at time $t$, then $i$ has the highest priority among all the packets buffered in the queue and the arriving packet (if any) at time $t$, i.e.,\n    \n", "index": 7, "text": "\\begin{equation}\n      r_i(t)=1.\n    \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"r_{i}(t)=1.\" display=\"block\"><mrow><mrow><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n\\end{enumerate}\n\\end{definition}\n\n\n\n\n\n\n\n\n\\section{A Construction of Priority Queues}\n\\label{sec:construction}\n\nIn this section, we present a very efficient construction of priority queues where 4-to-1 FIFO multiplexers are used as intermediate building blocks.\n\n\\subsection{Multiplexers}\n\\begin{definition}[\\textbf{Multiplexer}~\\cite{C04rco}]\n  An $n$-to-1 (FIFO) multiplexer with buffer $B$ is a network element with $n$ input links and $n$ output links. Among the $n$ output links, one is for departing packets and the others are for lost packets. Let $a_i(t)$, $i=1,2,\\ldots,n$, be the state of the $i$-th input link, $d(t)$ be the state of the departure link and $l_i(t)$, $i=1,2,\\ldots,n-1$, be the state of the $i$-th loss link, and $q(t)$ be the number of packets buffered at the multiplexer at time $t$. The $n$-to-1 multiplexer with buffer $B$ satisfies the following four properties.\n  \\begin{itemize}\n    \\item [(M1)] Flow conservation: arriving packets from the $n$ input packets are either stored in the buffer or transmitted through the $n$ input links, i.e.,\n    \n", "itemtype": "equation", "pos": 10967, "prevtext": "\n\n\\item[(P5)] \\emph{Priority loss}: If there is a loss packet $i$ at time $t$, then $i$ has the lowest priority among the packets buffered in the queue and the arriving packet at time $t$, i.e.,\n    \n", "index": 9, "text": "\\begin{equation}\n      r_i(t)=B+1.\n    \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"r_{i}(t)=B+1.\" display=\"block\"><mrow><mrow><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mi>B</mi><mo>+</mo><mn>1</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n\n    \\item [(M2)] Non-idling: there is always a departing packet if there are packets in the buffer or there are arriving packets, i.e.,\n    \n", "itemtype": "equation", "pos": 12099, "prevtext": "\n\\end{enumerate}\n\\end{definition}\n\n\n\n\n\n\n\n\n\\section{A Construction of Priority Queues}\n\\label{sec:construction}\n\nIn this section, we present a very efficient construction of priority queues where 4-to-1 FIFO multiplexers are used as intermediate building blocks.\n\n\\subsection{Multiplexers}\n\\begin{definition}[\\textbf{Multiplexer}~\\cite{C04rco}]\n  An $n$-to-1 (FIFO) multiplexer with buffer $B$ is a network element with $n$ input links and $n$ output links. Among the $n$ output links, one is for departing packets and the others are for lost packets. Let $a_i(t)$, $i=1,2,\\ldots,n$, be the state of the $i$-th input link, $d(t)$ be the state of the departure link and $l_i(t)$, $i=1,2,\\ldots,n-1$, be the state of the $i$-th loss link, and $q(t)$ be the number of packets buffered at the multiplexer at time $t$. The $n$-to-1 multiplexer with buffer $B$ satisfies the following four properties.\n  \\begin{itemize}\n    \\item [(M1)] Flow conservation: arriving packets from the $n$ input packets are either stored in the buffer or transmitted through the $n$ input links, i.e.,\n    \n", "index": 11, "text": "\\begin{equation}\n      q(t)=q(t-1)+\\sum_{i=1}^na_i(t)-d(t)+\\sum_{i=1}^n l_i(t).\n    \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"q(t)=q(t-1)+\\sum_{i=1}^{n}a_{i}(t)-d(t)+\\sum_{i=1}^{n}l_{i}(t).\" display=\"block\"><mrow><mrow><mrow><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mrow><mrow><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>-</mo><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>l</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n\n    \\item [(M3)] Maximum buffer usage: arriving packets are lost only when the buffer is full, i.e., for $i=1,\\ldots,n-1$,\n    \n", "itemtype": "equation", "pos": 12339, "prevtext": "\n\n    \\item [(M2)] Non-idling: there is always a departing packet if there are packets in the buffer or there are arriving packets, i.e.,\n    \n", "index": 13, "text": "\\begin{equation}\n      d(t)=\\begin{cases}\n        1 & \\textrm{if } q(t-1)+\\sum_{i=1}^n a_i(t)>0\\\\\n        0 & \\textrm{otherwise.}\n      \\end{cases}\n    \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"d(t)=\\begin{cases}1&amp;\\textrm{if }q(t-1)+\\sum_{i=1}^{n}a_{i}(t)&gt;0\\\\&#10;0&amp;\\textrm{otherwise.}\\end{cases}\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mstyle displaystyle=\"false\"><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mstyle><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>&gt;</mo><mn>0</mn></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>0</mn></mtd><mtd columnalign=\"left\"><mtext>otherwise.</mtext></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n\n    \\item [(M4)] FIFO: packets depart in the FIFO order.\n\n  \\end{itemize}\n\\end{definition}\n\n\nSee Fig.~\\ref{fig:2to1} for an illustration of a 2-to-1 multiplexer with buffer $B$.\n\n\n\\subsection{The Construction}\n\n\nTo ease the presentation, we first define some notations. Let $m$ be a positive integer. For $j=1,\\ldots,m$, let $\\Psi_j$ be the set of consecutive integers $2^{j-1},2^{j-1}+1,,\\ldots, 2^j-1$, and for $j=m+1,\\ldots,2m-1$, let $\\Psi_j$ be the set of consecutive integers  $3\\times 2^{m-1}-2^{2m-j}, \\ldots, 3\\times 2^{m-1}-2^{2m-j-1}-1$. For example, $\\Psi_1=\\{1\\}$, $\\Psi_2=\\{2,3\\}$, and $\\Psi_3=\\{4,5,6,7\\}$. Clearly, for each $j=1,\\ldots,m$, both $\\Psi_j$ and $\\Psi_{2m-j}$ have the same size of $2^{j-1}$.\n\nIn our construction, an optical priority queue, as illustrated in Fig.~\\ref{fig:construction}, consists of a $(32m-14)\\times (32m-14)$ crossbar switch and $2m-1$ groups of multiplexers. For each $j=1,2,\\ldots,m$, the $j$-th group of multiplexers consists of four parallel 4-to-1 multiplexers with buffer $B_j$, where\n\n", "itemtype": "equation", "pos": 12634, "prevtext": "\n\n    \\item [(M3)] Maximum buffer usage: arriving packets are lost only when the buffer is full, i.e., for $i=1,\\ldots,n-1$,\n    \n", "index": 15, "text": "\\begin{equation}\n      l_i(t)=\\begin{cases}\n        1 & \\textrm{if }q(t-1)+\\sum_{i=1}^na_i(t)\\geq B+i+1\\\\\n        0 & \\textrm{otherwise.}\n      \\end{cases}\n    \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"l_{i}(t)=\\begin{cases}1&amp;\\textrm{if }q(t-1)+\\sum_{i=1}^{n}a_{i}(t)\\geq B+i+1\\\\&#10;0&amp;\\textrm{otherwise.}\\end{cases}\" display=\"block\"><mrow><mrow><msub><mi>l</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>q</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mstyle displaystyle=\"false\"><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mstyle><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>\u2265</mo><mrow><mi>B</mi><mo>+</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>0</mn></mtd><mtd columnalign=\"left\"><mtext>otherwise.</mtext></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\nand its main purpose is to store the packets with priority order in $\\Psi_j$, although the priority orders of packets may change slowly over time. The $(2m-j)$-th group of multiplexers is the same as the $j$-th group of multiplexers, and its main purpose is to store the packets with priority order in $\\Psi_{2m-j}$. The construction of 4-to-1 multiplexers with switches and fiber delay lines is deferred to Sec.~\\ref{sec:4to1}.\n\n\\begin{figure}[!tb]\n    \\centering\n        \\includegraphics[width=2.7in]{2to1multiplexer.pdf}\n    \\caption{A 2-to-1 multiplexer with buffer $B$.}\n    \\label{fig:2to1}\n\\end{figure}\nThe routing policy performed by the switch at the beginning of time $t$, $t=1,2,\\ldots,$ is as follows.\n \\begin{itemize}\n \\item[(R)] After handling the departure packet and the loss packet, if any, according to the requirement of priority queues, every other packet $i$ in the switch with priority order $r_i(t)$ will be pushed into one of the 4-to-1 multiplexers in the $j$-th group such that\n\n", "itemtype": "equation", "pos": 13849, "prevtext": "\n\n    \\item [(M4)] FIFO: packets depart in the FIFO order.\n\n  \\end{itemize}\n\\end{definition}\n\n\nSee Fig.~\\ref{fig:2to1} for an illustration of a 2-to-1 multiplexer with buffer $B$.\n\n\n\\subsection{The Construction}\n\n\nTo ease the presentation, we first define some notations. Let $m$ be a positive integer. For $j=1,\\ldots,m$, let $\\Psi_j$ be the set of consecutive integers $2^{j-1},2^{j-1}+1,,\\ldots, 2^j-1$, and for $j=m+1,\\ldots,2m-1$, let $\\Psi_j$ be the set of consecutive integers  $3\\times 2^{m-1}-2^{2m-j}, \\ldots, 3\\times 2^{m-1}-2^{2m-j-1}-1$. For example, $\\Psi_1=\\{1\\}$, $\\Psi_2=\\{2,3\\}$, and $\\Psi_3=\\{4,5,6,7\\}$. Clearly, for each $j=1,\\ldots,m$, both $\\Psi_j$ and $\\Psi_{2m-j}$ have the same size of $2^{j-1}$.\n\nIn our construction, an optical priority queue, as illustrated in Fig.~\\ref{fig:construction}, consists of a $(32m-14)\\times (32m-14)$ crossbar switch and $2m-1$ groups of multiplexers. For each $j=1,2,\\ldots,m$, the $j$-th group of multiplexers consists of four parallel 4-to-1 multiplexers with buffer $B_j$, where\n\n", "index": 17, "text": "\\begin{equation}\n  B_j=\n  \\begin{cases}\n    1 & i=1\\\\\n    2^{j-2} & i=2,3,\\ldots,m,\n  \\end{cases}\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"B_{j}=\\begin{cases}1&amp;i=1\\\\&#10;2^{j-2}&amp;i=2,3,\\ldots,m,\\end{cases}\" display=\"block\"><mrow><msub><mi>B</mi><mi>j</mi></msub><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><msup><mn>2</mn><mrow><mi>j</mi><mo>-</mo><mn>2</mn></mrow></msup></mtd><mtd columnalign=\"left\"><mrow><mrow><mi>i</mi><mo>=</mo><mrow><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mi>m</mi></mrow></mrow><mo>,</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\nvia a separate input link while guaranteeing that all the four buffers of the 4-to-1 multiplexers in this group are almost the same used (i.e., differing by at most one packet).\n\\end{itemize}\nFor example, the packets with priority order 4,5,6,7 are always sent to the third group of multiplexers.\n\n\n\n\\begin{figure*}\n    \\centering\n        \\includegraphics[width=5.2in]{construction.pdf}\n    \\caption{Left: the construction of an optical priority queue with a switch and $2m-1$ groups of 4-to-1 multiplexers. Right: A group of 4-to-1 multiplexers. All the loss links of multiplexers are omitted.}\n    \\label{fig:construction}\n\\end{figure*}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\subsection{Analysis}\n\nNow we show that the system constructed above emulates a priority queue with buffer $3\\times 2^{m-1}-2$ exactly.\n\nWe first establish the correctness of the routing policy by showing that there is no packet collision under the routing policy, i.e., the number of packets entering every group of 4-to-1 multiplexers at the same time is not more than 16, the total number of input links of the group of 4-to-1 multiplexers. We begin with the following property.\n\\begin{lemma}\n  \\label{lemma:multiplexinterval}\n    For any packet $i$ buffered in the $j$-th group of multiplexers at time $t$, if $j\\leq m$, then\n  \n", "itemtype": "equation", "pos": 14968, "prevtext": "\nand its main purpose is to store the packets with priority order in $\\Psi_j$, although the priority orders of packets may change slowly over time. The $(2m-j)$-th group of multiplexers is the same as the $j$-th group of multiplexers, and its main purpose is to store the packets with priority order in $\\Psi_{2m-j}$. The construction of 4-to-1 multiplexers with switches and fiber delay lines is deferred to Sec.~\\ref{sec:4to1}.\n\n\\begin{figure}[!tb]\n    \\centering\n        \\includegraphics[width=2.7in]{2to1multiplexer.pdf}\n    \\caption{A 2-to-1 multiplexer with buffer $B$.}\n    \\label{fig:2to1}\n\\end{figure}\nThe routing policy performed by the switch at the beginning of time $t$, $t=1,2,\\ldots,$ is as follows.\n \\begin{itemize}\n \\item[(R)] After handling the departure packet and the loss packet, if any, according to the requirement of priority queues, every other packet $i$ in the switch with priority order $r_i(t)$ will be pushed into one of the 4-to-1 multiplexers in the $j$-th group such that\n\n", "index": 19, "text": "\\begin{equation}\n\\label{eq:enterrule}\n  r_i(t)\\in \\Psi_j,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E10.m1\" class=\"ltx_Math\" alttext=\"r_{i}(t)\\in\\Psi_{j},\" display=\"block\"><mrow><mrow><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><msub><mi mathvariant=\"normal\">\u03a8</mi><mi>j</mi></msub></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n  otherwise,\n  \n", "itemtype": "equation", "pos": 16338, "prevtext": "\nvia a separate input link while guaranteeing that all the four buffers of the 4-to-1 multiplexers in this group are almost the same used (i.e., differing by at most one packet).\n\\end{itemize}\nFor example, the packets with priority order 4,5,6,7 are always sent to the third group of multiplexers.\n\n\n\n\\begin{figure*}\n    \\centering\n        \\includegraphics[width=5.2in]{construction.pdf}\n    \\caption{Left: the construction of an optical priority queue with a switch and $2m-1$ groups of 4-to-1 multiplexers. Right: A group of 4-to-1 multiplexers. All the loss links of multiplexers are omitted.}\n    \\label{fig:construction}\n\\end{figure*}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\subsection{Analysis}\n\nNow we show that the system constructed above emulates a priority queue with buffer $3\\times 2^{m-1}-2$ exactly.\n\nWe first establish the correctness of the routing policy by showing that there is no packet collision under the routing policy, i.e., the number of packets entering every group of 4-to-1 multiplexers at the same time is not more than 16, the total number of input links of the group of 4-to-1 multiplexers. We begin with the following property.\n\\begin{lemma}\n  \\label{lemma:multiplexinterval}\n    For any packet $i$ buffered in the $j$-th group of multiplexers at time $t$, if $j\\leq m$, then\n  \n", "index": 21, "text": "\\begin{equation}\n  \\label{eq:multiplexinterval}\n    2^{j-2}+1\\leq r_i(t) \\leq 2^j+2^{j-2}-2,\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m1\" class=\"ltx_Math\" alttext=\"2^{j-2}+1\\leq r_{i}(t)\\leq 2^{j}+2^{j-2}-2,\" display=\"block\"><mrow><mrow><mrow><msup><mn>2</mn><mrow><mi>j</mi><mo>-</mo><mn>2</mn></mrow></msup><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2264</mo><mrow><mrow><msup><mn>2</mn><mi>j</mi></msup><mo>+</mo><msup><mn>2</mn><mrow><mi>j</mi><mo>-</mo><mn>2</mn></mrow></msup></mrow><mo>-</mo><mn>2</mn></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n\\end{lemma}\n\\begin{IEEEproof}\n  We only prove the result for the case $j\\leq m$. The result for the other case can be shown very similarly.\n\n    Suppose that $j\\leq m$ and a packet $i$ is buffered in some 4-to-1 multiplexer in the $j$-th group at time $t$. Let $t_0\\leq t$ be the time when $i$ entered this multiplexer for the last time.  During the time interval between $t_0$ and $t$, since the multiplexer is non-empty, there is always a packet departing from the multiplexer in the FIFO order according to (M2) and (M4). So we have $t-t_0\\leq B_j-1$. Otherwise, $i$ should leave the multiplexer before $t$. Another key observation is that the priority order of any packet can only change by one in a time slot. This implies that\n  \n", "itemtype": "equation", "pos": 16463, "prevtext": "\n  otherwise,\n  \n", "index": 23, "text": "\\begin{equation}\n    3\\times 2^{m-1}-5\\times 2^{2m-j-2}+1\\leq r_i(t)\\leq 3\\times 2^{m-1}-2^{2m-j-2}-2.\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m1\" class=\"ltx_Math\" alttext=\"3\\times 2^{m-1}-5\\times 2^{2m-j-2}+1\\leq r_{i}(t)\\leq 3\\times 2^{m-1}-2^{2m-j-%&#10;2}-2.\" display=\"block\"><mrow><mrow><mrow><mrow><mrow><mn>3</mn><mo>\u00d7</mo><msup><mn>2</mn><mrow><mi>m</mi><mo>-</mo><mn>1</mn></mrow></msup></mrow><mo>-</mo><mrow><mn>5</mn><mo>\u00d7</mo><msup><mn>2</mn><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>m</mi></mrow><mo>-</mo><mi>j</mi><mo>-</mo><mn>2</mn></mrow></msup></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2264</mo><mrow><mrow><mn>3</mn><mo>\u00d7</mo><msup><mn>2</mn><mrow><mi>m</mi><mo>-</mo><mn>1</mn></mrow></msup></mrow><mo>-</mo><msup><mn>2</mn><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>m</mi></mrow><mo>-</mo><mi>j</mi><mo>-</mo><mn>2</mn></mrow></msup><mo>-</mo><mn>2</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06524.tex", "nexttext": "\n  Since $2^{j-1}\\leq r_i(t_0)\\leq 2^j-1$ according to the routing policy (R), we have  \\eqref{eq:multiplexinterval} immediately.\n\\end{IEEEproof}\n\n\n\\begin{lemma}\n\\label{thm:nocollision}\n  No collision can happen under the proposed routing policy (R).\n\\end{lemma}\n\\begin{IEEEproof}\n  According to \\eqref{eq:enterrule} and Lemma~\\ref{lemma:multiplexinterval}, it is straightforward to check that every packet entering the $j$-th group of multiplexers can only come from the input link of the switching system, the output links of the $(j-1)$-th group of multiplexers, the output links of the $j$-th group of multiplexers, or the output links of the $(j+1)$-th group of multiplexers, if any. So there are at most 13 packets entering the $j$-th group of multiplexers at the same time under the routing policy (R). Clearly, there is no collision as the $j$-th group of multiplexers has 16 input links in total.\n\\end{IEEEproof}\n\nNow we establish the main result.\n\n\\begin{theorem}\n\\label{thm:main}\n  Starting with an empty buffer, the proposed switching system is an optical priority queue with buffer $3\\times 2^{m-1}-2$.\n\\end{theorem}\n\\begin{IEEEproof}\n  We first show that the proposed system satisfies the flow conservation property (P1). According to Theorem~\\ref{thm:nocollision}, we only need to show that no packet is dropped by any 4-to-1 multiplexer in the system. Consider an arbitrary $j$-th group of multiplexers such that $2\\leq j\\leq m$ (the case $j=1$ is trivial while the case $j>m$ can be shown similarly). Since the buffers of the four 4-to-1 multiplexers are almost equally used, according to the routing policy (R), if there is a packet dropped by some 4-to-1 multiplexer in the group, then all the four buffers must be full at that time. However, this could not happen as the four buffers have a total size of $4\\times B_j=2^j$ but there are at most $2^j-2$ packets that can be stored in this group according to Lemma~\\ref{lemma:multiplexinterval}. Therefore, (P1) always holds.\n\n  Now we prove this result by induction. Suppose that the proposed system emulates the priority queue with buffer $3\\times 2^{m-1}-2$ up to time $t$. Trivially, this holds for $t=0$. We will show that it also emulates the priority queue with buffer $3\\times 2^{m-1}-2$ at time $t+1$.\n\n  We first show that (P2) and (P4) hold at time $t+1$.  Without loss of generality, we suppose that $c(t+1)=1$. By the induction hypothesis, we can assume that there is a departure packet at time $t$. If there is only one packet in the system at time $t$, then (P2) and (P4) hold at time $t+1$ directly. Otherwise, there is a packet $i$ such that $r_i(t)=2$. If there is an arriving packet with higher priority than $i$ at time $t+1$, then the packet will depart immediately according to the routing policy, so (P2) and (P4) are satisfied. Otherwise, $r_i(t+1)=1$. According to Lemma~\\ref{lemma:multiplexinterval}, $i$ must be stored in the second group or the third group of multiplexers at time $t$. For the former case, $i$ will depart from the second group at $t+1$ and thus depart from the switching system according to (R). For the latter case, $i$ will also depart from the third group at $t+1$. Otherwise, $i$ should have a priority order of at most 3 at the time it entered the third group for the last time since $B_3=2$, which contradicts with the routing policy (R). In all cases, we have shown that (P2) and (P4) hold at time $t+1$. By conducting a similar argument, we can show that (P3) and (P5) also hold at time $t+1$. The proof is accomplished.\n\\end{IEEEproof}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\subsection{Design of 4-to-1 Multiplexers and The Complexity}\n\\label{sec:4to1}\n\nThe design cost of our construction depends on how to construct 4-to-1 multiplexers with SDL. As demonstrated in the above analysis, some requirements of the used 4-to-1 multiplexers could be relaxed. First, any 4-to-1 multiplexer with buffer $B_j$ could be replaced by a 4-to-1 multiplexer with buffer larger than or equal to $B_j$. Second, as no packet would be dropped by any 4-to-1 multiplexer, we may use \\emph{simplified 4-to-1 multiplexer} instead, for which it is unnecessary to satisfy the property (M3) strictly.\n\\begin{figure}[!tb]\n    \\centering\n        \\includegraphics[width=2.6in]{4to1multiplexer.pdf}\n    \\caption{A simplified  4-to-1 multiplexer. Here we omit all the loss links.}\n    \\label{fig:4t01}\n\\end{figure}\nA simplified 4-to-1 multiplexer with buffer $B$ can be constructed by concatenating three 2-to-1 multiplexers with buffer $B$.  See Fig.~\\ref{fig:4t01} for an illustration. Due to the space limitation, we omit the details here.  In \\cite{C06ana}, Chou \\emph{et al.} proposed an efficient construction of 2-to-1 multiplexers with buffer at least $B$ with an $(M+2)\\times (M+2)$ crossbar switch and $M$ fiber delay lines, where $M=\\lceil \\log_2(B+1) \\rceil$. Based on this, we can have the following construction cost.\n\n\\begin{theorem}\n  A priority queue with buffer size $B=3\\times 2^{m-1}-2$ can be constructed with a $(32m-14)\\times (32m-14)$ crossbar switch, forty-eight $3\\times 3$ switches, twenty-four $(j+1)\\times (j+1)$ switches for each $j=3,\\ldots,m-1$, twelve $(m+1)\\times (m+1)$ switches, and 12($m^2-2m+3)$ fiber delay lines.\n\\end{theorem}\nDespite we use many switches in our construction, one can combine all these switches into one for the possible reduction of the hardware cost. We thus have the following theorem.\n\\begin{theorem}\n  A priority queue with buffer $B=3\\times 2^{m-1}-2$ can be constructed with a $(12m^2+56m-2)\\times (12m^2+56m-2)$ crossbar switch and $12(m^2-2m+3)$ fiber delay lines.\n\\end{theorem}\n\nIn other words, a priority queue with buffer size $B$ can be constructed with an $(M+2)\\times (M+2)$ crossbar switch and $M$ fiber delay lines where $M=O(\\log^2B)$, or equivalently, $B=2^{\\Omega(\\sqrt{M})}$.\n\n\\begin{remark}\nThe construction cost of our priority queues can be reduced by, e.g., replacing the first/last group of multiplexers by a single fiber delay line, or replacing one of the 4-to-1 multiplexers in each group by a 2-to-1 multiplexer with the same buffer size (see the proof of Lemma~\\ref{thm:nocollision}), but our result will not change in the order sense.\n\\end{remark}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\bibliographystyle{IEEEtran}\n\\bibliography{IEEEabrv,reference}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "itemtype": "equation", "pos": 17318, "prevtext": "\n\\end{lemma}\n\\begin{IEEEproof}\n  We only prove the result for the case $j\\leq m$. The result for the other case can be shown very similarly.\n\n    Suppose that $j\\leq m$ and a packet $i$ is buffered in some 4-to-1 multiplexer in the $j$-th group at time $t$. Let $t_0\\leq t$ be the time when $i$ entered this multiplexer for the last time.  During the time interval between $t_0$ and $t$, since the multiplexer is non-empty, there is always a packet departing from the multiplexer in the FIFO order according to (M2) and (M4). So we have $t-t_0\\leq B_j-1$. Otherwise, $i$ should leave the multiplexer before $t$. Another key observation is that the priority order of any packet can only change by one in a time slot. This implies that\n  \n", "index": 25, "text": "\\begin{equation}\n    |r_i(t)-r_i(t_0)|\\leq t-t_0\\leq B_j-1.\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E13.m1\" class=\"ltx_Math\" alttext=\"|r_{i}(t)-r_{i}(t_{0})|\\leq t-t_{0}\\leq B_{j}-1.\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">|</mo><mrow><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">|</mo></mrow><mo>\u2264</mo><mrow><mi>t</mi><mo>-</mo><msub><mi>t</mi><mn>0</mn></msub></mrow><mo>\u2264</mo><mrow><msub><mi>B</mi><mi>j</mi></msub><mo>-</mo><mn>1</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}]