[{"file": "1601.05841.tex", "nexttext": "\n\\noindent\nwith solution for weak damping given by\n\t\t\t\t\t\t\t\n\n", "itemtype": "equation", "pos": 18396, "prevtext": "\n\n\\title[Kinematic measurements using an infrared sensor]{Kinematic measurements using an infrared sensor}\n\n\\author{F Marinho$^1$ and L Paulucci$^2$}\n\\address{$^1$ Universidade Federal do Rio de Janeiro, Av. Aluizio Gomes, 50, 27930-560, Maca\\'e, RJ, Brazil}\n\\ead{marinho@macae.ufrj.br}\n\\address{$^2$ Universidade Federal do ABC, Rua Santa Ad\\'elia, 166, 09210-170, Santo Andr\\'e, SP, Brazil}\n\n\\date{\\today}\n\n\\begin{abstract}\nThe use of an infrared sensor as a new alternative to measure position as a function of time in kinematic experiments was investigated using a microcontroller as data acquisition and control device. These are versatile sensors that offer advantages over the typical ultrasound devices. The setup described in this paper enables students to develop their own experiments promoting opportunities for learning physical concepts such as the different types of forces that can act on a body (gravitational, elastic, drag, etc.) and the resulting types of movements with good sensitivity within the $\\rm 4-30~cm$ range. As proof of concept we also present the application of a prototype designed to record the kinematics of mass-spring systems. \n\\end{abstract}\n\n\n\\pacs{01.50.Pa, 06.30.Bp, 06.30.Ft}\n\n\n\\vspace{2pc}\n\\noindent{\\it Keywords}: kinematics, infrared sensor, harmonic and damped oscillations, coupled springs.\n\n\n\n\n\n\n\n\n\n\n\\section{Introduction}\n\nThe study of kinematics and movement dynamics is usually the first \nsubject that students are formally introduced to in a physics classroom. \nThe closeness to everyday situations indicates that these concepts are \nmore easily understood than concepts in other branches of physics. \nNevertheless it is often difficult to empirically measure the movement of bodies in a classroom environment or laboratory. Instead the measurement of the time interval between two previously determined positions or of the period for oscillating systems is usually the standard procedure in opposition to the direct measurement of the position, speed or acceleration of the body as a function of time.\n\nMany approaches have been proposed in the literature for overcoming this \nand provide students with more detailed movement analysis. A traditional method for position determination as a function of time is to use a ticker-tape \\cite{ticometro}. This method is useful for understanding the properties of uniform and uniformly accelerated movements and has been used worldwide. However, it is limited to single direction movements and measurements need to be read out with a ruler. More recently, the use of image recording devices \\cite{image, coupled1}, gaming apparatuses \\cite{games}, and other electronic pieces \\cite{electronic} \nhas gained attention. Also, with the popularisation of smartphones,\nthe use of their accelerometers \\cite{acc} or light sensors \\cite{light} \nwas employed in mechanical systems analysis. However, in most of these \napplications, the need to develop specific software or to also use more \nelaborated (and sometimes expensive and large) apparatuses, such as \nair tracks or rotating platforms, was also necessary and it can pose \nsome difficulties for its widespread use.\n\nUsing easily acquired and relatively low cost components, we present a \nsetup that can make precise position measurements of a body in motion so \nthat students can analyse the movement from the perspective of the \nposition of a body at a given moment instead of the time interval it \ntakes from moving between two fixed points. It employs infrared sensors \nfrom the SharpGP family replacing the typical sonars used in mechanical \nand oscillation experiments while for the acquisition, it uses an \nArduino UNO board instead of a DAQ controller, thus offering simplicity \nfrom the technical point of view and also a better cost/benefit ratio. \nCommercial prices for a complete setup composed of sonar sensor, data \nacquisition interface, and software can cost over 500 USD while the \nsetup proposed in this article should cost about 60 USD. \n\nThe need to infer a minimum sample rate, the range \nof movement to be recorded, and the precision needed for the apparatus \naccording to the investigation to be made can engage students in the \nexperiment from the start, to discuss and come up with different \nstrategies. Therefore, the setup phase of the prototype allows \nstudents to develop basic abilities for scientific instrumentation \nusually not present in traditional experimental physics classes. \n\nIn this paper we discuss the applications of this method to record \nthe oscillations of mass-spring systems, although further applications \ncan be performed with few modifications. We show that the setup works \nvery well for recording smooth motion. It, nevertheless, has not been \ntested for recording motion with sudden jumps in the acceleration.\nDue to the averaging procedure used in section \\ref{app}, a sudden\ntransition would be smeared into a sigmoid like transition when analysing the acceleration vs. time behaviour and a change in the regime would also be identifiable for the time-dependence of speed and position. In this way, it would be possible to recognise such condition in the data and, as usual in this kind of situation, it would be best to split the data analysis into two different acceleration regions.\n\n\\section{Experimental setup}\\label{setup}\n\nThe proposed apparatus is mainly composed of a microcontroller and an \ninfrared distance sensor as already mentioned. The distance sensor used \nwas the Sharp GP2D120 analogue model \\cite{sharp}. It is a sensor unit \ncomprised of an infrared emitting diode, a position sensing detector, \nand signal processing electronics employing a triangulation method to\ndetermine its distance to a target. Infrared radiation is emitted in a \nnarrow beam which is reflected by the target back to the unit and readout by the position sensing detector. The position of the reflected beam on the detector surface is determined and the signal acquired is processed by the electronics which outputs a voltage that is dependent on the angle of the reflected beam, therefore, on the distance between the target and sensor. \n\nPower and acquisition cables are \nconnected to a microcontroller board programmed to record the sensor \nvoltage output variation with time and transmit it to the computer via \na USB port where data is readout and processed. \n\nThe data acquisition and control platform used was an Arduino UNO\n\\cite{Arduino}, an open source device which presents special features \nfor easily prototyping simple electronic setups. This choice is justified \nfor its versatility, low cost, and friendly user software interface. It \nconsists of a microcontroller ATMEL embedded in a board with a memory card \nand in/out peripherals. \n\n\\subsection{Position calibration}\\label{calib}\n\nThe calibration curve is obtained by setting up a squared white target in front of the sensor and recording the corresponding output voltage while varying the distance from the sensor, measured with a ruler.\nThe microcontroller was configured to register readings during five seconds for each position with an acquisition rate of 57600 bps. A capacitor, $C = 22 \\mathrm{\\mu F}$, was introduced between the 5V and ground terminals in the circuit for stabilising the sensor's energy supply.\nThe resulting curve is presented in figure \\ref{calibfig}. \n\nIn order to have a correspondence between the output voltage and distance between sensor and target, a hyperbolic equation, $d(V) = a + b~ V^{-c}$, was fitted to the data in the region of interest using ROOT \\cite{root}. The calibration points and fitting curve can be seen in figure \\ref{calibfig}. The parameters obtained were a=0.174(93), b=$456.7(13) \\times 10^1$, and c=1.0909(67) for distance to be given in cm and the voltage in ADC units. The sensor's output gives better accuracy in the region between 4 and 30 cm. For distances above this value the sensor can still be used but the precision diminishes quickly the farther away the object is. For distances smaller than 3 cm the output read by the sensor increases with increasing distance so there is an ambiguity in determining the position, therefore such region must be avoided. The dispersion of the measurements was observed to vary from 2-9\\% with respect to the mean value for distances of 4-35 cm, respectively.\n\nAlso, the reflectance of an object being dependent on material properties such as colour and surface texture can influence the output voltage recorded by the sensor, affecting the calibration. Nevertheless, as can be seen in Ref. \\cite{sharp} for a comparison between white and grey papers, its influence is very small and mostly restricted to longer distances ($d > 20$ cm). Regarding the angle of incidence of radiation on the reflecting surface, the device is set to work better with reflection on a perpendicular surface. The more the surface angle deviates from it, the less reliable the measurement will be. Nevertheless it is not difficult to envision setups that can guarantee small deviations (if any) that will not appreciably affect the measurement. Such features should be taken into account when designing an application of the setup described here.\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.5\\textwidth]{fig1.eps}\n\\caption{Calibration curve of the infrared sensor. The distance from the sensor is shown as a function of the recorded output voltage. The red curve being the fit in the region of interest. Note the small error bars shown in the plot for both axes: the uncertainty for the position is 0.05 cm and for the voltage all error bars are smaller than 0.3\\% of the correspondent measured value.} \\label{calibfig}\n\\end{figure}\n\n\nThe sensor emits in the infrared radiation region with a wavelength of $\\lambda =  850 (70)$ nm. The calibration presented was performed in a darken room with the whole apparatus protected from possible sources of bright lights, both natural and artificial. We have also taken some measurements without the protection to evaluate the influence of external noise. For a fixed position, we have evaluated the output read from the sensor in 3 situations: \n\n\\begin{enumerate}\n\\item  setup blocked from external sources of light; \n\\item setup mounted in a partially dark room with lights off and window's shutters closed, although some clarity still entered the room from outside; \n\\item lights in the room on but avoiding any transitioning shades in front of the sensor and window's shutters closed. \n\\end{enumerate}\n\nThe results measured for the same position were given by $V_1$ = 284.38 (26) adc, $V_2$ = 292.47 (40) adc, and $V_3$ = 292.34 (40) adc. The last two results are compatible with each other (with the artificial light negligibly contributing to a noise increase) but not with the first. Note that the standard uncertainty increased without the blockage of external light but the output read by the sensor increased by less than 3\\%. It would imply in a mismatched position of only $\\sim 3$\\% off given the calibration curve obtained. Although the results are not compatible, the systematic error associated is low so that the prototype can be used even if it is not possible to cover the experimental setup. However, it is strongly recommended that measures to block direct sunlight are taken as this can be a time varying source of contamination for the measured signal.\n\nA kinematics calibration was also performed by attaching a white cardbox to an object sliding at an air track with a small inclination for obtaining the distance from the sensor as a function of the voltage recorded by it. The target was released at a certain distance from the sensor measured with a ruler to move towards it. The position of the target as a function of time was calculated with the kinematics equation for the uniformly accelerated motion. As can be seen in fig \\ref{calibdyn}, the kinematics calibration is compatible with the static calibration. Nevertheless, the error bars in the case of a kinematics calibration are greater\ndue to the large uncertainty introduced by the synchronisation of the\nstarting time of data acquisition by the Arduino and the release of the sliding object. The uncertainty related to the angle of inclination is also a major limiting element for a precise position determination. Because of these factors it is overall difficult to calculate with good precision the position at a certain time and relate it to the voltage output measured with the Arduino without a complicated procedure to time align both quantities. Being a simpler and more precise procedure compatible with a dynamic calibration, the static one can be used without major concerns.\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.5\\textwidth]{fig2.eps}\n\\caption{Kinematics calibration curve of the infrared sensor. Data points are taken by recording the output voltage measured by Arduino of a moving object sliding on an air track. The full curve is the fit shown in figure \\ref{calibfig} for comparison. Note that the two curves are compatible with each other and the uncertainties for this calibration are larger than those obtained for the static one.} \\label{calibdyn}\n\\end{figure}\n\n\nAlthough the setup described using arduino could possibly be adapted for use with a position sensor using different techniques, such as sonars, the use of an infrared sensor presents some advantages. Those include low cost, low power consumption, reduced dimensions, and very simple interfacing with readout electronics. Moreover since the wavelength emitted is of order of hundreds of nanometres (for the specific sensor used, it is given by 850 (70) nm), the size of the reflecting object is irrelevant, as long as it is aligned with the sensor's centre. However, limitations to align a moving target in front of the sensor put more stringent requirements on the target size. In order to guarantee an easy operation of the system, it is enough for the target to have dimensions larger than the distance between the sensor's emitter and receiver (in this case, $~2$ cm). We have used different sizes of target (15 cm x 15 cm and 5 cm x 5 cm) for the calibrations and the results are compatible with each other (see fig \\ref{calibcomp}). This was expected since this is a triangulation sensor based on a position sensing detector with a narrow infrared beam. Therefore as long as the reflecting surface ensures enough beam irradiance on the sensor surface the unit is triggered.\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.5\\textwidth]{fig3.eps}\n\\caption{Comparison between the voltage output recorded for two different sizes of reflecting objects. Data was taken using a 15 cm x 15 cm white cardboard (target A) and a 5 cm x 5 cm white cardboard (target B). Each point corresponds to the measurements of output voltage with both targets placed at the same distance from the sensor. The red curve shows the expected behaviour for same voltage, i.e., $V_A=V_B$ clearly showing the compatibility of both measurements.} \\label{calibcomp}\n\\end{figure}\n\n\\subsection{Data sampling rate}\n\nA characterisation of the microcontroller used in the acquisition was \nperformed for timing information and an overall evaluation of the data \nacquisition and transfer. The time Arduino takes to register two consecutive \nmeasurements can be easily obtained by counting the number of \nreadings recorded by it during a fixed time interval (for example,\ndata taken in section \\ref{calib} for position calibration could be used).\n\nWe have also tested the dependence of acquisition with different computers having different processing capabilities. The difference in the acquisition times were of the order of a few microseconds at 9600 bps data transfer rate, less than 1\\% of the resulting time interval. These results indicate that using the expected acquisition time for a given data transfer rate, without performing this data sampling calibration, should not introduce significant uncertainties in the final result.\n\nIn figure \\ref{ratefig} the obtained sampling time versus the data transmission rate is shown. As expected, the curve has a hyperbolic shape showing that the sampling time is determined solely by the data transfer rate and not limited by any other component of the acquisition system such as memory accessing, sensor dead time, etc. \n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.5\\textwidth]{fig4.eps}\n\\caption{Data sampling time interval for Arduino as a function of the data transmission rate. The best fit to the data is shown in red.} \\label{ratefig}\n\\end{figure}\n\nA maximum speed of about 10 m/s for the target is recommended to obtain good position determination at the least precise region close to the 30 cm distance to the sensor. This value is obtained considering the measurements dispersion, the maximum acquisition rate and the averaging procedure for neighbouring points described in this article. This speed value is one order of magnitude higher than the typical speeds recorded in the experiments of this article.\n\n\\section{Application to mass-spring systems}\\label{app}\n\n\\subsection{Simple harmonic oscillator}\n\nThe prototype was used to measure oscillations in a mass-spring system. Figure \\ref{springfig} shows the schematic view of the setup used with its main components. \nThe spring is fixed at one end and let to hang in the vertical direction while the mass is attached to its free end. The IR sensor is put directly below the mass and connected to the Arduino board. The  system is put to oscillate either by compressing or distending the spring in the vertical direction and the measured output can be transmitted to the computer. \n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.4\\textwidth]{fig5.eps}\n\\caption{Schematic setup for kinematic measurements of a harmonic oscillator. The IR sensor (1) emits infrared radiation which is reflected by the lower mass attached to the spring (2), here shown with a damping disk, and returns to the sensor allowing it to be read and transmitted to the Arduino board (3).} \\label{springfig}\n\\end{figure}\n\nFor an oscillating system of mass m and spring constant k with damping, \nassuming small oscillation amplitude and that the force acting against the \nmovement is linearly dependent on the speed of the moving body (-bv), the \nmovement equation describing the system can be written as \\cite{oscilacao}\n \t\t\t\n\n", "index": 1, "text": "\\begin{equation}\nm \\frac{d^2y}{dt^2}+b\\frac{dy}{dt}+ky=0,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"m\\frac{d^{2}y}{dt^{2}}+b\\frac{dy}{dt}+ky=0,\" display=\"block\"><mrow><mrow><mrow><mrow><mi>m</mi><mo>\u2062</mo><mfrac><mrow><msup><mi>d</mi><mn>2</mn></msup><mo>\u2062</mo><mi>y</mi></mrow><mrow><mi>d</mi><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup></mrow></mfrac></mrow><mo>+</mo><mrow><mi>b</mi><mo>\u2062</mo><mfrac><mrow><mi>d</mi><mo>\u2062</mo><mi>y</mi></mrow><mrow><mi>d</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac></mrow><mo>+</mo><mrow><mi>k</mi><mo>\u2062</mo><mi>y</mi></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05841.tex", "nexttext": "\n\\noindent\nwhere $\\gamma= b/2m$ is the damping coefficient, $\\omega^\\prime = \\sqrt{k/m -\\gamma^2}$ is the system's angular frequency, and $\\phi$ is the phase.  If b=0, the solution of the simple harmonic oscillator is recovered: $\\omega = \\sqrt{k/m}$.\n\nThe mass weight value used in the experiments was 95.00 (5) g with a 5 cm x 5 cm sheet of white paperboard attached to its bottom to reflect the emitted infrared signal. Two different springs were used while keeping the same weight. For the damped oscillator a large cardbox in the form of a disc of 26.00 (10) cm diameter was also attached to the system in order to increase the damping constant. The data was recorded with an acquisition rate of 9600 bps.\n\nFigure \\ref{averagefig} illustrates one data set recorded where the voltage output values are shown as a function of the number of measurement, indicated by the name index in the graph. Arduino sends to the computer a sequence of voltage values taken at equal time intervals. It means that the tenth measurement taken ($i=10$), for example, happened at a time $t=i~\\Delta t$ after the run began, where $\\Delta t$ is given by figure \\ref{ratefig}. \nThe dot markers in Figure \\ref{averagefig} show the raw values for every single measurement. The solid line represents the average obtained with every set of neighbouring 20 points allowing drastic reduction of random noise contamination from the electronics. \n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.5\\textwidth]{fig6.eps}\n\\caption{Output measured during the oscillations of a damped harmonic oscillator. Raw values recorded by Arduino are shown as dots whereas a smoothing with 20 neighbouring points is shown as a solid line.} \\label{averagefig}\n\\end{figure}\n\nData such as shown in figure \\ref{averagefig} can be converted to the mass distance from the sensor as a function of time by using the position calibration obtained in section \\ref{calib} and multiplying the index number by the adequate sampling interval shown in figure \\ref{ratefig}. Examples of the resulting plots obtained from this procedure can be seen in figure \\ref{singlefig}.\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.49\\textwidth]{fig7a.eps}\n\\includegraphics[width=0.49\\textwidth]{fig7b.eps}\n\\caption{Distance of the mass-spring system from the sensor as a function of time for two different damping coefficients but same mass weight and spring. On the left, a mass-spring system with negligible damping is shown while on the right the system is visibly damped. The same smoothing procedure shown in figure \\ref{averagefig} was used here and is represented by the points in the graph while the curve is a fit of equation (\\ref{singleeq}) to the data.} \\label{singlefig}\n\\end{figure}\n\nThe converted data allows for the determination of the oscillation period, \nspring constant,\nand damping constant by directly fitting equation \n(\\ref{singleeq}) to the data. \\footnote{A simpler way is to determine the period directly from the graph and, since the cosine function is limited, looking at equation (\\ref{singleeq}) as having a time dependent amplitude, $A(t) = A_0 \\exp(-\\gamma t)$, and explore that to obtain the value of $\\gamma$. It can be achieved with a linear fit to the logarithm of the time varying amplitude as a function of time taken at the consecutive maxima and minima.} The values of the two spring constants obtained were: $k_1=7.0422(48)$ N/m and $k_2=8.4342(73)$ N/m. It must be pointed out that it is also possible to fit the simple harmonic oscillator curve to the raw data. Therefore, it is not always necessary to resort to averaging, although this method makes the phenomenon much easier to be visualised.\n\n\\subsection{Coupled oscillators}\n\nOne interesting feature of oscillating systems that can also be shown with this apparatus is the coupling of springs. The theory of coupled oscillators is used to understand several physical phenomena such as vibration modes in solids, coupled oscillation systems in electronic circuits, etc. This is a type of oscillating system that is usually presented to students only through theoretical classes although some experimental visualisation of the phenomenon have been proposed \\cite{coupled1, coupled2} showing interesting results. Nevertheless, once more, they mostly require the use of air tracks, air tables, development of image recognition software or electronic circuits to be performed. We propose a simple way of directly measuring the position in order to ease the students understanding of the phenomenon without requiring advanced knowledge in other branches of physics or programming skills.\n\nFor instance, figure \\ref{coupledfig} shows a system composed of two springs put in the vertical direction. One spring had its upper end fixed while in the lower end a weight and another spring were attached. At the lower end of the second spring, another weight was put to oscillate and its distance from the sensor as a function of time was recorded. \n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.3\\textwidth]{fig8.eps}\n\\caption{Schematic view of the coupled springs system.} \\label{coupledfig}\n\\end{figure}\n\nWhen attaching two ideal springs with two masses as seen in figure \\ref{coupledfig}, for small oscillations, the following movement equations can be derived for the system \\cite{oscilacao}:\n\n\\begin{eqnarray}\nm_1 \\frac{d^2 \\Delta y_1}{dt^2} + \\Delta y_1(k_1+k_2) &-& \\Delta y_2 k_2  =  0, \\\\\nm_2 \\frac{d^2 \\Delta y_2}{dt^2} +\\,\\,\\,\\,\\,\\, \\Delta y_1 k_2 &+& \\Delta y_2 k_2  =  0,\n\\end{eqnarray}\n\\noindent\nwith $\\Delta y_j$ being the particles' displacements measured from their respective equilibrium positions. The above equations can be solved by assuming solutions of an oscillatory type: $\\Delta y_j = C_j \\exp{(i \\omega t)}$, with $C_j$ constant. The two fundamental frequencies are found to be:\n \t\t\t\t\t\n\n", "itemtype": "equation", "pos": 18527, "prevtext": "\n\\noindent\nwith solution for weak damping given by\n\t\t\t\t\t\t\t\n\n", "index": 3, "text": "\\begin{equation}\ny(t) = A e^{-\\gamma t}\\cos{(\\omega^\\prime t + \\phi)}, \\label{singleeq}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"y(t)=Ae^{-\\gamma t}\\cos{(\\omega^{\\prime}t+\\phi)},\" display=\"block\"><mrow><mrow><mrow><mi>y</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mi>A</mi><mo>\u2062</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mi>\u03b3</mi><mo>\u2062</mo><mi>t</mi></mrow></mrow></msup><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><msup><mi>\u03c9</mi><mo>\u2032</mo></msup><mo>\u2062</mo><mi>t</mi></mrow><mo>+</mo><mi>\u03d5</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05841.tex", "nexttext": "\n\t \nSeveral configurations for the initial conditions were tested and the resulting displacements of the lower mass for two particularly interesting cases are shown in figure \\ref{coupleddatafig}. In all cases, the two springs used in the previous section were coupled vertically to one another and the attached masses were measured to be $\\rm m_1 = 100.00(5)~g$ and $\\rm m_2 = 95.00(5)~g$. The description of the system and initial configurations are as follow: (i) the two masses were pulled apart from each other (initial displacement of both out of phase) and released; (ii) the mass located between the two springs was put to oscillate while holding the mass at the bottom. A few seconds after the release of the first one, the mass at the bottom was also released and its position as a function of time was recorded.\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.49\\textwidth]{fig9a.eps}\n\\includegraphics[width=0.49\\textwidth]{fig9b.eps}\n\\caption{Position as a function of time for the lower mass in the coupled spring system. The left panel shows the curve obtained for initial conditions (i) while the right panel represents initial conditions (ii). The same smoothing procedure shown in figure \\ref{averagefig} was used here.} \\label{coupleddatafig}\n\\end{figure}\n\nBy performing a Fourier transform of the signals seen in figure \\ref{coupleddatafig}, one can obtain the two fundamental oscillation frequencies for the coupled springs system (\\ref{omegacoup}). The transforms for the data with initial conditions (i) and (ii) are shown in figure \\ref{fourier}. The fundamental frequencies found are 0.867(18) Hz and 2.248(34) Hz in accordance with the theoretical values. The Fourier component at 0 Hz gives the equilibrium position for the second mass. For initial condition (i) it can be seen that the highest frequency is very much dominant while for (ii) both frequencies are clearly visible with the lower component amplitude being larger than that of the higher component. It explains the different behaviour of the curves shown in figure \\ref{coupleddatafig}.\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.49\\textwidth]{fig10a.eps}\n\\includegraphics[width=0.49\\textwidth]{fig10b.eps}\n\\caption{Fourier transform for oscillations of a coupled mass-spring system. Initial conditions (i) are shown on the left panel and (ii) on the right panel. The two fundamental oscillation frequencies are clearly seen as well as the different relative intensities that help explain the oscillatory behaviour.} \\label{fourier}\n\\end{figure}\n\n\nIn a typical classroom the fast Fourier transform can be conveniently performed using SciDavis \\cite{scidavis}, for example, which is a user friendly open source software option for data analysis.\n\n\\section{Prototype Operation}\n\nThe feasibility for the use of the detecting prototype by undergrad students was partially evaluated by assigning a small group of three second year engineering students the task to replicate part of the experimental procedures described in this article. The main goal was to verify whether or not those were interesting activities providing a potential learning experience from the students point of view and if those would be adequate activities without consuming too much time. No precise instructions were provided but only general directions and information on the use of the sensor and microcontroller. \n\nIn particular the students were able to replicate simplified versions of the time and position calibrations. They decided to count the amount of points sampled within a full period of a square wave provided by a signal generator to estimate the sampling interval, a procedure presenting some caveats that can lead to a poor determination of the time interval if not performed correctly. Moreover, it seems that the lack of experience in statistical data analysis induced them to analyse just a single period of the squared wave instead of using several periods for a more accurate and precise determination. This procedure introduced a systematic error leading to a lower sampling time and with higher uncertainty. However, the sampling time can be obtained with precision by simply counting the number of measurements setting the Arduino code to run within a fixed time window.\nOn the sensor's position calibration the data acquisition was an easy task, however it seemed natural to the students to propose polynomial fits to describe the relationship between measured voltage and distance dividing the whole operation range into three distinct fit regions. At the end satisfactory fits were also obtained.  \n\nThe simple and damped harmonic oscillator experiments were also replicated by the students but they reported that for some data acquisitions the curve would come out unexpected or with poor quality if minimal experimental conditions were not met. In such cases they noticed that allowing natural light in, poor sensor-target alignment, or air flow perturbations due to air conditioning in the room\ncould be causes for data quality degradation. For instance, the setup location had to be such that no direct sun light would hit the sensor, therefore, not affecting the measurements. They also noted that the sensor and the target should be well aligned such that the infrared radiation received by the sensor would be from the reflection on the target only and not residual reflections on other components of the system, providing reliable measurements. Direct strong airflow from the air conditioning also proved to be a possible source for mechanical lateral displacement and shaking of the target. Both effects can cause non periodic disturbances in the readings similar to the other identified sources such that the overall results are bumps or sudden jumps in the position curve as a function of time. Nevertheless, when acquiring data as shown in sections \\ref{setup} and \\ref{app}, care was taken in order not to have undesirable external influences such that no unexpected effects were seen and it was possible to reproduce the experiments in several different occasions. \n\nNote that depending on the time constraints or goals for a laboratory activity or teaching class one might want to just focus on studying the physical principles of interest from the kinematic measurements and facilitate its operation giving further instructions instead of leaving the students to figure out how to improve data quality reducing influencing external conditions that could affect the experiment, converting measured voltages for position, etc.  \n\n\\section{Conclusion}\n\nWe have proposed means to assemble, calibrate and evaluated the performance of a simple to use and inexpensive detection system to make kinematic measurements that can be safely operated in the physics laboratory environment. It has the capability to perform fast data acquisition, $\\approx 400 \\mathrm{\\mu s}$ between measurements, enough for its application on the study of mass-spring systems, for example. The prototype allows to exploit the typical features oscillating systems present through the detailed observation of the time evolution of such systems providing good quality estimates for periods, natural frequencies and damping. More complicated setups can be easily built and analysed such as a coupled pair of mass-spring systems for which its initial conditions dictate the overall movement behaviour.\n\nWe must also point out that there is a distance limitation for the particular sensor used here, providing good estimates in a $\\sim 25$ cm range. For recording wider movements, other sensors from the SharpGP family could be suitable for the $\\rm 10-80~cm$ and $\\rm 20-150~cm$ distance ranges\\cite{sharp2}, for example. In this case, only new position calibrations should be performed but the general idea on how to assemble and use the experimental set is essentially the same.\n\nA typical dispersion on the measured voltage was observed to be lower than 9\\% across the investigated range. Nevertheless, to limit the influence of statistical fluctuations and to improve position estimates an averaging procedure was adopted at the data analysis level avoiding more elaborate model based statistical fits or the use of a hardware integrator before data transfer keeping the electronics as simple as possible. However, these are extra techniques that could be incorporated and may be suitable for undergrad classes. \n\nAs already mentioned not only the authors but undergrad students were able to use this setup for oscillatory experiments. We point out that several tests were carried out at different times by different operators. In all occasions, once the procedures described in this article were followed, reproducibility of the position curves was achieved. The fact that we could also obtain a dynamic calibration curve with a non periodic motion indicates that this apparatus is well suited for other applications.\n\nThe interesting feedback provided by students makes it clear that the prototype is a viable device for physics laboratories. Only very simple measures are necessary to remove external influences on the experiments in order to isolate the desired phenomenon to be analysed. If such precautions are taken, this device has been shown to provide excellent results with its simplicity and easy to use. It is relatively low cost and the user has total control of the data taking and analysis.\n\n\\ack{The authors acknowledge support from CNPq (grant 481953/2012-4) and would like to thank the students A. Lippi, B. Medeiros and P. Serrano for participating in some of the learning activities proposed in this work.}\n\n\\vspace{1.cm}\n\n\\begin{thebibliography}{99}\n\n\\bibitem{ticometro}\n Roberts M and Dobson K 2002 {\\it Physics: Teacher Resource Pack} (Cheltenham: Nelson Thornes Ltd) p~59.\n\n\\bibitem{image} Chung H C, Liang J, Kushiyama S and Shinozuka M 2004 Digital image processing for non-linear systems identification {\\it Int. J. Non-Linear Mech.} \\textbf{39} 691; Shamim S, Zia W and Anwar M S 2010 Investigating viscous damping using a webcam {\\it Am. J. Phys.} \\textbf{78} 433.\n\n\\bibitem{coupled1} Greczylo T and Debowska E 2002 Using a digital video camera to examine coupled oscillations {\\it Eur. J. Phys.} \\textbf{23}, 441 (2002); Monsoriu J A, Gim\\'enez M H, Riera J and Vidaurre A 2005 Measuring coupled oscillations using an automated video analysis technique based on image recognition {\\it Eur. J. Phys.} \\textbf{26} 1149.\n\n\\bibitem{games} Vannoni M and Straulino S 2007 Low-cost accelerometers for physics experiments {\\it Eur. J. Phys.} \\textbf{28} 781; Ochoa R, Rooney F G and Somers W J 2011 Using the Wiimote in Introductory Physics Experiments {\\it Phys. Teach.} \\textbf{49} 16; Kawam A and Kouh M 2011 Wiimote Experiments: 3-D Inclined Plane Problem for Reinforcing  the Vector Concept {\\it Phys. Teach.} \\textbf{49} 508; Tomarken S L et al. 2012 Motion  tracking in undergraduate physics laboratories with the Wii remote {\\it Am. J. Phys.} \\textbf{80} 351; Skeffington A and Scully K 2012 Simultaneous tracking of multiple points using a wiimote {\\it Phys. Teach.} \\textbf{50} 482; Kuhn J and Vogt P 2012 Analyzing spring pendulum phenomena with a smart-phone acceleration sensor {\\it Phys. Teach.} \\textbf{50} 504; Ballester J and Pheatt Ch 2013 Using the Xbox Kinect sensor for positional data acquisition {\\it Am. J. Phys.} \\textbf{81} 71.\n\n\\bibitem{electronic} Romulo O O and Franklin K N 1997 The computer mouse as a data acquisition interface: application to harmonic oscillators {\\it Am. J. Phys} \\textbf{65} 1115; Ng T W and Ang K T 2005 The optical mouse for harmonic oscillator experimentation {\\it Am. J. Phys.} \\textbf{73} 793;  Ayars E and Lai E 2010 Using XBee transducers for wireless data collection {\\it Am. J. Phys.} \\textbf{78} 778.\n\n\\bibitem{acc} Castro-Palacio J C, Vel\\'azquez-Abad L, Gim\\'enez M H and Monsoriu J A 2013 Using the mobile phone acceleration sensor in Physics experiments: free and damped harmonic oscillations {\\it Am. J. Phys.} \\textbf{81} 472; Castro-Palacio J C, Vel\\'azquez-Abad L, Gim\\'enez F and Monsoriu J A 2013 A quantitative analysis of coupled oscillations using mobile accelerometer sensors {\\it Eur. J. Phys.} \\textbf{34} 737.\n\n\\bibitem{light} Sans J A et al. 2013 Oscillations studied with the smartphone ambient light sensor {\\it Eur. J. Phys.} \\textbf{34} 1349.\n\n\\bibitem{sharp} Sharp Coorporation. GP2D120 data sheet, 2006. Available at http://www.pololu.com/-file/OJ157/GP2D120-DATA-SHEET.PDF.\n\n\\bibitem{Arduino} Arduino Web Site, http://arduino.cc.\n\n\\bibitem{root} Root Web Site, http://root.cern.ch.\n\n\\bibitem{oscilacao} Symon K R 1960 {\\it Mechanics} (London: Addison-Wesley Co. Inc.) p~47/188.\n\n\\bibitem{scidavis} SciDAVis Web Site, http://scidavis.sourceforge.net/.\n\n\\bibitem{coupled2} Lai H M 1983 On the recurrence phenomenon of a resonant spring pendulum {\\it Am. J. Phys.} \\textbf{52} 219; Karioris F G and Mendelson K S 1992 A novel coupled oscillation demonstration {\\it Am. J. Phys.} \\textbf{60} 508; Bobillo-Ares N C and Fern\\'andez-N\\'unez J 1995 Two-dimensional harmonic oscillator on an air table {\\it Eur. J. Phys.} \\textbf{16} 223; Spencer R L and Robertson R D 2001 Mode detuning in systems of weakly coupled oscillators {\\it Am. J.Phys.} \\textbf{69} 1191; Moloney M J 2008 Coupled oscillations in suspended magnets {\\it Am. J. Phys.} \\textbf{76} 125; Maianti M, Pagliara S and Galimberti G 2009 Mechanics of two pendulums coupled by a stressed spring {\\it Am. J. Phys.} \\textbf{77} 834; Arane T, Musalem A K and Fridman M 2009 Coupling between two singing wineglasses {\\it Am. J. Phys.} \\textbf{77} 1066; Donoso G, Ladera C L and Mart\\'in P 2010 Magnetically coupled magnet-spring oscillators {\\it Eur. J. Phys.} \\textbf{31} 433; Li A, Zeng J, Yang H and Xiao J 2011 A laboratory experiment on coupled non-identical pendulums {\\it Eur. J. Phys.} \\textbf{32} 1251.\n\n\\bibitem{sharp2} Sharp Coorporation. GP2Y0A21/GP2Y0D21 data sheet, 2002. Available at http://www.sharp-world.com/products/device/lineup/data/pdf/datasheet/gp2y0a-d-e.pdf;  Sharp Coorporation. GP2Y0A02YK0F data sheet, 2002. Available at http://www.sharp-world.com/products/device/lineup/data/pdf/datasheet/gp2y0a02yk-e.pdf. \n\n\\end{thebibliography}\n\n\n", "itemtype": "equation", "pos": 24489, "prevtext": "\n\\noindent\nwhere $\\gamma= b/2m$ is the damping coefficient, $\\omega^\\prime = \\sqrt{k/m -\\gamma^2}$ is the system's angular frequency, and $\\phi$ is the phase.  If b=0, the solution of the simple harmonic oscillator is recovered: $\\omega = \\sqrt{k/m}$.\n\nThe mass weight value used in the experiments was 95.00 (5) g with a 5 cm x 5 cm sheet of white paperboard attached to its bottom to reflect the emitted infrared signal. Two different springs were used while keeping the same weight. For the damped oscillator a large cardbox in the form of a disc of 26.00 (10) cm diameter was also attached to the system in order to increase the damping constant. The data was recorded with an acquisition rate of 9600 bps.\n\nFigure \\ref{averagefig} illustrates one data set recorded where the voltage output values are shown as a function of the number of measurement, indicated by the name index in the graph. Arduino sends to the computer a sequence of voltage values taken at equal time intervals. It means that the tenth measurement taken ($i=10$), for example, happened at a time $t=i~\\Delta t$ after the run began, where $\\Delta t$ is given by figure \\ref{ratefig}. \nThe dot markers in Figure \\ref{averagefig} show the raw values for every single measurement. The solid line represents the average obtained with every set of neighbouring 20 points allowing drastic reduction of random noise contamination from the electronics. \n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.5\\textwidth]{fig6.eps}\n\\caption{Output measured during the oscillations of a damped harmonic oscillator. Raw values recorded by Arduino are shown as dots whereas a smoothing with 20 neighbouring points is shown as a solid line.} \\label{averagefig}\n\\end{figure}\n\nData such as shown in figure \\ref{averagefig} can be converted to the mass distance from the sensor as a function of time by using the position calibration obtained in section \\ref{calib} and multiplying the index number by the adequate sampling interval shown in figure \\ref{ratefig}. Examples of the resulting plots obtained from this procedure can be seen in figure \\ref{singlefig}.\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.49\\textwidth]{fig7a.eps}\n\\includegraphics[width=0.49\\textwidth]{fig7b.eps}\n\\caption{Distance of the mass-spring system from the sensor as a function of time for two different damping coefficients but same mass weight and spring. On the left, a mass-spring system with negligible damping is shown while on the right the system is visibly damped. The same smoothing procedure shown in figure \\ref{averagefig} was used here and is represented by the points in the graph while the curve is a fit of equation (\\ref{singleeq}) to the data.} \\label{singlefig}\n\\end{figure}\n\nThe converted data allows for the determination of the oscillation period, \nspring constant,\nand damping constant by directly fitting equation \n(\\ref{singleeq}) to the data. \\footnote{A simpler way is to determine the period directly from the graph and, since the cosine function is limited, looking at equation (\\ref{singleeq}) as having a time dependent amplitude, $A(t) = A_0 \\exp(-\\gamma t)$, and explore that to obtain the value of $\\gamma$. It can be achieved with a linear fit to the logarithm of the time varying amplitude as a function of time taken at the consecutive maxima and minima.} The values of the two spring constants obtained were: $k_1=7.0422(48)$ N/m and $k_2=8.4342(73)$ N/m. It must be pointed out that it is also possible to fit the simple harmonic oscillator curve to the raw data. Therefore, it is not always necessary to resort to averaging, although this method makes the phenomenon much easier to be visualised.\n\n\\subsection{Coupled oscillators}\n\nOne interesting feature of oscillating systems that can also be shown with this apparatus is the coupling of springs. The theory of coupled oscillators is used to understand several physical phenomena such as vibration modes in solids, coupled oscillation systems in electronic circuits, etc. This is a type of oscillating system that is usually presented to students only through theoretical classes although some experimental visualisation of the phenomenon have been proposed \\cite{coupled1, coupled2} showing interesting results. Nevertheless, once more, they mostly require the use of air tracks, air tables, development of image recognition software or electronic circuits to be performed. We propose a simple way of directly measuring the position in order to ease the students understanding of the phenomenon without requiring advanced knowledge in other branches of physics or programming skills.\n\nFor instance, figure \\ref{coupledfig} shows a system composed of two springs put in the vertical direction. One spring had its upper end fixed while in the lower end a weight and another spring were attached. At the lower end of the second spring, another weight was put to oscillate and its distance from the sensor as a function of time was recorded. \n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=0.3\\textwidth]{fig8.eps}\n\\caption{Schematic view of the coupled springs system.} \\label{coupledfig}\n\\end{figure}\n\nWhen attaching two ideal springs with two masses as seen in figure \\ref{coupledfig}, for small oscillations, the following movement equations can be derived for the system \\cite{oscilacao}:\n\n\\begin{eqnarray}\nm_1 \\frac{d^2 \\Delta y_1}{dt^2} + \\Delta y_1(k_1+k_2) &-& \\Delta y_2 k_2  =  0, \\\\\nm_2 \\frac{d^2 \\Delta y_2}{dt^2} +\\,\\,\\,\\,\\,\\, \\Delta y_1 k_2 &+& \\Delta y_2 k_2  =  0,\n\\end{eqnarray}\n\\noindent\nwith $\\Delta y_j$ being the particles' displacements measured from their respective equilibrium positions. The above equations can be solved by assuming solutions of an oscillatory type: $\\Delta y_j = C_j \\exp{(i \\omega t)}$, with $C_j$ constant. The two fundamental frequencies are found to be:\n \t\t\t\t\t\n\n", "index": 5, "text": "\\begin{equation}\n\\omega^2_{\\pm} = \\frac{(k_1+k_2)m_2+m_1 k_2}{2m_1 m_2} \\Big[ 1 \\pm \\sqrt{1-\\frac{4 m_1 m_2 k_1 k_2}{[(k_1+k_2) m_2+m_1 k_2]^2}}\\Big]. \\label{omegacoup}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\omega^{2}_{\\pm}=\\frac{(k_{1}+k_{2})m_{2}+m_{1}k_{2}}{2m_{1}m_{2}}\\Big{[}1\\pm%&#10;\\sqrt{1-\\frac{4m_{1}m_{2}k_{1}k_{2}}{[(k_{1}+k_{2})m_{2}+m_{1}k_{2}]^{2}}}\\Big%&#10;{]}.\" display=\"block\"><mrow><mrow><msubsup><mi>\u03c9</mi><mo>\u00b1</mo><mn>2</mn></msubsup><mo>=</mo><mrow><mfrac><mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>m</mi><mn>2</mn></msub></mrow><mo>+</mo><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>k</mi><mn>2</mn></msub></mrow></mrow><mrow><mn>2</mn><mo>\u2062</mo><msub><mi>m</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>m</mi><mn>2</mn></msub></mrow></mfrac><mo>\u2062</mo><mrow><mo maxsize=\"160%\" minsize=\"160%\">[</mo><mrow><mn>1</mn><mo>\u00b1</mo><msqrt><mrow><mn>1</mn><mo>-</mo><mfrac><mrow><mn>4</mn><mo>\u2062</mo><msub><mi>m</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>m</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>k</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><msup><mrow><mo stretchy=\"false\">[</mo><mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>m</mi><mn>2</mn></msub></mrow><mo>+</mo><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>k</mi><mn>2</mn></msub></mrow></mrow><mo stretchy=\"false\">]</mo></mrow><mn>2</mn></msup></mfrac></mrow></msqrt></mrow><mo maxsize=\"160%\" minsize=\"160%\">]</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}]