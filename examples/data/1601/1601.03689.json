[{"file": "1601.03689.tex", "nexttext": "\n\n\n\nSequences of this kind can be compressed with an arithmetic\ncoding scheme \\citep{witten1987a,moffat1998a},\nwhere the symbols $x_n$ are encoded sequentially\nusing $\\txtDD$ at each coding step.\n\n\n\\footnote{\n  There are some\n  fairly minor constraints, e.g.~that it must be possible\n  to discretise~$\\txtDD$ to the\n  resolution of the arithmetic coder.\n  \n  \n}\nThis kind of algorithm produces compressed output\nwhose total length is guaranteed to be within 2~bits\nof the theoretic optimum --\n\nthe \\emph{Shannon information content} \nof the sequence\nunder the above assumptions:\n\n\n\n\n\n\n\n\n", "itemtype": "equation", "pos": 7026, "prevtext": "\n\n\n\n\n\n\n\n\n\n\n\\newif\\ifIEEE\n\\ifx\\IEEEkeywords\\undefined\n  \\IEEEfalse\n\\else\n  \\IEEEtrue\n\\fi\n\n\n\\ifx{defined}\\undefined\n\\else\n\\fi\n\n\n\n\n\n\n\\newif\\iftwocolumn\n\\makeatletter\n\\if@twocolumn\n  \\twocolumntrue\n\\else\n  \\twocolumnfalse\n\\fi\n\\makeatother\n\n\n\n\\ifx{defined}\\undefined\n  \\def\\DCCvspace#1{}\n\\else\n  \\def\\maybesmall{ \\renewcommand{\\baselinestretch}{0.925}                   \\small}\n  \n  \n  \\makeatletter\n  \\if@smallcaptions\n    \\newsavebox{\\dcctempbox}\n    \\renewcommand{\\@makecaption}[2]\n    {\\vspace{10pt}\\renewcommand{\\baselinestretch}{\\smallstretch}\n     \\small\\sbox{\\dcctempbox}{#1: #2}\n     \\ifthenelse{\\lengthtest{\\wd\\dcctempbox > \\linewidth}}\n     { #1: #2\\par}{\\begin{center}#1: #2\\end{center}}}\n  \\fi\n  \n\n\n\n\n\n  \\makeatother\n  \n\\fi\n\n\n\n\n\\title{\\large {\\textbf{{Compressing combinatorial objects}}}}\n\n\n\n\\ifx\\inIEEE\\undefined \n  \n  \\author{{Christian Steinruecken}\\\\ {\\small\\hspace*{-1.7em} University of Cambridge}}\n\\else \n  \\author{Christian Steinruecken\n          \n          \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  }\n\\fi\n\n\\maketitle\n\n\\vspace*{2\\bigskipamount}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\makedistvar{DD}{D}\n\\makedistvar{PP}{P}\n\\makemultiset{M}{m}{M} \n\n\n\n\n\n\n\n\n\n\n\n\n\\makemultiset{W}{w}{W} \n\\makemultiset{R}{r}{R} \n\n\n\n\\def\\thesisChapter#1{\\citep{steinruecken2014b5}}\n\n\\makeatletter\n\n\\def\\@ctxnum[#1]#2{\\ensuremath{n^{#1}_{#2}}}\n\\def\\@ctxNUM[#1]{\\ensuremath{N_{#1}}}\n\\def\\@ctxUNUM[#1]{\\ensuremath{U_{#1}}}\n\\def\\@ctxTNUM[#1]{\\ensuremath{T_{#1}}}\n\n\n\n\\def\\num{\\@testopt{\\csname @ctxnum\\endcsname}{\\kern.2ex}}\n\\def\\NUM{\\@testopt{\\csname @ctxNUM\\endcsname}{\\kern.2ex}}\n\\def\\UNUM{\\@testopt{\\csname @ctxUNUM\\endcsname}{\\kern.2ex}}\n\\def\\TNUM{\\@testopt{\\csname @ctxTNUM\\endcsname}{\\kern.2ex}}\n\n\n\\makeatother\n\n\n\n\n\n\n\n\n\n\n\n\n\\makeatletter\n\\def\\declareHumNN#1#2#3{   \\expandafter\\def\\csname #1\\endcsname{\\@humbleformat{#2}#3}   \\expandafter\\def\\csname s#1\\endcsname{{#2}#3}   \\expandafter\\def\\csname idx#1\\endcsname{{\\@idxhumbleformat{#2}#3}} }\n\\makeatother\n\\declareHumNN{yaN}{YA}{9}\n\\declareHumNN{yaNP}{YA}{9{$^+$}}\n\\declareHumNN{ycS}{YC}{16}\n\\declareHumNN{ycSP}{YC}{16{$^+$}}\n\\declareHumNN{naEM}{N}{8}\n\\declareHumNN{naEP}{N}{8{$^+$}}\n\\declareHumNN{naSM}{N}{16}\n\\declareHumNN{naSP}{N}{16{$^+$}}\n\n\n\n\\declareHumble{PPMDP}{PPM\\raise0.24ex\\hbox{-}DP}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\ifx\\inthesis\\undefined\n  \n  \n\\fi\n\n\\index{multisets|(}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{abstract}\n\n\n\n\n\nMost of the world's digital data is currently encoded\nin a sequential form,\nand compression methods for sequences have been studied\nextensively.\n\n\nHowever, there are many types of non-sequential data\nfor which good compression techniques are still largely unexplored.\n\n\nThis paper contributes insights and concrete techniques for compressing\nvarious kinds of non-sequential data via arithmetic coding,\n\nand derives re-usable probabilistic data models from fairly generic\nstructural assumptions.\n\n\n\nNear-optimal compression methods are described for\ncertain types of permutations, combinations and multisets;\nand the conditions for optimality are made explicit for each method.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{abstract}\n\n\\ifx\\IEEEkeywords\\undefined\n\\else\n\\begin{IEEEkeywords}\nData compression,\nPPM,\nBayesian methods,\narithmetic coding,\nparameter gradients\n\n\n\n\n\n\n\n\\end{IEEEkeywords}\n\\fi\n\n\n\\section{Introduction}\n\n\n\n\n\nMuch of data compression is concerned with the task of\ncompressing files that commonly occur in every day usage.\nImprovements in compression effectiveness inevitably stem from\nimprovements in data modelling, and the strength of any given\nmodel clearly depends on the type of data that is being\ncompressed.\n\n\n\n\nThe need for good compression thus motivates developing models that are\ngood at predicting the data of interest.\n\nThe development of appropriate data models can be difficult,\nespecially when computational constraints are taken into account.\n\nFor example, models that are good at compressing \\DNA\\ sequences\nare different from models that are good at compressing human text.\n\nModern file compressors often include many different data models\n(often for specific types of data) whose predictions are combined\n\\citep{mahoney2000a,mahoney2002a,mahoney2005a}.\n\n\n\n\n\n\n\n\n\n\n\nSequence compression algorithms have been studied extensively,\nnot least because sequences are the most common form in which\ndata is represented in a computer.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOf course, a~serial\nrepresentation is not always a natural description of data\n(e.g.~2-dimensional pictures, elements of a dictionary, the\nhierarchical structure of a file system),\nand is often chosen somewhat arbitrarily.\n\n\n\nThis paper explores data models (and compression algorithms) for\nsome basic types of data that are non-sequential, or have\nparticular symmetries imposed on them.  In particular,\nvarious models\nare proposed for compressing different kinds of permutations,\ncombinations, and multisets.\n\n\n\n\n\n\nThe methods for compressing data with these structures\ncan be used as components in larger models and compression algorithms;\nwe also hope that the insights presented for the objects here\nmay be useful for finding algorithms for other kinds of\ncombinatorial objects.\n\n\n\n\n\n\n\\bigskip\n\nThe rest of this paper is structured as follows.\n\n{\\textit{{Section~\\ref{sec:iid-seq}}}} reviews the compression\nof sequences whose elements are independent and identically\ndistributed from a known distribution.\n\n{\\textit{{Section~\\ref{sec:iid-ms}}}} introduces multisets and describes\nan optimal compression scheme for multisets whose\nelements are distributed the same way as in section~\\ref{sec:iid-seq}.\n\n{\\textit{{Section~\\ref{sec:perm}}}} introduces permutations and\ndescribes an optimal compression scheme for\npermutations that are uniformly distributed.\n\n{\\textit{{Section~\\ref{sec:equality}}}} shows that a sequence can\nbe split into a multiset and a permutation, and that\nthe information content of these two components\nsum to the same value as the information content\nof the original sequence.\n\n{\\textit{{Section~\\ref{sec:truncperm}}}} extends the coding\nmethod for permutations to truncated permutations.\n\n{\\textit{{Section~\\ref{sec:comb}}}} introduces combinations\nand a compression scheme for them.\n\n{\\textit{{Section~\\ref{sec:uniform-ms}}}} discusses\nuniformly distributed multisets and describes\na compression scheme for them.\n\n\n\n\n\nFinally, {\\textit{{Section~\\ref{sec:learn}}}} extends the results of\nprevious sections\n\nto the case that the symbol distribution is\nunknown and needs to be learned adaptively.\n\n\n\n\n\n\n\n\n\n\\section{Sequences}\\label{sec:iid-seq}\n\nWe'll start by reviewing a task that is well known:\nthe compression of a fixed-length sequence\n$\\vc{x}{1}{N}$ of elements from a finite alphabet $\\setX$.\n\n\n\n\nRather than discussing a specialised model that is good at compressing\ntext or other real-world sequences,\nwe'll look at an oversimplified sequence model\nand then show equivalents for non-sequential forms of data.\n\n\n\n\n\n\n\nSo let's assume for now that each element $x_n$ in the sequence is\nindependently and identically distributed (\\iid)\naccording to some distribution $\\txtDD$.\n\n\n\nThe probability of such a sequence is:\n\n\n\n\n", "index": 1, "text": "\\begin{equation}\\label{eq:iidseq}\n\\p{\\vc{x}{1}{N} \\| \\txtDD, N}\n  =  \\prod_{n=1}^N \\DD{x_n}     \\maybedot\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"\\p{\\vc{x}{1}{N}\\|\\txtDD,N}=\\prod_{n=1}^{N}\\DD{x_{n}}\\maybedot\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\vc</mtext></merror><mi>x</mi><mn>1</mn><mi>N</mi><mo>\u2225</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\txtDD</mtext></merror><mo>,</mo><mi>N</mi><mo>=</mo><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\DD</mtext></merror><msub><mi>x</mi><mi>n</mi></msub><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\maybedot</mtext></merror></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\n\nThis guarantee is strictly stronger than\n\n\n\nproving\nthe \\emph{expected} output length to be\n\nwithin 2~bits of the Shannon entropy of $\\txtDD$,\nbecause the guarantee holds\nfor every input sequence, not just on average.\n\nAlgorithms of the above kind are well known,\nand form the basis of many sequence compression algorithms.\n\\footnote{\n  Of course, there are many ways of modelling sequences,\n  and the above simplistic model, while fundamental, is hardly\n  suitable for compressing real-life files.\n  \n  In fact, if $\\txtDD$ were chosen to be a uniform distribution,\n  the above method achieves no compression at all, as\n  all sequences of length $N$ are assumed to have equal probability.\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\medskip\n\n\n\n\n\n\n\nThis paper now explores similarly fundamental compression\nmodels for input objects that \\emph{aren't} sequences.\n\nCompression of non-sequential data was considered by\n\\citet{varshney2006b,varshney2006a,varshney2007a},\nand this paper follows up on their work.\n\nThe models in this paper have been chosen primarily\nfor simplicity and clarity of presentation;\n\nmore elaborate models for combinatorial objects\ncan be found e.g.~in~{chapter~{5} of \\citep{steinruecken2014b}}.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multisets}\\label{sec:iid-ms}\n\nA~\\emph{multiset} $\\setM$ is an unordered collection of elements,\nwhere elements may occur multiple times.\n\nLet $\\mm{x}$ denote how often element $x$ occurs in $\\setM$,\nand $\\MM$ the total number of elements in $\\setM$ (including\nrepetitions).\n\nFor example, $\\setK = \\bset{\\sym{A},\\sym{B},\\sym{B}}$\nis a multiset with\n$\\KK=3$, $\\kk{\\sym{A}}=1$, and $\\kk{\\sym{B}}=2$.\n\n\n\n\n\n\n\n\nOne can think of a multiset as the \\emph{histogram} \nthat captures the symbol occurrence counts in a sequence $\\vc{x}{1}{N}$,\nsuch that:\n\n", "itemtype": "equation", "pos": 7732, "prevtext": "\n\n\n\nSequences of this kind can be compressed with an arithmetic\ncoding scheme \\citep{witten1987a,moffat1998a},\nwhere the symbols $x_n$ are encoded sequentially\nusing $\\txtDD$ at each coding step.\n\n\n\\footnote{\n  There are some\n  fairly minor constraints, e.g.~that it must be possible\n  to discretise~$\\txtDD$ to the\n  resolution of the arithmetic coder.\n  \n  \n}\nThis kind of algorithm produces compressed output\nwhose total length is guaranteed to be within 2~bits\nof the theoretic optimum --\n\nthe \\emph{Shannon information content} \nof the sequence\nunder the above assumptions:\n\n\n\n\n\n\n\n\n", "index": 3, "text": "\\begin{equation}\\label{eq:ic-iid-sequence}\n\n\n        \\log_2 \\frac{1}{\\prod_{n=1}^N \\DD{x_n}}\n  \\ =\\  \\sum_{n=1}^N \\log_2 \\frac{1}{\\DD{x_n}}\n\\maybedot\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\par&#10;\\par&#10;\\log_{2}\\frac{1}{\\prod_{n=1}^{N}\\DD{x_{n}}}\\ =\\ \\sum_{n=1}^{N}\\log_{%&#10;2}\\frac{1}{\\DD{x_{n}}}\\maybedot\" display=\"block\"><mrow><mrow><msub><mi>log</mi><mn>2</mn></msub><mo>\u2061</mo><mpadded width=\"+5pt\"><mfrac><mn>1</mn><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u220f</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\DD</mtext></merror><mo>\u2062</mo><msub><mi>x</mi><mi>n</mi></msub></mrow></mrow></mfrac></mpadded></mrow><mo rspace=\"7.5pt\">=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><msub><mi>log</mi><mn>2</mn></msub><mo>\u2061</mo><mrow><mfrac><mn>1</mn><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\DD</mtext></merror><mo>\u2062</mo><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\maybedot</mtext></merror></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\n\n\n\nA multiset represents the information that remains when\nthe order information of a sequence is lost.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalogously to how we considered a sequence of $N$ draws in the\nprevious section,\nconsider now\na multiset $\\setM$ that was created by making $N$ independent\ndraws from a known distribution $\\txtDD$\nover the same finite alphabet $\\setX$.\n\n\nThe probability of such a multiset~$\\setM$ is:\n\n", "itemtype": "equation", "pos": 9669, "prevtext": "\n\nThis guarantee is strictly stronger than\n\n\n\nproving\nthe \\emph{expected} output length to be\n\nwithin 2~bits of the Shannon entropy of $\\txtDD$,\nbecause the guarantee holds\nfor every input sequence, not just on average.\n\nAlgorithms of the above kind are well known,\nand form the basis of many sequence compression algorithms.\n\\footnote{\n  Of course, there are many ways of modelling sequences,\n  and the above simplistic model, while fundamental, is hardly\n  suitable for compressing real-life files.\n  \n  In fact, if $\\txtDD$ were chosen to be a uniform distribution,\n  the above method achieves no compression at all, as\n  all sequences of length $N$ are assumed to have equal probability.\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\medskip\n\n\n\n\n\n\n\nThis paper now explores similarly fundamental compression\nmodels for input objects that \\emph{aren't} sequences.\n\nCompression of non-sequential data was considered by\n\\citet{varshney2006b,varshney2006a,varshney2007a},\nand this paper follows up on their work.\n\nThe models in this paper have been chosen primarily\nfor simplicity and clarity of presentation;\n\nmore elaborate models for combinatorial objects\ncan be found e.g.~in~{chapter~{5} of \\citep{steinruecken2014b}}.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Multisets}\\label{sec:iid-ms}\n\nA~\\emph{multiset} $\\setM$ is an unordered collection of elements,\nwhere elements may occur multiple times.\n\nLet $\\mm{x}$ denote how often element $x$ occurs in $\\setM$,\nand $\\MM$ the total number of elements in $\\setM$ (including\nrepetitions).\n\nFor example, $\\setK = \\bset{\\sym{A},\\sym{B},\\sym{B}}$\nis a multiset with\n$\\KK=3$, $\\kk{\\sym{A}}=1$, and $\\kk{\\sym{B}}=2$.\n\n\n\n\n\n\n\n\nOne can think of a multiset as the \\emph{histogram} \nthat captures the symbol occurrence counts in a sequence $\\vc{x}{1}{N}$,\nsuch that:\n\n", "index": 5, "text": "\\begin{equation}\n\\MM \\ =\\  \\sum_{{x \\in \\setX}}^{{}} {\\mm{x}}\n    \\ =\\  N\n    \\maybedot\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\MM\\ =\\ \\sum_{{x\\in\\setX}}{\\mm{x}}\\ =\\ N\\maybedot\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><mo rspace=\"7.5pt\">=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setX</mtext></merror></mrow></munder><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mpadded width=\"+5pt\"><mi>x</mi></mpadded></mrow></mrow><mo rspace=\"7.5pt\">=</mo><mrow><mi>N</mi><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\maybedot</mtext></merror></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\n\n\n\n\n\n\n\nAs $\\setM$ is a multivariate object, the above distribution\ncannot be interfaced directly to an arithmetic coder;\n\narithmetic coders can typically only encode\n(sequences of) discrete univariate choices.\n\n\n\n\nOne possible solution is to factorise~\\eqref{eq:iid-ms}\ninto a product of univariate distributions as follows:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "itemtype": "equation", "pos": 10175, "prevtext": "\n\n\n\nA multiset represents the information that remains when\nthe order information of a sequence is lost.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalogously to how we considered a sequence of $N$ draws in the\nprevious section,\nconsider now\na multiset $\\setM$ that was created by making $N$ independent\ndraws from a known distribution $\\txtDD$\nover the same finite alphabet $\\setX$.\n\n\nThe probability of such a multiset~$\\setM$ is:\n\n", "index": 7, "text": "\\begin{equation}\\label{eq:iid-ms}\n\\p{\\setM \\| N, \\txtDD} = N! \\mul \\prod_{{x \\in \\setX}}^{{}}\n      \\frac{{\\DD{{x}}}^{{\\mm{x}}}}{{\\mm{x}}!}\n    \\maybedot\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\p{\\setM\\|N,\\txtDD}=N!\\mul\\prod_{{x\\in\\setX}}\\frac{{\\DD{{x}}}^{{\\mm{x}}}}{{\\mm%&#10;{x}}!}\\maybedot\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>\u2225</mo><mi>N</mi><mo>,</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\txtDD</mtext></merror><mo>=</mo><mi>N</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mul</mtext></merror><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setX</mtext></merror></mrow></munder><mfrac><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\DD</mtext></merror><mo>\u2062</mo><msup><mi>x</mi><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></msup></mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mrow><mi>x</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow></mrow></mfrac><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\maybedot</mtext></merror></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\nwhere\n$\\Binomial{k \\| K, \\theta}$ $=$ ${K \\choose k} \\theta^{k} (1\\?-\\theta)^{K-k}$\nis the binomial distribution,\n${<}$ is a total ordering relation of the alphabet $\\setX$,\nand the product iterates over the elements of $\\setX$ in the order\ndefined by ${<}$.\n\nA derivation of this factorisation can be found in~{chapter~{3} of \\citep{steinruecken2014b}}.\n\n\n\n\n\n$\\setM$ can then be compressed with an arithmetic coding scheme that\nsequentially encodes\n\neach of the components $\\mm{x}$ using the\nconditional distributions given in~\\eqref{eq:iid-ms-univar}.\n\nThe length of the resulting compressed output sequence\n\n\n\n\n\nis within 2 bits of $\\setM$'s\ninformation content, i.e.~the optimal length in bits:\n\n\n\n\\begin{eqnarray}\\label{eq:ic-iid-multiset}\n\\log_2 \\frac{1}{\\p{\\setM \\| N, \\txtDD}}\n  \n  \n  \n  \n  \n  \n  \n  &=& \\log_2 \\frac{1}{N!}\n      + \\sum_{{x \\in \\setX}}^{{}} {\\mm{x}} \\log_2 \\frac{1}{\\DD{x}}\n      + \\sum_{{x \\in \\setX}}^{{}} \\log_2 {{\\mm{x}}!}\n\\end{eqnarray}\n\n\n\n\\section{Permutations}\\label{sec:perm}\n\nA~\\emph{permutation} is an arrangement of elements in a\ngiven multiset.\n\nFor example, the multiset $\\bset{\\sym{X},\\sym{Y},\\sym{Z}}$\nhas 6~possible permutations:\n\\begin{displaymath}\n\\null\\hfill\n(\\sym{X},\\sym{Y},\\sym{Z}) \\qquad\n(\\sym{X},\\sym{Z},\\sym{Y}) \\qquad\n(\\sym{Y},\\sym{X},\\sym{Z}) \\qquad\n(\\sym{Y},\\sym{Z},\\sym{X}) \\qquad\n(\\sym{Z},\\sym{X},\\sym{Y}) \\qquad\n(\\sym{Z},\\sym{Y},\\sym{X}) \\maybecomma\n\\end{displaymath}\n\n\n\n\nand the multiset $\\bset{{\\blacktriangledown},{\\blacktriangle},{\\blacktriangle}}$ has three permutations:\n$({\\blacktriangledown},{\\blacktriangle},{\\blacktriangle})$,\n$({\\blacktriangle},{\\blacktriangledown},{\\blacktriangle})$ and\n$({\\blacktriangle},{\\blacktriangle},{\\blacktriangledown})$.\n\n\n\n\n\n\n\n\n\n\nDespite what the above notation might suggest,\na permutation contains no information\nabout symbols or their occurrence counts:\nit merely specifies an arrangement of symbols\nfor a \\emph{given} multiset.\n\nA~sequence can always be separated into\na multiset and a permutation of that multiset.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\noindent\nThe number of possible permutations of a given multiset $\\setM$ is exactly\n\n\n", "itemtype": "equation", "pos": 10700, "prevtext": "\n\n\n\n\n\n\n\nAs $\\setM$ is a multivariate object, the above distribution\ncannot be interfaced directly to an arithmetic coder;\n\narithmetic coders can typically only encode\n(sequences of) discrete univariate choices.\n\n\n\n\nOne possible solution is to factorise~\\eqref{eq:iid-ms}\ninto a product of univariate distributions as follows:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "index": 9, "text": "\\begin{equation}\\label{eq:iid-ms-univar}\n  \\p{\\setM \\| N, \\txtDD}\n  =   \\prod_{x \\in \\setX}^{{\\text{\\tiny$({<})$}}}\n         \\Binomial{ \\mm{x} \\| \\MM\\?-\\sum_{y {<} x} \\mm{y},\\ \n\n                              \\frac{\\DD{x}}{1\\?-\\sum_{y {<} x} \\DD{y}}\n                  }\n\n\n\n\n\n\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"\\p{\\setM\\|N,\\txtDD}=\\prod_{x\\in\\setX}^{{\\text{\\tiny({&lt;})}}}\\Binomial{\\mm{x}\\|%&#10;\\MM\\?-\\sum_{y{&lt;}x}\\mm{y},\\ \\par&#10;\\frac{\\DD{x}}{1\\?-\\sum_{y{&lt;}x}\\DD{y}}}\\par&#10;%&#10;\\par&#10;\\par&#10;\\par&#10;\\par&#10;\\par&#10;\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>\u2225</mo><mi>N</mi><mo>,</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\txtDD</mtext></merror><mo>=</mo><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setX</mtext></merror></mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\text</mtext></merror><mo>\u2062</mo><mrow><mo maxsize=\"71%\" minsize=\"71%\">(</mo><mo mathsize=\"71%\" stretchy=\"false\">&lt;</mo><mo maxsize=\"71%\" minsize=\"71%\">)</mo></mrow></mrow></munderover><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\Binomial</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mi>x</mi><mo>\u2225</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\?</mtext></merror><mo>-</mo><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>y</mi><mo>&lt;</mo><mi>x</mi></mrow></munder><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mi>y</mi><mo rspace=\"7.5pt\">,</mo><mfrac><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\DD</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow><mrow><mrow><mn>1</mn><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\?</mtext></merror></mrow><mo>-</mo><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>y</mi><mo>&lt;</mo><mi>x</mi></mrow></msub><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\DD</mtext></merror><mo>\u2062</mo><mi>y</mi></mrow></mrow></mrow></mfrac></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\n\n\n\nso a uniform distribution over permutations \nassigns to each permutation the probability:\n\n\n", "itemtype": "equation", "pos": 13114, "prevtext": "\nwhere\n$\\Binomial{k \\| K, \\theta}$ $=$ ${K \\choose k} \\theta^{k} (1\\?-\\theta)^{K-k}$\nis the binomial distribution,\n${<}$ is a total ordering relation of the alphabet $\\setX$,\nand the product iterates over the elements of $\\setX$ in the order\ndefined by ${<}$.\n\nA derivation of this factorisation can be found in~{chapter~{3} of \\citep{steinruecken2014b}}.\n\n\n\n\n\n$\\setM$ can then be compressed with an arithmetic coding scheme that\nsequentially encodes\n\neach of the components $\\mm{x}$ using the\nconditional distributions given in~\\eqref{eq:iid-ms-univar}.\n\nThe length of the resulting compressed output sequence\n\n\n\n\n\nis within 2 bits of $\\setM$'s\ninformation content, i.e.~the optimal length in bits:\n\n\n\n\\begin{eqnarray}\\label{eq:ic-iid-multiset}\n\\log_2 \\frac{1}{\\p{\\setM \\| N, \\txtDD}}\n  \n  \n  \n  \n  \n  \n  \n  &=& \\log_2 \\frac{1}{N!}\n      + \\sum_{{x \\in \\setX}}^{{}} {\\mm{x}} \\log_2 \\frac{1}{\\DD{x}}\n      + \\sum_{{x \\in \\setX}}^{{}} \\log_2 {{\\mm{x}}!}\n\\end{eqnarray}\n\n\n\n\\section{Permutations}\\label{sec:perm}\n\nA~\\emph{permutation} is an arrangement of elements in a\ngiven multiset.\n\nFor example, the multiset $\\bset{\\sym{X},\\sym{Y},\\sym{Z}}$\nhas 6~possible permutations:\n\\begin{displaymath}\n\\null\\hfill\n(\\sym{X},\\sym{Y},\\sym{Z}) \\qquad\n(\\sym{X},\\sym{Z},\\sym{Y}) \\qquad\n(\\sym{Y},\\sym{X},\\sym{Z}) \\qquad\n(\\sym{Y},\\sym{Z},\\sym{X}) \\qquad\n(\\sym{Z},\\sym{X},\\sym{Y}) \\qquad\n(\\sym{Z},\\sym{Y},\\sym{X}) \\maybecomma\n\\end{displaymath}\n\n\n\n\nand the multiset $\\bset{{\\blacktriangledown},{\\blacktriangle},{\\blacktriangle}}$ has three permutations:\n$({\\blacktriangledown},{\\blacktriangle},{\\blacktriangle})$,\n$({\\blacktriangle},{\\blacktriangledown},{\\blacktriangle})$ and\n$({\\blacktriangle},{\\blacktriangle},{\\blacktriangledown})$.\n\n\n\n\n\n\n\n\n\n\nDespite what the above notation might suggest,\na permutation contains no information\nabout symbols or their occurrence counts:\nit merely specifies an arrangement of symbols\nfor a \\emph{given} multiset.\n\nA~sequence can always be separated into\na multiset and a permutation of that multiset.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\noindent\nThe number of possible permutations of a given multiset $\\setM$ is exactly\n\n\n", "index": 11, "text": "\\begin{equation}\n  \\frac{\\MM!}{\\prod_{{x \\in \\setX}}^{{}} {\\mm{x}}!}\n  \\maybecomma\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\MM!}{\\prod_{{x\\in\\setX}}{\\mm{x}}!}\\maybecomma\" display=\"block\"><mrow><mfrac><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u220f</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setX</mtext></merror></mrow></msub><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mrow><mi>x</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow></mrow></mrow></mfrac><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\maybecomma</mtext></merror></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\n\n\n\n\n\n\n\n\nThis distribution~\\eqref{eq:uniform-perm} can be factorised into\na product of univariate distributions: \n\\begin{eqnarray}\n\\p{\\vc{x}{1}{N} \\| \\setM}\n  &=& \\prod_{n=1}^{N} \\p{x_n \\| \\setM,\\ \\vc{x}{1}{n-1}} \\\\\n  &=& \\prod_{n=1}^{N} \\frac{\\mm{x_n} - {\\sum_{{k=1}}^{{n-1}} \\one{{x_k=x_n}}}}{N - n + 1}\n      \\label{eq:perm-seq}\n  \\maybedot\n\\end{eqnarray}\n\n\nOne way to store such a permutation with an arithmetic coder\nis to\nencode each $x_n$ with the conditional distribution~\\eqref{eq:perm-seq},\niterating over the indices $n$ of the permutation.\n\n\n\n\n\n\n\n\n\nThis procedure produces an output length that is within 2~bits of\nthe Shannon information content of the permutation:\n\n\n\\begin{eqnarray}\\label{eq:ic-uniform-perm}\n  \\log_2 \\frac{1}{ \\p{\\vc{x}{1}{\\MM} \\| \\setM}}\n\n\n\n\n\n\n\n  &=&\n      \\log_2 {\\MM!}\n    - \\sum_{{x \\in \\setX}}^{{}} \\log_2 {\\mm{x}}!\n    \n\\end{eqnarray}\n\n\n\n\n\n\n\\section{Sequence = Multiset + Permutation}\\label{sec:equality}\n\n\nAny sequence $\\vc{x}{1}{N}$ can be split into a multiset $\\setM$\nand a permutation of $\\setM$.\n\n\n\n\n\nFor the case that each element $x_n$ is independent\nand identically distributed according to some\nknown distribution~$\\txtDD$,\n\nwe gave coding schemes for each of these three objects.\n\nThese coding schemes are optimal in the sense that they\ncompress each object to within 2 bits of the object's\nShannon information content.\n\n\nThe information content of the multiset was\ngiven in~\\eqref{eq:ic-iid-multiset},\nand of the multiset's permutation in~\\eqref{eq:ic-uniform-perm}.\n\nRecalling that each symbol $x \\in \\setX$ occurs $\\mm{x}$ times in\nthe sequence $\\vc{x}{1}{N}$, and that $N = \\MM$,\n\nthe sum of quantities \\eqref{eq:ic-iid-multiset} and \\eqref{eq:ic-uniform-perm} equals:\n\\begin{eqnarray}\\label{eq:ic-ms-plus-perm}\n       \\sum_{{x \\in \\setX}}^{{}} \\mm{x} \\log_2 \\frac{1}{\\DD{x}}\n  &=&  \\sum_{n=1}^{N} \\log_2 \\frac{1}{\\DD{x_n}}\n  \\maybedot\n\\end{eqnarray}\n\n\nThis quantity is the same as\nexpression~\\eqref{eq:ic-iid-sequence},\nthe information content of the sequence.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\medskip\n\nThe above coding methods were derived for sequences and multisets\nthat made the oversimplifying\nassumption that each element $x_n$ in the sequence was drawn\nindependently from a known distribution $\\txtDD$.\n\nIn reality, distributions over elements are not typically\nknown in advance, and should be inferred from the data\n(both by the compressor and by the decompressor).\n\nSection~\\ref{sec:learn} shows how sequences and multisets\ncan be optimally encoded while simultaneously learning\nan unknown distribution. \n\nBefore then, we shall briefly look at\ntruncated permutations,\nand at two alternative models for multisets.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Truncated permutations}\\label{sec:truncperm}\n\nThe encoding for permutations introduced in section~\\ref{sec:perm}\nreflects a generative process where elements are drawn\nwithout replacement from a given multiset $\\setM$ until\nthere are no more elements.\n\nIn this section, we generalise this method to the case that\nwe stop after $K$ draws, resulting in a \\emph{truncated permutation}\n$\\vc{x}{1}{K}$ where $K \\le \\MM$.\n\nThe probability of drawing a given {$K$\\kern-.12em-per\\-mu\\-ta\\-tion}\\ from $\\setM$ is:\n\n", "itemtype": "equation", "pos": 13306, "prevtext": "\n\n\n\nso a uniform distribution over permutations \nassigns to each permutation the probability:\n\n\n", "index": 13, "text": "\\begin{equation}\\label{eq:uniform-perm}\n    {     \\p{\\vc{x}{1}{\\MM} \\| \\setM}   =   \\frac{1}{\\MM!}     \\mul \\prod_{{x \\in \\setX}}^{{}} {\\mm{x}}! }\n    \\maybedot\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"{\\p{\\vc{x}{1}{\\MM}\\|\\setM}=\\frac{1}{\\MM!}\\mul\\prod_{{x\\in\\setX}}{\\mm{x}}!}\\maybedot\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\vc</mtext></merror><mi>x</mi><mn>1</mn><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><mo>\u2225</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>=</mo><mfrac><mn>1</mn><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow></mfrac><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mul</mtext></merror><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setX</mtext></merror></mrow></munder><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mi>x</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\maybedot</mtext></merror></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\nwhere $\\setK \\subseteq \\setM$ summarises the symbol\noccurrence counts in the truncated permutation $\\vc{x}{1}{K}$.\n\nTo encode a {$K$\\kern-.12em-per\\-mu\\-ta\\-tion}\\ of this kind, the encoding\nprocedure from section~\\ref{sec:perm} can be used,\nexcept for stopping after $K$ elements.\n\n\nIt might be helpful to note that this early stopping procedure\nresults in a distribution over truncated permutations that is non-uniform,\n\n\nexcept when $K=\\MM$ or when $\\setM$ contains no duplicates.\n\n\n\n\\section{Combinations (or submultisets)}\\label{sec:comb}\n\nIn section~\\ref{sec:iid-ms} we considered multisets\nwhose elements were drawn from a distribution~$\\txtDD$.\n\nRather than drawing elements from a known distribution~$\\txtDD$,\nconsider drawing elements from a known multiset $\\setM$\nwithout replacement.\n\nIf we keep the order of the elements, we end up with\na permutation, as discussed in section~\\ref{sec:perm}.\nIf the order is thrown away, the resulting structure is\ncalled a \\emph{combination}.\n\n\n\n\n\n\n\n\n\n\n\nSuppose we draw $K$ elements from an existing multiset $\\setM$,\nwhere $K \\le \\MM$. The resulting combination $\\setK$ is\na submultiset of $\\setM$, and has probability:\n\n", "itemtype": "equation", "pos": 16696, "prevtext": "\n\n\n\n\n\n\n\n\nThis distribution~\\eqref{eq:uniform-perm} can be factorised into\na product of univariate distributions: \n\\begin{eqnarray}\n\\p{\\vc{x}{1}{N} \\| \\setM}\n  &=& \\prod_{n=1}^{N} \\p{x_n \\| \\setM,\\ \\vc{x}{1}{n-1}} \\\\\n  &=& \\prod_{n=1}^{N} \\frac{\\mm{x_n} - {\\sum_{{k=1}}^{{n-1}} \\one{{x_k=x_n}}}}{N - n + 1}\n      \\label{eq:perm-seq}\n  \\maybedot\n\\end{eqnarray}\n\n\nOne way to store such a permutation with an arithmetic coder\nis to\nencode each $x_n$ with the conditional distribution~\\eqref{eq:perm-seq},\niterating over the indices $n$ of the permutation.\n\n\n\n\n\n\n\n\n\nThis procedure produces an output length that is within 2~bits of\nthe Shannon information content of the permutation:\n\n\n\\begin{eqnarray}\\label{eq:ic-uniform-perm}\n  \\log_2 \\frac{1}{ \\p{\\vc{x}{1}{\\MM} \\| \\setM}}\n\n\n\n\n\n\n\n  &=&\n      \\log_2 {\\MM!}\n    - \\sum_{{x \\in \\setX}}^{{}} \\log_2 {\\mm{x}}!\n    \n\\end{eqnarray}\n\n\n\n\n\n\n\\section{Sequence = Multiset + Permutation}\\label{sec:equality}\n\n\nAny sequence $\\vc{x}{1}{N}$ can be split into a multiset $\\setM$\nand a permutation of $\\setM$.\n\n\n\n\n\nFor the case that each element $x_n$ is independent\nand identically distributed according to some\nknown distribution~$\\txtDD$,\n\nwe gave coding schemes for each of these three objects.\n\nThese coding schemes are optimal in the sense that they\ncompress each object to within 2 bits of the object's\nShannon information content.\n\n\nThe information content of the multiset was\ngiven in~\\eqref{eq:ic-iid-multiset},\nand of the multiset's permutation in~\\eqref{eq:ic-uniform-perm}.\n\nRecalling that each symbol $x \\in \\setX$ occurs $\\mm{x}$ times in\nthe sequence $\\vc{x}{1}{N}$, and that $N = \\MM$,\n\nthe sum of quantities \\eqref{eq:ic-iid-multiset} and \\eqref{eq:ic-uniform-perm} equals:\n\\begin{eqnarray}\\label{eq:ic-ms-plus-perm}\n       \\sum_{{x \\in \\setX}}^{{}} \\mm{x} \\log_2 \\frac{1}{\\DD{x}}\n  &=&  \\sum_{n=1}^{N} \\log_2 \\frac{1}{\\DD{x_n}}\n  \\maybedot\n\\end{eqnarray}\n\n\nThis quantity is the same as\nexpression~\\eqref{eq:ic-iid-sequence},\nthe information content of the sequence.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\medskip\n\nThe above coding methods were derived for sequences and multisets\nthat made the oversimplifying\nassumption that each element $x_n$ in the sequence was drawn\nindependently from a known distribution $\\txtDD$.\n\nIn reality, distributions over elements are not typically\nknown in advance, and should be inferred from the data\n(both by the compressor and by the decompressor).\n\nSection~\\ref{sec:learn} shows how sequences and multisets\ncan be optimally encoded while simultaneously learning\nan unknown distribution. \n\nBefore then, we shall briefly look at\ntruncated permutations,\nand at two alternative models for multisets.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Truncated permutations}\\label{sec:truncperm}\n\nThe encoding for permutations introduced in section~\\ref{sec:perm}\nreflects a generative process where elements are drawn\nwithout replacement from a given multiset $\\setM$ until\nthere are no more elements.\n\nIn this section, we generalise this method to the case that\nwe stop after $K$ draws, resulting in a \\emph{truncated permutation}\n$\\vc{x}{1}{K}$ where $K \\le \\MM$.\n\nThe probability of drawing a given {$K$\\kern-.12em-per\\-mu\\-ta\\-tion}\\ from $\\setM$ is:\n\n", "index": 15, "text": "\\begin{equation}\n  \\p{\\vc{x}{1}{K} \\| K, \\setM}\n  = \\frac{(\\MM - \\KK)!}{\\MM!}\n    \\mul\n    \\prod_{x\\in\\setM} \\frac{\\mm{x}!}{(\\mm{x}-\\kk{x})!}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"\\p{\\vc{x}{1}{K}\\|K,\\setM}=\\frac{(\\MM-\\KK)!}{\\MM!}\\mul\\prod_{x\\in\\setM}\\frac{%&#10;\\mm{x}!}{(\\mm{x}-\\kk{x})!}\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\vc</mtext></merror><mi>x</mi><mn>1</mn><mi>K</mi><mo>\u2225</mo><mi>K</mi><mo>,</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>=</mo><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><mo>-</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\KK</mtext></merror></mrow><mo stretchy=\"false\">)</mo></mrow><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow></mfrac><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mul</mtext></merror><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror></mrow></munder><mfrac><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mrow><mi>x</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow></mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow><mo>-</mo><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\kk</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow></mfrac></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\nThis multivariate distribution can be broken down\ninto a product of univariate distributions, to\nmake it easier to use with an arithmetic coder.\n\nFor example, \\eqref{eq:comb} can be factorised\nrecursively, using the identity:\n\n", "itemtype": "equation", "pos": 18021, "prevtext": "\nwhere $\\setK \\subseteq \\setM$ summarises the symbol\noccurrence counts in the truncated permutation $\\vc{x}{1}{K}$.\n\nTo encode a {$K$\\kern-.12em-per\\-mu\\-ta\\-tion}\\ of this kind, the encoding\nprocedure from section~\\ref{sec:perm} can be used,\nexcept for stopping after $K$ elements.\n\n\nIt might be helpful to note that this early stopping procedure\nresults in a distribution over truncated permutations that is non-uniform,\n\n\nexcept when $K=\\MM$ or when $\\setM$ contains no duplicates.\n\n\n\n\\section{Combinations (or submultisets)}\\label{sec:comb}\n\nIn section~\\ref{sec:iid-ms} we considered multisets\nwhose elements were drawn from a distribution~$\\txtDD$.\n\nRather than drawing elements from a known distribution~$\\txtDD$,\nconsider drawing elements from a known multiset $\\setM$\nwithout replacement.\n\nIf we keep the order of the elements, we end up with\na permutation, as discussed in section~\\ref{sec:perm}.\nIf the order is thrown away, the resulting structure is\ncalled a \\emph{combination}.\n\n\n\n\n\n\n\n\n\n\n\nSuppose we draw $K$ elements from an existing multiset $\\setM$,\nwhere $K \\le \\MM$. The resulting combination $\\setK$ is\na submultiset of $\\setM$, and has probability:\n\n", "index": 17, "text": "\\begin{equation}\\label{eq:comb}\n  \\p{\\setK \\| \\setM} \n  = {\\MM \\choose \\KK}^{-1}\n    \\mul\n    \\prod_{x \\in \\setK} {\\mm{x} \\choose \\kk{x}}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"\\p{\\setK\\|\\setM}={\\MM\\choose\\KK}^{-1}\\mul\\prod_{x\\in\\setK}{\\mm{x}\\choose\\kk{x}}\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setK</mtext></merror><mo>\u2225</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>=</mo><msup><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\KK</mtext></merror></mfrac><mo>)</mo></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msup><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mul</mtext></merror><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setK</mtext></merror></mrow></munder><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\kk</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></mfrac><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\nwhere $x$ is an arbitrary element that occurs in $\\setK$,\nand $\\setK_{\\setminus \\bset{x}}$ denotes the multiset $\\setK$ with all\noccurrences of $x$ removed.\nThe distribution over $\\kk{x}$ given $\\setM$ and $\\KK$ is:\n\n", "itemtype": "equation", "pos": 18400, "prevtext": "\nThis multivariate distribution can be broken down\ninto a product of univariate distributions, to\nmake it easier to use with an arithmetic coder.\n\nFor example, \\eqref{eq:comb} can be factorised\nrecursively, using the identity:\n\n", "index": 19, "text": "\\begin{equation}\n\\p{\\setK \\| \\setM}\n  \\ =\\\n  \\p{\\kk{x} \\| \\setM, \\KK}\n  \n  \n  \n  \\mul\n  \\p{\\setK_{\\setminus \\bset{x}} \\|\\big. \\setM_{\\setminus \\bset{x}} }\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E10.m1\" class=\"ltx_Math\" alttext=\"\\p{\\setK\\|\\setM}\\ =\\ \\p{\\kk{x}\\|\\setM,\\KK}\\par&#10;\\par&#10;\\par&#10;\\mul\\p{\\setK_{%&#10;\\setminus\\bset{x}}\\|\\big{.}\\setM_{\\setminus\\bset{x}}}\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setK</mtext></merror><mo>\u2225</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo rspace=\"7.5pt\">=</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\kk</mtext></merror><mi>x</mi><mo>\u2225</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>,</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\KK</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mul</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><msub><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setK</mtext></merror><mrow><mo>\u2216</mo><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\bset</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></mrow></msub><mo>\u2225</mo><mo mathsize=\"120%\" stretchy=\"false\">.</mo><msub><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mrow><mo>\u2216</mo><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\bset</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></mrow></msub></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Uniform multisets}\\label{sec:uniform-ms}\n\nThe compression method for multisets described in section~\\ref{sec:iid-ms}\nassumes that the elements in the multiset are distributed\naccording to some distribution $\\txtDD$.\n\n\n\n\n\n\n\n\nThis section shows how to compress\nmultisets that are chosen\nuniformly at random from all possible multisets of a given size ${N}$.\n\n\n\nThere are $C_{{K}}({N})$ ways of creating an {$N\\kern-.1em$-size}\\ multiset\nfrom a set of ${K}$ distinct elements, where:\n\n\n\n", "itemtype": "equation", "pos": 18786, "prevtext": "\nwhere $x$ is an arbitrary element that occurs in $\\setK$,\nand $\\setK_{\\setminus \\bset{x}}$ denotes the multiset $\\setK$ with all\noccurrences of $x$ removed.\nThe distribution over $\\kk{x}$ given $\\setM$ and $\\KK$ is:\n\n", "index": 21, "text": "\\begin{equation}\n  \\p{\\kk{x} \\| \\setM, \\KK}\n  \\ =\\\n        {\\MM \\choose \\KK}^{-1}\n        {\\MM\\?-\\mm{x} \\choose \\KK\\?-\\kk{x}}\n        {\\mm{x} \\choose \\kk{x}}\n  \\maybedot\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m1\" class=\"ltx_Math\" alttext=\"\\p{\\kk{x}\\|\\setM,\\KK}\\ =\\ {\\MM\\choose\\KK}^{-1}{\\MM\\?-\\mm{x}\\choose\\KK\\?-\\kk{x}%&#10;}{\\mm{x}\\choose\\kk{x}}\\maybedot\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\kk</mtext></merror><mi>x</mi><mo>\u2225</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>,</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\KK</mtext></merror><mo rspace=\"7.5pt\">=</mo><msup><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\KK</mtext></merror></mfrac><mo>)</mo></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msup><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\MM</mtext></merror><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\?</mtext></merror></mrow><mo>-</mo><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></mrow><mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\KK</mtext></merror><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\?</mtext></merror></mrow><mo>-</mo><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\kk</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></mrow></mfrac><mo>)</mo></mrow><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\kk</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow></mfrac><mo>)</mo></mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\maybedot</mtext></merror></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\nA uniform distribution over multisets $\\setM$ (given ${N}$ and ${K}$)\ntherefore assigns each multiset\nprobability mass $\\p{\\setM \\| {N},{K}} = 1 / {C_{{K}}({N})}$.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Sequences and multisets from unknown distributions}\\label{sec:learn}\n\nSuppose the elements of a sequence $\\vc{x}{1}{N}$ are independent\nand identically distributed from some \\emph{unknown}\ndistribution~$\\txtDD$.\n\n\n\nIt is possible to compress sequences of this kind by taking\nadvantage of the knowledge that the sequence's elements\nare identically distributed: even though the distribution\n$\\txtDD$ is not available to the encoder or the decoder,\neach symbol in the sequence reveals information about\n$\\txtDD$, allowing both encoder and decoder to approximate it.\n\n\nA simple and well-known technique is to let both encoder\nand decoder maintain a histogram of symbol occurrence counts,\nwhich is updated every time after a symbol in the sequence is\nencoded or decoded.\n\nEach symbol is arithmetically encoded using the best\napproximation of $\\txtDD$, given all the past symbol occurrences\nand a prior distribution over symbols.\n\nHere, this prior is implemented\nby giving each symbol $x$ an initial pseudocount of~$\\alpha_x \\in \\R^{+}$.\n\n\nThe $N$th symbol in the sequence can be compressed\nwith an arithmetic coder\nusing the following conditional distribution:\n\n\\begin{eqnarray}\n  \\p{x_N\\?=x \\| \\vc{x}{1}{N-1}, \\v{\\alpha}}\n    &=& \n        \\frac{\\alpha_x + {\\colorbox{grey90}{${{\\sum_{{n=1}}^{{N-1}} \\one{{x_n=x}}}}$}}} \n             {A + N - 1}\n\\end{eqnarray}\nwhere $\\alpha_x$ is the initial count for symbol $x$,\nand the shaded box counts how often symbol $x$ occurred\nin the preceding sequence\n($\\one{\\,\\mathrm Q\\,}=1$ if\nthe expression $\\mathrm Q$ is true, and $0$ otherwise).\n\n$A$ is the sum of all $\\alpha_x$.\n\nThe probability distribution over the entire sequence\ninduced by this adaptive scheme can be written as follows:\n\n\n{\\allowdisplaybreaks\n\\begin{eqnarray}\n  \\p{\\vc{x}{1}{N} \\| N, \\v{\\alpha}}\n     &=&  \\prod_{n=1}^N \\p{x_n \\| \\vc{x}{1}{n-1}, \\v{\\alpha} } \\\\\n     &=&  \\prod_{n=1}^N\n           \\frac{\\alpha_{x_n} + {{{\\sum_{{k=1}}^{{n-1}} \\one{{x_k=x_n}}}}}}{A + n - 1}\n             \\label{eq:seq-learn-j1} \\\\\n     &=&  \\frac{\\G{A}}{\\G{A+N}}\n          \\prod_{x \\in \\setX}\n          \\frac{\\G{\\alpha_x + \\mm{x}}}{\\G{\\alpha_x}}\n             \\label{eq:seq-learn-j2}\n\\end{eqnarray}\n}\nwhere $\\setM$ is the symbol histogram of the entire sequence,\ni.e.~$\\mm{x} = \\sum_{n=1}^N \\one{x_n = x}$,\nand $\\G{\\cdot}$ denotes the Gamma function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\medskip\n\n\nWe can consider the equivalent scenario for a multiset\nby throwing away the ordering produced by the above process.\n\nAs was shown in section~\\ref{sec:perm},\na sequence with histogram $\\setM$ has\nexactly $\\MM! \\mul \\left( \\prod_{x\\in\\setX} \\mm{x}! \\right)^{-1}$\npermutations.\n\nNoting that $\\MM = N$,\nthe distribution~\\eqref{eq:seq-learn-j2} over sequences\ncan be converted to a distribution over multisets\nby dividing out the permutation information:\n\n\n\n\n\n\n\n", "itemtype": "equation", "pos": 19477, "prevtext": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Uniform multisets}\\label{sec:uniform-ms}\n\nThe compression method for multisets described in section~\\ref{sec:iid-ms}\nassumes that the elements in the multiset are distributed\naccording to some distribution $\\txtDD$.\n\n\n\n\n\n\n\n\nThis section shows how to compress\nmultisets that are chosen\nuniformly at random from all possible multisets of a given size ${N}$.\n\n\n\nThere are $C_{{K}}({N})$ ways of creating an {$N\\kern-.1em$-size}\\ multiset\nfrom a set of ${K}$ distinct elements, where:\n\n\n\n", "index": 23, "text": "\\begin{equation}\\label{eq:C_K}\nC_{{K}}({N}) = {{N}+{K}-1 \\choose {K}-1} = \\frac{({N}+{K}-1)!}{{N}!\\ ({K}-1)!}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m1\" class=\"ltx_Math\" alttext=\"C_{{K}}({N})={{N}+{K}-1\\choose{K}-1}=\\frac{({N}+{K}-1)!}{{N}!\\ ({K}-1)!}\" display=\"block\"><mrow><mrow><msub><mi>C</mi><mi>K</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mrow><mrow><mi>N</mi><mo>+</mo><mi>K</mi></mrow><mo>-</mo><mn>1</mn></mrow><mrow><mi>K</mi><mo>-</mo><mn>1</mn></mrow></mfrac><mo>)</mo></mrow><mo>=</mo><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>N</mi><mo>+</mo><mi>K</mi></mrow><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mrow><mrow><mi>N</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mo>\u2062</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>K</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow></mrow></mfrac></mrow></math>", "type": "latex"}, {"file": "1601.03689.tex", "nexttext": "\nThe result is a compound Dirichlet-multinomial distribution,\nwhere $\\v{\\alpha}$ are the parameters of the Dirichlet prior.\n\nThe same result can be obtained by multiplying\ndistribution~\\eqref{eq:iid-ms} with a Dirichlet prior,\nand integrating out $\\txtDD$.\n\n\n\n\n\nTo make this distribution suitable for compression\nwith an arithmetic coder,\nit can be factorised into a product of conditional\nBeta-binomial distributions, e.g.~as follows:\n\n\n\n\\begin{eqnarray}\\label{eq:ms-learn-fact}\n  \\p{\\setM \\| N, \\v{\\alpha} }\n  =\n  \\prod_{x \\in \\setX}^{{\\text{\\tiny$({<})$}}}\n    \\BetaBin{ \\mm{x} \\| \n                        N \\?- \\sum_{y<x} \\mm{y},\\ \n                        \\alpha_x,\\ \n                        A \\?- \\sum_{y {<} x} \\alpha_y\n            }\n\\end{eqnarray}\nwhere the Beta-binomial distribution is univariate, and defined as:\n\\begin{eqnarray}\n\\BetaBin{ k \\| K, \\alpha, \\beta }\n  &=& \\int \\Binomial{ k \\| K, \\theta }\n      \\mul \\Beta{\\theta \\| \\alpha, \\beta} \\  \\d{\\theta} \\\\\n  &=& { K \\choose k }\n      \\mul \\frac{\\G{\\alpha\\?+\\beta}}{\\G{\\alpha} \\  \\G{\\beta}}\n      \\mul \\frac{\\G{\\alpha\\?+k} \\  \\G{\\beta\\?+K\\?-k}}{\\G{\\alpha\\?+\\beta\\?+K}}\n\\end{eqnarray}\nUsing~\\eqref{eq:ms-learn-fact} with an arithmetic coder,\none can near-optimally encode multisets whose elements\nare distributed according to an unknown distribution.\n\nIt's somewhat surprising that it's possible to store\na collection of data points in an unordered way,\nsaving the bits that would otherwise be wasted\non the ordering. \nIt's even more surprising that this is possible\nwhile simultaneously learning the empirical distribution\nfrom the data, and exploiting it to compress more\neffectively.\n\n\n\n\nPerhaps one could argue that this kind of compression method\nis a step towards `universal' compression of unordered data.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Discussion}\\label{sec:discuss}\n\nThis paper presented several fundamental models\nfor non-sequential data,\nand showed how they relate to some\nknown fundamental models for sequences.\n\nThe approach taken for finding these models\nwas to derive the probability distribution\nover the combinatorial objects defined by\nfairly basic assumptions.\n\nWhere necessary, multivariate distributions\nwere factorised into products of univariate\ndistributions, to make them usable with\nexisting arithmetic coding algorithms.\n\n\n\nThe models presented in this paper are not intended\nto be used for compressing real-world data;\n\nthey were carefully chosen to be simplistic\nand flexible, in the hope that they might serve as\n\n\nfundamental components \nin more elaborate compression algorithms.\n\n\n\nThere are many other possibilities of defining\nprobability distributions over multisets,\nand there are many other combinatorial objects\nworthy of study that were not mentioned in this\npaper.\n\nPlenty of additional models and algorithms\nrelated to compression of non-sequential data\ncan be found in~\\citep{steinruecken2014b5}.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\ifx\\isPreprint\\undefined\n\\else\n  \\medskip\n\n  \\textsl{\\textbf{Note.} This paper is a pre-print, to appear in the proceedings\n  of the Data Compression Conference (DCC 2016).}\n\n  \\vspace*{-\\medskipamount}\n\\fi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\ifx{defined}\\undefined\n\\ifx\\trimmedIEEE\\undefined\n  \n  \n  \n\\fi \n\\fi \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\ifx{defined}\\undefined\n\n\n\n\n\n\n\n\n\n\n\\fi\n\\ifx{defined}\\undefined \n  \\ifx\\useIEEEbib\\undefined\n    \n    \n    \\ifx{defined}\\undefined\n      \\bibliographystyle{mythesis-unsrt} \n    \\else \n      \n      \\bibliographystyle{../style/IEEEtranN} \n      \n      \n      \n      \\section*{References}\n    \\fi\n  \\else\n    \\bibliographystyle{../style/IEEEtranN}  \n  \\fi\n  \n  \\bibliography{cmpcmb}\n\\else \n  \\bigskip\n  \n  \n  \n  \n  \n  \\ifx\\useIEEEbib\\undefined\n    \n    \\bibliographystyle{mythesis-unsrt}   \n  \\else\n    \\bibliographystyle{IEEEtranN}  \n  \\fi\n  \\bibliography{cmpcmb}\n\\fi\n\n\n\n\n\n\n\n", "itemtype": "equation", "pos": 22636, "prevtext": "\nA uniform distribution over multisets $\\setM$ (given ${N}$ and ${K}$)\ntherefore assigns each multiset\nprobability mass $\\p{\\setM \\| {N},{K}} = 1 / {C_{{K}}({N})}$.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Sequences and multisets from unknown distributions}\\label{sec:learn}\n\nSuppose the elements of a sequence $\\vc{x}{1}{N}$ are independent\nand identically distributed from some \\emph{unknown}\ndistribution~$\\txtDD$.\n\n\n\nIt is possible to compress sequences of this kind by taking\nadvantage of the knowledge that the sequence's elements\nare identically distributed: even though the distribution\n$\\txtDD$ is not available to the encoder or the decoder,\neach symbol in the sequence reveals information about\n$\\txtDD$, allowing both encoder and decoder to approximate it.\n\n\nA simple and well-known technique is to let both encoder\nand decoder maintain a histogram of symbol occurrence counts,\nwhich is updated every time after a symbol in the sequence is\nencoded or decoded.\n\nEach symbol is arithmetically encoded using the best\napproximation of $\\txtDD$, given all the past symbol occurrences\nand a prior distribution over symbols.\n\nHere, this prior is implemented\nby giving each symbol $x$ an initial pseudocount of~$\\alpha_x \\in \\R^{+}$.\n\n\nThe $N$th symbol in the sequence can be compressed\nwith an arithmetic coder\nusing the following conditional distribution:\n\n\\begin{eqnarray}\n  \\p{x_N\\?=x \\| \\vc{x}{1}{N-1}, \\v{\\alpha}}\n    &=& \n        \\frac{\\alpha_x + {\\colorbox{grey90}{${{\\sum_{{n=1}}^{{N-1}} \\one{{x_n=x}}}}$}}} \n             {A + N - 1}\n\\end{eqnarray}\nwhere $\\alpha_x$ is the initial count for symbol $x$,\nand the shaded box counts how often symbol $x$ occurred\nin the preceding sequence\n($\\one{\\,\\mathrm Q\\,}=1$ if\nthe expression $\\mathrm Q$ is true, and $0$ otherwise).\n\n$A$ is the sum of all $\\alpha_x$.\n\nThe probability distribution over the entire sequence\ninduced by this adaptive scheme can be written as follows:\n\n\n{\\allowdisplaybreaks\n\\begin{eqnarray}\n  \\p{\\vc{x}{1}{N} \\| N, \\v{\\alpha}}\n     &=&  \\prod_{n=1}^N \\p{x_n \\| \\vc{x}{1}{n-1}, \\v{\\alpha} } \\\\\n     &=&  \\prod_{n=1}^N\n           \\frac{\\alpha_{x_n} + {{{\\sum_{{k=1}}^{{n-1}} \\one{{x_k=x_n}}}}}}{A + n - 1}\n             \\label{eq:seq-learn-j1} \\\\\n     &=&  \\frac{\\G{A}}{\\G{A+N}}\n          \\prod_{x \\in \\setX}\n          \\frac{\\G{\\alpha_x + \\mm{x}}}{\\G{\\alpha_x}}\n             \\label{eq:seq-learn-j2}\n\\end{eqnarray}\n}\nwhere $\\setM$ is the symbol histogram of the entire sequence,\ni.e.~$\\mm{x} = \\sum_{n=1}^N \\one{x_n = x}$,\nand $\\G{\\cdot}$ denotes the Gamma function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\medskip\n\n\nWe can consider the equivalent scenario for a multiset\nby throwing away the ordering produced by the above process.\n\nAs was shown in section~\\ref{sec:perm},\na sequence with histogram $\\setM$ has\nexactly $\\MM! \\mul \\left( \\prod_{x\\in\\setX} \\mm{x}! \\right)^{-1}$\npermutations.\n\nNoting that $\\MM = N$,\nthe distribution~\\eqref{eq:seq-learn-j2} over sequences\ncan be converted to a distribution over multisets\nby dividing out the permutation information:\n\n\n\n\n\n\n\n", "index": 25, "text": "\\begin{equation}\\label{eq:ms-learn}\n    \\p{\\setM \\| N, \\v{\\alpha} }\n  = \\frac{N!\\ \\G{A}}{\\G{A+N}}\n    \\prod_{x \\in \\setX} \\frac{\\G{\\mm{x}+\\alpha_x}}{\\mm{x}! \\  \\G{\\alpha_x}}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E13.m1\" class=\"ltx_Math\" alttext=\"\\p{\\setM\\|N,\\v{\\alpha}}=\\frac{N!\\ \\G{A}}{\\G{A+N}}\\prod_{x\\in\\setX}\\frac{\\G{\\mm%&#10;{x}+\\alpha_{x}}}{\\mm{x}!\\ \\G{\\alpha_{x}}}\" display=\"block\"><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\p</mtext></merror><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setM</mtext></merror><mo>\u2225</mo><mi>N</mi><mo>,</mo><mtext mathvariant=\"italic\">\u03b1\u030c</mtext><mo>=</mo><mfrac><mrow><mrow><mi>N</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\G</mtext></merror><mo>\u2062</mo><mi>A</mi></mrow><mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\G</mtext></merror><mo>\u2062</mo><mi>A</mi></mrow><mo>+</mo><mi>N</mi></mrow></mfrac><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>x</mi><mo>\u2208</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\setX</mtext></merror></mrow></munder><mfrac><mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\G</mtext></merror><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mi>x</mi></mrow><mo>+</mo><msub><mi>\u03b1</mi><mi>x</mi></msub></mrow><mrow><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\mm</mtext></merror><mo>\u2062</mo><mrow><mi>x</mi><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mo>\u2062</mo><merror class=\"ltx_ERROR undefined undefined\"><mtext>\\G</mtext></merror><mo>\u2062</mo><msub><mi>\u03b1</mi><mi>x</mi></msub></mrow></mfrac></mrow></math>", "type": "latex"}]