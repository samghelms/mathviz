[{"file": "1601.05205.tex", "nexttext": "\nwhere $\\mathbf{H}$ is a parity check matrix.\nThis minimization problem is equivalent to the problem of low-rank matrix recovery (LRMR) \\cite{candes2009,gross2011recovering}, which is the matrix-analogue to compressed sensing \\cite{candes2006,donoho2006}. \nThis problem aims to recover an unknown matrix $\\mathbf{E} \\in {\\mathbb{C}}^{n \\times n}$ of low rank, and can be solved by finding a solution for the under-determined linear system of equations $\\mathbf{He} = \\mathbf{s}$, where $\\mathbf{H}\\in {\\mathbb{C}}^{m \\times n^2}$ is the sensing matrix, $\\mathbf{e} \\in {\\mathbb{C}}^{{n^2}\\times 1}$ is the vector representation of the matrix $\\mathbf{E}$, and $\\mathbf{s}\\in {\\mathbb{C}}^{m \\times 1}$ is the measurement when applying the sensing matrix $\\mathbf{H}$ to $\\mathbf{E}$ ($m<n^2$).\nApplications of LRMR can be found e.g., in the fields of image processing or collaborative filtering. \nSince decoding of rank metric codes and LRMR is the same mathematical problem (cf. Equation~(\\ref{EqMinimization})), the application of Gabidulin codes in characteristic zero might be promising to the LRMR problem.\nIf we replace the rank metric by the Hamming metric, Equation~(\\ref{EqMinimization}) describes both a Hamming-metric decoder and the compressed sensing problem.\nAn exchange of concepts between these two areas was successfully investigated in the recent years \\cite{zorlein2015}.\nAnother important application of Gabidulin codes in characteristic zero is space-time coding.\n\nCommonly, Gabidulin codes are defined over finite fields as evaluation codes of linearized polynomials and can be considered as rank metric equivalents of Reed-Solomon codes. \nIn \\cite{mohamed2015deterministic}, Reed-Solomon codes over the complex field were investigated for applications in compressed sensing.\nLRMR and space-time codes indicate that there is a need for Gabidulin codes defined over fields of characteristic zero, possibly dense in $\\mathbb{C}$.\nIn \\cite{augot2013rank} and \\cite{robert2015phd}, Gabidulin codes in characteristic zero were introduced.\nIn contrast to the finite field case, ${\\theta}$-polynomials are used instead of linearized polynomials. \nA Welch-Berlekamp-like decoding algorithm \\cite{loidreau2006} was transformed from the finite field case to the characteristic zero case, which allows decoding in cubic time. \nIn this work, we consider an alternative method for decoding characteristic zero Gabidulin codes.\n\nThe rest of the paper is structured as follows:\nSection~\\ref{sec:Gabidulin} outlines Gabidulin codes and related concepts in characteristic zero.\nIn Section~\\ref{sec:Decoding} we propose a new decoding approach.\nWe explain how the decoding problem can be solved by using shift register synthesis to find solutions of a Gao-like key equation.\nWe also discuss issues of coefficient growth and numerical problems which emerge when using infinite fields.\nFinally, Section~\\ref{sec:Conclusion} concludes the paper.\n\n\n\n\\section{Gabidulin Codes Over Infinite Fields}\n\\label{sec:Gabidulin}\n\nThis section first summarizes properties of ${\\theta}$-polynomials, which are used to define Gabidulin codes in characteristic zero. \nThen we recall different definitions of rank metric and the definition of Gabidulin codes.\n\n\\subsection{${\\theta}$-polynomials}\n\nGabidulin codes over finite fields are usually defined using \\emph{linearized polynomials} \\cite{ore1933special}.\n${\\theta}$-polynomials can be seen as a natural generalization of linearized polynomials for arbitrary fields.\nLet $K \\subseteq L$ be fields and $L/K$ be a Galois extension.\nThe \\emph{Galois group} of $L/K$ is given by\n\n", "itemtype": "equation", "pos": 2224, "prevtext": "\n\\title{An Alternative Decoding Method for Gabidulin Codes in Characteristic Zero}\n\n\\author{\\IEEEauthorblockN{Sven M\u00c3\u00bcelich\\IEEEauthorrefmark{1},\nSven Puchinger\\IEEEauthorrefmark{1},\nDavid M\u00c3\u00b6dinger\\IEEEauthorrefmark{2},\nMartin Bossert\\IEEEauthorrefmark{1}}\n\\IEEEauthorblockA{\\IEEEauthorrefmark{1}\n              Ulm University, \n              Institute of Communications Engineering, \n              89081 Ulm, Germany\\\\\n              Email: \\{sven.mueelich, sven.puchinger, martin.bossert\\}@uni-ulm.de}\n\\IEEEauthorblockA{\\IEEEauthorrefmark{2}\n              Ulm University, \n              Institute of Distributed Systems, \n              89081 Ulm, Germany\\\\\n              Email: david.moedinger@uni-ulm.de}\n}\n\n\n\n\\maketitle\n\n\n\\begin{abstract}\nGabidulin codes, originally defined over finite fields, are an important class of rank metric codes with various applications.\nRecently, their definition was generalized to certain fields of characteristic zero and a Welch--Berlekamp like algorithm with complexity $O(n^3)$ was given.\nWe propose a new application of Gabidulin codes over infinite fields: low-rank matrix recovery.\nAlso, an alternative decoding approach is presented based on a Gao type key equation, reducing the complexity to at least $O(n^2)$.\nThis method immediately connects the decoding problem to well-studied problems, which have been investigated in terms of coefficient growth and numerical stability. {\\let\\thefootnote\\relax\\footnote{{This work has been supported by DFG, Germany, under grant BO 867/32-1.}}}\n\\end{abstract}\n\n\n\n\\section{Motivation}\nFinding a matrix of minimal rank is a problem which occurs in different scenarios. For example in random linear network coding~\\cite{koetter2008}, an error can be described by a matrix of minimal rank. \nTherefore, codes whose metric is based on the rank of matrices can be beneficial. \nThe most prominent example of rank metric codes are Gabidulin codes, introduced by Delsarte \\cite{delsarte1978bilinear}, Gabidulin \\cite{gabidulin1985theory}, and Roth \\cite{roth1991maximum}.\nGiven a received word $\\mathbf{R} = \\mathbf{C} + \\mathbf{E}$, the calculation of the error matrix $\\mathbf{E}$ of minimum rank can be described by the weight-minimization problem\n\n", "index": 1, "text": "\\begin{align}\n \\min  {\\mathrm{rank}}(\\mathbf{E'}) ~\\text{subject to } \\mathbf{HE'} = \\mathbf{HE},\n \\label{EqMinimization}\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\min{\\mathrm{rank}}(\\mathbf{E^{\\prime}})~{}\\text{subject to }%&#10;\\mathbf{HE^{\\prime}}=\\mathbf{HE},\" display=\"inline\"><mrow><mrow><mrow><mrow><mi>min</mi><mo>\u2061</mo><mi>rank</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc04</mi><mo>\u2032</mo></msup><mo rspace=\"5.8pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mtext>subject to\u00a0</mtext><mo>\u2062</mo><msup><mi>\ud835\udc07\ud835\udc04</mi><mo>\u2032</mo></msup></mrow><mo>=</mo><mi>\ud835\udc07\ud835\udc04</mi></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\n\\begin{lemma}{\\cite{ore1933theory}}\\label{lem:theta_poly_ring}\nLet ${\\theta} \\in \\mathrm{Gal}\\left({{L}/{K}}\\right)$. The set\n\n", "itemtype": "equation", "pos": 5973, "prevtext": "\nwhere $\\mathbf{H}$ is a parity check matrix.\nThis minimization problem is equivalent to the problem of low-rank matrix recovery (LRMR) \\cite{candes2009,gross2011recovering}, which is the matrix-analogue to compressed sensing \\cite{candes2006,donoho2006}. \nThis problem aims to recover an unknown matrix $\\mathbf{E} \\in {\\mathbb{C}}^{n \\times n}$ of low rank, and can be solved by finding a solution for the under-determined linear system of equations $\\mathbf{He} = \\mathbf{s}$, where $\\mathbf{H}\\in {\\mathbb{C}}^{m \\times n^2}$ is the sensing matrix, $\\mathbf{e} \\in {\\mathbb{C}}^{{n^2}\\times 1}$ is the vector representation of the matrix $\\mathbf{E}$, and $\\mathbf{s}\\in {\\mathbb{C}}^{m \\times 1}$ is the measurement when applying the sensing matrix $\\mathbf{H}$ to $\\mathbf{E}$ ($m<n^2$).\nApplications of LRMR can be found e.g., in the fields of image processing or collaborative filtering. \nSince decoding of rank metric codes and LRMR is the same mathematical problem (cf. Equation~(\\ref{EqMinimization})), the application of Gabidulin codes in characteristic zero might be promising to the LRMR problem.\nIf we replace the rank metric by the Hamming metric, Equation~(\\ref{EqMinimization}) describes both a Hamming-metric decoder and the compressed sensing problem.\nAn exchange of concepts between these two areas was successfully investigated in the recent years \\cite{zorlein2015}.\nAnother important application of Gabidulin codes in characteristic zero is space-time coding.\n\nCommonly, Gabidulin codes are defined over finite fields as evaluation codes of linearized polynomials and can be considered as rank metric equivalents of Reed-Solomon codes. \nIn \\cite{mohamed2015deterministic}, Reed-Solomon codes over the complex field were investigated for applications in compressed sensing.\nLRMR and space-time codes indicate that there is a need for Gabidulin codes defined over fields of characteristic zero, possibly dense in $\\mathbb{C}$.\nIn \\cite{augot2013rank} and \\cite{robert2015phd}, Gabidulin codes in characteristic zero were introduced.\nIn contrast to the finite field case, ${\\theta}$-polynomials are used instead of linearized polynomials. \nA Welch-Berlekamp-like decoding algorithm \\cite{loidreau2006} was transformed from the finite field case to the characteristic zero case, which allows decoding in cubic time. \nIn this work, we consider an alternative method for decoding characteristic zero Gabidulin codes.\n\nThe rest of the paper is structured as follows:\nSection~\\ref{sec:Gabidulin} outlines Gabidulin codes and related concepts in characteristic zero.\nIn Section~\\ref{sec:Decoding} we propose a new decoding approach.\nWe explain how the decoding problem can be solved by using shift register synthesis to find solutions of a Gao-like key equation.\nWe also discuss issues of coefficient growth and numerical problems which emerge when using infinite fields.\nFinally, Section~\\ref{sec:Conclusion} concludes the paper.\n\n\n\n\\section{Gabidulin Codes Over Infinite Fields}\n\\label{sec:Gabidulin}\n\nThis section first summarizes properties of ${\\theta}$-polynomials, which are used to define Gabidulin codes in characteristic zero. \nThen we recall different definitions of rank metric and the definition of Gabidulin codes.\n\n\\subsection{${\\theta}$-polynomials}\n\nGabidulin codes over finite fields are usually defined using \\emph{linearized polynomials} \\cite{ore1933special}.\n${\\theta}$-polynomials can be seen as a natural generalization of linearized polynomials for arbitrary fields.\nLet $K \\subseteq L$ be fields and $L/K$ be a Galois extension.\nThe \\emph{Galois group} of $L/K$ is given by\n\n", "index": 3, "text": "\\begin{align*}\n\\mathrm{Gal}\\left({{L}/{K}}\\right) = \\left\\{ {\\theta} : {L} \\to {L} \\;\\text{automorphism} : {\\theta}(k) = k \\; \\forall k \\in {K} \\right\\}.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\mathrm{Gal}\\left({{L}/{K}}\\right)=\\left\\{{\\theta}:{L}\\to{L}\\;%&#10;\\text{automorphism}:{\\theta}(k)=k\\;\\forall k\\in{K}\\right\\}.\" display=\"inline\"><mrow><mrow><mrow><mi>Gal</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><mi>L</mi><mo>/</mo><mi>K</mi></mrow><mo>)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mi>\u03b8</mi><mo>:</mo><mrow><mrow><mi>L</mi><mo>\u2192</mo><mrow><mpadded width=\"+2.8pt\"><mi>L</mi></mpadded><mo>\u2062</mo><mtext>automorphism</mtext></mrow></mrow><mo>:</mo><mrow><mrow><mi>\u03b8</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mpadded width=\"+2.8pt\"><mi>k</mi></mpadded><mo>\u2062</mo><mrow><mo>\u2200</mo><mi>k</mi></mrow></mrow><mo>\u2208</mo><mi>K</mi></mrow></mrow><mo>}</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nwith ordinary addition and multiplication rule\n\n", "itemtype": "equation", "pos": 6267, "prevtext": "\n\n\\begin{lemma}{\\cite{ore1933theory}}\\label{lem:theta_poly_ring}\nLet ${\\theta} \\in \\mathrm{Gal}\\left({{L}/{K}}\\right)$. The set\n\n", "index": 5, "text": "\\begin{align*}\n{{L}[x;\\theta]} = \\left\\{a = {\\textstyle\\sum\\nolimits}_{i=0}^{d_a} a_i x^i : a_i \\in {L}, \\, d_a \\in {\\mathbb{N}}, \\, a_{d_a} \\neq 0 \\right\\}\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{{L}[x;\\theta]}=\\left\\{a={\\textstyle\\sum\\nolimits}_{i=0}^{d_{a}}a%&#10;_{i}x^{i}:a_{i}\\in{L},\\,d_{a}\\in{\\mathbb{N}},\\,a_{d_{a}}\\neq 0\\right\\}\" display=\"inline\"><mrow><mrow><mi>L</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>;</mo><mi>\u03b8</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mrow><mi>a</mi><mo>=</mo><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msub><mi>d</mi><mi>a</mi></msub></msubsup><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>\u2062</mo><msup><mi>x</mi><mi>i</mi></msup></mrow></mrow></mrow><mo>:</mo><mrow><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>\u2208</mo><mi>L</mi></mrow><mo rspace=\"4.2pt\">,</mo><mrow><mrow><msub><mi>d</mi><mi>a</mi></msub><mo>\u2208</mo><mi>\u2115</mi></mrow><mo rspace=\"4.2pt\">,</mo><mrow><msub><mi>a</mi><msub><mi>d</mi><mi>a</mi></msub></msub><mo>\u2260</mo><mn>0</mn></mrow></mrow></mrow><mo>}</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nextended to polynomials inductively, is a ring.\n\\end{lemma}\nWe call the polynomial ring of {\\Fref{{lem:theta_poly_ring}}} a ${\\theta}$-polynomial ring.\nThe degree of $a \\in {{L}[x;\\theta]}$ is given by $\\deg a = d_a$ and\n$a$ is called \\emph{monic} if $a_{d_a} = 1$.\n\n\\begin{remark}\nWe state the following properties of ${{L}[x;\\theta]}$.\n\\begin{itemize}\n\\item $({{L}[x;\\theta]},+,\\cdot)$ is non-commutative in general.\n\\item ${\\theta}$-polynomials are a special case of skew polynomials~\\cite{ore1933theory} with derivation $\\delta=0$.\n\\item For ${K}={\\mathbb{F}_q}$, ${L}={\\mathbb{F}_{q^{m}}}$ and the Frobenius automorphism ${\\theta} = \\cdot^q$, ${{L}[x;\\theta]}$ is isomorphic to \na linearized polynomial ring. Note that $\\cdot^q \\in \\mathrm{Gal}\\left({{\\mathbb{F}_{q^{m}}}/{\\mathbb{F}_q}}\\right)$.\n\\end{itemize}\n\\end{remark}\n\nIs was already proven in \\cite{ore1933special} that ${{L}[x;\\theta]}$ is a left- and right- Euclidean domain. E.g., the following division lemma is true.\n\\begin{lemma}\\label{lem:division}\\cite{ore1933special}\nFor $a,b \\in {{L}[x;\\theta]}$, $\\exists$~unique ${\\chi},{\\varrho} \\in {{L}[x;\\theta]}$:\n\n", "itemtype": "equation", "pos": 6484, "prevtext": "\nwith ordinary addition and multiplication rule\n\n", "index": 7, "text": "\\begin{align*}\nx \\cdot \\alpha = {\\theta}(\\alpha) \\quad \\forall \\alpha \\in {L},\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle x\\cdot\\alpha={\\theta}(\\alpha)\\quad\\forall\\alpha\\in{L},\" display=\"inline\"><mrow><mrow><mrow><mrow><mi>x</mi><mo>\u22c5</mo><mi>\u03b1</mi></mrow><mo>=</mo><mrow><mi>\u03b8</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b1</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mrow><mrow><mo>\u2200</mo><mi>\u03b1</mi></mrow><mo>\u2208</mo><mi>L</mi></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nwhere $\\deg {\\varrho}  < \\deg b$.\n\\end{lemma}\nRelated to division, we can define the (right) modulo congruence relation for $a,b,c \\in {{L}[x;\\theta]}$:\n\n", "itemtype": "equation", "pos": 7703, "prevtext": "\nextended to polynomials inductively, is a ring.\n\\end{lemma}\nWe call the polynomial ring of {\\Fref{{lem:theta_poly_ring}}} a ${\\theta}$-polynomial ring.\nThe degree of $a \\in {{L}[x;\\theta]}$ is given by $\\deg a = d_a$ and\n$a$ is called \\emph{monic} if $a_{d_a} = 1$.\n\n\\begin{remark}\nWe state the following properties of ${{L}[x;\\theta]}$.\n\\begin{itemize}\n\\item $({{L}[x;\\theta]},+,\\cdot)$ is non-commutative in general.\n\\item ${\\theta}$-polynomials are a special case of skew polynomials~\\cite{ore1933theory} with derivation $\\delta=0$.\n\\item For ${K}={\\mathbb{F}_q}$, ${L}={\\mathbb{F}_{q^{m}}}$ and the Frobenius automorphism ${\\theta} = \\cdot^q$, ${{L}[x;\\theta]}$ is isomorphic to \na linearized polynomial ring. Note that $\\cdot^q \\in \\mathrm{Gal}\\left({{\\mathbb{F}_{q^{m}}}/{\\mathbb{F}_q}}\\right)$.\n\\end{itemize}\n\\end{remark}\n\nIs was already proven in \\cite{ore1933special} that ${{L}[x;\\theta]}$ is a left- and right- Euclidean domain. E.g., the following division lemma is true.\n\\begin{lemma}\\label{lem:division}\\cite{ore1933special}\nFor $a,b \\in {{L}[x;\\theta]}$, $\\exists$~unique ${\\chi},{\\varrho} \\in {{L}[x;\\theta]}$:\n\n", "index": 9, "text": "\\begin{align*}\na &= {\\chi} \\cdot b + {\\varrho}, \\quad \\text{(right division)}\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle a\" display=\"inline\"><mi>a</mi></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\chi}\\cdot b+{\\varrho},\\quad\\text{(right division)}\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mrow><mrow><mi>\u03c7</mi><mo>\u22c5</mo><mi>b</mi></mrow><mo>+</mo><mi>\u03f1</mi></mrow><mo rspace=\"12.5pt\">,</mo><mtext>(right division)</mtext></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\n\nWe can define an evaluation map\\footnote{There are several definitions of evaluation maps for $\\theta$-polynomials, cf.~\\cite{boucher2014linear} for the general skew polynomial case.} on ${{L}[x;\\theta]}$ as\n\n", "itemtype": "equation", "pos": 7947, "prevtext": "\nwhere $\\deg {\\varrho}  < \\deg b$.\n\\end{lemma}\nRelated to division, we can define the (right) modulo congruence relation for $a,b,c \\in {{L}[x;\\theta]}$:\n\n", "index": 11, "text": "\\begin{align*}\na \\equiv b \\mod c \\quad :\\Leftrightarrow \\quad \\exists d \\in {{L}[x;\\theta]} : a = b + d \\cdot c.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle a\\equiv b\\mod c\\quad:\\Leftrightarrow\\quad\\exists d\\in{{L}[x;%&#10;\\theta]}:a=b+d\\cdot c.\" display=\"inline\"><mrow><mi>a</mi><mo>\u2261</mo><mi>b</mi><mo lspace=\"2.5pt\" rspace=\"2.5pt\">mod</mo><mi>c</mi><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mo>:</mo><mo>\u21d4</mo><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mo>\u2203</mo><mi>d</mi><mo>\u2208</mo><mi>L</mi><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>;</mo><mi>\u03b8</mi><mo stretchy=\"false\">]</mo></mrow><mo>:</mo><mi>a</mi><mo>=</mo><mi>b</mi><mo>+</mo><mi>d</mi><mo>\u22c5</mo><mi>c</mi><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nwhere ${\\theta}^i(\\cdot) = \\underset{i \\text{ times}}{\\underbrace{{\\theta}({\\theta}(\\dots{\\theta}(}}\\cdot)\\dots))$.\nFrom $\\theta \\in \\mathrm{Gal}\\left({{L}/{K}}\\right)$ it follows that ${\\theta} : L \\to L$ is a ${K}$-linear map.\nThus, also ${\\mathrm{ev}}_a$ is a linear map and the root space of a ${\\theta}$-polynomial $a$,\n\n", "itemtype": "equation", "pos": 8283, "prevtext": "\n\n\nWe can define an evaluation map\\footnote{There are several definitions of evaluation maps for $\\theta$-polynomials, cf.~\\cite{boucher2014linear} for the general skew polynomial case.} on ${{L}[x;\\theta]}$ as\n\n", "index": 13, "text": "\\begin{align}\n\\label{eqn:ev}\n{\\mathrm{ev}}_a = a(\\cdot) : {L} \\to {L}, \\quad \\alpha \\mapsto {\\textstyle\\sum\\nolimits}_{i=0}^{d_a} a_i {\\theta}^i(\\alpha),\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\mathrm{ev}}_{a}=a(\\cdot):{L}\\to{L},\\quad\\alpha\\mapsto{%&#10;\\textstyle\\sum\\nolimits}_{i=0}^{d_{a}}a_{i}{\\theta}^{i}(\\alpha),\" display=\"inline\"><mrow><mrow><mrow><msub><mi>ev</mi><mi>a</mi></msub><mo>=</mo><mrow><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mo>\u22c5</mo><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>:</mo><mrow><mrow><mi>L</mi><mo>\u2192</mo><mi>L</mi></mrow><mo rspace=\"12.5pt\">,</mo><mrow><mi>\u03b1</mi><mo>\u21a6</mo><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msub><mi>d</mi><mi>a</mi></msub></msubsup><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>\u2062</mo><msup><mi>\u03b8</mi><mi>i</mi></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b1</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nis a linear subspace of ${L}$.\nNote that since ${\\theta}$ is a linear map, it has well-defined eigenvalues which are the roots of its characteristic polynomial\n\n", "itemtype": "equation", "pos": 8774, "prevtext": "\nwhere ${\\theta}^i(\\cdot) = \\underset{i \\text{ times}}{\\underbrace{{\\theta}({\\theta}(\\dots{\\theta}(}}\\cdot)\\dots))$.\nFrom $\\theta \\in \\mathrm{Gal}\\left({{L}/{K}}\\right)$ it follows that ${\\theta} : L \\to L$ is a ${K}$-linear map.\nThus, also ${\\mathrm{ev}}_a$ is a linear map and the root space of a ${\\theta}$-polynomial $a$,\n\n", "index": 15, "text": "\\begin{align*}\n\\ker(a) = \\{\\alpha \\in {L} : a(\\alpha)=0 \\},\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ker(a)=\\{\\alpha\\in{L}:a(\\alpha)=0\\},\" display=\"inline\"><mrow><mrow><mrow><mi>ker</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mi>\u03b1</mi><mo>\u2208</mo><mi>L</mi></mrow><mo>:</mo><mrow><mrow><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b1</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo stretchy=\"false\">}</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nThe eigenvalues and characteristic polynomial are the same as of any matrix representation of ${\\theta}$ in a basis of ${L}$ over ${K}$.\nWe say that a characteristic polynomial is square-free if all its roots have multiplicity one.\nIf ${\\mathrm{char}}_{\\theta}$ is square-free, ${\\theta}$ has distinct eigenvalues and any of its matrix representations is diagonalizable.\nUsing these properties, we can state the following theorem.\n\n\\begin{lemma}{\\cite[Theorem 6]{robert2015phd}}\\label{lem:dimker_deg_bound}\nIf ${\\mathrm{char}}_{\\theta}$ is square-free, then\n\n", "itemtype": "equation", "pos": 9007, "prevtext": "\nis a linear subspace of ${L}$.\nNote that since ${\\theta}$ is a linear map, it has well-defined eigenvalues which are the roots of its characteristic polynomial\n\n", "index": 17, "text": "\\begin{align*}\n{\\mathrm{char}}_{\\theta}(x) = \\det(x \\cdot {\\mathrm{id}}_{L} - {\\theta}).\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\mathrm{char}}_{\\theta}(x)=\\det(x\\cdot{\\mathrm{id}}_{L}-{\\theta}).\" display=\"inline\"><mrow><mrow><mrow><msub><mi>char</mi><mi>\u03b8</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo movablelimits=\"false\">det</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>x</mi><mo>\u22c5</mo><msub><mi>id</mi><mi>L</mi></msub></mrow><mo>-</mo><mi>\u03b8</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{lemma}\n\n\\begin{proof}\nThe proof can be found in {\\cite[Theorem~6]{robert2015phd}}.\nIt uses matrix representations of ${\\theta}$ and the fact that it is diagonalizable due to ${\\mathrm{char}}_{\\theta}$ being square-free.\n\\end{proof}\n\n\n\\begin{theorem}\\label{thm:existence_annihilator}\nLet ${\\mathcal{U}} \\subseteq {L}$ be an $s$-dimensional ${K}$-subspace. If ${\\mathrm{char}}_{\\theta}$ is square-free and ${\\theta}(\\cdot)$ can be calculated in $O(1)$, there exists a unique monic  ${\\theta}$-polynomial ${\\mathcal{A}_{{{\\mathcal{U}}}}}$ with\n\n", "itemtype": "equation", "pos": 9667, "prevtext": "\nThe eigenvalues and characteristic polynomial are the same as of any matrix representation of ${\\theta}$ in a basis of ${L}$ over ${K}$.\nWe say that a characteristic polynomial is square-free if all its roots have multiplicity one.\nIf ${\\mathrm{char}}_{\\theta}$ is square-free, ${\\theta}$ has distinct eigenvalues and any of its matrix representations is diagonalizable.\nUsing these properties, we can state the following theorem.\n\n\\begin{lemma}{\\cite[Theorem 6]{robert2015phd}}\\label{lem:dimker_deg_bound}\nIf ${\\mathrm{char}}_{\\theta}$ is square-free, then\n\n", "index": 19, "text": "\\begin{align*}\n\\dim_{K}(\\ker(a)) \\leq \\deg(a) \\quad \\forall a \\in {{L}[x;\\theta]} \\setminus \\{0\\}\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\dim_{K}(\\ker(a))\\leq\\deg(a)\\quad\\forall a\\in{{L}[x;\\theta]}%&#10;\\setminus\\{0\\}\" display=\"inline\"><mrow><mrow><mrow><msub><mo>dim</mo><mi>K</mi></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>ker</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2264</mo><mrow><mi>deg</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mrow><mrow><mo>\u2200</mo><mi>a</mi></mrow><mo>\u2208</mo><mrow><mrow><mi>L</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>;</mo><mi>\u03b8</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>\u2216</mo><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n${\\mathcal{A}_{{{\\mathcal{U}}}}}$ is called \\emph{annihilator polynomial} of ${\\mathcal{U}}$ and can be computed in ${O({s^2})}$ operations in ${L}$.\n\\end{theorem}\n\n\\begin{proof}\nThe existence statement can be shown as in {\\cite[Theorem~8]{robert2015phd}} by proving the correctness of {\\Fref{{alg:annihilator}}}. \nThe complexity follows from the fact that Line~\\ref{line:ann_2} is executed $s$ times and each loop requires\n\\begin{itemize}\n\\item one evaluation $A_{i-1}(u_i)$, costing ${O({s})}$ operations in ${L}$ by naively applying the evaluation formula~\\ref{eqn:ev}\n\\item one computation of $\\theta(A_{i-1}(u_i))$ $\\Rightarrow$ ${O({1})}$ and\n\\item one addition in ${{L}[x;\\theta]}$ $\\Rightarrow$ ${O({s})}$,\n\\end{itemize}\nand thus has complexity ${O({s})}$ in ${L}$.\n\\end{proof}\n\n\\vspace{-1em}\n{[1]}{\n\n\\DontPrintSemicolon\n\\KwIn{${K}$-basis $(u_1,\\dots,u_s)$ of ${\\mathcal{U}} \\subseteq {L}$.}\n\\KwOut{${\\mathcal{A}_{{{\\mathcal{U}}}}}$ as in {\\Fref{{thm:existence_annihilator}}}.}\n${\\mathcal{A}}_0 \\gets 1$ \\; \\label{line:ann_1}\n\\For{$i=1,\\dots,s$}{\n${\\mathcal{A}}_i \\gets (x-\\frac{\\theta(A_{i-1}(u_i))}{A_{i-1}(u_i)}) \\cdot A_{i-1}$ \\hfill \\tcp{${O({s})}$}  \\label{line:ann_2}\n}\n\\Return{${\\mathcal{A}}_s$}  \\label{line:ann_4}\n\\caption{Annihilator Polynomial}\n\\label{alg:annihilator}\n}\n\n\\begin{corollary}\\label{cor:MSP_properties}\nFor ${\\mathcal{A}_{{{\\mathcal{U}}}}}$ as in {\\Fref{{thm:existence_annihilator}}} it holds that $\\deg {\\mathcal{A}_{{{\\mathcal{U}}}}}  = \\dim {\\mathcal{U}}$ and ${\\mathcal{U}} = \\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})$.\n\\end{corollary}\n\n\\begin{proof}\nThe polynomial constructed in {\\Fref{{alg:annihilator}}} is the unique monic annihilator polynomial of ${\\mathcal{U}}$ and has the first property because $\\deg A_i = \\deg A_{i-1}+1$ $\\forall i$, $\\deg A_0 = 0$ and thus $\\deg {\\mathcal{A}_{{{\\mathcal{U}}}}} = \\deg {\\mathcal{A}}_s = s = \\dim {\\mathcal{U}}$.\nDue to {\\Fref{{lem:dimker_deg_bound}}}, $\\dim(\\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})) \\leq \\deg {\\mathcal{A}_{{{\\mathcal{U}}}}} = \\dim {\\mathcal{U}}$ and together with ${\\mathcal{U}} \\subseteq \\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})$, it follows that ${\\mathcal{U}} =\\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})$.\n\\end{proof}\n\n\\begin{theorem}[{\\cite[Theorem~8]{robert2015phd}}]\\label{thm:interpolation}\nLet $g_{1},\\dots, g_{n} \\in {L}$, linearly independent over ${K}$, and ${\\ensuremath{\\mathbf{{r}}}} = (r_{1},\\dots,r_{n}) \\in {L}^{n}$. Then there is a unique monic ${\\theta}$-polynomial ${\\hat{r}}$ of degree $n-1$ such that\n\n", "itemtype": "equation", "pos": 10324, "prevtext": "\n\\end{lemma}\n\n\\begin{proof}\nThe proof can be found in {\\cite[Theorem~6]{robert2015phd}}.\nIt uses matrix representations of ${\\theta}$ and the fact that it is diagonalizable due to ${\\mathrm{char}}_{\\theta}$ being square-free.\n\\end{proof}\n\n\n\\begin{theorem}\\label{thm:existence_annihilator}\nLet ${\\mathcal{U}} \\subseteq {L}$ be an $s$-dimensional ${K}$-subspace. If ${\\mathrm{char}}_{\\theta}$ is square-free and ${\\theta}(\\cdot)$ can be calculated in $O(1)$, there exists a unique monic  ${\\theta}$-polynomial ${\\mathcal{A}_{{{\\mathcal{U}}}}}$ with\n\n", "index": 21, "text": "\\begin{align*}\n{\\mathcal{U}} \\subseteq \\ker({\\mathcal{A}_{{{\\mathcal{U}}}}}).\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\mathcal{U}}\\subseteq\\ker({\\mathcal{A}_{{{\\mathcal{U}}}}}).\" display=\"inline\"><mrow><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi><mo>\u2286</mo><mrow><mi>ker</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{theorem}\n\n\\begin{proof}\nCf.~\\cite[Theorem~8]{robert2015phd}.\n\\end{proof}\n\n\n\\subsection{Rank Metric in Characteristic Zero}\n\nLet ${K} \\subseteq {L}$ be fields and ${L}/{K}$ be a Galois extension of degree $m$. The number of linearly independent columns over ${K}$ is denoted by ${\\mathrm{rank}}_{K}$. We define the matrices\n\\arraycolsep=0pt\n\n\n", "itemtype": "equation", "pos": 12924, "prevtext": "\n${\\mathcal{A}_{{{\\mathcal{U}}}}}$ is called \\emph{annihilator polynomial} of ${\\mathcal{U}}$ and can be computed in ${O({s^2})}$ operations in ${L}$.\n\\end{theorem}\n\n\\begin{proof}\nThe existence statement can be shown as in {\\cite[Theorem~8]{robert2015phd}} by proving the correctness of {\\Fref{{alg:annihilator}}}. \nThe complexity follows from the fact that Line~\\ref{line:ann_2} is executed $s$ times and each loop requires\n\\begin{itemize}\n\\item one evaluation $A_{i-1}(u_i)$, costing ${O({s})}$ operations in ${L}$ by naively applying the evaluation formula~\\ref{eqn:ev}\n\\item one computation of $\\theta(A_{i-1}(u_i))$ $\\Rightarrow$ ${O({1})}$ and\n\\item one addition in ${{L}[x;\\theta]}$ $\\Rightarrow$ ${O({s})}$,\n\\end{itemize}\nand thus has complexity ${O({s})}$ in ${L}$.\n\\end{proof}\n\n\\vspace{-1em}\n{[1]}{\n\n\\DontPrintSemicolon\n\\KwIn{${K}$-basis $(u_1,\\dots,u_s)$ of ${\\mathcal{U}} \\subseteq {L}$.}\n\\KwOut{${\\mathcal{A}_{{{\\mathcal{U}}}}}$ as in {\\Fref{{thm:existence_annihilator}}}.}\n${\\mathcal{A}}_0 \\gets 1$ \\; \\label{line:ann_1}\n\\For{$i=1,\\dots,s$}{\n${\\mathcal{A}}_i \\gets (x-\\frac{\\theta(A_{i-1}(u_i))}{A_{i-1}(u_i)}) \\cdot A_{i-1}$ \\hfill \\tcp{${O({s})}$}  \\label{line:ann_2}\n}\n\\Return{${\\mathcal{A}}_s$}  \\label{line:ann_4}\n\\caption{Annihilator Polynomial}\n\\label{alg:annihilator}\n}\n\n\\begin{corollary}\\label{cor:MSP_properties}\nFor ${\\mathcal{A}_{{{\\mathcal{U}}}}}$ as in {\\Fref{{thm:existence_annihilator}}} it holds that $\\deg {\\mathcal{A}_{{{\\mathcal{U}}}}}  = \\dim {\\mathcal{U}}$ and ${\\mathcal{U}} = \\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})$.\n\\end{corollary}\n\n\\begin{proof}\nThe polynomial constructed in {\\Fref{{alg:annihilator}}} is the unique monic annihilator polynomial of ${\\mathcal{U}}$ and has the first property because $\\deg A_i = \\deg A_{i-1}+1$ $\\forall i$, $\\deg A_0 = 0$ and thus $\\deg {\\mathcal{A}_{{{\\mathcal{U}}}}} = \\deg {\\mathcal{A}}_s = s = \\dim {\\mathcal{U}}$.\nDue to {\\Fref{{lem:dimker_deg_bound}}}, $\\dim(\\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})) \\leq \\deg {\\mathcal{A}_{{{\\mathcal{U}}}}} = \\dim {\\mathcal{U}}$ and together with ${\\mathcal{U}} \\subseteq \\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})$, it follows that ${\\mathcal{U}} =\\ker({\\mathcal{A}_{{{\\mathcal{U}}}}})$.\n\\end{proof}\n\n\\begin{theorem}[{\\cite[Theorem~8]{robert2015phd}}]\\label{thm:interpolation}\nLet $g_{1},\\dots, g_{n} \\in {L}$, linearly independent over ${K}$, and ${\\ensuremath{\\mathbf{{r}}}} = (r_{1},\\dots,r_{n}) \\in {L}^{n}$. Then there is a unique monic ${\\theta}$-polynomial ${\\hat{r}}$ of degree $n-1$ such that\n\n", "index": 23, "text": "\\begin{align*}\n\\hat{r}(g_{i}) = r_{i} \\quad \\forall i=1,\\dots,n.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{r}(g_{i})=r_{i}\\quad\\forall i=1,\\dots,n.\" display=\"inline\"><mrow><mrow><mrow><mrow><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><msub><mi>r</mi><mi>i</mi></msub></mrow><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mrow><mrow><mo>\u2200</mo><mi>i</mi></mrow><mo>=</mo><mrow><mn>1</mn><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mi>n</mi></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\n\nIn \\cite[Section~2.2]{robert2015phd} four definitions of rank weight in characteristic zero are given. \n\\begin{definition}\nLet $\\mathbf{x} \\in {L}^n$. The following are rank weights:\n\n", "itemtype": "equation", "pos": 13348, "prevtext": "\n\\end{theorem}\n\n\\begin{proof}\nCf.~\\cite[Theorem~8]{robert2015phd}.\n\\end{proof}\n\n\n\\subsection{Rank Metric in Characteristic Zero}\n\nLet ${K} \\subseteq {L}$ be fields and ${L}/{K}$ be a Galois extension of degree $m$. The number of linearly independent columns over ${K}$ is denoted by ${\\mathrm{rank}}_{K}$. We define the matrices\n\\arraycolsep=0pt\n\n\n", "index": 25, "text": "\\begin{align*}\n\\mathbf{X_{\\theta}} = \n\\begin{pmatrix}\nx_{1} & \\dots & x_{n} \\\\\n\\vdots & \\ddots & \\vdots \\\\\n\\theta^{s-1}(x_{1}) & \\dots &  \\theta^{s-1}(x_{n})\n\\end{pmatrix}, \\,\n\\mathbf{X_{{\\mathcal{B}}}} = \n\\begin{pmatrix}\nx_{1,1} & \\dots & x_{n,1} \\\\\n\\vdots & \\ddots & \\vdots \\\\\nx_{1,m} & \\dots &  x_{n,m}\n\\end{pmatrix}.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\mathbf{X_{\\theta}}=\\begin{pmatrix}x_{1}&amp;\\dots&amp;x_{n}\\\\&#10;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;\\theta^{s-1}(x_{1})&amp;\\dots&amp;\\theta^{s-1}(x_{n})\\end{pmatrix},\\,\\mathbf{X_{{%&#10;\\mathcal{B}}}}=\\begin{pmatrix}x_{1,1}&amp;\\dots&amp;x_{n,1}\\\\&#10;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;x_{1,m}&amp;\\dots&amp;x_{n,m}\\end{pmatrix}.\" display=\"inline\"><mrow><mrow><mrow><msub><mi>\ud835\udc17</mi><mi>\u03b8</mi></msub><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msub><mi>x</mi><mn>1</mn></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><msub><mi>x</mi><mi>n</mi></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mrow><msup><mi>\u03b8</mi><mrow><mi>s</mi><mo>-</mo><mn>1</mn></mrow></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mrow><msup><mi>\u03b8</mi><mrow><mi>s</mi><mo>-</mo><mn>1</mn></mrow></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo rspace=\"4.2pt\">,</mo><mrow><msub><mi>\ud835\udc17</mi><mi class=\"ltx_font_mathcaligraphic\">\u212c</mi></msub><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msub><mi>x</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><msub><mi>x</mi><mrow><mi>n</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>x</mi><mrow><mn>1</mn><mo>,</mo><mi>m</mi></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><msub><mi>x</mi><mrow><mi>n</mi><mo>,</mo><mi>m</mi></mrow></msub></mtd></mtr></mtable><mo>)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nThe corresponding rank metrics can be defined as \n\n", "itemtype": "equation", "pos": 13867, "prevtext": "\n\n\nIn \\cite[Section~2.2]{robert2015phd} four definitions of rank weight in characteristic zero are given. \n\\begin{definition}\nLet $\\mathbf{x} \\in {L}^n$. The following are rank weights:\n\n", "index": 27, "text": "\\begin{align*}\n\\omega_{{\\mathcal{A}}}(\\mathbf{x}) &= deg({\\mathcal{A}_{{{\\langle {x_1,\\dots,x_n} \\rangle}}}}) \\\\\n\\omega_{\\theta,{L}}(\\mathbf{x}) &= {\\mathrm{rank}}_{L}(\\mathbf{X_{\\theta}})\\\\\n\\omega_{\\theta,{K}}(\\mathbf{x}) &= {\\mathrm{rank}}_{K}(\\mathbf{X_{\\theta}})\\\\\n\\omega_{{\\mathcal{B}}}(\\mathbf{x}) &= {\\mathrm{rank}}_{K}(\\mathbf{X_{{\\mathcal{B}}}})\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\omega_{{\\mathcal{A}}}(\\mathbf{x})\" display=\"inline\"><mrow><msub><mi>\u03c9</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=deg({\\mathcal{A}_{{{\\langle{x_{1},\\dots,x_{n}}\\rangle}}}})\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mi>d</mi><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>g</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">\u27e9</mo></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\omega_{\\theta,{L}}(\\mathbf{x})\" display=\"inline\"><mrow><msub><mi>\u03c9</mi><mrow><mi>\u03b8</mi><mo>,</mo><mi>L</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\mathrm{rank}}_{L}(\\mathbf{X_{\\theta}})\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msub><mi>rank</mi><mi>L</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc17</mi><mi>\u03b8</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\omega_{\\theta,{K}}(\\mathbf{x})\" display=\"inline\"><mrow><msub><mi>\u03c9</mi><mrow><mi>\u03b8</mi><mo>,</mo><mi>K</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\mathrm{rank}}_{K}(\\mathbf{X_{\\theta}})\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msub><mi>rank</mi><mi>K</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc17</mi><mi>\u03b8</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\omega_{{\\mathcal{B}}}(\\mathbf{x})\" display=\"inline\"><mrow><msub><mi>\u03c9</mi><mi class=\"ltx_font_mathcaligraphic\">\u212c</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\mathrm{rank}}_{K}(\\mathbf{X_{{\\mathcal{B}}}})\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msub><mi>rank</mi><mi>K</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc17</mi><mi class=\"ltx_font_mathcaligraphic\">\u212c</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{definition}\n\nIn the finite field case, these rank weights are the same.\nOver characteristic zero, the following relation can be proven.\n\n\\begin{lemma}{\\cite[Lemmata~13, 14, and 15]{robert2015phd}}\\label{thm:rank_weights}\n\n", "itemtype": "equation", "pos": 14285, "prevtext": "\nThe corresponding rank metrics can be defined as \n\n", "index": 29, "text": "\\begin{align*}\n\\mathrm{d}_\\mathrm{R}(\\mathbf{x},\\mathbf{y}) = \\omega_i (\\mathbf{x}-\\mathbf{y}).\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\mathrm{d}_{\\mathrm{R}}(\\mathbf{x},\\mathbf{y})=\\omega_{i}(\\mathbf%&#10;{x}-\\mathbf{y}).\" display=\"inline\"><mrow><mrow><mrow><msub><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">R</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo>,</mo><mi>\ud835\udc32</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mi>\u03c9</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc31</mi><mo>-</mo><mi>\ud835\udc32</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{lemma}\n\n\\subsection{Gabidulin Codes}\n\nGabidulin codes were originally defined by \\cite{gabidulin1985theory,delsarte1978bilinear,roth1991maximum} over finite fields.\nIn \\cite{augot2013rank}, the definition was extended to certain fields of characteristic zero, using ${\\theta}$-polynomials instead of linearized polynomials.\n\n\\begin{definition}\nLet $g_1,\\dots,g_n \\in {L}$ be linearly independent over ${K}$. Then a Gabidulin code with parameters $n$ and $k \\leq n$ is defined as\n\n", "itemtype": "equation", "pos": 14620, "prevtext": "\n\\end{definition}\n\nIn the finite field case, these rank weights are the same.\nOver characteristic zero, the following relation can be proven.\n\n\\begin{lemma}{\\cite[Lemmata~13, 14, and 15]{robert2015phd}}\\label{thm:rank_weights}\n\n", "index": 31, "text": "\\begin{align*}\n\\omega_{{\\mathcal{A}}}(\\mathbf{x}) = \\omega_{\\theta,{L}}(\\mathbf{x}) \\leq \\omega_{\\theta,{K}}(\\mathbf{x}) = \\omega_{{\\mathcal{B}}}(\\mathbf{x}) \n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex17.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\omega_{{\\mathcal{A}}}(\\mathbf{x})=\\omega_{\\theta,{L}}(\\mathbf{x}%&#10;)\\leq\\omega_{\\theta,{K}}(\\mathbf{x})=\\omega_{{\\mathcal{B}}}(\\mathbf{x})\" display=\"inline\"><mrow><mrow><msub><mi>\u03c9</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mi>\u03c9</mi><mrow><mi>\u03b8</mi><mo>,</mo><mi>L</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2264</mo><mrow><msub><mi>\u03c9</mi><mrow><mi>\u03b8</mi><mo>,</mo><mi>K</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mi>\u03c9</mi><mi class=\"ltx_font_mathcaligraphic\">\u212c</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{definition}\n\nAn overview of properties can be found in \\cite{robert2015phd}.\n\n\n\n\\section{A New Decoding Approach}\n\\label{sec:Decoding}\n\nIn the following, let ${L}, {K}$ and ${\\theta} \\in \\mathrm{Gal}\\left({{L}/{K}}\\right)$ be s.t. ${\\mathrm{char}}_{\\theta}$ is square-free.\nAlso, we assume that ${\\theta}(\\cdot)$ can be computed in $O(1)$ operations in ${L}$.\nHaving these assumptions, the latter only being important for complexity statements, we show that the decoding problem is similar to the finite field case.\n\nSuppose that a codeword ${\\ensuremath{\\mathbf{{c}}}} \\in {\\mathcal{C}_\\mathrm{G}}$ is corrupted by an error ${\\ensuremath{\\mathbf{{e}}}} = (e_1,\\dots,e_n) \\in {L}^n$ of rank weight ${\\tau} := {\\mathrm{wt}_\\mathrm{R}}({\\ensuremath{\\mathbf{{e}}}})$. The \\emph{received word} is then given by\n\n", "itemtype": "equation", "pos": 15276, "prevtext": "\n\\end{lemma}\n\n\\subsection{Gabidulin Codes}\n\nGabidulin codes were originally defined by \\cite{gabidulin1985theory,delsarte1978bilinear,roth1991maximum} over finite fields.\nIn \\cite{augot2013rank}, the definition was extended to certain fields of characteristic zero, using ${\\theta}$-polynomials instead of linearized polynomials.\n\n\\begin{definition}\nLet $g_1,\\dots,g_n \\in {L}$ be linearly independent over ${K}$. Then a Gabidulin code with parameters $n$ and $k \\leq n$ is defined as\n\n", "index": 33, "text": "\\begin{align*}\n{\\mathcal{C}_\\mathrm{G}}[n,k] = \\left\\{ (f(g_1), \\dots, f(g_n)) \\, : \\, f \\in {{L}[x;\\theta]} \\, \\land \\, \\deg f < k  \\right\\}.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\mathcal{C}_{\\mathrm{G}}}[n,k]=\\left\\{(f(g_{1}),\\dots,f(g_{n}))%&#10;\\,:\\,f\\in{{L}[x;\\theta]}\\,\\land\\,\\deg f&lt;k\\right\\}.\" display=\"inline\"><mrow><mrow><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9e</mi><mi mathvariant=\"normal\">G</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo>,</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo rspace=\"4.2pt\" stretchy=\"false\">)</mo></mrow><mo rspace=\"4.2pt\">:</mo><mrow><mi>f</mi><mo>\u2208</mo><mrow><mrow><mi>L</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo>;</mo><mi>\u03b8</mi><mo rspace=\"4.2pt\" stretchy=\"false\">]</mo></mrow></mrow><mo rspace=\"4.2pt\">\u2227</mo><mrow><mi>deg</mi><mo>\u2061</mo><mi>f</mi></mrow></mrow><mo>&lt;</mo><mi>k</mi></mrow><mo>}</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nWe say that ${\\tau}$ errors occurred.\nThe goal of decoding is to recover ${\\ensuremath{\\mathbf{{c}}}}$ from ${\\ensuremath{\\mathbf{{r}}}}$ if ${\\tau}$ is not too large.\n\n\n\\subsection{Key Equation}\n\n\\begin{definition}\\label{def:elp}\nWe define the error locator polynomial\n\n", "itemtype": "equation", "pos": 16244, "prevtext": "\n\\end{definition}\n\nAn overview of properties can be found in \\cite{robert2015phd}.\n\n\n\n\\section{A New Decoding Approach}\n\\label{sec:Decoding}\n\nIn the following, let ${L}, {K}$ and ${\\theta} \\in \\mathrm{Gal}\\left({{L}/{K}}\\right)$ be s.t. ${\\mathrm{char}}_{\\theta}$ is square-free.\nAlso, we assume that ${\\theta}(\\cdot)$ can be computed in $O(1)$ operations in ${L}$.\nHaving these assumptions, the latter only being important for complexity statements, we show that the decoding problem is similar to the finite field case.\n\nSuppose that a codeword ${\\ensuremath{\\mathbf{{c}}}} \\in {\\mathcal{C}_\\mathrm{G}}$ is corrupted by an error ${\\ensuremath{\\mathbf{{e}}}} = (e_1,\\dots,e_n) \\in {L}^n$ of rank weight ${\\tau} := {\\mathrm{wt}_\\mathrm{R}}({\\ensuremath{\\mathbf{{e}}}})$. The \\emph{received word} is then given by\n\n", "index": 35, "text": "\\begin{align*}\n{\\ensuremath{\\mathbf{{r}}}} = {\\ensuremath{\\mathbf{{c}}}} + {\\ensuremath{\\mathbf{{e}}}}  \\in {L}^n.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex19.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\mathbf{{r}}}={\\mathbf{{c}}}+{\\mathbf{{e}}}\\in{L}^{n}.\" display=\"inline\"><mrow><mrow><mi>\ud835\udc2b</mi><mo>=</mo><mrow><mi>\ud835\udc1c</mi><mo>+</mo><mi>\ud835\udc1e</mi></mrow><mo>\u2208</mo><msup><mi>L</mi><mi>n</mi></msup></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{definition}\n\n\nThe following lemma is, in contrary to the finite field case, not obvious (cf. Corollary~\\ref{cor:MSP_properties}) and only holds for the case of ${\\mathrm{char}}_{\\theta}$ being square-free.\n\n\\begin{lemma}\\label{lem:deg_Lambda}\n$\\deg \\Lambda = {\\tau}$\n\\end{lemma}\n\n\\begin{proof}\nThis follows directly from {\\Fref{{cor:MSP_properties}}} together with $\\deg \\Lambda = \\dim {\\langle {e_1,\\dots,e_n} \\rangle} = {\\mathrm{wt}_\\mathrm{R}}({\\ensuremath{\\mathbf{{e}}}}) = {\\tau}$.\n\\end{proof}\n\nThe following lemma is necessary to prove {\\Fref{{thm:key_equation}}}, the main statement of this section.\n\n\\begin{lemma}\\label{lem:ab_equiv_modulo_MSP}\nLet ${\\mathcal{U}} \\subseteq {L}$ be a ${K}$-subspace.\n\n", "itemtype": "equation", "pos": 16642, "prevtext": "\nWe say that ${\\tau}$ errors occurred.\nThe goal of decoding is to recover ${\\ensuremath{\\mathbf{{c}}}}$ from ${\\ensuremath{\\mathbf{{r}}}}$ if ${\\tau}$ is not too large.\n\n\n\\subsection{Key Equation}\n\n\\begin{definition}\\label{def:elp}\nWe define the error locator polynomial\n\n", "index": 37, "text": "\\begin{align*}\n\\Lambda = {\\mathcal{A}_{{{\\langle {e_1,\\dots,e_n} \\rangle}}}}.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex20.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\Lambda={\\mathcal{A}_{{{\\langle{e_{1},\\dots,e_{n}}\\rangle}}}}.\" display=\"inline\"><mrow><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>=</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><msub><mi>e</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">\u27e9</mo></mrow></msub></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{lemma}\n\n\\begin{proof}\nBy {\\Fref{{lem:division}}}, there are ${\\chi},{\\varrho} \\in {{L}[x;\\theta]}$ with\n\n", "itemtype": "equation", "pos": 17446, "prevtext": "\n\\end{definition}\n\n\nThe following lemma is, in contrary to the finite field case, not obvious (cf. Corollary~\\ref{cor:MSP_properties}) and only holds for the case of ${\\mathrm{char}}_{\\theta}$ being square-free.\n\n\\begin{lemma}\\label{lem:deg_Lambda}\n$\\deg \\Lambda = {\\tau}$\n\\end{lemma}\n\n\\begin{proof}\nThis follows directly from {\\Fref{{cor:MSP_properties}}} together with $\\deg \\Lambda = \\dim {\\langle {e_1,\\dots,e_n} \\rangle} = {\\mathrm{wt}_\\mathrm{R}}({\\ensuremath{\\mathbf{{e}}}}) = {\\tau}$.\n\\end{proof}\n\nThe following lemma is necessary to prove {\\Fref{{thm:key_equation}}}, the main statement of this section.\n\n\\begin{lemma}\\label{lem:ab_equiv_modulo_MSP}\nLet ${\\mathcal{U}} \\subseteq {L}$ be a ${K}$-subspace.\n\n", "index": 39, "text": "\\begin{align*}\na \\equiv b \\mod {\\mathcal{A}_{{{\\mathcal{U}}}}} \\quad \\Leftrightarrow \\quad a(u) = b(u) \\; \\;  \\forall \\, u \\in {\\mathcal{U}}\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex21.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle a\\equiv b\\mod{\\mathcal{A}_{{{\\mathcal{U}}}}}\\quad\\Leftrightarrow%&#10;\\quad a(u)=b(u)\\;\\;\\forall\\,u\\in{\\mathcal{U}}\" display=\"inline\"><mrow><mrow><mi>a</mi><mo>\u2261</mo><mrow><mrow><mi>b</mi><mo lspace=\"2.5pt\" rspace=\"2.5pt\">mod</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></msub></mrow><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mo>\u21d4</mo></mrow></mrow><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mrow><mrow><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mi>b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo rspace=\"8.1pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo rspace=\"4.2pt\">\u2200</mo><mi>u</mi></mrow></mrow><mo>\u2208</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nand $\\deg {\\varrho} < \\deg {\\mathcal{A}_{{{\\mathcal{U}}}}}$.\nThen,\n\n", "itemtype": "equation", "pos": 17709, "prevtext": "\n\\end{lemma}\n\n\\begin{proof}\nBy {\\Fref{{lem:division}}}, there are ${\\chi},{\\varrho} \\in {{L}[x;\\theta]}$ with\n\n", "index": 41, "text": "\\begin{align*}\na-b = {\\chi} \\cdot {\\mathcal{A}_{{{\\mathcal{U}}}}} + {\\varrho}\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex22.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle a-b={\\chi}\\cdot{\\mathcal{A}_{{{\\mathcal{U}}}}}+{\\varrho}\" display=\"inline\"><mrow><mrow><mi>a</mi><mo>-</mo><mi>b</mi></mrow><mo>=</mo><mrow><mrow><mi>\u03c7</mi><mo>\u22c5</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></msub></mrow><mo>+</mo><mi>\u03f1</mi></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nAlso, ${\\varrho}(u) = 0$ for all $u \\in {\\mathcal{U}}$ if and only if ${\\varrho}=0$, since otherwise it would contradict the minimality of ${\\mathcal{A}_{{{\\mathcal{U}}}}}$.\n\\end{proof}\n\nRecall that ${\\hat{r}}$ is the known interpolation polynomial of degree $\\deg {\\hat{r}} < n$ corresponding to the received word ${\\ensuremath{\\mathbf{{r}}}}$, $f$ is the unknown information polynomial of degree $\\deg f < k$ and $\\Lambda$ is the unkown error locator polynomial.\nAlso, ${\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}}$ is known and has degree $\\deg {\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}} = n$, since the $g_i$'s are linearly independent.\nThe following statement is an analogue to Gao's key equation for Reed--Solomon codes.\n\n\\begin{theorem}[Key Equation]\\label{thm:key_equation}\n\n", "itemtype": "equation", "pos": 17867, "prevtext": "\nand $\\deg {\\varrho} < \\deg {\\mathcal{A}_{{{\\mathcal{U}}}}}$.\nThen,\n\n", "index": 43, "text": "\\begin{align*}\na(u) &= b(u) \\;  \\forall \\, u \\in {\\mathcal{U}} \\\\\n\\Leftrightarrow \\quad a(u)-b(u) &= (a-b)(u) = ({\\chi} \\cdot {\\mathcal{A}_{{{\\mathcal{U}}}}} + {\\varrho})(u) \\\\\n&= {\\chi}({\\mathcal{A}_{{{\\mathcal{U}}}}}(u)) + {\\varrho}(u) = {\\chi}(0)+{\\varrho}(u) \\\\\n&= {\\varrho}(u) = 0 \\;  \\forall \\, u \\in {\\mathcal{U}}.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex23.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle a(u)\" display=\"inline\"><mrow><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex23.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=b(u)\\;\\forall\\,u\\in{\\mathcal{U}}\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mi>b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo rspace=\"5.3pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo rspace=\"4.2pt\">\u2200</mo><mi>u</mi></mrow></mrow><mo>\u2208</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex24.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\Leftrightarrow\\quad a(u)-b(u)\" display=\"inline\"><mrow><mo>\u21d4</mo><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mrow><mrow><mi>a</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex24.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=(a-b)(u)=({\\chi}\\cdot{\\mathcal{A}_{{{\\mathcal{U}}}}}+{\\varrho})(u)\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>a</mi><mo>-</mo><mi>b</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>\u03c7</mi><mo>\u22c5</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></msub></mrow><mo>+</mo><mi>\u03f1</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex25.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\chi}({\\mathcal{A}_{{{\\mathcal{U}}}}}(u))+{\\varrho}(u)={\\chi}(0%&#10;)+{\\varrho}(u)\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mrow><mi>\u03c7</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi>\u03f1</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mrow><mi>\u03c7</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi>\u03f1</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex26.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\varrho}(u)=0\\;\\forall\\,u\\in{\\mathcal{U}}.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mi>\u03f1</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mpadded width=\"+2.8pt\"><mn>0</mn></mpadded><mo>\u2062</mo><mrow><mo rspace=\"4.2pt\">\u2200</mo><mi>u</mi></mrow></mrow><mo>\u2208</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb0</mi></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{theorem}\n\n\\begin{proof}\nLet $u \\in {\\langle {g_1,\\dots,g_n} \\rangle}$. Then, we can write $u$ as a ${K}$-linear combination of the $g_i$'s, $u = \\sum_{i=1}^{n} \\alpha_i g_i$, and\n\n", "itemtype": "equation", "pos": 19000, "prevtext": "\nAlso, ${\\varrho}(u) = 0$ for all $u \\in {\\mathcal{U}}$ if and only if ${\\varrho}=0$, since otherwise it would contradict the minimality of ${\\mathcal{A}_{{{\\mathcal{U}}}}}$.\n\\end{proof}\n\nRecall that ${\\hat{r}}$ is the known interpolation polynomial of degree $\\deg {\\hat{r}} < n$ corresponding to the received word ${\\ensuremath{\\mathbf{{r}}}}$, $f$ is the unknown information polynomial of degree $\\deg f < k$ and $\\Lambda$ is the unkown error locator polynomial.\nAlso, ${\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}}$ is known and has degree $\\deg {\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}} = n$, since the $g_i$'s are linearly independent.\nThe following statement is an analogue to Gao's key equation for Reed--Solomon codes.\n\n\\begin{theorem}[Key Equation]\\label{thm:key_equation}\n\n", "index": 45, "text": "\\begin{align}\n\\Lambda \\cdot {\\hat{r}} \\equiv \\Lambda \\cdot f \\mod {\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}} \\label{eq:key_equation}\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\Lambda\\cdot{\\hat{r}}\\equiv\\Lambda\\cdot f\\mod{\\mathcal{A}_{{{%&#10;\\langle{g_{1},\\dots,g_{n}}\\rangle}}}}\" display=\"inline\"><mrow><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u22c5</mo><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover></mrow><mo>\u2261</mo><mrow><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u22c5</mo><mi>f</mi></mrow><mo lspace=\"2.5pt\" rspace=\"2.5pt\">mod</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><msub><mi>g</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>g</mi><mi>n</mi></msub><mo stretchy=\"false\">\u27e9</mo></mrow></msub></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nThe statement follows by {\\Fref{{lem:ab_equiv_modulo_MSP}}}.\n\\end{proof}\n\n\n\n\n\\subsection{Decoding using Shift Register Synthesis Problems}\n\nSince it is hard to directly find a solution to the key equation, which is highly non-linear, we try to find a solution to the following shift register synthesis problem.\nWe will prove in Theorem~\\ref{thm:key_equation_and_SRP} that solutions of both kinds of problems are the same if the number of errors is not too large.\n\n\n\\begin{definition}\nLet ${\\hat{r}}, {\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}}$ be given as above.\nA \\emph{shift register problem} (SRP) is the problem of finding $(\\lambda,\\omega) \\in {{L}[x;\\theta]}^*$ such that\n\n", "itemtype": "equation", "pos": 19338, "prevtext": "\n\\end{theorem}\n\n\\begin{proof}\nLet $u \\in {\\langle {g_1,\\dots,g_n} \\rangle}$. Then, we can write $u$ as a ${K}$-linear combination of the $g_i$'s, $u = \\sum_{i=1}^{n} \\alpha_i g_i$, and\n\n", "index": 47, "text": "\\begin{align*}\n&(\\Lambda \\cdot {\\hat{r}})(u) - (\\Lambda \\cdot f)(u) = \\Lambda({\\hat{r}}(u)-f(u)) \\\\\n&=\\Lambda({\\hat{r}}({\\textstyle\\sum\\nolimits}_{i=1}^{n} \\alpha_i g_i)-f({\\textstyle\\sum\\nolimits}_{i=1}^{n} \\alpha_i g_i)) \\\\\n&= {\\textstyle\\sum\\nolimits}_{i=1}^{n} \\alpha_i \\Lambda({\\hat{r}}(g_i)-f(g_i)) \n= {\\textstyle\\sum\\nolimits}_{i=1}^{n} \\alpha_i \\Lambda(r_i-c_i) \\\\\n&= {\\textstyle\\sum\\nolimits}_{i=1}^{n} \\alpha_i \\Lambda(e_i)\n= 0.\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex27.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle(\\Lambda\\cdot{\\hat{r}})(u)-(\\Lambda\\cdot f)(u)=\\Lambda({\\hat{r}}(%&#10;u)-f(u))\" display=\"inline\"><mrow><mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u22c5</mo><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u22c5</mo><mi>f</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>u</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex28.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\Lambda({\\hat{r}}({\\textstyle\\sum\\nolimits}_{i=1}^{n}\\alpha_{i}g%&#10;_{i})-f({\\textstyle\\sum\\nolimits}_{i=1}^{n}\\alpha_{i}g_{i}))\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>\u03b1</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mi>g</mi><mi>i</mi></msub></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>\u03b1</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mi>g</mi><mi>i</mi></msub></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex29.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\textstyle\\sum\\nolimits}_{i=1}^{n}\\alpha_{i}\\Lambda({\\hat{r}}(g%&#10;_{i})-f(g_{i}))={\\textstyle\\sum\\nolimits}_{i=1}^{n}\\alpha_{i}\\Lambda(r_{i}-c_{%&#10;i})\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>\u03b1</mi><mi>i</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>\u03b1</mi><mi>i</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>-</mo><msub><mi>c</mi><mi>i</mi></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex30.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\textstyle\\sum\\nolimits}_{i=1}^{n}\\alpha_{i}\\Lambda(e_{i})=0.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>\u03b1</mi><mi>i</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\\end{definition}\n\nThe following theorem is, besides the key equation, the main statement of this paper.\nIt proves that the decoding problem and the SRP are equivalent if the number of errors is not too large.\nIn many coding theoretic publications, this relation is assumed without a proof, whenever a non-linear decoding problem is reduced to another easily solvable linear problem.\n\n\\begin{theorem}\\label{thm:key_equation_and_SRP}\nIf $\\tau < \\frac{d}{2}$, the SRP has a solution $(\\lambda,\\omega)$ and any such solution satisfies\n\n", "itemtype": "equation", "pos": 20477, "prevtext": "\nThe statement follows by {\\Fref{{lem:ab_equiv_modulo_MSP}}}.\n\\end{proof}\n\n\n\n\n\\subsection{Decoding using Shift Register Synthesis Problems}\n\nSince it is hard to directly find a solution to the key equation, which is highly non-linear, we try to find a solution to the following shift register synthesis problem.\nWe will prove in Theorem~\\ref{thm:key_equation_and_SRP} that solutions of both kinds of problems are the same if the number of errors is not too large.\n\n\n\\begin{definition}\nLet ${\\hat{r}}, {\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}}$ be given as above.\nA \\emph{shift register problem} (SRP) is the problem of finding $(\\lambda,\\omega) \\in {{L}[x;\\theta]}^*$ such that\n\n", "index": 49, "text": "\\begin{align}\n\\lambda {\\hat{r}} \\equiv \\omega &\\mod {\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}} \\label{eq:congruence} \\\\\n\\deg \\lambda &> \\deg \\omega + k \\label{eq:degree}\\\\\n\\deg \\lambda &\\text{ minimal} \\label{eq:minimality}\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\lambda{\\hat{r}}\\equiv\\omega\" display=\"inline\"><mrow><mrow><mi>\u03bb</mi><mo>\u2062</mo><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover></mrow><mo>\u2261</mo><mi>\u03c9</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\mod{\\mathcal{A}_{{{\\langle{g_{1},\\dots,g_{n}}\\rangle}}}}\" display=\"inline\"><mrow><mi/><mo lspace=\"2.5pt\" rspace=\"2.5pt\">mod</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><msub><mi>g</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>g</mi><mi>n</mi></msub><mo stretchy=\"false\">\u27e9</mo></mrow></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\deg\\lambda\" display=\"inline\"><mrow><mi>deg</mi><mo>\u2061</mo><mi>\u03bb</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle&gt;\\deg\\omega+k\" display=\"inline\"><mrow><mi/><mo>&gt;</mo><mrow><mrow><mi>deg</mi><mo>\u2061</mo><mi>\u03c9</mi></mrow><mo>+</mo><mi>k</mi></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\deg\\lambda\" display=\"inline\"><mrow><mi>deg</mi><mo>\u2061</mo><mi>\u03bb</mi></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nfor some $\\alpha \\in {L}^*$.\n\\end{theorem}\n\n\\begin{proof}\nWe first prove that the SRP has a solution and all solutions satisfy $\\omega = \\lambda f$, by applying similar arguments as in the proof of \\cite[Theorem~25]{robert2015phd}.\nThen we show that the solution is unique up to a scalar multiplication.\nBy {\\Fref{{thm:key_equation}}}, $(\\Lambda, \\Lambda f)$ fulfills the congruence relation \\eqref{eq:congruence} and due to\n\n", "itemtype": "equation", "pos": 21253, "prevtext": "\n\\end{definition}\n\nThe following theorem is, besides the key equation, the main statement of this paper.\nIt proves that the decoding problem and the SRP are equivalent if the number of errors is not too large.\nIn many coding theoretic publications, this relation is assumed without a proof, whenever a non-linear decoding problem is reduced to another easily solvable linear problem.\n\n\\begin{theorem}\\label{thm:key_equation_and_SRP}\nIf $\\tau < \\frac{d}{2}$, the SRP has a solution $(\\lambda,\\omega)$ and any such solution satisfies\n\n", "index": 51, "text": "\\begin{align*}\n(\\Lambda, \\Lambda f) = \\alpha (\\lambda,\\omega)\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex31.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle(\\Lambda,\\Lambda f)=\\alpha(\\lambda,\\omega)\" display=\"inline\"><mrow><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">\u039b</mi><mo>,</mo><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mi>f</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mrow><mi>\u03b1</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03bb</mi><mo>,</mo><mi>\u03c9</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nit also satisfies the degree condition \\eqref{eq:degree}.\nThus, the SRP has a solution\\footnote{Either $(\\Lambda,\\Lambda f)$ or a ``smaller'' solution in terms of $\\deg \\lambda$} $(\\lambda,\\omega)$, and by {\\Fref{{lem:deg_Lambda}}}, any such solution satisfies\n\n", "itemtype": "equation", "pos": 21753, "prevtext": "\nfor some $\\alpha \\in {L}^*$.\n\\end{theorem}\n\n\\begin{proof}\nWe first prove that the SRP has a solution and all solutions satisfy $\\omega = \\lambda f$, by applying similar arguments as in the proof of \\cite[Theorem~25]{robert2015phd}.\nThen we show that the solution is unique up to a scalar multiplication.\nBy {\\Fref{{thm:key_equation}}}, $(\\Lambda, \\Lambda f)$ fulfills the congruence relation \\eqref{eq:congruence} and due to\n\n", "index": 53, "text": "\\begin{align*}\n\\deg \\Lambda f = \\deg \\Lambda + \\deg f < \\deg \\Lambda + k,\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex32.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\deg\\Lambda f=\\deg\\Lambda+\\deg f&lt;\\deg\\Lambda+k,\" display=\"inline\"><mrow><mrow><mrow><mi>deg</mi><mo>\u2061</mo><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mi>f</mi></mrow></mrow><mo>=</mo><mrow><mrow><mi>deg</mi><mo>\u2061</mo><mi mathvariant=\"normal\">\u039b</mi></mrow><mo>+</mo><mrow><mi>deg</mi><mo>\u2061</mo><mi>f</mi></mrow></mrow><mo>&lt;</mo><mrow><mrow><mi>deg</mi><mo>\u2061</mo><mi mathvariant=\"normal\">\u039b</mi></mrow><mo>+</mo><mi>k</mi></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nWe also know that $\\dim {\\langle {e_1,\\dots,e_n} \\rangle} = \\tau$, implying\n\n", "itemtype": "equation", "pos": 22101, "prevtext": "\nit also satisfies the degree condition \\eqref{eq:degree}.\nThus, the SRP has a solution\\footnote{Either $(\\Lambda,\\Lambda f)$ or a ``smaller'' solution in terms of $\\deg \\lambda$} $(\\lambda,\\omega)$, and by {\\Fref{{lem:deg_Lambda}}}, any such solution satisfies\n\n", "index": 55, "text": "\\begin{align}\n\\deg \\lambda &\\leq \\deg \\Lambda = \\tau, \\label{eq:lambda_degree} \\\\\n\\deg \\omega &< \\deg \\lambda + k = \\tau + k. \\label{eq:omega_degree}\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\deg\\lambda\" display=\"inline\"><mrow><mi>deg</mi><mo>\u2061</mo><mi>\u03bb</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\leq\\deg\\Lambda=\\tau,\" display=\"inline\"><mrow><mrow><mi/><mo>\u2264</mo><mrow><mi>deg</mi><mo>\u2061</mo><mi mathvariant=\"normal\">\u039b</mi></mrow><mo>=</mo><mi>\u03c4</mi></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\deg\\omega\" display=\"inline\"><mrow><mi>deg</mi><mo>\u2061</mo><mi>\u03c9</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle&lt;\\deg\\lambda+k=\\tau+k.\" display=\"inline\"><mrow><mrow><mi/><mo>&lt;</mo><mrow><mrow><mi>deg</mi><mo>\u2061</mo><mi>\u03bb</mi></mrow><mo>+</mo><mi>k</mi></mrow><mo>=</mo><mrow><mi>\u03c4</mi><mo>+</mo><mi>k</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nand thus,\n\n", "itemtype": "equation", "pos": 22339, "prevtext": "\nWe also know that $\\dim {\\langle {e_1,\\dots,e_n} \\rangle} = \\tau$, implying\n\n", "index": 57, "text": "\\begin{align*}\n\\deg {\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} = \\dim {\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle} \\leq \\tau\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex33.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\deg{\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}%&#10;\\rangle}}}}=\\dim{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}\\rangle}\\leq\\tau\" display=\"inline\"><mrow><mrow><mi>deg</mi><mo>\u2061</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub></mrow><mo>=</mo><mrow><mo>dim</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></mrow><mo>\u2264</mo><mi>\u03c4</mi></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nDue to \\eqref{eq:congruence}, $\\lambda({\\hat{r}}(g_i)) = (\\lambda {\\hat{r}})(g_i) = \\omega(g_i)$ for all $i$, we obtain\n\n", "itemtype": "equation", "pos": 22521, "prevtext": "\nand thus,\n\n", "index": 59, "text": "\\begin{align*}\n\\deg {\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\omega-\\lambda f) < \\deg {\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} + \\tau + k \\\\\n\\leq 2 \\tau + k \\leq 2 \\tfrac{d-1}{2} + k = n-k+k = n,\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex34.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\deg{\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}%&#10;\\rangle}}}}(\\omega-\\lambda f)&lt;\\deg{\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots%&#10;,\\lambda(e_{n})}\\rangle}}}}+\\tau+k\" display=\"inline\"><mrow><mrow><mrow><mi>deg</mi><mo>\u2061</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03c9</mi><mo>-</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>f</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mrow><mrow><mi>deg</mi><mo>\u2061</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub></mrow><mo>+</mo><mi>\u03c4</mi><mo>+</mo><mi>k</mi></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex35.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\leq 2\\tau+k\\leq 2\\tfrac{d-1}{2}+k=n-k+k=n,\" display=\"inline\"><mrow><mrow><mi/><mo>\u2264</mo><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c4</mi></mrow><mo>+</mo><mi>k</mi></mrow><mo>\u2264</mo><mrow><mrow><mn>2</mn><mo>\u2062</mo><mfrac><mrow><mi>d</mi><mo>-</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><mo>+</mo><mi>k</mi></mrow><mo>=</mo><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mi>k</mi></mrow><mo>=</mo><mi>n</mi></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nThus, we obtain ${\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\omega-\\lambda f) = 0$ because the polynomial has degree $<n$ but evaluates to $0$ at $n$ linearly independent positions (cf. {\\Fref{{lem:dimker_deg_bound}}}).\nSince ${{L}[x;\\theta]}$ is an integral domain, we get\n\n", "itemtype": "equation", "pos": 22909, "prevtext": "\nDue to \\eqref{eq:congruence}, $\\lambda({\\hat{r}}(g_i)) = (\\lambda {\\hat{r}})(g_i) = \\omega(g_i)$ for all $i$, we obtain\n\n", "index": 61, "text": "\\begin{align*}\n&{\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\omega-\\lambda f) (g_i) \\\\\n&= {\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\omega(g_i)-\\lambda(f(g_i))) \\\\\n&= {\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\lambda({\\hat{r}}(g_i))-\\lambda(f(g_i))) \\\\\n&= {\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\lambda(r_i-c_i)) \\\\\n&= {\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\lambda(e_i)) = 0\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex36.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}%&#10;\\rangle}}}}(\\omega-\\lambda f)(g_{i})\" display=\"inline\"><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03c9</mi><mo>-</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>f</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex37.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}%&#10;\\rangle}}}}(\\omega(g_{i})-\\lambda(f(g_{i})))\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>\u03c9</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex38.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}%&#10;\\rangle}}}}(\\lambda({\\hat{r}}(g_{i}))-\\lambda(f(g_{i})))\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>g</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex39.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}%&#10;\\rangle}}}}(\\lambda(r_{i}-c_{i}))\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>-</mo><msub><mi>c</mi><mi>i</mi></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex40.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\mathcal{A}_{{{\\langle{\\lambda(e_{1}),\\dots,\\lambda(e_{n})}%&#10;\\rangle}}}}(\\lambda(e_{i}))=0\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">\u27e9</mo></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\n\nBy \\eqref{eq:omega_equals_lambda_f} and the congruence relation \\eqref{eq:congruence},\nit follows that\n\n", "itemtype": "equation", "pos": 23749, "prevtext": "\nThus, we obtain ${\\mathcal{A}_{{{\\langle {\\lambda(e_1),\\dots,\\lambda(e_n)} \\rangle}}}} (\\omega-\\lambda f) = 0$ because the polynomial has degree $<n$ but evaluates to $0$ at $n$ linearly independent positions (cf. {\\Fref{{lem:dimker_deg_bound}}}).\nSince ${{L}[x;\\theta]}$ is an integral domain, we get\n\n", "index": 63, "text": "\\begin{align}\n\\omega = \\lambda f. \\label{eq:omega_equals_lambda_f}\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\omega=\\lambda f.\" display=\"inline\"><mrow><mrow><mi>\u03c9</mi><mo>=</mo><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>f</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nthus, $\\lambda(e_i) = \\lambda({\\hat{r}}-f)(g_i) = 0$ $\\forall i=1,\\dots,n$.\nDue to $\\deg \\lambda \\leq \\deg \\Lambda$, $\\lambda$ must be the annihilator polynomial $\\Lambda$ of ${\\langle {e_1,\\dots,e_n} \\rangle}$ multiplied by a scalar $\\alpha^{-1} = \\lambda_{\\deg \\lambda} \\in {L}^*$.\nHence, also\n\n", "itemtype": "equation", "pos": 23932, "prevtext": "\n\nBy \\eqref{eq:omega_equals_lambda_f} and the congruence relation \\eqref{eq:congruence},\nit follows that\n\n", "index": 65, "text": "\\begin{align*}\n\\lambda({\\hat{r}}-f) \\equiv 0 \\mod {\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}},\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex41.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\lambda({\\hat{r}}-f)\\equiv 0\\mod{\\mathcal{A}_{{{\\langle{g_{1},%&#10;\\dots,g_{n}}\\rangle}}}},\" display=\"inline\"><mrow><mrow><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mover accent=\"true\"><mi>r</mi><mo stretchy=\"false\">^</mo></mover><mo>-</mo><mi>f</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2261</mo><mrow><mn>0</mn><mo lspace=\"2.5pt\" rspace=\"2.5pt\">mod</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mrow><mo stretchy=\"false\">\u27e8</mo><msub><mi>g</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>g</mi><mi>n</mi></msub><mo stretchy=\"false\">\u27e9</mo></mrow></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nand the claim is proven.\n\\end{proof}\n\n\\begin{remark}\nIn the case $\\tau < \\frac{d}{2}$, a solution of the SRP is also a solution to the \\emph{linear reconstruction problem} discussed in \\cite{robert2015phd}.\nThis follows from the degree conditions \\eqref{eq:lambda_degree} and \\eqref{eq:omega_degree}, and the observation that $\\lambda({\\hat{r}}(g_i)) = \\omega(g_i)$ for all $i=1,\\dots,n$.\n\\end{remark}\n\nWe can conclude that up to half the minimum distance ($\\tau < \\frac{d}{2}$), we can solve the decoding problem by finding a solution of the SRP.\nThe next section will summarize known algorithms to solve SRPs.\nNote that certain Gabidulin codes over finite fields cannot be decoded beyond half the minimum distance in polynomial time (cf.~\\cite{raviv2015some}).\nTherefore, we do not consider this case here.\n\n\n\\subsection{Solving Shift Register Problems}\n\\label{subsec:solvingSRP}\n\nSRPs over ${L}[x]$ and ${{L}[x;\\theta]}$ are well-studied and have been used for decoding of several algebraic codes, including Reed--Solomon and (finite field) Gabidulin codes.\n\nTwo of the most important algorithms to solve these kinds of problems are:\n\\begin{enumerate}\n\\item The \\emph{Extended Euclidean Algorithm}. \n\nSince ${{L}[x;\\theta]}$ is a Euclidean domain, it admits a Euclidean algorithm.\nIt is shown e.g. in \\cite{wachter2013decoding} that the Euclidean algorithm over ${\\mathbb{F}}[x;\\cdot^q]$ can be performed in $O(\\mathcal{D}(n))$ time, where $\\mathcal{D}(n)$ is the complexity of dividing two polynomials in ${\\mathbb{F}}[x;\\cdot^q]$.\nThese results directly translate to ${{L}[x;\\theta]}$.\n\nUsing the classical division algorithm, $\\mathcal{D}(n) \\in O(n^2)$.\nHowever, it is justifiable that the division method described in \\cite{puchinger2015fast} generalizes to ${{L}[x;\\theta]}$ where ${\\theta}(\\cdot)$ can be computed in $O(1)$, implying $\\mathcal{D}(n) \\in O(n^{1.69} \\log(n))$.\n\n\\item \\emph{Module Minimization}.\n\nThe algorithms described in \\cite{li2015solving} solve a generalized version of the SRP described in this paper.\nIf ${\\theta}(\\cdot)$ can be computed in $O(1)$, the complexity of finding a solution of the SRP becomes\n\n", "itemtype": "equation", "pos": 24344, "prevtext": "\nthus, $\\lambda(e_i) = \\lambda({\\hat{r}}-f)(g_i) = 0$ $\\forall i=1,\\dots,n$.\nDue to $\\deg \\lambda \\leq \\deg \\Lambda$, $\\lambda$ must be the annihilator polynomial $\\Lambda$ of ${\\langle {e_1,\\dots,e_n} \\rangle}$ multiplied by a scalar $\\alpha^{-1} = \\lambda_{\\deg \\lambda} \\in {L}^*$.\nHence, also\n\n", "index": 67, "text": "\\begin{align*}\n\\alpha \\omega = \\alpha \\lambda f = \\Lambda f\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex42.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\alpha\\omega=\\alpha\\lambda f=\\Lambda f\" display=\"inline\"><mrow><mrow><mi>\u03b1</mi><mo>\u2062</mo><mi>\u03c9</mi></mrow><mo>=</mo><mrow><mi>\u03b1</mi><mo>\u2062</mo><mi>\u03bb</mi><mo>\u2062</mo><mi>f</mi></mrow><mo>=</mo><mrow><mi mathvariant=\"normal\">\u039b</mi><mo>\u2062</mo><mi>f</mi></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05205.tex", "nexttext": "\nMoreover, as already mentioned in \\cite{li2015solving}, there is the substantiated hope for similar speed-ups as in the ${L}[x]$ case, such as the divide-and-conquer variant described in \\cite{alekhnovich_linear_2005}.\n\\end{enumerate}\n\nAlternatively, a variant of the Berlekamp--Massey algorithm (cf.~\\cite{richter2004error}) can be used, which might have advantages in practical scenarios.\n\n\\subsection{Issues Besides Complexity}\n\nSince we are dealing with infinite fields, we have to deal with some issues that do not appear in the finite field case.\n\nAs already mentioned in \\cite{robert2015phd}, when computing in exact computation domains, such as number fields, we have to face the problem of coefficient growth.\nFortunately, our proposed decoding method reduces the decoding problem to a problem that was already studied in terms of coefficient growth before (cf. \\cite{beckermann2006fraction}).\nAs described in Section~\\ref{subsec:solvingSRP}, we can use module minimization to obtain a solution of the SRP.\nMore precisely, in \\cite{li2015solving} a solution of the SRP is obtained by transforming a basis of a certain ${{L}[x;\\theta]}$-module into a normal form, called \\emph{weak Popov form}.\nInstead of using the algorithms described in \\cite{li2015solving} to obtain a weak Popov form, we can use the methods from \\cite{beckermann2006fraction}.\nThe algorithms in \\cite{beckermann2006fraction} are slower than those in \\cite{li2015solving}, but have a better control of coefficient growth in intermediate results using fraction-free methods.\n\nOn the other hand, especially in the application of LRMR, it might be advantageous in terms of complexity not to use exact but approximate computations.\nThus, one has to deal with numerical issues.\nIn the Hamming metric analogy, this problem was already investigated for complex Reed--Solomon codes (cf.~\\cite[Chapter~7]{zorlein2015}).\nThere, it turned out that a modification of the Berlekamp--Massey algorithm is the numerically most stable one among the classical approaches for solving an SRP.\nIt should also be noted that the interpolation algorithm presented in \\cite{liu2014kotter} is a reasonable choice to compute ${\\hat{r}}$, since it is the skew polynomial analogue of the numerically stable Newton interpolation with divided differences.\n\n\\subsection{Summary of the Decoding Algorithm}\n\nAlgorithm~\\ref{alg:decode} summarizes the decoding procedure.\n\n{[1]}{\n\n\\DontPrintSemicolon\n\\KwIn{${\\ensuremath{\\mathbf{{r}}}} = {\\ensuremath{\\mathbf{{c}}}} + {\\ensuremath{\\mathbf{{e}}}}$}\n\\KwOut{$f$ s.t. ${\\ensuremath{\\mathbf{{c}}}} = (f(g_1),\\dots,f(g_n))$\\\\ or ``decoding failure''.}\nCalculate ${\\hat{r}}$ as in Theorem \\ref{thm:interpolation} \\; \\label{line:dec_1}\nCalculate ${\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}}$ as in Definition \\ref{def:elp} \\; \\label{line:dec_2}\n$(\\lambda,\\omega) \\gets $ Solve SRP with input ${\\hat{r}}$, ${\\mathcal{A}_{{{\\langle {g_1,\\dots,g_n} \\rangle}}}}$ \\; \\label{line:dec_3}\n$(\\Lambda,\\Omega) \\gets \\alpha^{-1} (\\lambda,\\omega)$ \\; \\label{line:dec_4}\n$({\\chi},{\\varrho}) \\gets $ Right-divide $\\Omega$ by $\\Lambda$ \\; \\label{line:dec_5}\n\\If{${\\varrho}=0$}{\n\\Return{${\\chi}$}  \\label{line:dec_6}}\n\\Else{\n\\Return{``decoding failure''}}\n\\caption{Decode Gabidulin Codes}\n\\label{alg:decode}\n}\n\n\\begin{theorem}\nAlg.~\\ref{alg:decode} is correct and has complexity $O(n^2)$.\n\\end{theorem}\n\n\\begin{proof}\nCorrectness follows from Theorems~\\ref{thm:key_equation} and \\ref{thm:key_equation_and_SRP}.\nThe lines of the algorithm have the following complexities, implying the overall statement:\n\\begin{itemize}\n\\item Line~\\ref{line:dec_1}: We can use the interpolation algorithm for skew polynomials presented in \\cite{liu2014kotter}, having complexity $O(n^2)$.\n\\item Line~\\ref{line:dec_2}: $O(n^2)$ by Algorithm~\\ref{alg:annihilator}.\n\\item Line~\\ref{line:dec_3}: $O(n^2)$ using e.g. module minimization as in \\cite{li2015solving}.\n\\item Line~\\ref{line:dec_4}: Negligible.\n\\item Line~\\ref{line:dec_5}: $O(n^2)$ using the standard algorithm \\cite{ore1933theory}.\n\\end{itemize}\n\\end{proof}\n\n\n\n\\section{Conclusion}\n\\label{sec:Conclusion}\n\n\nWe have proposed a new method for decoding Gabidulin codes over fields with characteristic zero, reducing the decoding complexity to $O(n^2)$ compared to $O(n^3)$ in \\cite{robert2015phd}.\nThis alternative procedure reduces decoding to a linear shift register synthesis problem, which can be efficiently solved using several known algorithms, each having advantages in terms of speed, coefficient growth or numerical stability.\nThe presented work can be used for applying Gabidulin codes over characteristic zero to space-time coding and to the low-rank matrix recovery problem.\nThe latter one is, to the best of our knowledge, a new application for these codes.\n\n\n\n\\bibliographystyle{IEEEtran}\n\\bibliography{main}\n\n\n\n", "itemtype": "equation", "pos": 26556, "prevtext": "\nand the claim is proven.\n\\end{proof}\n\n\\begin{remark}\nIn the case $\\tau < \\frac{d}{2}$, a solution of the SRP is also a solution to the \\emph{linear reconstruction problem} discussed in \\cite{robert2015phd}.\nThis follows from the degree conditions \\eqref{eq:lambda_degree} and \\eqref{eq:omega_degree}, and the observation that $\\lambda({\\hat{r}}(g_i)) = \\omega(g_i)$ for all $i=1,\\dots,n$.\n\\end{remark}\n\nWe can conclude that up to half the minimum distance ($\\tau < \\frac{d}{2}$), we can solve the decoding problem by finding a solution of the SRP.\nThe next section will summarize known algorithms to solve SRPs.\nNote that certain Gabidulin codes over finite fields cannot be decoded beyond half the minimum distance in polynomial time (cf.~\\cite{raviv2015some}).\nTherefore, we do not consider this case here.\n\n\n\\subsection{Solving Shift Register Problems}\n\\label{subsec:solvingSRP}\n\nSRPs over ${L}[x]$ and ${{L}[x;\\theta]}$ are well-studied and have been used for decoding of several algebraic codes, including Reed--Solomon and (finite field) Gabidulin codes.\n\nTwo of the most important algorithms to solve these kinds of problems are:\n\\begin{enumerate}\n\\item The \\emph{Extended Euclidean Algorithm}. \n\nSince ${{L}[x;\\theta]}$ is a Euclidean domain, it admits a Euclidean algorithm.\nIt is shown e.g. in \\cite{wachter2013decoding} that the Euclidean algorithm over ${\\mathbb{F}}[x;\\cdot^q]$ can be performed in $O(\\mathcal{D}(n))$ time, where $\\mathcal{D}(n)$ is the complexity of dividing two polynomials in ${\\mathbb{F}}[x;\\cdot^q]$.\nThese results directly translate to ${{L}[x;\\theta]}$.\n\nUsing the classical division algorithm, $\\mathcal{D}(n) \\in O(n^2)$.\nHowever, it is justifiable that the division method described in \\cite{puchinger2015fast} generalizes to ${{L}[x;\\theta]}$ where ${\\theta}(\\cdot)$ can be computed in $O(1)$, implying $\\mathcal{D}(n) \\in O(n^{1.69} \\log(n))$.\n\n\\item \\emph{Module Minimization}.\n\nThe algorithms described in \\cite{li2015solving} solve a generalized version of the SRP described in this paper.\nIf ${\\theta}(\\cdot)$ can be computed in $O(1)$, the complexity of finding a solution of the SRP becomes\n\n", "index": 69, "text": "\\begin{align*}\nO(n^2).\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex43.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle O(n^{2}).\" display=\"inline\"><mrow><mrow><mi>O</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}]