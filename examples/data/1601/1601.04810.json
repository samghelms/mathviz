[{"file": "1601.04810.tex", "nexttext": "\n\n\\noindent Sometimes it will be more convenient to use $I(x,y)=n-d(x,y)$, which denotes the number of identical coordinates between $x$ and $y$, when considering the similarity between $x$ and $y$. Consider a code ${\\mathscr}{C}{\\subseteq} F^n$, the minimum distance of ${\\mathscr}{C}$ is defined to be\n\n", "itemtype": "equation", "pos": 2987, "prevtext": "\n\n\\title{Good traceability codes do exist}\n\n\\author{\nGennian Ge$^{\\text{a,b,}}$\\thanks{Corresponding author. Email address: gnge@zju.edu.cn. Research supported by the National Natural Science Foundation of China under Grant Nos. 61171198, 11431003 and 61571310, and the Importation and Development of High-Caliber Talents Project of Beijing Municipal Institutions.\n},\nChong Shangguan$^{\\text{c}}$\\\\\n\\footnotesize $^{\\text{a}}$ School of Mathematical Sciences, Capital Normal University, Beijing 100048, China\\\\\n\\footnotesize $^{\\text{b}}$ Beijing Center for Mathematics and Information\nInterdisciplinary Sciences,\nBeijing 100048, China\\\\\n\\footnotesize $^{\\text{c}}$ School of Mathematical Sciences, Zhejiang University, Hangzhou 310027, Zhejiang, China.\\\\\n}\n\\maketitle\n\n\\begin{abstract}\n    \n    Traceability codes are combinatorial objects introduced by Chor,\n    Fiat and Naor in 1994 to be used to trace the origin of digital content in traitor tracing schemes.\n    Let $F$ be an alphabet set of size $q$ and $n$ be a positive integer. A $t$-traceability code is a code ${\\mathscr}{C}{\\subseteq} F^n$ which can be used to catch at least one colluder from a collusion of at most $t$ traitors. It has been shown that $t$-traceability codes do not exist for $q\\le t$. When $q>t^2$, $t$-traceability codes with positive code rate can be constructed from error correcting codes with large minimum distance. Therefore, Barg and Kabatiansky asked in 2004 that whether there exist $t$-traceability codes with positive code rate for $t+1\\le q\\le t^2$. In 2010, Blackburn, Etzion and Ng gave an affirmative answer to this question for $q\\ge t^2-{\\lceil} t/2{\\rceil}+1$, using the probabilistic methods. However, they did not see how their probabilistic methods can be used\n    to answer this question for the remaining values of $q$. They even suspected that there may be a `Plotkin bound' of traceability codes that forbids the existence of such codes. In this paper, we give a complete  answer to Barg-Kabatiansky's question (in the affirmative). Surprisingly, our construction is deterministic.\n\\end{abstract}\n\n\n\\noindent{\\it Keywords:} traceability code, algebraic-geometry code, simplex code, concatenated code\n\n\\smallskip\n\n\\noindent {{\\it AMS subject classifications\\/}:  94B60, 94A60 (68P25 68P30), 11T71.}\n\n\\section{Introduction}\n\nTraceability codes were first introduced by Chor, Fiat and Naor \\cite{chor1994tracing} in order to protect copyrighted materials from unauthorised use. These codes are useful in scenarios like decrypting broadcast messages, software installation and distribution of multimedia content \\cite{chor1994tracing,chor1994IE3version,app}. Let us begin with some definitions and notations.\n\n\nLet $F$ be a finite set of cardinality $q$ and $n$ be a positive integer. We use $x=(x_1,\\ldots,x_n)$ to denote a vector from $F^n$. For arbitrary two vectors $x,~y\\in F^n$, the Hamming distance $d(x,y)$ is defined to be the number of distinct coordinates between them:\n\n\n", "index": 1, "text": "$$d(x,y)=|\\{1\\le i\\le n\\mid x_i\\neq y_i\\}|.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"d(x,y)=|\\{1\\leq i\\leq n\\mid x_{i}\\neq y_{i}\\}|.\" display=\"block\"><mrow><mrow><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo stretchy=\"false\">|</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mn>1</mn><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>n</mi></mrow><mo>\u2223</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>\u2260</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mo stretchy=\"false\">}</mo></mrow><mo stretchy=\"false\">|</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent We say ${\\mathscr}{C}$ is an $(n,M,d)$ code (or just an $(n,M)$ code if the distance is of no importance) if it has length $n$, size $M$ and minimum distance $d$. The code rate of ${\\mathscr}{C}$ is defined to be\n\n\n", "itemtype": "equation", "pos": 3336, "prevtext": "\n\n\\noindent Sometimes it will be more convenient to use $I(x,y)=n-d(x,y)$, which denotes the number of identical coordinates between $x$ and $y$, when considering the similarity between $x$ and $y$. Consider a code ${\\mathscr}{C}{\\subseteq} F^n$, the minimum distance of ${\\mathscr}{C}$ is defined to be\n\n", "index": 3, "text": "$$d({\\mathscr}{C})=\\min\\{d(x,y)\\mid x,y\\in{\\mathscr}{C},~x\\neq y\\}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"d({\\mathscr{}}{C})=\\min\\{d(x,y)\\mid x,y\\in{\\mathscr{}}{C},~{}x\\neq y\\}.\" display=\"block\"><mrow><mrow><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mi>min</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mi>x</mi><mo>,</mo><mrow><mi>y</mi><mo>\u2208</mo><mi>C</mi></mrow><mo rspace=\"5.8pt\">,</mo><mrow><mi>x</mi><mo>\u2260</mo><mi>y</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent Let $D$ be a subset of ${\\mathscr}{C}$, we use $desc_i(D)$ to denote the collection of the $i$-th coordinates of the codewords in $D$:\n\n\n", "itemtype": "equation", "pos": 3631, "prevtext": "\n\n\\noindent We say ${\\mathscr}{C}$ is an $(n,M,d)$ code (or just an $(n,M)$ code if the distance is of no importance) if it has length $n$, size $M$ and minimum distance $d$. The code rate of ${\\mathscr}{C}$ is defined to be\n\n\n", "index": 5, "text": "$$R({\\mathscr}{C})=\\lim_{n\\longrightarrow\\infty}{\\frac}{1}{n}\\log_q M.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"R({\\mathscr{}}{C})=\\lim_{n\\longrightarrow\\infty}{\\frac{}}{1}{n}\\log_{q}M.\" display=\"block\"><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munder><mo movablelimits=\"false\">lim</mo><mrow><mi>n</mi><mo>\u27f6</mo><mi mathvariant=\"normal\">\u221e</mi></mrow></munder><mo>\u2061</mo><mrow><mfrac><mi/><mn>1</mn></mfrac><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mrow><msub><mi>log</mi><mi>q</mi></msub><mo>\u2061</mo><mi>M</mi></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent The descendant set of $D$, $desc(D)$, is defined to be the collection of words of $F^n$ that can be produced by the codewords of $D$:\n\n\n", "itemtype": "equation", "pos": 3851, "prevtext": "\n\n\\noindent Let $D$ be a subset of ${\\mathscr}{C}$, we use $desc_i(D)$ to denote the collection of the $i$-th coordinates of the codewords in $D$:\n\n\n", "index": 7, "text": "$$desc_i(D)=\\{x_i\\mid x\\in D\\}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"desc_{i}(D)=\\{x_{i}\\mid x\\in D\\}.\" display=\"block\"><mrow><mrow><mrow><mi>d</mi><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>s</mi><mo>\u2062</mo><msub><mi>c</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo stretchy=\"false\">{</mo><msub><mi>x</mi><mi>i</mi></msub><mo>\u2223</mo><mrow><mi>x</mi><mo>\u2208</mo><mi>D</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent For example, if $D=\\{100,~010\\}$, then\n$desc(D)=\\{100,~000,~010,~000\\}.$\n\nA code ${\\mathscr}{C}{\\subseteq} F^n$ is said to be a $t$-traceability code (or $t$-TA code for simplicity) if for arbitrary $D{\\subseteq}{\\mathscr}{C}$ with $|D|\\le t$ and arbitrary $y\\in desc(D)$, it holds that\n\n\n", "itemtype": "equation", "pos": 4031, "prevtext": "\n\n\\noindent The descendant set of $D$, $desc(D)$, is defined to be the collection of words of $F^n$ that can be produced by the codewords of $D$:\n\n\n", "index": 9, "text": "\\begin{equation*}\\label{}\n \\begin{aligned}\n   desc(D)=\\{y\\in F^n\\mid y_i\\in desc_i(D)\\}.\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle desc(D)=\\{y\\in F^{n}\\mid y_{i}\\in desc_{i}(D)\\}.\" display=\"inline\"><mrow><mrow><mrow><mi>d</mi><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>s</mi><mo>\u2062</mo><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mi>y</mi><mo>\u2208</mo><msup><mi>F</mi><mi>n</mi></msup></mrow><mo>\u2223</mo><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>\u2208</mo><mrow><mi>d</mi><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>s</mi><mo>\u2062</mo><msub><mi>c</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>D</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent We also use another criterion which is equivalent to the above one:\n\n\n", "itemtype": "equation", "pos": 4450, "prevtext": "\n\n\\noindent For example, if $D=\\{100,~010\\}$, then\n$desc(D)=\\{100,~000,~010,~000\\}.$\n\nA code ${\\mathscr}{C}{\\subseteq} F^n$ is said to be a $t$-traceability code (or $t$-TA code for simplicity) if for arbitrary $D{\\subseteq}{\\mathscr}{C}$ with $|D|\\le t$ and arbitrary $y\\in desc(D)$, it holds that\n\n\n", "index": 11, "text": "\\begin{equation*}\\label{}\n \\begin{aligned}\n   \\min_{x\\in D}d(x,y)<\\min_{z\\in{\\mathscr}{C}\\setminus D}d(z,y).\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\min_{x\\in D}d(x,y)&lt;\\min_{z\\in{\\mathscr{}}{C}\\setminus D}d(z,y).\" display=\"inline\"><mrow><mrow><mrow><mrow><munder><mi>min</mi><mrow><mi>x</mi><mo>\u2208</mo><mi>D</mi></mrow></munder><mo>\u2061</mo><mi>d</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mrow><mrow><munder><mi>min</mi><mrow><mi>z</mi><mo>\u2208</mo><mrow><mi>C</mi><mo>\u2216</mo><mi>D</mi></mrow></mrow></munder><mo>\u2061</mo><mi>d</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent Let $P_t(y)=\\{D{\\subseteq}{\\mathscr}{C}\\mid y\\in desc(D),~|D|\\le t\\}$ denote the collection of subsets of ${\\mathscr}{C}$ with at most $t$ codewords that can produce $y$, then the property of $t$-TA codes implies that\n\n\n", "itemtype": "equation", "pos": 4670, "prevtext": "\n\n\\noindent We also use another criterion which is equivalent to the above one:\n\n\n", "index": 13, "text": "$$\\max_{x\\in D}I(x,y)>\\max_{z\\in{\\mathscr}{C}\\setminus D}I(z,y).$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"\\max_{x\\in D}I(x,y)&gt;\\max_{z\\in{\\mathscr{}}{C}\\setminus D}I(z,y).\" display=\"block\"><mrow><mrow><mrow><mrow><munder><mi>max</mi><mrow><mi>x</mi><mo>\u2208</mo><mi>D</mi></mrow></munder><mo>\u2061</mo><mi>I</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&gt;</mo><mrow><mrow><munder><mi>max</mi><mrow><mi>z</mi><mo>\u2208</mo><mrow><mi>C</mi><mo>\u2216</mo><mi>D</mi></mrow></mrow></munder><mo>\u2061</mo><mi>I</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": " \\noindent That is to say, if we are given a word $y$ which is produced by an unknown set of at most $t$ codewords, then the codewords of ${\\mathscr}{C}$ which are at minimum distance to $y$ must lie in such a set. So given such $y$, we can trace back to some $x\\in\\cap_{D\\in P_t(y)} D$ in time $O(Mn)$, where $M$ denotes the size of the code.\n\nThough it may take some time to understand the definition, the following result stated in \\cite{chor1994tracing,chor1994IE3version} shows that it is very easy to construct traceability codes under certain conditions.\n\n\\begin{theorem}[\\rm{\\cite{chor1994tracing,chor1994IE3version}}]\\label{TAfromECC}\n   Let ${\\mathscr}{C}$ be a $q$-ary error correcting code of length $n$. Suppose the minimum Hamming distance of ${\\mathscr}{C}$ satisfies $d({\\mathscr}{C})>(1-1/t^2)n$, then ${\\mathscr}{C}$ is a $t$-TA code.\n\\end{theorem}\n\nThis sufficient condition is also necessary for MDS codes \\cite{MDS}. \nThe following theorem is a direct consequence of Theorem \\ref{TAfromECC}.\n\n\\begin{theorem}[\\rm{\\cite{combi01}}]\\label{TAfromRS}\n    Let $q$ be a prime power such that $q\\ge n+1$, then there exits a $t$-TA code of length $n$ with cardinality $q^{{\\lceil} n/t^2{\\rceil}}$.\n\\end{theorem}\n\nOne can prove Theorem \\ref{TAfromRS} by taking an appropriate Reed-Solomon code satisfying the condition of Theorem \\ref{TAfromECC}. When the alphabet size $q$ is sufficiently large, say, $q\\ge n+1$, Blackburn et al. \\cite{blackburnTA2011} suspected that the construction in Theorem \\ref{TAfromRS} was near optimal (They believed that the cardinality of $t$-TA codes could be bounded by $cq^{{\\lceil} n/t^2{\\rceil}}$ with some constant $c$). On the other hand, when $q$ is relative small, the method in Theorem \\ref{TAfromECC} does not provide large enough traceability codes. For example, the Plotkin bound (see \\cite{van2012introduction}) of error correcting codes suggests that for any $q$-ary $(n,M,d)$ code it holds that\n\n\n", "itemtype": "equation", "pos": -1, "prevtext": "\n\n\\noindent Let $P_t(y)=\\{D{\\subseteq}{\\mathscr}{C}\\mid y\\in desc(D),~|D|\\le t\\}$ denote the collection of subsets of ${\\mathscr}{C}$ with at most $t$ codewords that can produce $y$, then the property of $t$-TA codes implies that\n\n\n", "index": 15, "text": "$$\\{x\\in{\\mathscr}{C}\\mid d(x,y)=\\min_{z\\in{\\mathscr}{C}} d(z,y)\\}{\\subseteq}\\cap_{D\\in P_t(y)} D.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"\\{x\\in{\\mathscr{}}{C}\\mid d(x,y)=\\min_{z\\in{\\mathscr{}}{C}}d(z,y)\\}{\\subseteq}%&#10;\\cap_{D\\in P_{t}(y)}D.\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">{</mo><mrow><mi>x</mi><mo>\u2208</mo><mi>C</mi></mrow><mo>\u2223</mo><mrow><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><munder><mi>min</mi><mrow><mi>z</mi><mo>\u2208</mo><mi>C</mi></mrow></munder><mo>\u2061</mo><mi>d</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">}</mo></mrow><mo>\u2286</mo><mrow><msub><mo>\u2229</mo><mrow><mi>D</mi><mo>\u2208</mo><mrow><msub><mi>P</mi><mi>t</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></msub><mi>D</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent where $\\delta=d/n$ is the relative distance of the code. Substituting the condition of Theorem \\ref{TAfromECC}, i.e. $\\delta>1-1/t^2$, into (\\ref{Plotkin}), one can see the denominator $q\\delta-(q-1)$ is positive provided that $q\\le t^2$, implying $M\\le qn$. Therefore, when $q\\le t^2$, Theorem \\ref{TAfromECC} does not provide traceability codes with positive code rate.\n\nTaking into account the fact that there do not exist $t$-TA codes when $q\\le t$ (see, Lemma 1.6 of \\cite{combi01}), Barg and Kabatiansky \\cite{barg2004ipp} asked in 2004 the following question:\n\n\\begin{question}[\\rm{\\cite{barg2004ipp}}]\\label{openpro}\n    For positive integers $t$ and $q$ such that $t+1\\le q\\le t^2$, does there exist any $q$-ary $t$-traceability code with positive code rate?\n\\end{question}\n\nIndeed, ever since 2001, it was an open problem of Staddon, Stinson and Wei \\cite{combi01} to construct $t$-TA codes with $q<t^2$ and $M>q$. Since then, there were several papers focusing on this theme. For example, van Trung and Martirosyan \\cite{MOLS} constructed a class of such codes by using error correcting codes with large minimum distance obtained from mutually orthogonal latin squares. In the meanwhile, Lindkvist, Lofvenberg and Svanstrom \\cite{noECC} found a construction without the help of large minimum distance. Unfortunately, both constructions have small sizes and the code rates tend to zero very quickly. The turning point appeared in \\cite{Kabatiansky,Kabatiansky2}, where with a probabilistic argument, Kabatiansky constructed a $3$-ary 2-TA code with positive code rate. Later this result was generalized by Blackburn et al. in \\cite{blackburnTA2011}, where they proved the following theorem, again with a probabilistic method:\n\n\\begin{theorem}[\\rm{\\cite{blackburnTA2011}}]\n    There is a positive answer to Question \\ref{openpro} provided that $t^2-{\\lceil} t/2{\\rceil}+1\\le q$.\n\\end{theorem}\n\nHowever, their method does not apply for smaller $q$. In the concluding section of \\cite{blackburnTA2011}, the authors suspected that there may exist a \u00a1\u00aePlotkin bound\u00a1\u00af for traceability codes that forbids the existence of such codes. The aim of  this paper is to  give  a complete  positive answer to Barg-Kabatiansky's question.  Surprisingly, our construction is deterministic.\n\nBy concatenating an algebraic-geometry code (or AG code for simplicity) as the outer code and a simplex code (which is the dual code of the Hamming code) as the inner code, we prove the following theorem:\n\n\\begin{theorem}\\label{construction}\n    For all positive integers $t\\ge2$ and $q\\ge t+1$, there exists a $q$-ary $t$-TA code with positive code rate.\n\\end{theorem}\n\n\n\\section{Construction}\nIn this section we aim to prove Theorem \\ref{construction}. The idea is to use the well-known concatenating technique in the coding theory, but our treatment is very skillful.\n\nLet us take a $Q$-ary $(N,M,\\sigma N)$ code ${\\mathscr}{U}$ and a $q$-ary $(n,T,\\delta n)$ code ${\\mathscr}{V}$ to be the outer code and the inner code, respectively.\n\nWe will first consider the simpler case when $q$ is a prime power, since then we can make use of the existing codes over finite fields. For the non-prime power cases, the desired inner codes can be constructed by applying the subsequent Lemma \\ref{tecnical}.\n\nWe can always find an injective map $\\phi :Q\\longrightarrow{\\mathscr}{V}$ provided that $T=|{\\mathscr}{V}|\\ge Q$. The concatenated code ${\\mathscr}{C}$ will be a $q$-ary $(nN,M)$ code defined by the following map:\n\n\n", "itemtype": "equation", "pos": 7019, "prevtext": " \\noindent That is to say, if we are given a word $y$ which is produced by an unknown set of at most $t$ codewords, then the codewords of ${\\mathscr}{C}$ which are at minimum distance to $y$ must lie in such a set. So given such $y$, we can trace back to some $x\\in\\cap_{D\\in P_t(y)} D$ in time $O(Mn)$, where $M$ denotes the size of the code.\n\nThough it may take some time to understand the definition, the following result stated in \\cite{chor1994tracing,chor1994IE3version} shows that it is very easy to construct traceability codes under certain conditions.\n\n\\begin{theorem}[\\rm{\\cite{chor1994tracing,chor1994IE3version}}]\\label{TAfromECC}\n   Let ${\\mathscr}{C}$ be a $q$-ary error correcting code of length $n$. Suppose the minimum Hamming distance of ${\\mathscr}{C}$ satisfies $d({\\mathscr}{C})>(1-1/t^2)n$, then ${\\mathscr}{C}$ is a $t$-TA code.\n\\end{theorem}\n\nThis sufficient condition is also necessary for MDS codes \\cite{MDS}. \nThe following theorem is a direct consequence of Theorem \\ref{TAfromECC}.\n\n\\begin{theorem}[\\rm{\\cite{combi01}}]\\label{TAfromRS}\n    Let $q$ be a prime power such that $q\\ge n+1$, then there exits a $t$-TA code of length $n$ with cardinality $q^{{\\lceil} n/t^2{\\rceil}}$.\n\\end{theorem}\n\nOne can prove Theorem \\ref{TAfromRS} by taking an appropriate Reed-Solomon code satisfying the condition of Theorem \\ref{TAfromECC}. When the alphabet size $q$ is sufficiently large, say, $q\\ge n+1$, Blackburn et al. \\cite{blackburnTA2011} suspected that the construction in Theorem \\ref{TAfromRS} was near optimal (They believed that the cardinality of $t$-TA codes could be bounded by $cq^{{\\lceil} n/t^2{\\rceil}}$ with some constant $c$). On the other hand, when $q$ is relative small, the method in Theorem \\ref{TAfromECC} does not provide large enough traceability codes. For example, the Plotkin bound (see \\cite{van2012introduction}) of error correcting codes suggests that for any $q$-ary $(n,M,d)$ code it holds that\n\n\n", "index": 17, "text": "\\begin{equation}\\label{Plotkin}\n \\begin{aligned}\n   M\\le{\\frac}{qd}{qd-(q-1)n}={\\frac}{q\\delta}{q\\delta-(q-1)},\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle M\\leq{\\frac{}}{qd}{qd-(q-1)n}={\\frac{}}{q\\delta}{q\\delta-(q-1)},\" display=\"inline\"><mrow><mrow><mi>M</mi><mo>\u2264</mo><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mi>q</mi><mo>\u2062</mo><mi>d</mi></mrow></mfrac></mstyle><mo>\u2062</mo><mi>q</mi><mo>\u2062</mo><mi>d</mi></mrow><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>q</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>n</mi></mrow></mrow><mo>=</mo><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mi>q</mi><mo>\u2062</mo><mi>\u03b4</mi></mrow></mfrac></mstyle><mo>\u2062</mo><mi>q</mi><mo>\u2062</mo><mi>\u03b4</mi></mrow><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>q</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent where $\\phi(x_i)\\in{\\mathscr}{V}{\\subseteq}\\mathbb{F}_q^n$ for $1\\le i\\le N$. The following lemma establishes the minimum distance of the concatenated code ${\\mathscr}{C}$.\n\n\\begin{lemma}\\label{distanceofC}\n    Let ${\\mathscr}{C}$ be the code defined as above, then $d({\\mathscr}{C})\\ge\\sigma\\delta nN$.\n\\end{lemma}\n\n\\begin{proof}\n    Let $c^1=\\Phi(x^1)$, $c^2=\\Phi(x^2)$ be two arbitrary distinct codewords of ${\\mathscr}{C}$, where $x^1,~x^2\\in{\\mathscr}{U}$. Then $I(c^1,c^2)\\le n|\\{1\\le i\\le N\\mid x^1_i=x^2_i\\}|+(1-\\sigma)n|\\{1\\le i\\le N\\mid x^1_i\\neq x^2_i\\}|\\le n(1-\\delta)N+(1-\\sigma)n \\delta N=(1-\\sigma\\delta)nN$. It follows that $d(c^1,c^2)=nN-I(c^1,c^2)\\ge\\sigma\\delta nN$.\n\\end{proof}\n\n\n\nLet $n$ be fixed and $N$ approximate infinity, the code rate of ${\\mathscr}{C}$ is\n\n\n", "itemtype": "equation", "pos": 10672, "prevtext": "\n\n\\noindent where $\\delta=d/n$ is the relative distance of the code. Substituting the condition of Theorem \\ref{TAfromECC}, i.e. $\\delta>1-1/t^2$, into (\\ref{Plotkin}), one can see the denominator $q\\delta-(q-1)$ is positive provided that $q\\le t^2$, implying $M\\le qn$. Therefore, when $q\\le t^2$, Theorem \\ref{TAfromECC} does not provide traceability codes with positive code rate.\n\nTaking into account the fact that there do not exist $t$-TA codes when $q\\le t$ (see, Lemma 1.6 of \\cite{combi01}), Barg and Kabatiansky \\cite{barg2004ipp} asked in 2004 the following question:\n\n\\begin{question}[\\rm{\\cite{barg2004ipp}}]\\label{openpro}\n    For positive integers $t$ and $q$ such that $t+1\\le q\\le t^2$, does there exist any $q$-ary $t$-traceability code with positive code rate?\n\\end{question}\n\nIndeed, ever since 2001, it was an open problem of Staddon, Stinson and Wei \\cite{combi01} to construct $t$-TA codes with $q<t^2$ and $M>q$. Since then, there were several papers focusing on this theme. For example, van Trung and Martirosyan \\cite{MOLS} constructed a class of such codes by using error correcting codes with large minimum distance obtained from mutually orthogonal latin squares. In the meanwhile, Lindkvist, Lofvenberg and Svanstrom \\cite{noECC} found a construction without the help of large minimum distance. Unfortunately, both constructions have small sizes and the code rates tend to zero very quickly. The turning point appeared in \\cite{Kabatiansky,Kabatiansky2}, where with a probabilistic argument, Kabatiansky constructed a $3$-ary 2-TA code with positive code rate. Later this result was generalized by Blackburn et al. in \\cite{blackburnTA2011}, where they proved the following theorem, again with a probabilistic method:\n\n\\begin{theorem}[\\rm{\\cite{blackburnTA2011}}]\n    There is a positive answer to Question \\ref{openpro} provided that $t^2-{\\lceil} t/2{\\rceil}+1\\le q$.\n\\end{theorem}\n\nHowever, their method does not apply for smaller $q$. In the concluding section of \\cite{blackburnTA2011}, the authors suspected that there may exist a \u00a1\u00aePlotkin bound\u00a1\u00af for traceability codes that forbids the existence of such codes. The aim of  this paper is to  give  a complete  positive answer to Barg-Kabatiansky's question.  Surprisingly, our construction is deterministic.\n\nBy concatenating an algebraic-geometry code (or AG code for simplicity) as the outer code and a simplex code (which is the dual code of the Hamming code) as the inner code, we prove the following theorem:\n\n\\begin{theorem}\\label{construction}\n    For all positive integers $t\\ge2$ and $q\\ge t+1$, there exists a $q$-ary $t$-TA code with positive code rate.\n\\end{theorem}\n\n\n\\section{Construction}\nIn this section we aim to prove Theorem \\ref{construction}. The idea is to use the well-known concatenating technique in the coding theory, but our treatment is very skillful.\n\nLet us take a $Q$-ary $(N,M,\\sigma N)$ code ${\\mathscr}{U}$ and a $q$-ary $(n,T,\\delta n)$ code ${\\mathscr}{V}$ to be the outer code and the inner code, respectively.\n\nWe will first consider the simpler case when $q$ is a prime power, since then we can make use of the existing codes over finite fields. For the non-prime power cases, the desired inner codes can be constructed by applying the subsequent Lemma \\ref{tecnical}.\n\nWe can always find an injective map $\\phi :Q\\longrightarrow{\\mathscr}{V}$ provided that $T=|{\\mathscr}{V}|\\ge Q$. The concatenated code ${\\mathscr}{C}$ will be a $q$-ary $(nN,M)$ code defined by the following map:\n\n\n", "index": 19, "text": "\\begin{equation*}\\label{}\n \\begin{aligned}\n   \\Phi: \\mathbb{F}_Q^{N} & \\longrightarrow \\mathbb{F}_q^{nN}\\\\\n         (x_1,x_2,\\ldots,x_N)\\in{\\mathscr}{U} & \\longrightarrow (\\phi(x_1),\\phi(x_2),\\ldots,\\phi(x_N))\\in{\\mathscr}{C},\\\\\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\Phi:\\mathbb{F}_{Q}^{N}\" display=\"inline\"><mrow><mi mathvariant=\"normal\">\u03a6</mi><mo>:</mo><msubsup><mi>\ud835\udd3d</mi><mi>Q</mi><mi>N</mi></msubsup></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9X.m3\" class=\"ltx_Math\" alttext=\"\\displaystyle\\longrightarrow\\mathbb{F}_{q}^{nN}\" display=\"inline\"><mrow><mi/><mo>\u27f6</mo><msubsup><mi>\ud835\udd3d</mi><mi>q</mi><mrow><mi>n</mi><mo>\u2062</mo><mi>N</mi></mrow></msubsup></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9Xa.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle(x_{1},x_{2},\\ldots,x_{N})\\in{\\mathscr{}}{U}\" display=\"inline\"><mrow><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>N</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2208</mo><mi>U</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9Xa.m3\" class=\"ltx_Math\" alttext=\"\\displaystyle\\longrightarrow(\\phi(x_{1}),\\phi(x_{2}),\\ldots,\\phi(x_{N}))\\in{%&#10;\\mathscr{}}{C},\" display=\"inline\"><mrow><mrow><mi/><mo>\u27f6</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2208</mo><mi>C</mi></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent If we let $R({\\mathscr}{U})$ denote the code rate of the outer code ${\\mathscr}{U}$, then $M=Q^{NR({\\mathscr}{U})}$. Substituting $M$ into the formula (\\ref{R(C)}), we get\n\n\n", "itemtype": "equation", "pos": 11728, "prevtext": "\n\n\\noindent where $\\phi(x_i)\\in{\\mathscr}{V}{\\subseteq}\\mathbb{F}_q^n$ for $1\\le i\\le N$. The following lemma establishes the minimum distance of the concatenated code ${\\mathscr}{C}$.\n\n\\begin{lemma}\\label{distanceofC}\n    Let ${\\mathscr}{C}$ be the code defined as above, then $d({\\mathscr}{C})\\ge\\sigma\\delta nN$.\n\\end{lemma}\n\n\\begin{proof}\n    Let $c^1=\\Phi(x^1)$, $c^2=\\Phi(x^2)$ be two arbitrary distinct codewords of ${\\mathscr}{C}$, where $x^1,~x^2\\in{\\mathscr}{U}$. Then $I(c^1,c^2)\\le n|\\{1\\le i\\le N\\mid x^1_i=x^2_i\\}|+(1-\\sigma)n|\\{1\\le i\\le N\\mid x^1_i\\neq x^2_i\\}|\\le n(1-\\delta)N+(1-\\sigma)n \\delta N=(1-\\sigma\\delta)nN$. It follows that $d(c^1,c^2)=nN-I(c^1,c^2)\\ge\\sigma\\delta nN$.\n\\end{proof}\n\n\n\nLet $n$ be fixed and $N$ approximate infinity, the code rate of ${\\mathscr}{C}$ is\n\n\n", "index": 21, "text": "\\begin{equation}\\label{R(C)}\n \\begin{aligned}\n   R({\\mathscr}{C})=\\lim_{N\\rightarrow\\infty}{\\frac}{1}{nN}\\log_q M.\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle R({\\mathscr{}}{C})=\\lim_{N\\rightarrow\\infty}{\\frac{}}{1}{nN}\\log%&#10;_{q}M.\" display=\"inline\"><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munder><mo movablelimits=\"false\">lim</mo><mrow><mi>N</mi><mo>\u2192</mo><mi mathvariant=\"normal\">\u221e</mi></mrow></munder><mo>\u2061</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mn>1</mn></mfrac></mstyle><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>N</mi><mo>\u2062</mo><mrow><msub><mi>log</mi><mi>q</mi></msub><mo>\u2061</mo><mi>M</mi></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent If $q$, $Q$, $n$ are all fixed positive integers, then $R({\\mathscr}{C})$ is positive if and only if $R({\\mathscr}{U})$ is positive.\n\nIn the following we will introduce a technical lemma, which will be useful when constructing the inner code over a non-prime power alphabet.\n\n\\begin{lemma}\\label{tecnical}\n    Let $s$ be a positive integer. For each $1\\le i\\le s$, let $n_i,q_i$ be positive integers and $F_i$ be an alphabet set of size $q_i$, respectively. Let ${\\mathscr}{W}_i{\\subseteq} F_i^{n_i}$ be a code with parameters $(n_i,T_i,\\delta_in_i)$. Then there exists a $q$-ary code ${\\mathscr}{W}{\\subseteq} F^n$ with parameters $(n,T,\\delta n)$, where $F=F_1\\times\\cdots\\times F_s$, $T=\\min_{1\\le i\\le s} T_i$, $q=\\prod_{i=1}^s q_i$, $n=\\prod_{i=1}^s n_i$,  $\\delta=1-\\prod_{i=1}^s(1-\\delta_i)$.\n    \n\n\n\\end{lemma}\n\n\\begin{proof}\n    For $w^1=(w^1_1,w^1_2,\\ldots,w^1_{n_1})\\in{\\mathscr}{W}_1$ and $w^2=(w^2_1,w^2_2,\\ldots,w^2_{n_2})\\in{\\mathscr}{W}_2$, we define the circle product:\n    \n", "itemtype": "equation", "pos": 12057, "prevtext": "\n\n\\noindent If we let $R({\\mathscr}{U})$ denote the code rate of the outer code ${\\mathscr}{U}$, then $M=Q^{NR({\\mathscr}{U})}$. Substituting $M$ into the formula (\\ref{R(C)}), we get\n\n\n", "index": 23, "text": "\\begin{equation}\\label{R(C)2}\n \\begin{aligned}\n   R({\\mathscr}{C})=\\lim_{N\\rightarrow\\infty}{\\frac}{1}{nN}\\log_q Q^{NR({\\mathscr}{U})}={\\frac}{\\log_q Q}{n}R({\\mathscr}{U}).\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle R({\\mathscr{}}{C})=\\lim_{N\\rightarrow\\infty}{\\frac{}}{1}{nN}\\log%&#10;_{q}Q^{NR({\\mathscr{}}{U})}={\\frac{}}{\\log_{q}Q}{n}R({\\mathscr{}}{U}).\" display=\"inline\"><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munder><mo movablelimits=\"false\">lim</mo><mrow><mi>N</mi><mo>\u2192</mo><mi mathvariant=\"normal\">\u221e</mi></mrow></munder><mo>\u2061</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mn>1</mn></mfrac></mstyle><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>N</mi><mo>\u2062</mo><mrow><msub><mi>log</mi><mi>q</mi></msub><mo>\u2061</mo><msup><mi>Q</mi><mrow><mi>N</mi><mo>\u2062</mo><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow></mrow></msup></mrow></mrow></mrow><mo>=</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><msub><mi>log</mi><mi>q</mi></msub><mo>\u2061</mo><mi>Q</mi></mrow></mfrac></mstyle><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\\noindent to be\n\n", "itemtype": "equation", "pos": 13262, "prevtext": "\n\n\\noindent If $q$, $Q$, $n$ are all fixed positive integers, then $R({\\mathscr}{C})$ is positive if and only if $R({\\mathscr}{U})$ is positive.\n\nIn the following we will introduce a technical lemma, which will be useful when constructing the inner code over a non-prime power alphabet.\n\n\\begin{lemma}\\label{tecnical}\n    Let $s$ be a positive integer. For each $1\\le i\\le s$, let $n_i,q_i$ be positive integers and $F_i$ be an alphabet set of size $q_i$, respectively. Let ${\\mathscr}{W}_i{\\subseteq} F_i^{n_i}$ be a code with parameters $(n_i,T_i,\\delta_in_i)$. Then there exists a $q$-ary code ${\\mathscr}{W}{\\subseteq} F^n$ with parameters $(n,T,\\delta n)$, where $F=F_1\\times\\cdots\\times F_s$, $T=\\min_{1\\le i\\le s} T_i$, $q=\\prod_{i=1}^s q_i$, $n=\\prod_{i=1}^s n_i$,  $\\delta=1-\\prod_{i=1}^s(1-\\delta_i)$.\n    \n\n\n\\end{lemma}\n\n\\begin{proof}\n    For $w^1=(w^1_1,w^1_2,\\ldots,w^1_{n_1})\\in{\\mathscr}{W}_1$ and $w^2=(w^2_1,w^2_2,\\ldots,w^2_{n_2})\\in{\\mathscr}{W}_2$, we define the circle product:\n    \n", "index": 25, "text": "\\begin{equation*}\\label{}\n    \\begin{aligned}\n        \\circ: F_1^{n_1}\\times F_2^{n_2}&\\longrightarrow (F_1\\times F_2)^{n_1n_2},\\\\\n   \\end{aligned}\n   \\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\circ:F_{1}^{n_{1}}\\times F_{2}^{n_{2}}\" display=\"inline\"><mrow><mo>\u2218</mo><mo>:</mo><msubsup><mi>F</mi><mn>1</mn><msub><mi>n</mi><mn>1</mn></msub></msubsup><mo>\u00d7</mo><msubsup><mi>F</mi><mn>2</mn><msub><mi>n</mi><mn>2</mn></msub></msubsup></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10X.m3\" class=\"ltx_Math\" alttext=\"\\displaystyle\\longrightarrow(F_{1}\\times F_{2})^{n_{1}n_{2}},\" display=\"inline\"><mrow><mrow><mi/><mo>\u27f6</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>\u00d7</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><msub><mi>n</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>n</mi><mn>2</mn></msub></mrow></msup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\\noindent Apply this operation repeatedly for $s$ times, we get\n\n", "itemtype": "equation", "pos": 13445, "prevtext": "\n\\noindent to be\n\n", "index": 27, "text": "$$w^1\\circ w^2 =((w^1_1,w^2_1),\\ldots,(w^1_1,w^2_{n_2}),\\ldots,(w^1_{n_1},w^2_1),\\ldots,(w^1_{n_1},w^2_{n_2})).$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m1\" class=\"ltx_Math\" alttext=\"w^{1}\\circ w^{2}=((w^{1}_{1},w^{2}_{1}),\\ldots,(w^{1}_{1},w^{2}_{n_{2}}),%&#10;\\ldots,(w^{1}_{n_{1}},w^{2}_{1}),\\ldots,(w^{1}_{n_{1}},w^{2}_{n_{2}})).\" display=\"block\"><mrow><mrow><mrow><msup><mi>w</mi><mn>1</mn></msup><mo>\u2218</mo><msup><mi>w</mi><mn>2</mn></msup></mrow><mo>=</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><mn>1</mn><mn>1</mn></msubsup><mo>,</mo><msubsup><mi>w</mi><mn>1</mn><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><mn>1</mn><mn>1</mn></msubsup><mo>,</mo><msubsup><mi>w</mi><msub><mi>n</mi><mn>2</mn></msub><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><msub><mi>n</mi><mn>1</mn></msub><mn>1</mn></msubsup><mo>,</mo><msubsup><mi>w</mi><mn>1</mn><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><msub><mi>n</mi><mn>1</mn></msub><mn>1</mn></msubsup><mo>,</mo><msubsup><mi>w</mi><msub><mi>n</mi><mn>2</mn></msub><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\\noindent where $w^i\\in{\\mathscr}{W}_i$. Obviously, by definition, $w^1\\circ\\cdots\\circ w^s\\in(F_1\\times\\cdots\\times F_s)^{n_1\\cdots n_s}=F^n$. Without loss of generality, assume that $T_1\\le T_2\\le\\cdots\\le T_s$ and ${\\mathscr}{W}_i=\\{w^{ij}:1\\le j\\le T_i\\}$ for every $1\\le i\\le s$.\n\nNow we can construct the desired code ${\\mathscr}{W}$ as\n\n", "itemtype": "equation", "pos": 13623, "prevtext": "\n\\noindent Apply this operation repeatedly for $s$ times, we get\n\n", "index": 29, "text": "$$\\circ_{i=1}^s w^i:=w^1\\circ \\cdots \\circ w^s=((w^1_1,\\ldots,w^s_1),\\ldots,(w^1_{n_1},\\ldots,w^s_{n_s})),$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m1\" class=\"ltx_Math\" alttext=\"\\circ_{i=1}^{s}w^{i}:=w^{1}\\circ\\cdots\\circ w^{s}=((w^{1}_{1},\\ldots,w^{s}_{1}%&#10;),\\ldots,(w^{1}_{n_{1}},\\ldots,w^{s}_{n_{s}})),\" display=\"block\"><mrow><msubsup><mo>\u2218</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>s</mi></msubsup><msup><mi>w</mi><mi>i</mi></msup><mo>:=</mo><msup><mi>w</mi><mn>1</mn></msup><mo>\u2218</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2218</mo><msup><mi>w</mi><mi>s</mi></msup><mo>=</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><mn>1</mn><mn>1</mn></msubsup><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msubsup><mi>w</mi><mn>1</mn><mi>s</mi></msubsup><mo stretchy=\"false\">)</mo></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><msub><mi>n</mi><mn>1</mn></msub><mn>1</mn></msubsup><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msubsup><mi>w</mi><msub><mi>n</mi><mi>s</mi></msub><mi>s</mi></msubsup><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\\noindent Note that for every $1\\le i\\le s$ and $1\\le j\\le T_1$, the codeword $w^{ij}$ appears exactly once in the circle products formulating ${\\mathscr}{W}$. Thus it is easy to see that ${\\mathscr}{W}$ is indeed a $q$-ary $(n,T_1)$ code. It remains to verify the code ${\\mathscr}{W}$ has the required minimum distance. Notice that for $1\\le j\\neq k\\le T_1$ and two distinct codewords $\\circ_{i=1}^s w^{ij},\\circ_{i=1}^s w^{ik}\\in{\\mathscr}{W}$, it holds that $I(\\circ_{i=1}^s w^{ij},\\circ_{i=1}^s w^{ik})=\\prod_{i=1}^s I(w^{ij},w^{ik})\\le\\prod_{i=1}^s(1-\\delta_i)n_i=n\\prod_{i=1}^s(1-\\delta_i)$. Then the condition on the minimum distance of ${\\mathscr}{W}$ follows immediately.\n\\end{proof}\n\n\\begin{example}\n   Take the $[{\\frac}{q^k-1}{q-1},k,q^{k-1}]$ simplex code (see \\cite{van2012introduction}) defined on the finite field $\\mathbb{F}_q$, as an example. Suppose we want to construct a 6-ary code ${\\mathscr}{W}$ from a $2$-ary code ${\\mathscr}{W}_1$ and a 3-ary code ${\\mathscr}{W}_2$. Take ${\\mathscr}{W}_1$ to be a $[2^{k_1}-1,k_1,2^{k_1-1}]$ code (with parameters indexed by $(n_1,T_1,\\delta_1 n_1)$) and ${\\mathscr}{W}_2$ to be a $[{\\frac}{3^{k_2}-1}{2},k_2,3^{k_2-1}]$ code (with parameters indexed by $(n_2,T_2,\\delta_2 n_2)$), where $k_1$, $k_2$ are positive integers. Then by Lemma \\ref{tecnical} we can obtain a 6-ary $(n,T,\\delta n)$ code ${\\mathscr}{W}$ such that $n=n_1n_2$, $T=\\min\\{T_1,T_2\\}$, $\\delta=1-(1-\\delta_1)(1-\\delta_2)$.\n\\end{example}\n\nThe above construction has two useful properties. On one hand, one can deduce $1-\\delta_1<1/2$ and $1-\\delta_2<1/3$, thus it follows that $1-\\delta<1/6$. This interesting observation will be generalized and discussed in detail in the lemma below. On the other hand, if we want to make $|{\\mathscr}{W}|=T$ larger than some integer $M_0$, it suffices to choose sufficiently large $k_1$ and $k_2$.\n\n\n\\begin{lemma}\\label{preparation}\n    For arbitrary positive integers $t\\ge2$ and $q\\ge t+1$, there exist both a $Q$-ary $(N,M,\\sigma N)$ code ${\\mathscr}{U}$ and a $q$-ary $(n,T,\\delta n)$ code ${\\mathscr}{V}$ such that the following conditions hold simultaneously:\n    \\begin{itemize}\n      \\item [(a)] $R({\\mathscr}{U})>0$,\n      \\item [(b)] $0<\\beta<{\\frac}{1-\\alpha t^2}{t-\\alpha t^2}$, $\\alpha<1/t^2$, where $\\beta=1-\\delta$ and $\\alpha=1-\\sigma$,\n      \\item [(c)] $T\\ge Q$,\n    \\end{itemize}\n     In particular, all conditions can hold simultaneously when $q=t+1$.\n\\end{lemma}\n\n\\begin{remark}\n    We would like to illustrate the essence of above conditions before proving Lemma \\ref{preparation}. Condition $(a)$ implies that the concatenated code ${\\mathscr}{C}$ defined by $\\Phi({\\mathscr}{U})$ has a positive code rate. Condition $(b)$ guarantees the $t$-traceability of ${\\mathscr}{C}$, which will be proved in Lemma \\ref{traceability}. Condition $(c)$ makes sure that the maps $\\phi$ and $\\Phi$ defined in the beginning of this section do exist.\n\\end{remark}\n\n\\begin{proof}[\\bf{Proof of Lemma \\ref{preparation}}]\n    Let us first assume that $q$ is a prime power. Take ${\\mathscr}{V}$ to be the $[{\\frac}{q^k-1}{q-1},k,q^{k-1}]$ simplex code over $\\mathbb{F}_q$ and ${\\mathscr}{U}$ to be the AG code over $\\mathbb{F}_Q$ attaining the bound (see \\cite{AGcodes})\n\n\n", "itemtype": "equation", "pos": 14075, "prevtext": "\n\\noindent where $w^i\\in{\\mathscr}{W}_i$. Obviously, by definition, $w^1\\circ\\cdots\\circ w^s\\in(F_1\\times\\cdots\\times F_s)^{n_1\\cdots n_s}=F^n$. Without loss of generality, assume that $T_1\\le T_2\\le\\cdots\\le T_s$ and ${\\mathscr}{W}_i=\\{w^{ij}:1\\le j\\le T_i\\}$ for every $1\\le i\\le s$.\n\nNow we can construct the desired code ${\\mathscr}{W}$ as\n\n", "index": 31, "text": "$${\\mathscr}{W}=\\{w^{1j}\\circ w^{2j}\\circ\\cdots\\circ w^{sj}\\mid w^{ij}\\in{\\mathscr}{W}_i,~1\\le j\\le T_1\\}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m1\" class=\"ltx_Math\" alttext=\"{\\mathscr{}}{W}=\\{w^{1j}\\circ w^{2j}\\circ\\cdots\\circ w^{sj}\\mid w^{ij}\\in{%&#10;\\mathscr{}}{W}_{i},~{}1\\leq j\\leq T_{1}\\}.\" display=\"block\"><mrow><mrow><mi>W</mi><mo>=</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msup><mi>w</mi><mrow><mn>1</mn><mo>\u2062</mo><mi>j</mi></mrow></msup><mo>\u2218</mo><msup><mi>w</mi><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi></mrow></msup><mo>\u2218</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2218</mo><msup><mi>w</mi><mrow><mi>s</mi><mo>\u2062</mo><mi>j</mi></mrow></msup></mrow><mo>\u2223</mo><mrow><mrow><msup><mi>w</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msup><mo>\u2208</mo><msub><mi>W</mi><mi>i</mi></msub></mrow><mo rspace=\"5.8pt\">,</mo><mrow><mn>1</mn><mo>\u2264</mo><mi>j</mi><mo>\u2264</mo><msub><mi>T</mi><mn>1</mn></msub></mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent where $k$, $q$ and $Q$ are undetermined positive integers. To make sure that $R({\\mathscr}{U})>0$, by (\\ref{AG bound}) we only need to guarantee\n\n\n", "itemtype": "equation", "pos": 17422, "prevtext": "\n\\noindent Note that for every $1\\le i\\le s$ and $1\\le j\\le T_1$, the codeword $w^{ij}$ appears exactly once in the circle products formulating ${\\mathscr}{W}$. Thus it is easy to see that ${\\mathscr}{W}$ is indeed a $q$-ary $(n,T_1)$ code. It remains to verify the code ${\\mathscr}{W}$ has the required minimum distance. Notice that for $1\\le j\\neq k\\le T_1$ and two distinct codewords $\\circ_{i=1}^s w^{ij},\\circ_{i=1}^s w^{ik}\\in{\\mathscr}{W}$, it holds that $I(\\circ_{i=1}^s w^{ij},\\circ_{i=1}^s w^{ik})=\\prod_{i=1}^s I(w^{ij},w^{ik})\\le\\prod_{i=1}^s(1-\\delta_i)n_i=n\\prod_{i=1}^s(1-\\delta_i)$. Then the condition on the minimum distance of ${\\mathscr}{W}$ follows immediately.\n\\end{proof}\n\n\\begin{example}\n   Take the $[{\\frac}{q^k-1}{q-1},k,q^{k-1}]$ simplex code (see \\cite{van2012introduction}) defined on the finite field $\\mathbb{F}_q$, as an example. Suppose we want to construct a 6-ary code ${\\mathscr}{W}$ from a $2$-ary code ${\\mathscr}{W}_1$ and a 3-ary code ${\\mathscr}{W}_2$. Take ${\\mathscr}{W}_1$ to be a $[2^{k_1}-1,k_1,2^{k_1-1}]$ code (with parameters indexed by $(n_1,T_1,\\delta_1 n_1)$) and ${\\mathscr}{W}_2$ to be a $[{\\frac}{3^{k_2}-1}{2},k_2,3^{k_2-1}]$ code (with parameters indexed by $(n_2,T_2,\\delta_2 n_2)$), where $k_1$, $k_2$ are positive integers. Then by Lemma \\ref{tecnical} we can obtain a 6-ary $(n,T,\\delta n)$ code ${\\mathscr}{W}$ such that $n=n_1n_2$, $T=\\min\\{T_1,T_2\\}$, $\\delta=1-(1-\\delta_1)(1-\\delta_2)$.\n\\end{example}\n\nThe above construction has two useful properties. On one hand, one can deduce $1-\\delta_1<1/2$ and $1-\\delta_2<1/3$, thus it follows that $1-\\delta<1/6$. This interesting observation will be generalized and discussed in detail in the lemma below. On the other hand, if we want to make $|{\\mathscr}{W}|=T$ larger than some integer $M_0$, it suffices to choose sufficiently large $k_1$ and $k_2$.\n\n\n\\begin{lemma}\\label{preparation}\n    For arbitrary positive integers $t\\ge2$ and $q\\ge t+1$, there exist both a $Q$-ary $(N,M,\\sigma N)$ code ${\\mathscr}{U}$ and a $q$-ary $(n,T,\\delta n)$ code ${\\mathscr}{V}$ such that the following conditions hold simultaneously:\n    \\begin{itemize}\n      \\item [(a)] $R({\\mathscr}{U})>0$,\n      \\item [(b)] $0<\\beta<{\\frac}{1-\\alpha t^2}{t-\\alpha t^2}$, $\\alpha<1/t^2$, where $\\beta=1-\\delta$ and $\\alpha=1-\\sigma$,\n      \\item [(c)] $T\\ge Q$,\n    \\end{itemize}\n     In particular, all conditions can hold simultaneously when $q=t+1$.\n\\end{lemma}\n\n\\begin{remark}\n    We would like to illustrate the essence of above conditions before proving Lemma \\ref{preparation}. Condition $(a)$ implies that the concatenated code ${\\mathscr}{C}$ defined by $\\Phi({\\mathscr}{U})$ has a positive code rate. Condition $(b)$ guarantees the $t$-traceability of ${\\mathscr}{C}$, which will be proved in Lemma \\ref{traceability}. Condition $(c)$ makes sure that the maps $\\phi$ and $\\Phi$ defined in the beginning of this section do exist.\n\\end{remark}\n\n\\begin{proof}[\\bf{Proof of Lemma \\ref{preparation}}]\n    Let us first assume that $q$ is a prime power. Take ${\\mathscr}{V}$ to be the $[{\\frac}{q^k-1}{q-1},k,q^{k-1}]$ simplex code over $\\mathbb{F}_q$ and ${\\mathscr}{U}$ to be the AG code over $\\mathbb{F}_Q$ attaining the bound (see \\cite{AGcodes})\n\n\n", "index": 33, "text": "\\begin{equation}\\label{AG bound}\n \\begin{aligned}\n   \\sigma\\ge1-R({\\mathscr}{U})-(\\sqrt{Q}-1)^{-1}+o(1),\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sigma\\geq 1-R({\\mathscr{}}{U})-(\\sqrt{Q}-1)^{-1}+o(1),\" display=\"inline\"><mrow><mrow><mi>\u03c3</mi><mo>\u2265</mo><mrow><mrow><mn>1</mn><mo>-</mo><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><msqrt><mi>Q</mi></msqrt><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msup></mrow><mo>+</mo><mrow><mi>o</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\nWe can compute $\\beta$ directly through\n\n\n", "itemtype": "equation", "pos": 17714, "prevtext": "\n\n\\noindent where $k$, $q$ and $Q$ are undetermined positive integers. To make sure that $R({\\mathscr}{U})>0$, by (\\ref{AG bound}) we only need to guarantee\n\n\n", "index": 35, "text": "\\begin{equation}\\label{alpha1}\n \\begin{aligned}\n   \\alpha=1-\\sigma>(\\sqrt{Q}-1)^{-1}.\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\alpha=1-\\sigma&gt;(\\sqrt{Q}-1)^{-1}.\" display=\"inline\"><mrow><mrow><mi>\u03b1</mi><mo>=</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03c3</mi></mrow><mo>&gt;</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><msqrt><mi>Q</mi></msqrt><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msup></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent It is easy to see\n\n\n", "itemtype": "equation", "pos": 17871, "prevtext": "\nWe can compute $\\beta$ directly through\n\n\n", "index": 37, "text": "\\begin{equation*}\\label{}\n \\begin{aligned}\n   \\beta=1-\\delta=1-{\\frac}{q^{k-1}}{(q^k-1)/(q-1)}=1-{\\frac}{q^k-q^{k-1}}{q^k-1}={\\frac}{q^{k-1}-1}{q^k-1}.\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\beta=1-\\delta=1-{\\frac{}}{q^{k-1}}{(q^{k}-1)/(q-1)}=1-{\\frac{}}{%&#10;q^{k}-q^{k-1}}{q^{k}-1}={\\frac{}}{q^{k-1}-1}{q^{k}-1}.\" display=\"inline\"><mrow><mrow><mi>\u03b2</mi><mo>=</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b4</mi></mrow><mo>=</mo><mrow><mn>1</mn><mo>-</mo><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><msup><mi>q</mi><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup></mfrac></mstyle><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>q</mi><mi>k</mi></msup><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>/</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>q</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mn>1</mn><mo>-</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><msup><mi>q</mi><mi>k</mi></msup><mo>-</mo><msup><mi>q</mi><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup></mrow></mfrac></mstyle><mo>\u2062</mo><msup><mi>q</mi><mi>k</mi></msup></mrow><mo>-</mo><mn>1</mn></mrow><mo>=</mo><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><msup><mi>q</mi><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></msup><mo>-</mo><mn>1</mn></mrow></mfrac></mstyle><mo>\u2062</mo><msup><mi>q</mi><mi>k</mi></msup></mrow><mo>-</mo><mn>1</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent Therefore, setting\n\n\n", "itemtype": "equation", "pos": 18084, "prevtext": "\n\n\\noindent It is easy to see\n\n\n", "index": 39, "text": "\\begin{equation}\\label{beta}\n \\begin{aligned}\n   \\beta<1/q.\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\beta&lt;1/q.\" display=\"inline\"><mrow><mrow><mi>\u03b2</mi><mo>&lt;</mo><mrow><mn>1</mn><mo>/</mo><mi>q</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent i.e.,\n\n\n", "itemtype": "equation", "pos": 18205, "prevtext": "\n\n\\noindent Therefore, setting\n\n\n", "index": 41, "text": "\\begin{equation*}\\label{}\n \\begin{aligned}\n   {\\frac}{1-\\alpha t^2}{t-\\alpha t^2}={\\frac}{1}{q},\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\frac{}}{1-\\alpha t^{2}}{t-\\alpha t^{2}}={\\frac{}}{1}{q},\" display=\"inline\"><mrow><mrow><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mn>1</mn><mo>-</mo><mrow><mi>\u03b1</mi><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup></mrow></mrow></mfrac></mstyle><mo>\u2062</mo><mi>t</mi></mrow><mo>-</mo><mrow><mi>\u03b1</mi><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup></mrow></mrow><mo>=</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mn>1</mn></mfrac></mstyle><mo>\u2062</mo><mi>q</mi></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent is sufficient for condition (b).\nTaking inequality (\\ref{alpha1}) into account, we can pick $Q$ as the smallest prime power larger than or equal to\n\n\n", "itemtype": "equation", "pos": 18351, "prevtext": "\n\n\\noindent i.e.,\n\n\n", "index": 43, "text": "\\begin{equation}\\label{alpha}\n \\begin{aligned}\n   \\alpha={\\frac}{q-t}{t^2(q-1)}\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\alpha={\\frac{}}{q-t}{t^{2}(q-1)}\" display=\"inline\"><mrow><mi>\u03b1</mi><mo>=</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mi>q</mi><mo>-</mo><mi>t</mi></mrow></mfrac></mstyle><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>q</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent One can verify that (\\ref{alpha1}) holds under (\\ref{alpha}) and (\\ref{alphaQ}). In the meanwhile, the code rate of ${\\mathscr}{U}$ satisfies\n\n\n", "itemtype": "equation", "pos": 18621, "prevtext": "\n\n\\noindent is sufficient for condition (b).\nTaking inequality (\\ref{alpha1}) into account, we can pick $Q$ as the smallest prime power larger than or equal to\n\n\n", "index": 45, "text": "\\begin{equation}\\label{alphaQ}\n \\begin{aligned}\n   ({\\frac}{2t^2(q-1)}{q-t}+1)^2.\n \\end{aligned}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle({\\frac{}}{2t^{2}(q-1)}{q-t}+1)^{2}.\" display=\"inline\"><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mn>2</mn><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>q</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mfrac></mstyle><mo>\u2062</mo><mi>q</mi></mrow><mo>-</mo><mi>t</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\\noindent Now $R({\\mathscr}{U})$ is positive since we have assumed that $q\\ge t+1$. In order to fulfill condition (c), it suffices to choose large enough $k$ such that $T=|{\\mathscr}{V}|=q^k\\ge Q$.\n\nNow it remains to verify the non-prime power cases. For a non-prime power $q$, let $q=q_1q_2\\cdots q_s$ be its natural decomposition, where $q_i,1\\le i\\le s$, are prime powers based on distinct primes. For each $i$, let ${\\mathscr}{V}_i$ be a $[{\\frac}{q_i^{k_i}-1}{q_i-1},k_i,q_i^{k_i-1}]$ simplex code over $\\mathbb{F}_{q_i}$, where the dimensions $k_i$ are leaving undetermined. It seems more convenient to view each ${\\mathscr}{V}_i$ as an $(n_i,T_i,\\delta_i n_i)$ code. Assume that $T_1\\le\\cdots\\le T_s$. In order to construct a $q$-ary code ${\\mathscr}{V}$ satisfying the conditions mentioned in the lemma, let us apply the `$\\circ$' operation defined in Lemma \\ref{tecnical} recursively to the ${\\mathscr}{V}_i's$. As a consequence, it leads to a $q$-ary $(n,T,\\delta n)$  code ${\\mathscr}{V}$ over some alphabet $F$ such that $q=\\prod_{i=1}^s q_i$, $n=\\prod_{i=1}^s n_i$, $\\delta=1-\\prod_{i=1}^s(1-\\delta_i)$, $F={\\mathscr}{F}_{q_1}\\times\\cdots\\times{\\mathscr}{F}_{q_s}$, $T=\\min_{1\\le i\\le s} T_i=T_1$. An important feature of this construction is that $\\prod_{i=1}^s(1-\\delta_i)<\\prod_{i=1}^s 1/q_i=1/q$ since we have $1-\\delta_i<1/q_i$ for each $i$ (see formula (\\ref{beta})). It is equivalent to say $1-\\delta<1/q$, which coincides with (\\ref{beta}). Therefore, we can apply a similar procedure as we have done in the prime power case to produce the desired inner and outer codes. The only difference is that to satisfy $(c)$ we should pick sufficiently large $k_1$ such that $T=T_1=q_1^{k_1}\\ge Q$.\n\\end{proof}\n\n\\begin{lemma}\\label{traceability}\n    Let ${\\mathscr}{U}$ and ${\\mathscr}{V}$ be the codes constructed in Lemma \\ref{preparation}, then the concatenated code ${\\mathscr}{C}$ defined by the maps $\\phi$ and $\\Phi$ has the $t$-traceability.\n\\end{lemma}\n\n\\begin{proof}\n    Note that ${\\mathscr}{C}{\\subseteq} F^{nN}$ for some alphabet $F$. In order to show that ${\\mathscr}{C}$ has the $t$-traceability, it suffices to show for arbitrary $D=\\{x^1,\\ldots,x^t\\}{\\subseteq}{\\mathscr}{C}$ and all $y\\in desc(D)$, it holds that\n\n\n", "itemtype": "equation", "pos": 18887, "prevtext": "\n\n\\noindent One can verify that (\\ref{alpha1}) holds under (\\ref{alpha}) and (\\ref{alphaQ}). In the meanwhile, the code rate of ${\\mathscr}{U}$ satisfies\n\n\n", "index": 47, "text": "\\begin{equation*}\\label{}\n \\begin{aligned}\n   R({\\mathscr}{U})\\ge\\alpha-(\\sqrt{Q}-1)^{-1}\\ge{\\frac}{q-t}{2t^2(q-1)}.\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle R({\\mathscr{}}{U})\\geq\\alpha-(\\sqrt{Q}-1)^{-1}\\geq{\\frac{}}{q-t}%&#10;{2t^{2}(q-1)}.\" display=\"inline\"><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2265</mo><mrow><mi>\u03b1</mi><mo>-</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><msqrt><mi>Q</mi></msqrt><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msup></mrow><mo>\u2265</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mi>q</mi><mo>-</mo><mi>t</mi></mrow></mfrac></mstyle><mo>\u2062</mo><mn>2</mn><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>q</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\n\\noindent It is not hard to see $\\max_{x\\in D}I(x,y)\\ge nN/t$. We claim that $\\max_{z\\in{\\mathscr}{C}\\setminus D}I(z,y)<nN/t$. Then the lemma will follow from this claim. Recall the parameters $\\alpha$, $\\beta$, $\\delta$, $\\sigma$ defined in Lemma \\ref{preparation}.\nTo prove the claim, take an arbitrary $z\\in{\\mathscr}{C}\\setminus D$, let $w^1,\\ldots,w^t,w\\in{\\mathscr}{U}$ denote the distinct codewords of ${\\mathscr}{U}$ such that $\\Phi(w^i)=x^i$ for $1\\le i\\le t$ and $\\Phi(w)=z$, then it holds that\n\n\n", "itemtype": "equation", "pos": 21279, "prevtext": "\n\\noindent Now $R({\\mathscr}{U})$ is positive since we have assumed that $q\\ge t+1$. In order to fulfill condition (c), it suffices to choose large enough $k$ such that $T=|{\\mathscr}{V}|=q^k\\ge Q$.\n\nNow it remains to verify the non-prime power cases. For a non-prime power $q$, let $q=q_1q_2\\cdots q_s$ be its natural decomposition, where $q_i,1\\le i\\le s$, are prime powers based on distinct primes. For each $i$, let ${\\mathscr}{V}_i$ be a $[{\\frac}{q_i^{k_i}-1}{q_i-1},k_i,q_i^{k_i-1}]$ simplex code over $\\mathbb{F}_{q_i}$, where the dimensions $k_i$ are leaving undetermined. It seems more convenient to view each ${\\mathscr}{V}_i$ as an $(n_i,T_i,\\delta_i n_i)$ code. Assume that $T_1\\le\\cdots\\le T_s$. In order to construct a $q$-ary code ${\\mathscr}{V}$ satisfying the conditions mentioned in the lemma, let us apply the `$\\circ$' operation defined in Lemma \\ref{tecnical} recursively to the ${\\mathscr}{V}_i's$. As a consequence, it leads to a $q$-ary $(n,T,\\delta n)$  code ${\\mathscr}{V}$ over some alphabet $F$ such that $q=\\prod_{i=1}^s q_i$, $n=\\prod_{i=1}^s n_i$, $\\delta=1-\\prod_{i=1}^s(1-\\delta_i)$, $F={\\mathscr}{F}_{q_1}\\times\\cdots\\times{\\mathscr}{F}_{q_s}$, $T=\\min_{1\\le i\\le s} T_i=T_1$. An important feature of this construction is that $\\prod_{i=1}^s(1-\\delta_i)<\\prod_{i=1}^s 1/q_i=1/q$ since we have $1-\\delta_i<1/q_i$ for each $i$ (see formula (\\ref{beta})). It is equivalent to say $1-\\delta<1/q$, which coincides with (\\ref{beta}). Therefore, we can apply a similar procedure as we have done in the prime power case to produce the desired inner and outer codes. The only difference is that to satisfy $(c)$ we should pick sufficiently large $k_1$ such that $T=T_1=q_1^{k_1}\\ge Q$.\n\\end{proof}\n\n\\begin{lemma}\\label{traceability}\n    Let ${\\mathscr}{U}$ and ${\\mathscr}{V}$ be the codes constructed in Lemma \\ref{preparation}, then the concatenated code ${\\mathscr}{C}$ defined by the maps $\\phi$ and $\\Phi$ has the $t$-traceability.\n\\end{lemma}\n\n\\begin{proof}\n    Note that ${\\mathscr}{C}{\\subseteq} F^{nN}$ for some alphabet $F$. In order to show that ${\\mathscr}{C}$ has the $t$-traceability, it suffices to show for arbitrary $D=\\{x^1,\\ldots,x^t\\}{\\subseteq}{\\mathscr}{C}$ and all $y\\in desc(D)$, it holds that\n\n\n", "index": 49, "text": "\\begin{equation*}\n \\begin{aligned}\n   \\max_{z\\in{\\mathscr}{C}\\setminus D}I(z,y)<\\max_{x\\in D}I(x,y).\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex17X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\max_{z\\in{\\mathscr{}}{C}\\setminus D}I(z,y)&lt;\\max_{x\\in D}I(x,y).\" display=\"inline\"><mrow><mrow><mrow><mrow><munder><mi>max</mi><mrow><mi>z</mi><mo>\u2208</mo><mrow><mi>C</mi><mo>\u2216</mo><mi>D</mi></mrow></mrow></munder><mo>\u2061</mo><mi>I</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mrow><mrow><munder><mi>max</mi><mrow><mi>x</mi><mo>\u2208</mo><mi>D</mi></mrow></munder><mo>\u2061</mo><mi>I</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.04810.tex", "nexttext": "\n\nThe first inequality holds since if $z$ agrees with $y$ in the $j$-th ($1\\le j\\le n$) position, then $z$ must agree with some $x^i$ ($1\\le i\\le t$) in the $j$-th position. The second inequality holds since $I(w,w^i)\\le\\alpha N$ and for $w_j\\neq w^i_j$, $I(\\phi(w_j),\\phi(w^i_j))\\le\\beta n$. The third inequality follows from a greedy valuation for $|\\{1\\le j\\le N\\mid w_j=w^i_j~for~some~1\\le i\\le t\\}|$. The last inequality follows from condition (b) of Lemma \\ref{preparation}.\n\\end{proof}\n\nNow Theorem \\ref{construction} is a simple consequence of above lemmas.\n\\begin{proof}[\\bf{Proof of Theorem \\ref{construction}}]\nApply Lemmas \\ref{preparation} and \\ref{traceability}.\n\\end{proof}\n\n\\begin{remark}\nRecall that $R({\\mathscr}{C})={\\frac}{\\log_q Q}{n}R({\\mathscr}{U})$, now we evaluate $R({\\mathscr}{C})$ for prime power $q$. One can compute that for every integer $t\\ge2$ and every prime power $q\\ge t+1$, there exits a $q$-ary $t$-traceability code with code rate $R({\\mathscr}{C})=\\Omega({\\frac}{(q-t)^3}{t^6q^2})$.\n\n\\end{remark}\n\n\\begin{remark}\nAnother nice feature of our construction is that the minimum distance is $d({\\mathscr}{C})\\ge\\delta\\sigma nN$ by Lemma \\ref{distanceofC}. Condition $(b)$ of Lemma \\ref{preparation} requires that $\\alpha=1-\\sigma<1/t^2$. If we take $\\alpha$ close enough to $1/t^2$, then it almost holds that $\\delta\\sigma\\approx(1-1/t^2){\\frac}{q^k-q^{k-1}}{q^k-1}<1-1/t^2$. This property is very interesting since it shows that our construction is an exception of Theorem \\ref{TAfromECC}.\n\\end{remark}\n\\section{Concluding remarks}\n\nIn this paper, it is shown that for arbitrary integers $t\\ge2$ and $q\\ge t+1$, there exists a $q$-ary $t$-traceability code with positive code rate. The newly constructed code employs a simplex code and an algebraic-geometry code as the inner code and outer code, respectively.\n\nNaturally, there are two problems remaining open. The first one is to find codes with larger code rate. The second one is to design a faster tracing algorithm than the ordinary one that computes the distance between the descendant word and every codeword. Note that in \\cite{barg2004ipp} and \\cite{listdecoding}, the authors had applied the list decoding algorithm to the traitor tracing problems. However, it seems that such algorithm can not be adapted for our construction, since the minimum distance of the concatenated code is not large enough. One way to overcome this shortcoming is to make the inner code satisfying the conditions of Lemma \\ref{preparation}  be simultaneously a $q$-ary $t$-traceability code (indeed, a $q$-ary $t$-IPP code is enough, see \\cite{barg2004ipp}). Note that such a code (as an inner code) does not need to have positive code rate.\n\\bibliographystyle{plain}\n\\bibliography{traceabilitycodes}\n\n\n", "itemtype": "equation", "pos": 21918, "prevtext": "\n\n\\noindent It is not hard to see $\\max_{x\\in D}I(x,y)\\ge nN/t$. We claim that $\\max_{z\\in{\\mathscr}{C}\\setminus D}I(z,y)<nN/t$. Then the lemma will follow from this claim. Recall the parameters $\\alpha$, $\\beta$, $\\delta$, $\\sigma$ defined in Lemma \\ref{preparation}.\nTo prove the claim, take an arbitrary $z\\in{\\mathscr}{C}\\setminus D$, let $w^1,\\ldots,w^t,w\\in{\\mathscr}{U}$ denote the distinct codewords of ${\\mathscr}{U}$ such that $\\Phi(w^i)=x^i$ for $1\\le i\\le t$ and $\\Phi(w)=z$, then it holds that\n\n\n", "index": 51, "text": "\\begin{equation*}\n \\begin{aligned}\n   I(z,y) &\\le\\sum_{i=1}^t I(z,x^i)\\\\\n           &\\le n|\\{1\\le j\\le N\\mid w_j=w^i_j~for~some~1\\le i\\le t\\}|+\\\\&\\qquad(1-\\delta)n|\\{1\\le j\\le N\\mid w_j\\neq w^i_j~for~all~1\\le i\\le t\\}|\\\\\n           &\\le n(1-\\sigma)Nt+(1-\\delta)n(N-(1-\\sigma)Nt)\\\\\n           &=n\\alpha Nt+\\beta n(N-\\alpha Nt)\\\\\n           &={\\frac}{nN}{t}(\\alpha t^2+\\beta t-\\alpha\\beta t^2)\\\\\n           &<{\\frac}{nN}{t}.\\\\\n \\end{aligned}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18X.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle I(z,y)\" display=\"inline\"><mrow><mi>I</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18X.m3\" class=\"ltx_Math\" alttext=\"\\displaystyle\\leq\\sum_{i=1}^{t}I(z,x^{i})\" display=\"inline\"><mrow><mi/><mo>\u2264</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></munderover></mstyle><mrow><mi>I</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>z</mi><mo>,</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18Xa.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\leq n|\\{1\\leq j\\leq N\\mid w_{j}=w^{i}_{j}~{}for~{}some~{}1\\leq i%&#10;\\leq t\\}|+\" display=\"inline\"><mrow><mi/><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">|</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mn>1</mn><mo>\u2264</mo><mi>j</mi><mo>\u2264</mo><mi>N</mi></mrow><mo>\u2223</mo><mrow><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><mrow><mpadded width=\"+3.3pt\"><msubsup><mi>w</mi><mi>j</mi><mi>i</mi></msubsup></mpadded><mo>\u2062</mo><mi>f</mi><mo>\u2062</mo><mi>o</mi><mo>\u2062</mo><mpadded width=\"+3.3pt\"><mi>r</mi></mpadded><mo>\u2062</mo><mi>s</mi><mo>\u2062</mo><mi>o</mi><mo>\u2062</mo><mi>m</mi><mo>\u2062</mo><mpadded width=\"+3.3pt\"><mi>e</mi></mpadded><mo>\u2062</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>t</mi></mrow><mo stretchy=\"false\">}</mo></mrow><mo stretchy=\"false\">|</mo></mrow></mrow><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18Xb.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\qquad(1-\\delta)n|\\{1\\leq j\\leq N\\mid w_{j}\\neq w^{i}_{j}~{}for~{%&#10;}all~{}1\\leq i\\leq t\\}|\" display=\"inline\"><mrow><mrow><mo lspace=\"22.5pt\" stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b4</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">|</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mn>1</mn><mo>\u2264</mo><mi>j</mi><mo>\u2264</mo><mi>N</mi></mrow><mo>\u2223</mo><mrow><msub><mi>w</mi><mi>j</mi></msub><mo>\u2260</mo><mrow><mpadded width=\"+3.3pt\"><msubsup><mi>w</mi><mi>j</mi><mi>i</mi></msubsup></mpadded><mo>\u2062</mo><mi>f</mi><mo>\u2062</mo><mi>o</mi><mo>\u2062</mo><mpadded width=\"+3.3pt\"><mi>r</mi></mpadded><mo>\u2062</mo><mi>a</mi><mo>\u2062</mo><mi>l</mi><mo>\u2062</mo><mpadded width=\"+3.3pt\"><mi>l</mi></mpadded><mo>\u2062</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>t</mi></mrow><mo stretchy=\"false\">}</mo></mrow><mo stretchy=\"false\">|</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18Xc.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\leq n(1-\\sigma)Nt+(1-\\delta)n(N-(1-\\sigma)Nt)\" display=\"inline\"><mrow><mi/><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03c3</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>N</mi><mo>\u2062</mo><mi>t</mi></mrow><mo>+</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b4</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>N</mi><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03c3</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>N</mi><mo>\u2062</mo><mi>t</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18Xd.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=n\\alpha Nt+\\beta n(N-\\alpha Nt)\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mrow><mi>n</mi><mo>\u2062</mo><mi>\u03b1</mi><mo>\u2062</mo><mi>N</mi><mo>\u2062</mo><mi>t</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>N</mi><mo>-</mo><mrow><mi>\u03b1</mi><mo>\u2062</mo><mi>N</mi><mo>\u2062</mo><mi>t</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18Xe.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\frac{}}{nN}{t}(\\alpha t^{2}+\\beta t-\\alpha\\beta t^{2})\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mi>n</mi><mo>\u2062</mo><mi>N</mi></mrow></mfrac></mstyle><mo>\u2062</mo><mi>t</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mi>\u03b1</mi><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mi>t</mi></mrow></mrow><mo>-</mo><mrow><mi>\u03b1</mi><mo>\u2062</mo><mi>\u03b2</mi><mo>\u2062</mo><msup><mi>t</mi><mn>2</mn></msup></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18Xf.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle&lt;{\\frac{}}{nN}{t}.\" display=\"inline\"><mrow><mrow><mi/><mo>&lt;</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi/><mrow><mi>n</mi><mo>\u2062</mo><mi>N</mi></mrow></mfrac></mstyle><mo>\u2062</mo><mi>t</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}]