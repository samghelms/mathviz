[{"file": "1601.06522.tex", "nexttext": "\n\n\\section{Non-causal circuit model}\nA circuit model of computation consists of gates that are interconnected with wires.\nIn the traditional circuit model, back-connections, {\\em i.e.}, a cyclic path through a graph where gates are identified with nodes and wires are identified with edges, are interpreted as feedback channels.\nAn example of a feedback channel is an autopilot system in an aircraft, that depending on measured altitude, adjusts the rudder to maintain the desired altitude.\nHere, we interpret back-connections differently.\nWhilst in the above scenario the feedback gets introduced at a {\\em later\\/} point in the computation, the back-action in a non-causal circuit effects the system at an {\\em earlier\\/} point.\nSuch a back-action can be interpreted as acting into the past.\nAnother interpretation is that every gate has its own time (clock), but no global time is assumed --- this interpretation stems from the studies of correlations without causal order~\\cite{Oreshkov:2012uh,Chiribella:2013bk}.\nSuch an interpretation might be more pleasing: Here, ``earlier'' is understood {\\em logically}, and global assumptions beyond logical consistency are simply dropped.\n\nA non-causal circuit model of computation consists of gates that can be interconnected arbitrarily by wires, as long as the circuit remains logically consistent.\nAn example of a circuit that is overdetermined and an example of a circuit that leads to the information antinomy (underedetermined) are given in Figure~\\ref{fig:inccirc}.\n\\begin{figure}\n\t\\centering\n\t\\subfloat[\\label{fig:linccirc}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (G) {$\\mathrm{NOT}$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (G.east) -- ++(1,0) -- ++(0,-1) -- ++(-3,0) -- ++(0,1) -- (G.west);\n\t\t\\end{tikzpicture}\n\t}\n\t\\quad\n\t\\subfloat[\\label{fig:iinccirc}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (G) {$\\mathrm{ID}$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (G.east) -- ++(1,0) -- ++(0,-1) -- ++(-3,0) -- ++(0,1) -- (G.west);\n\t\t\\end{tikzpicture}\n\t}\n\t\\caption{Both gates act on bits. (a) Overdetermined circuit: the bit~$0$ is mapped to~$1$ and {\\it vice versa\\/}, {\\it i.e.}, there is no consistent assignment of a value that travels on the wire. (b) Information antinomy: both~$0$ and~$1$ are consistent.}\n\t\\label{fig:inccirc}\n\\end{figure}\n\nWe model a gate~$G$ by a Markov matrix~$\\hat G$ with~$0-1$ entries.\nWithout loss of generality, assume that the input and output dimension of a gate are equal.\nThe Markov matrix of the~$\\mathrm{ID}$ gate~(see Figure~\\ref{fig:iinccirc}) is\n\n", "itemtype": "equation", "pos": 7831, "prevtext": "\n\n\\title{Non-causal computation avoiding the grandfather and information antinomies}\n\n\\author{\n  \\IEEEauthorblockN{\\\"Amin Baumeler and Stefan Wolf}\n  \\IEEEauthorblockA{Faculty of Informatics, \n    Universit\\`a della Svizzera italiana, \n    6900 Lugano, Switzerland\\\\\n    Facolt\\`{a} indipendente di Gandria, \n    6978 Gandria, Switzerland\\\\\n    Email: \\{baumea,wolfs\\}@usi.ch} \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\\maketitle\n\n\n\n\n\n\n\\begin{abstract}\n\tComputation models such as circuits describe sequences of computation steps that are carried out {\\em one after the other}. \n\tIn other words, algorithm design is traditionally subject to the restriction imposed by a fixed causal order. \n\tWe address a novel computing paradigm, replacing this assumption by mere logical consistency: We study {\\em non-causal circuits}, where a \n\tfixed time structure {\\em within\\/} a gate is locally assumed whilst the global causal structure {\\em between\\/} the gates is dropped. \n\tWe present examples of logically consistent non-causal circuits outperforming all causal ones; they imply that suppressing loops \n\tentirely is more restrictive than just avoiding the contradictions they can give rise to. That fact is already known for correlations \n\tas well as for communication, and we here extend it to {\\em computation}. \n\\end{abstract}\n\n\n\n\\section{Introduction}\nComputations, understood as Turing machines, billiard or ballistic computers~\\cite{Fredkin:1982bt}, circuits, lists of computer instructions, or otherwise, are often designed to have a linear, {\\em i.e.}, causal,  time-flow:\nAfter a fundamental operation is carried out, the program counter moves to the next operation, and so forth.\nSurely, this is in agreement with our everyday experience; after you finish to read this sentence, you continue to the next (hopefully), or do something else (in that case: goodbye!).\n{\\em What computations become admissible if one drops the assumption of a linear time-flow and reduces it to mere logical consistency?}\nOne could imagine that a linear time-flow restricts computation strictly beyond the {\\em logical\\/} regime.\nIndeed, we show this to be true.\nIf the assumption of a linear time-flow is dropped, a variable of the computational device could depend on past as well as future computation steps.\nSuch a dependence can be interpreted as loops in the time-flow.\n\nThere are two fundamental issues that could make loops logically inconsistent.\nOne of them is the liability to the {\\em grandfather antinomy}.\nIn a loop-like information flow, multiple contradicting values could potentially be assigned to a variable --- the variable is {\\em overdetermined}.\nThe other issue is {\\em underdetermination}:\nA~variable could take multiple consistent values, yet, the model of computation cannot predict which actual value it takes.\nThis underdetermination is also known as the {\\em information antinomy}.\nTo overcome both issues, we restrict ourselves to models of computation where the assumption of a linear time-flow of computation is dropped and replaced by the assumption of {\\em logical consistency}:\nAll variables are neither overdetermined nor underdetermined.\nWe call such models of computation {\\em non-causal}.\nOur main result is that non-causal models of computation are {\\em strictly\\/} more powerful than the traditional, causal ones.\nTherefore, causality is a stronger assumption than logical consistency in the context of computation.~A similar result is also known with respect to quantum computation~\\cite{Chiribella:2012jg,Colnaghi:2012dv,Chiribella:2013bk,Araujo:2014kf,Procopio:2015iw}, correlations~\\cite{Oreshkov:2012uh,Chiribella:2013bk,Baumeler:2014cw,Baumeler:2016jt,Branciard:2016bt} as well as communication~\\cite{Feix:2015fb}.\n\nThe article is structured as follows.\nFirst, we discuss the assumption of logical consistency in more depth, then we describe a non-causal circuit model of computation and give a few examples of problems that can be solved more efficiently.\nWe continue by describing other non-causal models of computations: the non-causal Turing machine and non-causal billiard computer.\nWe conclude with evidence that these models cannot solve instances in NP more efficiently.\n\n\\section{Logical consistency}\nLet~$\\rho_t$ be the ensemble of all variables (also called state) of a~computational model at a time~$t$.\nIn general,~$\\rho_t$ depends on~$\\rho_{t-1},\\rho_{t-2},\\dots$.\nWithout loss of generality, assume that~$\\rho_{t}$ depends on~$\\rho_{t-1}$ only, {\\em i.e.}, the computation is described by a~Markov chain.\\footnote{This can be motivated by saying that the computation consists of a~polynomial number of time-steps in the input size, and that~$\\rho_{t}$ contains all variables from all previous time-steps.\nOtherwise, if the number of computation steps is larger, then the size of variable~$\\rho_{t}$ would not scale.}\nThese dependencies are depicted in Figure~\\ref{fig:causaldep}.\n\\begin{figure}\n\t\\centering\n\t\\subfloat[\\label{fig:causaldep}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,circle,minimum size=1.1cm] (t0) {$\\rho_0$};\n\t\t\t\\node[draw,circle,minimum size=1.1cm,right=0.7cm of t0] (t1) {$\\rho_1$};\n\t\t\t\\draw[->] (t0) -- (t1);\n\t\t\t\\node[right=0.3cm of t1] (t2) {$\\cdots$};\n\t\t\t\\draw[-] (t1) -- (t2);\n\t\t\t\\node[draw,circle,minimum size=1.1cm,right=0.3cm of t2] (t3) {$\\rho_{m-1}$};\n\t\t\t\\draw[->] (t2) -- (t3);\n\t\t\t\\node[draw,circle,minimum size=1.1cm,right=0.7cm of t3] (t4) {$\\rho_m$};\n\t\t\t\\draw[->] (t3) -- (t4);\n\t\t\\end{tikzpicture}\n\t}\n\n\t\\subfloat[\\label{fig:noncausaldep}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node (C) {};\n\t\t\t\\node[draw,circle,minimum size=1.1cm,shift=(90:2cm)] (t0) at (C.center) {$\\rho_0$};\n\t\t\t\\node[draw,circle,minimum size=1.1cm,shift=(45:2cm)] (t1) at (C.center) {$\\rho_1$};\n\t\t\t\\node[draw,circle,minimum size=1.1cm,shift=(3*45:2cm)] (tm) at (C.center) {$\\rho_m$};\n\t\t\t\\node[draw,circle,minimum size=1.1cm,shift=(4*45:2cm)] (tmm) at (C.center) {$\\rho_{m-1}$};\n\t\t\t\\draw[->] (C.center)++(90-16:2cm) arc (90-16:45+16:2cm);\n\t\t\t\\draw[->] (C.center)++(4*45-16:2cm) arc (4*45-16:3*45+16:2cm);\n\t\t\t\\draw[->] (C.center)++(3*45-16:2cm) arc (3*45-16:2*45+16:2cm);\n\t\t\t\\draw[line cap=round,line width=1pt,dash pattern=on 0pt off 4pt] (C.center)++(292.5+5:2cm) arc (292.5+5:292.5-5:2cm);\n\t\t\t\\draw[->] (C.center)++(360+45-16:2cm) arc (360+45-16:13*360/16+9:2cm);\n\t\t\t\\draw[->] (C.center)++(13*360/16-9:2cm) arc (13*360/16-9:4*45+16:2cm);\n\t\t\t\\node[rotate=112.5,shift=(0:2cm)] (scissors) at (C.center) {\\ScissorLeft};\n\t\t\\end{tikzpicture}\n\t}\n\t\\caption{(a) The values that are assigned to the variables of a computational model at time~$t$ depend on~$\\rho_{t-1}$.\n\t(b) Cyclic dependencies of the values that are assigned to the variables at different steps during the computation.\n\tThe arrows point in direction of computation.}\n\t\\label{fig:dep}\n\\end{figure}\nIn a non-causal model, however, the values that are assigned to the variables at time~$t$ could in principle depend on ``future'' time-steps, {\\em e.g.}, the assignment~$\\rho_0$ could depend on~$\\rho_m$, which results in a Markovian ``bracelet'' or circle (see Figure~\\ref{fig:noncausaldep}).\n\nA computational model is {\\em not overdetermined\\/} if and only if the values that are assigned to the variables do not contradict each other.\nThis can be understood as the existence of a fixed-point~\\cite{Baumeler:2015te} of the Markov chain that results from cutting the ``bracelet'' at an arbitrary position (see Figure~\\ref{fig:noncausaldep}).\nLet~$f$ be a function that describes the behaviour of this Markov chain.\nThen, the computational model is not overdetermined if and only if~$\\exists x:f(x)=x$.\n\nA computational model is {\\em not underdetermined\\/} if and only if there exists no or one fixed-point:~$|\\{x\\,|\\,x=f(x)\\}| \\leq 1$.\n\nLogical consistency means no overdetermination and no underdetermination, {\\it i.e.}, the existence of a {\\em unique\\/} fixed-point:\n\n", "index": 1, "text": "\\begin{align}\n\t\\exists !x:f(x)=x\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\exists!x:f(x)=x\\,.\" display=\"inline\"><mrow><mrow><mrow><mrow><mo>\u2203</mo><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mo>\u2061</mo><mi>x</mi></mrow><mo>:</mo><mrow><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mpadded width=\"+1.7pt\"><mi>x</mi></mpadded></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nand the Markov matrix of the~$\\mathrm{NOT}$ gate~(see Figure~\\ref{fig:linccirc}) is\n\n", "itemtype": "equation", "pos": 10480, "prevtext": "\n\n\\section{Non-causal circuit model}\nA circuit model of computation consists of gates that are interconnected with wires.\nIn the traditional circuit model, back-connections, {\\em i.e.}, a cyclic path through a graph where gates are identified with nodes and wires are identified with edges, are interpreted as feedback channels.\nAn example of a feedback channel is an autopilot system in an aircraft, that depending on measured altitude, adjusts the rudder to maintain the desired altitude.\nHere, we interpret back-connections differently.\nWhilst in the above scenario the feedback gets introduced at a {\\em later\\/} point in the computation, the back-action in a non-causal circuit effects the system at an {\\em earlier\\/} point.\nSuch a back-action can be interpreted as acting into the past.\nAnother interpretation is that every gate has its own time (clock), but no global time is assumed --- this interpretation stems from the studies of correlations without causal order~\\cite{Oreshkov:2012uh,Chiribella:2013bk}.\nSuch an interpretation might be more pleasing: Here, ``earlier'' is understood {\\em logically}, and global assumptions beyond logical consistency are simply dropped.\n\nA non-causal circuit model of computation consists of gates that can be interconnected arbitrarily by wires, as long as the circuit remains logically consistent.\nAn example of a circuit that is overdetermined and an example of a circuit that leads to the information antinomy (underedetermined) are given in Figure~\\ref{fig:inccirc}.\n\\begin{figure}\n\t\\centering\n\t\\subfloat[\\label{fig:linccirc}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (G) {$\\mathrm{NOT}$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (G.east) -- ++(1,0) -- ++(0,-1) -- ++(-3,0) -- ++(0,1) -- (G.west);\n\t\t\\end{tikzpicture}\n\t}\n\t\\quad\n\t\\subfloat[\\label{fig:iinccirc}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (G) {$\\mathrm{ID}$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (G.east) -- ++(1,0) -- ++(0,-1) -- ++(-3,0) -- ++(0,1) -- (G.west);\n\t\t\\end{tikzpicture}\n\t}\n\t\\caption{Both gates act on bits. (a) Overdetermined circuit: the bit~$0$ is mapped to~$1$ and {\\it vice versa\\/}, {\\it i.e.}, there is no consistent assignment of a value that travels on the wire. (b) Information antinomy: both~$0$ and~$1$ are consistent.}\n\t\\label{fig:inccirc}\n\\end{figure}\n\nWe model a gate~$G$ by a Markov matrix~$\\hat G$ with~$0-1$ entries.\nWithout loss of generality, assume that the input and output dimension of a gate are equal.\nThe Markov matrix of the~$\\mathrm{ID}$ gate~(see Figure~\\ref{fig:iinccirc}) is\n\n", "index": 3, "text": "\\begin{align}\n\t\\mathds{1}=\\begin{pmatrix}\n\t\t1&0\\\\\n\t\t0&1\n\t\\end{pmatrix}\n\t\\,,\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\mathds{1}=\\begin{pmatrix}1&amp;0\\\\&#10;0&amp;1\\end{pmatrix}\\,,\" display=\"inline\"><mrow><mrow><mn>\ud835\udfd9</mn><mo>=</mo><mpadded width=\"+1.7pt\"><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr></mtable><mo>)</mo></mrow></mpadded></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nValues are modeled by vectors, {\\em e.g.}, in a binary setting, the value~$0$ is represented by the vector~$(1,0)^T$ and the value~$1$ is represented by the vector~$(0,1)^T$.\nIn general, an~$n$-dimensional variable with value~$i$ is modeled by the~$n$-dimensional vector~$\\bm{i}$ with a~1 at position~$i$, where all other entries are~$0$.\nA gate is applied to a value via the matrix-vector multiplication, {\\em i.e.},~the output of~$G$ on input~$a$ is~$\\bm{x}=\\hat G\\bm{a}$.\n\nLet~$F$ and~$G$ be two gates.\nThe Markov matrix of the parallel composition of both gates is~$\\hat F\\otimes \\hat G$.\nThey are composed sequentially with a wire that takes the~$d$-dimensional output of~$F$ and forwards it as input to~$G$.\nBy this, we obtain a new gate~$H=G\\circ F$ which represents the sequential composition.\nThe sequentially composed gate is\n\n", "itemtype": "equation", "pos": 10652, "prevtext": "\nand the Markov matrix of the~$\\mathrm{NOT}$ gate~(see Figure~\\ref{fig:linccirc}) is\n\n", "index": 5, "text": "\\begin{align}\n\t\\hat N=\\begin{pmatrix}\n\t\t0&1\\\\\n\t\t1&0\n\t\\end{pmatrix}\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{N}=\\begin{pmatrix}0&amp;1\\\\&#10;1&amp;0\\end{pmatrix}\\,.\" display=\"inline\"><mrow><mrow><mover accent=\"true\"><mi>N</mi><mo stretchy=\"false\">^</mo></mover><mo>=</mo><mpadded width=\"+1.7pt\"><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr></mtable><mo>)</mo></mrow></mpadded></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nBy using these rules of composition, a causal circuit can always be modeled by a single gate.\nA {\\em closed\\/} circuit is a circuit where all wires are connected to gates on both sides.\nLet~$H$ be the gate that describes the composition of all gates for a given causal circuit.\nWe can transform any such circuit into a closed non-causal circuit by connecting all outputs from~$H$ with all inputs to~$H$.\nA logically consistent closed circuit is thus a circuit where a {\\em unique\\/} assignment of a value~$c$ to the looping wire exists such that\n\n", "itemtype": "equation", "pos": 11572, "prevtext": "\nValues are modeled by vectors, {\\em e.g.}, in a binary setting, the value~$0$ is represented by the vector~$(1,0)^T$ and the value~$1$ is represented by the vector~$(0,1)^T$.\nIn general, an~$n$-dimensional variable with value~$i$ is modeled by the~$n$-dimensional vector~$\\bm{i}$ with a~1 at position~$i$, where all other entries are~$0$.\nA gate is applied to a value via the matrix-vector multiplication, {\\em i.e.},~the output of~$G$ on input~$a$ is~$\\bm{x}=\\hat G\\bm{a}$.\n\nLet~$F$ and~$G$ be two gates.\nThe Markov matrix of the parallel composition of both gates is~$\\hat F\\otimes \\hat G$.\nThey are composed sequentially with a wire that takes the~$d$-dimensional output of~$F$ and forwards it as input to~$G$.\nBy this, we obtain a new gate~$H=G\\circ F$ which represents the sequential composition.\nThe sequentially composed gate is\n\n", "index": 7, "text": "\\begin{align}\n\t\\hat H=\\sum_{v=0}^{d-1} \\hat G\\bm{v}\\bm{v}^T\\hat F=\\hat G\\hat F\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{H}=\\sum_{v=0}^{d-1}\\hat{G}\\bm{v}\\bm{v}^{T}\\hat{F}=\\hat{G}%&#10;\\hat{F}\\,.\" display=\"inline\"><mrow><mrow><mover accent=\"true\"><mi>H</mi><mo stretchy=\"false\">^</mo></mover><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>v</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>d</mi><mo>-</mo><mn>1</mn></mrow></munderover></mstyle><mrow><mover accent=\"true\"><mi>G</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mi>\ud835\udc97</mi><mo>\u2062</mo><msup><mi>\ud835\udc97</mi><mi>T</mi></msup><mo>\u2062</mo><mover accent=\"true\"><mi>F</mi><mo stretchy=\"false\">^</mo></mover></mrow></mrow><mo>=</mo><mrow><mover accent=\"true\"><mi>G</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mpadded width=\"+1.7pt\"><mover accent=\"true\"><mi>F</mi><mo stretchy=\"false\">^</mo></mover></mpadded></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nIn other words, the described closed circuit is logically consistent if and only if the diagonal of~$\\hat H$ consists of~$0$'s with a single~$1$.\nThe position of the~$1$-entry represents the fixed-point.\nAn {\\em open\\/} circuit is a circuit where some wires are not connected to a gate on one side.\nThus, such a circuit can have input~$a$ and output~$x$.\nA logically consistent open circuit, therefore, is a circuit where for {\\em any choice\\/} of input, a {\\em unique\\/} assignment of a value~$c$ to the looping wire exists such that\n\n", "itemtype": "equation", "pos": 12214, "prevtext": "\nBy using these rules of composition, a causal circuit can always be modeled by a single gate.\nA {\\em closed\\/} circuit is a circuit where all wires are connected to gates on both sides.\nLet~$H$ be the gate that describes the composition of all gates for a given causal circuit.\nWe can transform any such circuit into a closed non-causal circuit by connecting all outputs from~$H$ with all inputs to~$H$.\nA logically consistent closed circuit is thus a circuit where a {\\em unique\\/} assignment of a value~$c$ to the looping wire exists such that\n\n", "index": 9, "text": "\\begin{align}\n\t\\bm{c}=\\hat H\\bm{c} \\Longleftrightarrow\n\t\\bm{c}^T\\hat H\\bm{c}=1\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\bm{c}=\\hat{H}\\bm{c}\\Longleftrightarrow\\bm{c}^{T}\\hat{H}\\bm{c}=1\\,.\" display=\"inline\"><mrow><mrow><mrow><mi>\ud835\udc84</mi><mo>=</mo><mrow><mover accent=\"true\"><mi>H</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mi>\ud835\udc84</mi></mrow></mrow><mo>\u27fa</mo><mrow><mrow><msup><mi>\ud835\udc84</mi><mi>T</mi></msup><mo>\u2062</mo><mover accent=\"true\"><mi>H</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mi>\ud835\udc84</mi></mrow><mo>=</mo><mpadded width=\"+1.7pt\"><mn>1</mn></mpadded></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nwhere we assume that the second output from~$H$ is looped to the second input to~$H$. \n\nLet~$c_a$ be the value on the looping wire of a logically consistent open circuit~$\\mathcal{C}$ with input~$a$.\nWe can transform~$\\mathcal{C}$ into a family~$\\{\\mathcal{C}_i\\}_{0\\leq i<d}$ of logically consistent closed circuits such that the value on the same looping wire of~$\\mathcal{C}_i$ is~$c_i$.\nThe circuit~$\\mathcal{C}_i$ is constructed by attaching the gate\n\n", "itemtype": "equation", "pos": 12845, "prevtext": "\nIn other words, the described closed circuit is logically consistent if and only if the diagonal of~$\\hat H$ consists of~$0$'s with a single~$1$.\nThe position of the~$1$-entry represents the fixed-point.\nAn {\\em open\\/} circuit is a circuit where some wires are not connected to a gate on one side.\nThus, such a circuit can have input~$a$ and output~$x$.\nA logically consistent open circuit, therefore, is a circuit where for {\\em any choice\\/} of input, a {\\em unique\\/} assignment of a value~$c$ to the looping wire exists such that\n\n", "index": 11, "text": "\\begin{align}\n\t(\\bm{x}\\otimes\\bm{c})^T\\hat H(\\bm{a}\\otimes\\bm{c})=1\n\t\\,,\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle(\\bm{x}\\otimes\\bm{c})^{T}\\hat{H}(\\bm{a}\\otimes\\bm{c})=1\\,,\" display=\"inline\"><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc99</mi><mo>\u2297</mo><mi>\ud835\udc84</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup><mo>\u2062</mo><mover accent=\"true\"><mi>H</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc82</mi><mo>\u2297</mo><mi>\ud835\udc84</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mpadded width=\"+1.7pt\"><mn>1</mn></mpadded></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nto the input and output wires of~$\\mathcal{C}$ (see Figures~\\ref{fig:open} and~\\ref{fig:close}).\nThe gate~$D_i$ unconditionally outputs the value~$i$.\n\\begin{figure}\n\t\\centering\n\t\\subfloat[\\label{fig:open}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (H) {$H$};\n\t\t\t\\draw[->] (H.20) -- ++(0.5,0);\n\t\t\t\\draw[<-] (H.160) -- ++(-0.5,0) node[left] {$a$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (H.340) -- ++(1,0) node[midway,below] {$c_a$} -- ++(0,-1) -- ++(-3,0) -- ++(0,1) -- (H.200);\n\t\t\\end{tikzpicture}\n\t}\n\t\\quad\n\t\\subfloat[\\label{fig:close}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (H) {$H$};\n\t\t\t\\node[draw,minimum width=0.5cm,minimum height=0.5cm,xshift=-1cm] (D) at (H.160) {$D_i$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (H.340) -- ++(0.7,0) node[midway,below] {$c_i$} -- ++(0,-1) -- ++(-3.5,0) -- ++(0,1) -- (H.200);\n\t\t\t\\draw[->] (D.east) -- (H.160) node[midway,above] {$i$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (H.20) -- ++(0.7,0) -- ++(0,1) -- ++(-3.5,0) -- ++(0,-1) -- (D.west);\n\t\t\\end{tikzpicture}\n\t}\n\n\t\\subfloat[\\label{fig:comb}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\draw[-] (0,0) -- ++(1,0) -- ++(0,-1) -- ++(2,0) -- ++(0,1) -- ++(1,0)\n\t\t\t\t -- ++(0,-2) -- ++(-4,0) -- (0,0);\n\t\t\t \\node[draw,minimum height=0.7cm,minimum width=0.7cm] (H) at (2,-0.5) {$H'$};\n\t\t\t \\draw[->] (H.east) -- ++(0.65,0);\n\t\t\t \\draw[<-] (H.west) -- ++(-0.65,0);\n\t\t\t \\draw[<-] (0,-1) -- ++(-1,0);\n\t\t\t \\draw[->] (4,-1) -- ++(1,0);\n\t\t\t \\node[below=0.4cm of H] {$G$};\n\t\t\\end{tikzpicture}\n\t}\n\t\\caption{(a) Open circuit~$\\mathcal{C}$ with input~$a$. (b) Closed circuit~$\\mathcal{C}_i$ with~$a=i\\rightarrow  c_a=c_i$. (c) The big box represents a comb that transforms a gate ($H'$) to a new gate, the composition.}\n\t\\label{fig:openclose}\n\\end{figure}\n\nAbove, we considered deterministic Markov processes.\nIt is natural to extend this model to probabilistic processes, {\\em i.e.},~stochastic matrices.\nThe logical-consistency condition in that case is\n\n", "itemtype": "equation", "pos": 13386, "prevtext": "\nwhere we assume that the second output from~$H$ is looped to the second input to~$H$. \n\nLet~$c_a$ be the value on the looping wire of a logically consistent open circuit~$\\mathcal{C}$ with input~$a$.\nWe can transform~$\\mathcal{C}$ into a family~$\\{\\mathcal{C}_i\\}_{0\\leq i<d}$ of logically consistent closed circuits such that the value on the same looping wire of~$\\mathcal{C}_i$ is~$c_i$.\nThe circuit~$\\mathcal{C}_i$ is constructed by attaching the gate\n\n", "index": 13, "text": "\\begin{align}\n\t\\hat D_i=\\sum_{v=0}^{d-1}\\bm{i}^T\\bm{v}\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{D}_{i}=\\sum_{v=0}^{d-1}\\bm{i}^{T}\\bm{v}\" display=\"inline\"><mrow><msub><mover accent=\"true\"><mi>D</mi><mo stretchy=\"false\">^</mo></mover><mi>i</mi></msub><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>v</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>d</mi><mo>-</mo><mn>1</mn></mrow></munderover></mstyle><mrow><msup><mi>\ud835\udc8a</mi><mi>T</mi></msup><mo>\u2062</mo><mi>\ud835\udc97</mi></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\n{\\it i.e.}, the diagonal of~$\\hat H$ consists of non-negative numbers (probabilities) that add up to~$1$.\n\nAn open non-causal circuit can be represented by a comb~\\cite{Chiribella:2013bk}~$G$ which is a higher-order transformation ---~$G$ transforms the gate~$H'$ to a new gate (see Figure~\\ref{fig:comb}).\nThe comb~$G$, for instance, could connect the output from~$H'$ with the input of~$H'$, as long as the composition remains logically consistent.\n\n\\section{Computational advantage}\nThe logical-consistency requirement forces the value on a looping wire to be the unique fixed-point of the transformation, {\\em e.g.}, in Figure~\\ref{fig:openclose}, the fixed-point of~$H$.\nThis can be exploited for {\\em finding fixed-points\\/} of a black box.\nSuppose we are given a black box~$B$ that takes (produces) a~$d$-dimensional input (output) and has a {\\em unique\\/} fixed-point~$x$ previously unknown to us.\nAs a Markov matrix,~$B$ is\n\n", "itemtype": "equation", "pos": 15430, "prevtext": "\nto the input and output wires of~$\\mathcal{C}$ (see Figures~\\ref{fig:open} and~\\ref{fig:close}).\nThe gate~$D_i$ unconditionally outputs the value~$i$.\n\\begin{figure}\n\t\\centering\n\t\\subfloat[\\label{fig:open}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (H) {$H$};\n\t\t\t\\draw[->] (H.20) -- ++(0.5,0);\n\t\t\t\\draw[<-] (H.160) -- ++(-0.5,0) node[left] {$a$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (H.340) -- ++(1,0) node[midway,below] {$c_a$} -- ++(0,-1) -- ++(-3,0) -- ++(0,1) -- (H.200);\n\t\t\\end{tikzpicture}\n\t}\n\t\\quad\n\t\\subfloat[\\label{fig:close}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (H) {$H$};\n\t\t\t\\node[draw,minimum width=0.5cm,minimum height=0.5cm,xshift=-1cm] (D) at (H.160) {$D_i$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (H.340) -- ++(0.7,0) node[midway,below] {$c_i$} -- ++(0,-1) -- ++(-3.5,0) -- ++(0,1) -- (H.200);\n\t\t\t\\draw[->] (D.east) -- (H.160) node[midway,above] {$i$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (H.20) -- ++(0.7,0) -- ++(0,1) -- ++(-3.5,0) -- ++(0,-1) -- (D.west);\n\t\t\\end{tikzpicture}\n\t}\n\n\t\\subfloat[\\label{fig:comb}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\draw[-] (0,0) -- ++(1,0) -- ++(0,-1) -- ++(2,0) -- ++(0,1) -- ++(1,0)\n\t\t\t\t -- ++(0,-2) -- ++(-4,0) -- (0,0);\n\t\t\t \\node[draw,minimum height=0.7cm,minimum width=0.7cm] (H) at (2,-0.5) {$H'$};\n\t\t\t \\draw[->] (H.east) -- ++(0.65,0);\n\t\t\t \\draw[<-] (H.west) -- ++(-0.65,0);\n\t\t\t \\draw[<-] (0,-1) -- ++(-1,0);\n\t\t\t \\draw[->] (4,-1) -- ++(1,0);\n\t\t\t \\node[below=0.4cm of H] {$G$};\n\t\t\\end{tikzpicture}\n\t}\n\t\\caption{(a) Open circuit~$\\mathcal{C}$ with input~$a$. (b) Closed circuit~$\\mathcal{C}_i$ with~$a=i\\rightarrow  c_a=c_i$. (c) The big box represents a comb that transforms a gate ($H'$) to a new gate, the composition.}\n\t\\label{fig:openclose}\n\\end{figure}\n\nAbove, we considered deterministic Markov processes.\nIt is natural to extend this model to probabilistic processes, {\\em i.e.},~stochastic matrices.\nThe logical-consistency condition in that case is\n\n", "index": 15, "text": "\\begin{align}\n\t{\\operatorname{Tr}}\\hat H&=1\\,,\\\\\n\t\\forall i,j:\\hat H_{i,j}&\\geq 0\n\t\\,,\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\operatorname{Tr}}\\hat{H}\" display=\"inline\"><mrow><mo>Tr</mo><mo>\u2061</mo><mover accent=\"true\"><mi>H</mi><mo stretchy=\"false\">^</mo></mover></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=1\\,,\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mpadded width=\"+1.7pt\"><mn>1</mn></mpadded></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\forall i,j:\\hat{H}_{i,j}\" display=\"inline\"><mrow><mrow><mrow><mo>\u2200</mo><mi>i</mi></mrow><mo>,</mo><mi>j</mi></mrow><mo>:</mo><msub><mover accent=\"true\"><mi>H</mi><mo stretchy=\"false\">^</mo></mover><mrow><mi>i</mi><mo>,</mo><mi>j</mi></mrow></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\geq 0\\,,\" display=\"inline\"><mrow><mrow><mi/><mo>\u2265</mo><mpadded width=\"+1.7pt\"><mn>0</mn></mpadded></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nOur task is to find the fixed-point~$x$ in as few queries as possible.\nIf we solve this task with a causal circuit, then, in the worst case,~$d-1$ queries are needed.\nIn contrast, with a non-causal circuit, a {\\em single\\/} query suffices.\nFor that purpose, we just connect the output of~$B$ with the input of~$B$ and use a second wire to read out the value (see Figure~\\ref{fig:bb}).\n\\begin{figure}\n\t\\centering\n\t\\subfloat[\\label{fig:bb}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (B) {$B$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (B.east) -- ++(0.5,0) node[midway,below] {$c$} -- ++(0,-1) -- ++(-2,0) -- ++(0,1) -- (B.west);\n\t\t\t\\draw[->] (B.west)++(0.5,1) node[left] {$a$} -- ++(1,0) node[right] {$x$};\n\t\t\t\\fill (0.7,0) circle [radius=2pt];\n\t\t\t\\draw[-] (0.7,0) -- ++(0,1) node {$\\oplus$};\n\t\t\\end{tikzpicture}\n\t}\n\n\t\\subfloat[\\label{fig:2bb}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (B) {$B_2$};\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm,below=2cm of B] (B2) {$B_2$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (B.east) -- ++(0.5,0) node[midway,below] {$c$} -- ++(0,-0.75) -- ++(-2,0) -- ++(0,0.75) -- (B.west);\n\t\t\t\\draw[rounded corners=0.382cm,->] (B2.east) -- ++(0.5,0) node[midway,below] {$c'$} -- ++(0,0.75) -- ++(-2,0) -- ++(0,-0.75) -- (B2.west);\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm,below right=1cm and 2cm of B.center] (G) {$G$};\n\t\t\t\\draw[<-] (G.170) -- ++(-1.5,0) node (P1) {$\\oplus$} -- ++(-1.5,0) node[left,above] {$a$};\n\t\t\t\\draw[->] (G.10) -- ++(1,0) node[right,above] {$x$};\n\t\t\t\\draw[<-] (G.190) -- ++(-2,0) node (P2) {$\\oplus$} -- ++(-1,0) node[left,below] {$b$};\n\t\t\t\\draw[->] (G.350) -- ++(1,0) node[right,below] {$y$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (G.330) -- ++(0.5,0) node[midway,below] {$e$} -- ++(0,-0.75) -- ++(-2,0) -- ++(0,0.75) -- (G.210);\n\t\t\t\\draw[-] (P1.center) -- ++(0,0.67) node (Q1) {};\n\t\t\t\\fill (Q1.center) circle [radius=2pt];\n\t\t\t\\draw[-] (P2.center) -- ++(0,-0.67) node (Q2) {};\n\t\t\t\\fill (Q2.center) circle [radius=2pt];\n\t\t\\end{tikzpicture}\n\t}\n\t\\caption{(a) The output~$x$ is the fixed-point~$c$ added to the input~$a$. (b) Circuit for finding a fixed-point for a black box with {\\em two\\/} fixed-points.}\n\t\\label{fig:bbox}\n\\end{figure}\nThis circuit is logically consistent because\n\n", "itemtype": "equation", "pos": 16462, "prevtext": "\n{\\it i.e.}, the diagonal of~$\\hat H$ consists of non-negative numbers (probabilities) that add up to~$1$.\n\nAn open non-causal circuit can be represented by a comb~\\cite{Chiribella:2013bk}~$G$ which is a higher-order transformation ---~$G$ transforms the gate~$H'$ to a new gate (see Figure~\\ref{fig:comb}).\nThe comb~$G$, for instance, could connect the output from~$H'$ with the input of~$H'$, as long as the composition remains logically consistent.\n\n\\section{Computational advantage}\nThe logical-consistency requirement forces the value on a looping wire to be the unique fixed-point of the transformation, {\\em e.g.}, in Figure~\\ref{fig:openclose}, the fixed-point of~$H$.\nThis can be exploited for {\\em finding fixed-points\\/} of a black box.\nSuppose we are given a black box~$B$ that takes (produces) a~$d$-dimensional input (output) and has a {\\em unique\\/} fixed-point~$x$ previously unknown to us.\nAs a Markov matrix,~$B$ is\n\n", "index": 17, "text": "\\begin{align}\n\t\\hat B=\\sum_{i=0}^{d-1} \\bm{e}_i\\bm{i}^T\\,,\\quad\\text{with }\\left|\\{i\\,|\\,e_i=i\\}\\right|=1\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E10.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{B}=\\sum_{i=0}^{d-1}\\bm{e}_{i}\\bm{i}^{T}\\,,\\quad\\text{with }%&#10;\\left|\\{i\\,|\\,e_{i}=i\\}\\right|=1\\,.\" display=\"inline\"><mrow><mrow><mrow><mover accent=\"true\"><mi>B</mi><mo stretchy=\"false\">^</mo></mover><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>d</mi><mo>-</mo><mn>1</mn></mrow></munderover></mstyle><mrow><msub><mi>\ud835\udc86</mi><mi>i</mi></msub><mo>\u2062</mo><mpadded width=\"+1.7pt\"><msup><mi>\ud835\udc8a</mi><mi>T</mi></msup></mpadded></mrow></mrow></mrow><mo rspace=\"12.5pt\">,</mo><mrow><mrow><mtext>with\u00a0</mtext><mo>\u2062</mo><mrow><mo>|</mo><mrow><mo stretchy=\"false\">{</mo><mpadded width=\"+1.7pt\"><mi>i</mi></mpadded><mo rspace=\"4.2pt\" stretchy=\"false\">|</mo><mrow><msub><mi>e</mi><mi>i</mi></msub><mo>=</mo><mi>i</mi></mrow><mo stretchy=\"false\">}</mo></mrow><mo>|</mo></mrow></mrow><mo>=</mo><mpadded width=\"+1.7pt\"><mn>1</mn></mpadded></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nThis construction, however, works only if~$B$ has a {\\em unique\\/} fixed-point.\nSuppose~$B_2$ has {\\em two\\/} fixed-points.\nIn that case, the logically consistent circuit from Figure~\\ref{fig:2bb} requires two queries to~$B_2$ to return the fixed-point.\nThe gate~$G$ works in the following way\n\n", "itemtype": "equation", "pos": 18888, "prevtext": "\nOur task is to find the fixed-point~$x$ in as few queries as possible.\nIf we solve this task with a causal circuit, then, in the worst case,~$d-1$ queries are needed.\nIn contrast, with a non-causal circuit, a {\\em single\\/} query suffices.\nFor that purpose, we just connect the output of~$B$ with the input of~$B$ and use a second wire to read out the value (see Figure~\\ref{fig:bb}).\n\\begin{figure}\n\t\\centering\n\t\\subfloat[\\label{fig:bb}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (B) {$B$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (B.east) -- ++(0.5,0) node[midway,below] {$c$} -- ++(0,-1) -- ++(-2,0) -- ++(0,1) -- (B.west);\n\t\t\t\\draw[->] (B.west)++(0.5,1) node[left] {$a$} -- ++(1,0) node[right] {$x$};\n\t\t\t\\fill (0.7,0) circle [radius=2pt];\n\t\t\t\\draw[-] (0.7,0) -- ++(0,1) node {$\\oplus$};\n\t\t\\end{tikzpicture}\n\t}\n\n\t\\subfloat[\\label{fig:2bb}]{\n\t\t\\begin{tikzpicture}\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm] (B) {$B_2$};\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm,below=2cm of B] (B2) {$B_2$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (B.east) -- ++(0.5,0) node[midway,below] {$c$} -- ++(0,-0.75) -- ++(-2,0) -- ++(0,0.75) -- (B.west);\n\t\t\t\\draw[rounded corners=0.382cm,->] (B2.east) -- ++(0.5,0) node[midway,below] {$c'$} -- ++(0,0.75) -- ++(-2,0) -- ++(0,-0.75) -- (B2.west);\n\t\t\t\\node[draw,minimum width=1cm,minimum height=1cm,below right=1cm and 2cm of B.center] (G) {$G$};\n\t\t\t\\draw[<-] (G.170) -- ++(-1.5,0) node (P1) {$\\oplus$} -- ++(-1.5,0) node[left,above] {$a$};\n\t\t\t\\draw[->] (G.10) -- ++(1,0) node[right,above] {$x$};\n\t\t\t\\draw[<-] (G.190) -- ++(-2,0) node (P2) {$\\oplus$} -- ++(-1,0) node[left,below] {$b$};\n\t\t\t\\draw[->] (G.350) -- ++(1,0) node[right,below] {$y$};\n\t\t\t\\draw[rounded corners=0.382cm,->] (G.330) -- ++(0.5,0) node[midway,below] {$e$} -- ++(0,-0.75) -- ++(-2,0) -- ++(0,0.75) -- (G.210);\n\t\t\t\\draw[-] (P1.center) -- ++(0,0.67) node (Q1) {};\n\t\t\t\\fill (Q1.center) circle [radius=2pt];\n\t\t\t\\draw[-] (P2.center) -- ++(0,-0.67) node (Q2) {};\n\t\t\t\\fill (Q2.center) circle [radius=2pt];\n\t\t\\end{tikzpicture}\n\t}\n\t\\caption{(a) The output~$x$ is the fixed-point~$c$ added to the input~$a$. (b) Circuit for finding a fixed-point for a black box with {\\em two\\/} fixed-points.}\n\t\\label{fig:bbox}\n\\end{figure}\nThis circuit is logically consistent because\n\n", "index": 19, "text": "\\begin{align}\n\t\\forall a\\exists !c,x:(\\bm{x}\\otimes\\bm{c})^T\\hat B(\\bm{a}\\otimes\\bm{c})=1\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\forall a\\exists!c,x:(\\bm{x}\\otimes\\bm{c})^{T}\\hat{B}(\\bm{a}%&#10;\\otimes\\bm{c})=1\\,.\" display=\"inline\"><mrow><mrow><mrow><mrow><mo>\u2200</mo><mrow><mi>a</mi><mo>\u2062</mo><mrow><mrow><mo>\u2203</mo><mo lspace=\"0pt\" rspace=\"3.5pt\">!</mo></mrow><mo>\u2061</mo><mi>c</mi></mrow></mrow></mrow><mo>,</mo><mi>x</mi></mrow><mo>:</mo><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc99</mi><mo>\u2297</mo><mi>\ud835\udc84</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup><mo>\u2062</mo><mover accent=\"true\"><mi>B</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc82</mi><mo>\u2297</mo><mi>\ud835\udc84</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mpadded width=\"+1.7pt\"><mn>1</mn></mpadded></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nwhere~$e$ is binary,~$\\bar e=e\\oplus 1$, the addition is carried out modulo~$2$, and~$\\bm{0}$ is a~$2$-dimensional vector representing the value~$0$.\nIn words, if the value~$c$ on the upper wire is less than the value on the lower wire~$c'$, and~$e$ is~$0$, then we get a fixed-point on the third wire of~$G$.\nOtherwise, the bit on the third value gets flipped --- no fixed-point.\nThis guarantees that all loops together have a {\\em unique\\/} fixed-point.\nSuch a construction can be used to find the fixed-points of a black box with a {\\em few\\/} fixed-points and where the number of fixed-points is {\\em known}.\nFor a large number~$n$ of fixed-points, {\\it e.g.},~$n=d/2$, we can use the probabilistic approach to non-causal circuits.\nLet~$B_n$ be a black box with~$n$ fixed-points and input and output spaces of dimension~$d$.\nThe Markov matrix of~$B_n$ is\n\n", "itemtype": "equation", "pos": 19289, "prevtext": "\nThis construction, however, works only if~$B$ has a {\\em unique\\/} fixed-point.\nSuppose~$B_2$ has {\\em two\\/} fixed-points.\nIn that case, the logically consistent circuit from Figure~\\ref{fig:2bb} requires two queries to~$B_2$ to return the fixed-point.\nThe gate~$G$ works in the following way\n\n", "index": 21, "text": "\\begin{align}\n\t\\hat G=&\\sum_{c<c',e}(\\bm{c}\\otimes \\bm{c'}\\otimes \\bm{0}) (\\bm{c}\\otimes \\bm{c'}\\otimes \\bm{e})^T+\\\\\n\t&\\sum_{c\\geq c',e}(\\bm{c}\\otimes \\bm{c'}\\otimes \\bm{\\bar e}) (\\bm{c}\\otimes \\bm{c'}\\otimes \\bm{e})^T\n\t\\,,\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{G}=\" display=\"inline\"><mrow><mover accent=\"true\"><mi>G</mi><mo stretchy=\"false\">^</mo></mover><mo>=</mo><mi/></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{c&lt;c^{\\prime},e}(\\bm{c}\\otimes\\bm{c^{\\prime}}\\otimes\\bm{0})(%&#10;\\bm{c}\\otimes\\bm{c^{\\prime}}\\otimes\\bm{e})^{T}+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>c</mi><mo>&lt;</mo><mrow><msup><mi>c</mi><mo>\u2032</mo></msup><mo>,</mo><mi>e</mi></mrow></mrow></munder></mstyle><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc84</mi><mo>\u2297</mo><msup><mi>\ud835\udc84</mi><mo mathvariant=\"bold\">\u2032</mo></msup><mo>\u2297</mo><mn/></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc84</mi><mo>\u2297</mo><msup><mi>\ud835\udc84</mi><mo mathvariant=\"bold\">\u2032</mo></msup><mo>\u2297</mo><mi>\ud835\udc86</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E13.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{c\\geq c^{\\prime},e}(\\bm{c}\\otimes\\bm{c^{\\prime}}\\otimes\\bm{%&#10;\\bar{e}})(\\bm{c}\\otimes\\bm{c^{\\prime}}\\otimes\\bm{e})^{T}\\,,\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>c</mi><mo>\u2265</mo><mrow><msup><mi>c</mi><mo>\u2032</mo></msup><mo>,</mo><mi>e</mi></mrow></mrow></munder></mstyle><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc84</mi><mo>\u2297</mo><msup><mi>\ud835\udc84</mi><mo mathvariant=\"bold\">\u2032</mo></msup><mo>\u2297</mo><mover accent=\"true\"><mi>\ud835\udc86</mi><mo mathvariant=\"bold\" stretchy=\"false\">\u00af</mo></mover></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mpadded width=\"+1.7pt\"><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udc84</mi><mo>\u2297</mo><msup><mi>\ud835\udc84</mi><mo mathvariant=\"bold\">\u2032</mo></msup><mo>\u2297</mo><mi>\ud835\udc86</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup></mpadded></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nWe construct a randomised gate with a {\\em unique\\/} fixed-point:\n\n", "itemtype": "equation", "pos": 20384, "prevtext": "\nwhere~$e$ is binary,~$\\bar e=e\\oplus 1$, the addition is carried out modulo~$2$, and~$\\bm{0}$ is a~$2$-dimensional vector representing the value~$0$.\nIn words, if the value~$c$ on the upper wire is less than the value on the lower wire~$c'$, and~$e$ is~$0$, then we get a fixed-point on the third wire of~$G$.\nOtherwise, the bit on the third value gets flipped --- no fixed-point.\nThis guarantees that all loops together have a {\\em unique\\/} fixed-point.\nSuch a construction can be used to find the fixed-points of a black box with a {\\em few\\/} fixed-points and where the number of fixed-points is {\\em known}.\nFor a large number~$n$ of fixed-points, {\\it e.g.},~$n=d/2$, we can use the probabilistic approach to non-causal circuits.\nLet~$B_n$ be a black box with~$n$ fixed-points and input and output spaces of dimension~$d$.\nThe Markov matrix of~$B_n$ is\n\n", "index": 23, "text": "\\begin{align}\n\t\\hat B_n=\\sum_{i=0}^{d-1}\\bm{e}_i\\bm{i}^T\\,,\\quad\\text{with }\\left|\\{i\\,|\\,e_i=i\\}\\right|=n\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E14.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{B}_{n}=\\sum_{i=0}^{d-1}\\bm{e}_{i}\\bm{i}^{T}\\,,\\quad\\text{%&#10;with }\\left|\\{i\\,|\\,e_{i}=i\\}\\right|=n\\,.\" display=\"inline\"><mrow><mrow><mrow><msub><mover accent=\"true\"><mi>B</mi><mo stretchy=\"false\">^</mo></mover><mi>n</mi></msub><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>d</mi><mo>-</mo><mn>1</mn></mrow></munderover></mstyle><mrow><msub><mi>\ud835\udc86</mi><mi>i</mi></msub><mo>\u2062</mo><mpadded width=\"+1.7pt\"><msup><mi>\ud835\udc8a</mi><mi>T</mi></msup></mpadded></mrow></mrow></mrow><mo rspace=\"12.5pt\">,</mo><mrow><mrow><mtext>with\u00a0</mtext><mo>\u2062</mo><mrow><mo>|</mo><mrow><mo stretchy=\"false\">{</mo><mpadded width=\"+1.7pt\"><mi>i</mi></mpadded><mo rspace=\"4.2pt\" stretchy=\"false\">|</mo><mrow><msub><mi>e</mi><mi>i</mi></msub><mo>=</mo><mi>i</mi></mrow><mo stretchy=\"false\">}</mo></mrow><mo>|</mo></mrow></mrow><mo>=</mo><mpadded width=\"+1.7pt\"><mi>n</mi></mpadded></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nwith\n\n", "itemtype": "equation", "pos": 20574, "prevtext": "\nWe construct a randomised gate with a {\\em unique\\/} fixed-point:\n\n", "index": 25, "text": "\\begin{align}\n\t\\hat B'=\\frac{1}{n}\\hat B_n+\\frac{n-1}{n}\\hat N\n\t\\,,\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E15.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{B}^{\\prime}=\\frac{1}{n}\\hat{B}_{n}+\\frac{n-1}{n}\\hat{N}\\,,\" display=\"inline\"><mrow><mrow><msup><mover accent=\"true\"><mi>B</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2032</mo></msup><mo>=</mo><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mi>n</mi></mfrac></mstyle><mo>\u2062</mo><msub><mover accent=\"true\"><mi>B</mi><mo stretchy=\"false\">^</mo></mover><mi>n</mi></msub></mrow><mo>+</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow><mi>n</mi></mfrac></mstyle><mo>\u2062</mo><mpadded width=\"+1.7pt\"><mover accent=\"true\"><mi>N</mi><mo stretchy=\"false\">^</mo></mover></mpadded></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nThe gate~$\\hat N$ can be understood as a~$d$-dimensional generalization of the~$\\mathrm{NOT}$ gate for bits:\nThe input is increased by one modulo~$d$.\nSuch an~$\\hat N$ has {\\em no\\/} fixed-points.\nThe mixture~$\\hat B'$ is logically consistent, because\n\n", "itemtype": "equation", "pos": 20659, "prevtext": "\nwith\n\n", "index": 27, "text": "\\begin{align}\n\t\\hat N=\\sum_{i=0}^{n-1}\\bm{\\bar i}\\bm{i}^T\\,,\\quad \\bar i=i\\oplus 1\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E16.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\hat{N}=\\sum_{i=0}^{n-1}\\bm{\\bar{i}}\\bm{i}^{T}\\,,\\quad\\bar{i}=i%&#10;\\oplus 1\\,.\" display=\"inline\"><mrow><mrow><mrow><mover accent=\"true\"><mi>N</mi><mo stretchy=\"false\">^</mo></mover><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></munderover></mstyle><mrow><mover accent=\"true\"><mi>\ud835\udc8a</mi><mo mathvariant=\"bold\" stretchy=\"false\">\u00af</mo></mover><mo>\u2062</mo><mpadded width=\"+1.7pt\"><msup><mi>\ud835\udc8a</mi><mi>T</mi></msup></mpadded></mrow></mrow></mrow><mo rspace=\"12.5pt\">,</mo><mrow><mover accent=\"true\"><mi>i</mi><mo stretchy=\"false\">\u00af</mo></mover><mo>=</mo><mrow><mi>i</mi><mo>\u2295</mo><mpadded width=\"+1.7pt\"><mn>1</mn></mpadded></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06522.tex", "nexttext": "\nThis means that we can use the circuit from Figure~\\ref{fig:bb} to find a random fixed-point of~$B_n$.\n\nWe apply these tools to find solutions of problems with a {\\em known\\/} number of solutions, and where a guess for a solution can be verified efficiently by a verifier~$V$.\nIn other words, we can find solutions to problems that are in NP, yet where the number of solutions must be known to us in advance.\nNote that the following construction does not solve a decision problem, but rather {\\em finds\\/} the solution.\nSuppose that a problem~$P$ has a {\\em unique\\/} solution.\nWe replace the gate~$B$ of Figure~\\ref{fig:bb} with a new gate~$V'$ that acts in the following way: It takes a guess~$c$ for a solution as input, runs~$V$ to verify~$c$.\nIf~$V$ accepts~$c$, then~$V'$ outputs~$c$, and otherwise,~$V'$ outputs~$c\\oplus 1$, where the addition is carried out modulo~$d$.\nSuch a circuit has a unique fixed-point~$c$ which equals the solution of~$P$.\nThis, for instance, could be applied to a~$\\mathrm{SAT}$ formula, where a {\\em unique\\/} assignment of values to variables exist which make the formula true.\n\n\n\n\\section{Other non-causal computational models and conclusion}\nWe briefly discuss non-causal Turing machines and non-causal billiard computers.\nA~Turing machine~$T$ has a~tape, a~read/write head, and an internal state machine.\nAfter every read instruction, the state machine moves to the next internal state, and thereby decides what to write and where to move the head to.\nA non-causal Turing machine is a machine where parts of the tape are not ``within time.''\nFuture (from the head's point of view) {\\em write\\/} instructions influence a past {\\em read\\/} instruction.\nA~symbol that is written at time~$t$ to position~$j$ could be read at time~$t'<t$ form position~$j$, {\\em i.e.}, symbols can be read {\\em before\\/} they are written.\nThis, as other self-referential systems, leads to problems that can be solved if we enforce the condition of logical consistency, as discussed above.\nAnother issue is that multiple {\\em write\\/} instructions could {\\em overwrite\\/} the value on position~$j$.\nThis leaves open the question what value is read before anything is written to~$j$.\nWe can overcome this issue by running the Turing machine in a reversible fashion and by generating a history tape~\\cite{Bennett:1973ko}, where no memory position gets overwritten.\nIf we imagine that this history tape is non-causal, {\\em i.e.}, we can read the entries even before they are written, then we could make the computation non-causal.\n\nThe billiard computer is a model of computation on a~billiard table~\\cite{Fredkin:1982bt}.\nBefore the computation starts, obstacles are placed on the table in such a way that the induced reflections of the balls and the collisions among the balls result in the desired computation.\nA non-causal version of a billiard computer is a billiard table where the wholes are connected with closed timelike curves (CTCs)~\\cite{Echeverria:1991ko} that are logically consistent.\nNow, a billiard ball can also collide with its younger self; this introduces the non-causal effect.\nEcheverria, Klinkhammer, and Thorne~\\cite{Echeverria:1991ko} showed that CTCs with solutions that are not overdetermined exist.\nHowever, all solutions that they found are underdetermined.\nThe non-causal circuits presented in this work indicate that also logically consistent non-causal billiard computers are admissible.\n\n\\section{Conclusion and open questions}\nWe show that logically consistent non-causal models of computation, where parts of the output of the computation are (re)used as input, are admissible.\nFurthermore, such a model of computation helps to solve certain tasks more efficiently.\nThe question is how much more powerful this new model of computation is, and whether uncomputable tasks become computable when compared to the standard circuit model.\nA strong restriction of the model is that, before one can find a fixed-point, one needs to know the number of fixed-points.\nFor instance, if we want to find a satisfying assignment for a SAT formula~$F$ with variables~$x_0,x_1,\\dots$, we first need to know the number of satisfying assignments --- otherwise we do not know how to construct the circuit.\nUnfortunately, it means that to solve a NP-complete problem we first need to solve a \\#SAT problem, {\\it i.e.}, counting the number of satisfying solutions.\nOne might want to apply the Valiant-Vazirani~\\cite{Valiant:1986ks} theorem to~$F'=F\\vee(x_0\\wedge x_1\\wedge\\dots)$ to reduce the number of satisfying assignments to~1.\\footnote{The reason why we modify~$F$ to~$F'$ is to guarantee satisfiability.}\nThe formula~$F''$ results from the Valiant-Vazirani theorem applied to~$F'$.\nThe problem that we are left with is: We do {\\em not\\/} know whether~$F''$ has a unique satisfying assignment or not --- the reduction is probabilistic.\nTherefore, we cannot plug~$F''$ into a circuit for finding the fixed-point.\n\nA model of computation similar to but more general than ours is based on Deutsch's~\\cite{Deutsch:1991jo} CTCs.\nAaronson and Watrous~\\cite{Aaronson:2009dy} showed that Deutsch's model can solve problems in PSPACE efficiently.\nHowever, in Deutsch's model, in contrast to ours, the information antinomy arises.\nDeutsch solves this issue by defining that the value on the looping wire is the uniform mixture of all solutions.\nThis introduces a non-linearity into Deutsch's model: The output of a circuit depends non-linearly on the input.\nThe consequence of this is that --- in the quantum version --- quantum states can be cloned~\\cite{Brun:2013jx}.\nThe model studied here, as it is linear, is not exposed to that consequence.\n\n\n\\section*{Acknowledgment}\nWe thank Mateus Ara{\\'u}jo, Veronika Baumann, Cyril Branciard, {\\v C}aslav Brukner, Fabio Costa, Adrien Feix, Arne Hansen, Alberto Montina, and Benno Salwey for helpful discussions.\nThis work was supported by the Swiss National Science Foundation (SNF), the National Centre of Competence in Research ``Quantum Science and Technology'' (QSIT) and the COST action on Fundamental Problems in Quantum Physics.\n\n\n\n\n\\bibliographystyle{IEEEtran}\n\\bibliography{refs}\n\n\n\n", "itemtype": "equation", "pos": 21011, "prevtext": "\nThe gate~$\\hat N$ can be understood as a~$d$-dimensional generalization of the~$\\mathrm{NOT}$ gate for bits:\nThe input is increased by one modulo~$d$.\nSuch an~$\\hat N$ has {\\em no\\/} fixed-points.\nThe mixture~$\\hat B'$ is logically consistent, because\n\n", "index": 29, "text": "\\begin{align}\n\t{\\operatorname{Tr}}\\left(\\frac{1}{n}\\hat B_n+\\frac{n-1}{n}\\hat N\\right)=\\frac{1}{n}{\\operatorname{Tr}} \\hat B_n+\\frac{n-1}{n}{\\operatorname{Tr}} \\hat N =1\n\t\\,.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E17.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\operatorname{Tr}}\\left(\\frac{1}{n}\\hat{B}_{n}+\\frac{n-1}{n}\\hat%&#10;{N}\\right)=\\frac{1}{n}{\\operatorname{Tr}}\\hat{B}_{n}+\\frac{n-1}{n}{%&#10;\\operatorname{Tr}}\\hat{N}=1\\,.\" display=\"inline\"><mrow><mrow><mrow><mo>Tr</mo><mo>\u2061</mo><mrow><mo>(</mo><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mi>n</mi></mfrac></mstyle><mo>\u2062</mo><msub><mover accent=\"true\"><mi>B</mi><mo stretchy=\"false\">^</mo></mover><mi>n</mi></msub></mrow><mo>+</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow><mi>n</mi></mfrac></mstyle><mo>\u2062</mo><mover accent=\"true\"><mi>N</mi><mo stretchy=\"false\">^</mo></mover></mrow></mrow><mo>)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mi>n</mi></mfrac></mstyle><mo>\u2062</mo><mrow><mo>Tr</mo><mo>\u2061</mo><msub><mover accent=\"true\"><mi>B</mi><mo stretchy=\"false\">^</mo></mover><mi>n</mi></msub></mrow></mrow><mo>+</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow><mi>n</mi></mfrac></mstyle><mo>\u2062</mo><mrow><mo>Tr</mo><mo>\u2061</mo><mover accent=\"true\"><mi>N</mi><mo stretchy=\"false\">^</mo></mover></mrow></mrow></mrow><mo>=</mo><mpadded width=\"+1.7pt\"><mn>1</mn></mpadded></mrow><mo>.</mo></mrow></math>", "type": "latex"}]