[{"file": "1601.05595.tex", "nexttext": "\nWhen $r=k$, the bound reduces to the classical Singleton bound $d \\leq n - k + 1$. Furthermore, they pointed out that Pyramid codes \\cite{pyramid} which had information locality can attain the bound (\\ref{singleton-like-bound}). For LRCs with all symbol locality $r$, Tamo \\emph{et al.} \\cite{Tamo-RS} showed that the bound (\\ref{singleton-like-bound}) still holds. The authors translated the relations among all code coordinates based on local recovery into a directed graph with $n$ vertices, then applied Tur\\'{a}n theorem to prove the result. Then they proposed a class of optimal LRCs by polynomial methods.\nLots of studies have been devoted to the constructions of LRCs. Optimal LRCs attaining bound (\\ref{singleton-like-bound}) for case $(r+1)|n$ were proposed in \\cite{Tamo-matroid} and \\cite{Natalia-rank-matric} by using Reed-Solomon codes and Gabidulin codes respecively. Goparaju \\emph{et al.} proposed binary cyclic codes which are locally repairable in \\cite{Gopa}. Huang \\emph{et al.} \\cite{pfhuangitw} analyzed the locality of many classical cyclic codes such as Hamming codes, Simplex codes, BCH codes, etc. Tamo  \\emph{et al.} \\cite{tamo-cyclic} presented optimal cyclic codes by characterizing these codes in terms of their zeros, and studied subfield subcodes of cyclic LRC codes. Barg \\emph{et al.} \\cite{Barg-curve} extended the construction in \\cite{Tamo-RS} to codes on algebraic curves.\nExplicit maximally recoverable codes with a related locality property were introduced in \\cite{Goppa-IT}.\n\nTo the best of our knowledge, the best known bound of LRCs was proposed by Cadambe and Mazumdar in \\cite{Cadambe:netcod,Cadambe:IT}.  For a $q$-ary $(n,k,r)$ LRC,\n\n", "itemtype": "equation", "pos": 4763, "prevtext": "\n\n\\title{Bounds and Constructions of Locally Repairable Codes: Parity-check Matrix Approach\n\\thanks{This research is supported in part by the Major\nState Basic Research Development Program of China (973 Program, 2012CB315803), the National Natural\nScience Foundation of China (61371078), and the Research Fund for the Doctoral Program of Higher Education of China (20130002110051).}\n}\n\\author{Jie Hao   \\and\nShu-Tao Xia\n\\thanks{The authors are with the Graduate School at Shenzhen, Tsinghua University, Shenzhen 518055, China (Email: j-hao13@mails.tsinghua.edu.cn, xiast@sz.tsinghua.edu.cn).}\n}\n\n\\date{}\n\n\n\n\\maketitle\n\n\n\n\\begin{abstract}\nA code symbol of a linear code is said to have locality $r$ if this symbol could be recovered by at most $r$ other code symbols. An $(n,k,r)$ locally repairable code (LRC) with all symbol locality is a linear code with length $n$, dimension $k$, and locality $r$ for all symbols. Recently, there are lots of studies on the bounds and constructions of LRCs, most of which are essentially based on the generator matrix of the linear code. Up to now, the most important bounds of minimum distance for LRCs might be the well-known Singleton-like bound and the Cadambe-Mazumdar bound concerning the field size.\n\nIn this paper, we study the bounds and constructions of LRCs from views of parity-check matrices.  Firstly, we set up a new characterization of the parity-check matrix for an LRC. Then, the proposed parity-check matrix is employed to analyze the minimum distance. We give an alternative simple proof of the well-known Singleton-like bound for LRCs with all symbol locality, and then easily generalize it to a more general bound, which essentially coincides with the Cadambe-Mazumdar bound and includes the Singleton-like bound as a specific case. Based on the proposed characterization of parity-check matrices, necessary conditions of meeting the Singleton-like bound are obtained, which naturally lead to a construction framework of good LRCs. Finally, two classes of optimal LRCs based on linearized polynomial theories and Vandermonde matrices are obtained under the construction framework.\n\n\\end{abstract}\n\n\n\n\\thispagestyle{empty}\n\\newpage\n\n\n\n\n\n\n\n\n\n\n\\pagenumbering{arabic}\n\\section{Introduction}\n\n\\subsection{Overview}\n\nIn large distributed storage systems, redundant data are always stored to ensure data reliability. Due to the extremely large amount of data, the traditional redundancy scheme of 3-replication tends to cause massive storage overhead. Coding techniques are then introduced to reduce the storage overhead, while maintaining high data reliability. The most widely used erasure codes are Reed-Solomon codes, which are a class of MDS codes. The data is firstly divided into $k$ information packets. Then $n-k$ parity packets are generated by encoding these $k$ information packets. Finally, all these $n$ packets are stored in different storage nodes, which could tolerate any $n-k$ failures and thus achieve higher data reliability compared to 3-replication.\nThe storage system needs to maintain data reliability in case of storage node failures. For 3-replication, when a node fails, node repairing can be accomplished directly by storing the replication of data into a new storage node. However, for the redundancy scheme of MDS codes, node repairing involves reading $k$ packets from other nodes, decoding the data file from these $k$ packets, and generating the lost packet by encoding the data file. One can see that its repair cost is much higher than 3-replication.\n\nTo reduce the repair cost of erasure codes, \\emph{locally repairable codes} (LRCs) emerged in recent years. The concept of locality was introduced by Gopalan \\emph{et. al.} \\cite{Gopalan}. Consider a $q$-ary $[n,k,d]$ linear code with length $n$, dimension $k$ and minimum distance $d$. A code symbol has \\emph{locality} $r$ means that it can be repaired by at most $r$ other code symbols.  In distributed storage systems, $r \\ll k$ indicates that only a small number of storage nodes are  involved when repairing a failed node, which means low disk I/O and repair cost. If only the $k$ information symbols have locality $r$, the code is called an \\emph{LRC with information locality}. Otherwise, if all the $n$ code symbols have locality $r$, the resulting code is called an \\emph{LRC with all symbol locality}. Windows azure storage employed a class of LRCs as its redundancy scheme \\cite{huang-atc}. The Hadoop Distributed File System RAID used by Facebook implemented another type of an LRC \\cite{Xor-elephant-vldb}.\n\n\nThe bounds and constructions of LRCs have attracted lots of interests. For an $(n,k,r)$ LRC with information locality, Gopalan \\emph{et al.} \\cite{Gopalan} proved the well-known Singleton-like bound\n \n", "index": 1, "text": "\\begin{equation} \\label{singleton-like-bound}\n d \\leq n -k - \\left\\lceil \\frac{k}{r} \\right\\rceil + 2.\n \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"d\\leq n-k-\\left\\lceil\\frac{k}{r}\\right\\rceil+2.\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi><mo>-</mo><mrow><mo>\u2308</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nwhere $k_{\\text{opt}}^{(q)}(n,d)$ is the largest possible dimension of an $n$-length code for a given alphabet size $q$ and a given minimum distance $d$, and $t \\le \\min \\left\\{\\left\\lceil \\frac{n}{r+1}\\right\\rceil,\\left\\lceil\\frac{k}{r}\\right\\rceil\\right\\}.$ Note that the field size is taken into account, and the bound (\\ref{general-bound-k}) is shown to be tighter than the Singleton-like bound, especially when the field size is small. The binary Simplex codes have locality $2$ and attain the bound (\\ref{general-bound-k}) \\cite{Cadambe:IT}. Moreover,\n\\cite{anticode}\\cite{zeh} constructed other LRCs meeting the bound (\\ref{general-bound-k}).\n\nThe existing techniques for these proofs of the bounds (\\ref{singleton-like-bound}) and (\\ref{general-bound-k}) are quite different from each other, which essentially focus on the views of generating LRCs. For example,  Gopalan \\emph{et. al.} \\cite{Gopalan} mainly employed generator matrices, the proof in \\cite{Cadambe:netcod,Cadambe:IT} depended on the analysis of the full codebooks, and the proof in \\cite{Tamo-RS} employed some results, e.g. Tur\\'{a}n theorem, in graph theory. These techniques lack connections and could not apparently reveal the relation of the bounds (\\ref{singleton-like-bound}) and (\\ref{general-bound-k}). It is well known that linear codes, e.g., LDPC codes, could be constructed, analyzed and decoded by parity-check matrices. In this paper, a new framework based on the parity-check matrices is proposed to study LRCs. Unified characterization, analysis, proofs, and constructions are obtained under the framework, often much simpler than previous approaches.\n\n\\subsection{Our results}\\label{sec:our-results}\n\nIn this paper, we study the bounds and constructions of LRCs from views of parity-check matrices. Let $\\mathcal{C}$ be a $q$-ary $(n,k,r)$ LRC with length $n$, dimension $k$ and all symbol locality $r$. By choosing $n-k$ independent vectors from the dual code $\\mathcal{C}^\\bot$ (or parity-check equations), we obtain a parity-check matrix of $\\mathcal{C}$.\nFirstly, we set up a new characterization of the parity-check matrix for an LRC. Then, the proposed parity-check matrix is employed to analyze the minimum distance. We give simple and unified proofs of the Singleton-like bound with all symbol locality and the Cadambe-Mazumdar bound. Based on the proposed characterization, necessary conditions of meeting the Singleton-like bound are obtained, which naturally lead to a construction framework of optimal LRCs. Finally, two classes of optimal LRCs based on linearized polynomial theories and Vandermonde matrices are thus obtained.\n\n\\subsubsection{Characterization of the parity-check matrix}\nFor the LRC $\\mathcal{C}$, in order to find a suitable parity-check matrix to involve locality, we begin with a simple observation:\na code symbol has locality $r$ if and only if there exists a parity-check equation which has at most $r+1$ non-zero components and covers the coordinate of the symbol.\n\nAt first, $l$ independent parity-check equations are carefully selected by a simple step-by-step procedure to cover all coordinates and ensure locality, where at most $r+1$ coordinates are covered by one parity-check equation at each step. Then, the parity-check matrix is found by further adding some $n-k-l$ independent parity-check equations. This simple characterization will help much to the proofs of minimum distance bounds and constructions of optimal LRCs.\n\n\\subsubsection{Bounds for LRCs with all symbol locality}\n\nIt is well known that the number of dependent columns in the parity-check matrix upper bounds the minimum distance of a linear code. Bounds for LRCs are thus obtained by analyzing the proposed parity-check matrix. In fact, we prove that for an $(n,k,r)$ LRC with all symbol locality,  the proposed parity-check matrix $H$ must have  $n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2$ columns which are linearly dependent, which implies the Singleton-like bound (\\ref{singleton-like-bound}) immediately.\nTwo necessary conditions on the parity-check matrices of optimal LRCs meeting the bound (\\ref{singleton-like-bound}) are then obtained according to the proofs. The \\emph{support} of a vector is the set of coordinates of its non-zero components. Specially, if $r \\mid k$ , then $(r+1) \\mid n$ and the supports of the rows which guarantee the locality property in the parity-check matrix have to be pairwise disjoint, and each of which has weight exactly $r+1$.\n\nLet $H'$ be obtained from $H$ by deleting a parity-check equation of $H$ and all the columns which corresponding to its support. It is clear that the minimum distance of the linear code with parity-check $H'$ upper bounds the one with $H$. Performing the above deleting procedure step by step for those rows ensuring locality, we have that the minimum distance $d$ satisfies\n\n", "itemtype": "equation", "pos": 6564, "prevtext": "\nWhen $r=k$, the bound reduces to the classical Singleton bound $d \\leq n - k + 1$. Furthermore, they pointed out that Pyramid codes \\cite{pyramid} which had information locality can attain the bound (\\ref{singleton-like-bound}). For LRCs with all symbol locality $r$, Tamo \\emph{et al.} \\cite{Tamo-RS} showed that the bound (\\ref{singleton-like-bound}) still holds. The authors translated the relations among all code coordinates based on local recovery into a directed graph with $n$ vertices, then applied Tur\\'{a}n theorem to prove the result. Then they proposed a class of optimal LRCs by polynomial methods.\nLots of studies have been devoted to the constructions of LRCs. Optimal LRCs attaining bound (\\ref{singleton-like-bound}) for case $(r+1)|n$ were proposed in \\cite{Tamo-matroid} and \\cite{Natalia-rank-matric} by using Reed-Solomon codes and Gabidulin codes respecively. Goparaju \\emph{et al.} proposed binary cyclic codes which are locally repairable in \\cite{Gopa}. Huang \\emph{et al.} \\cite{pfhuangitw} analyzed the locality of many classical cyclic codes such as Hamming codes, Simplex codes, BCH codes, etc. Tamo  \\emph{et al.} \\cite{tamo-cyclic} presented optimal cyclic codes by characterizing these codes in terms of their zeros, and studied subfield subcodes of cyclic LRC codes. Barg \\emph{et al.} \\cite{Barg-curve} extended the construction in \\cite{Tamo-RS} to codes on algebraic curves.\nExplicit maximally recoverable codes with a related locality property were introduced in \\cite{Goppa-IT}.\n\nTo the best of our knowledge, the best known bound of LRCs was proposed by Cadambe and Mazumdar in \\cite{Cadambe:netcod,Cadambe:IT}.  For a $q$-ary $(n,k,r)$ LRC,\n\n", "index": 3, "text": "\\begin{equation}\\label{general-bound-k}\nk \\le \\min_{ t \\in Z_+} \\Big[ tr + k^{(q)}_{\\rm opt}(n  - t(r+1),d) \\Big],\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"k\\leq\\min_{t\\in Z_{+}}\\Big{[}tr+k^{(q)}_{\\rm opt}(n-t(r+1),d)\\Big{]},\" display=\"block\"><mrow><mrow><mi>k</mi><mo>\u2264</mo><mrow><munder><mi>min</mi><mrow><mi>t</mi><mo>\u2208</mo><msub><mi>Z</mi><mo>+</mo></msub></mrow></munder><mo>\u2061</mo><mrow><mo maxsize=\"160%\" minsize=\"160%\">[</mo><mrow><mrow><mi>t</mi><mo>\u2062</mo><mi>r</mi></mrow><mo>+</mo><mrow><msubsup><mi>k</mi><mi>opt</mi><mrow><mo stretchy=\"false\">(</mo><mi>q</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mrow><mi>t</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo maxsize=\"160%\" minsize=\"160%\">]</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nwhere $d_{\\text{opt}}^{(q)}(n^*,k^*)$ is the largest possible minimum distance of a $q$-ary $[n^*,k^*]$ linear code. Simplex codes attain this general bound with equality, which indicates its tightness. It is easy to see that the bound (\\ref{gb}) essentially coincides with the Cadambe-Mazumdar bound (\\ref{general-bound-k}), which could also be directly derived under our framework.\nWhen $t = \\left\\lceil\\frac{k}{r}\\right\\rceil-1$ and using $d_{\\text{opt}}^{(q)} (n  - t(r+1),k-tr)\\le n-k-t+1$, the bound (\\ref{gb}) reduces to the Singleton-like bound $d\\le n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2$.\n\n\n\\subsubsection{Constructions of optimal LRCs}\n\nThe above results and discussions naturally suggest the next construction procedures.\n\\begin{itemize}\n\\item\nConstructing parity-check equations ensuring locality, or locality rows;\n\n\\vspace{-0.2cm}\n\\item\nAdding additional parity-check equations to enlarge the minimum distance.\n\\end{itemize}\nFollowing the necessary conditions meeting the Singleton-like bound, we construct optimal LRCs with all symbol locality. Suppose $(r+1) \\mid n$, we focus on the design of the parity-check matrix $H$ with $l=\\frac{n}{r+1}$ locality rows, each of which has weight $r+1$ and their supports are pairwise disjoint.\nBy adding additional parity-check equations, two classes of optimal LRCs are presented.\nThe first class is based on linearized polynomial theories. Let $F_q^m$ be the extension field of $F_q$. Let $\\alpha_{i,j} \\in F_{q^m}$ and $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\}$ are linearly independent over $F_q$, then the code defined by the parity-check matrix is an LRC with all symbol locality $r$ meeting the Singleton-like bound.\n\n", "itemtype": "equation", "pos": 11548, "prevtext": "\nwhere $k_{\\text{opt}}^{(q)}(n,d)$ is the largest possible dimension of an $n$-length code for a given alphabet size $q$ and a given minimum distance $d$, and $t \\le \\min \\left\\{\\left\\lceil \\frac{n}{r+1}\\right\\rceil,\\left\\lceil\\frac{k}{r}\\right\\rceil\\right\\}.$ Note that the field size is taken into account, and the bound (\\ref{general-bound-k}) is shown to be tighter than the Singleton-like bound, especially when the field size is small. The binary Simplex codes have locality $2$ and attain the bound (\\ref{general-bound-k}) \\cite{Cadambe:IT}. Moreover,\n\\cite{anticode}\\cite{zeh} constructed other LRCs meeting the bound (\\ref{general-bound-k}).\n\nThe existing techniques for these proofs of the bounds (\\ref{singleton-like-bound}) and (\\ref{general-bound-k}) are quite different from each other, which essentially focus on the views of generating LRCs. For example,  Gopalan \\emph{et. al.} \\cite{Gopalan} mainly employed generator matrices, the proof in \\cite{Cadambe:netcod,Cadambe:IT} depended on the analysis of the full codebooks, and the proof in \\cite{Tamo-RS} employed some results, e.g. Tur\\'{a}n theorem, in graph theory. These techniques lack connections and could not apparently reveal the relation of the bounds (\\ref{singleton-like-bound}) and (\\ref{general-bound-k}). It is well known that linear codes, e.g., LDPC codes, could be constructed, analyzed and decoded by parity-check matrices. In this paper, a new framework based on the parity-check matrices is proposed to study LRCs. Unified characterization, analysis, proofs, and constructions are obtained under the framework, often much simpler than previous approaches.\n\n\\subsection{Our results}\\label{sec:our-results}\n\nIn this paper, we study the bounds and constructions of LRCs from views of parity-check matrices. Let $\\mathcal{C}$ be a $q$-ary $(n,k,r)$ LRC with length $n$, dimension $k$ and all symbol locality $r$. By choosing $n-k$ independent vectors from the dual code $\\mathcal{C}^\\bot$ (or parity-check equations), we obtain a parity-check matrix of $\\mathcal{C}$.\nFirstly, we set up a new characterization of the parity-check matrix for an LRC. Then, the proposed parity-check matrix is employed to analyze the minimum distance. We give simple and unified proofs of the Singleton-like bound with all symbol locality and the Cadambe-Mazumdar bound. Based on the proposed characterization, necessary conditions of meeting the Singleton-like bound are obtained, which naturally lead to a construction framework of optimal LRCs. Finally, two classes of optimal LRCs based on linearized polynomial theories and Vandermonde matrices are thus obtained.\n\n\\subsubsection{Characterization of the parity-check matrix}\nFor the LRC $\\mathcal{C}$, in order to find a suitable parity-check matrix to involve locality, we begin with a simple observation:\na code symbol has locality $r$ if and only if there exists a parity-check equation which has at most $r+1$ non-zero components and covers the coordinate of the symbol.\n\nAt first, $l$ independent parity-check equations are carefully selected by a simple step-by-step procedure to cover all coordinates and ensure locality, where at most $r+1$ coordinates are covered by one parity-check equation at each step. Then, the parity-check matrix is found by further adding some $n-k-l$ independent parity-check equations. This simple characterization will help much to the proofs of minimum distance bounds and constructions of optimal LRCs.\n\n\\subsubsection{Bounds for LRCs with all symbol locality}\n\nIt is well known that the number of dependent columns in the parity-check matrix upper bounds the minimum distance of a linear code. Bounds for LRCs are thus obtained by analyzing the proposed parity-check matrix. In fact, we prove that for an $(n,k,r)$ LRC with all symbol locality,  the proposed parity-check matrix $H$ must have  $n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2$ columns which are linearly dependent, which implies the Singleton-like bound (\\ref{singleton-like-bound}) immediately.\nTwo necessary conditions on the parity-check matrices of optimal LRCs meeting the bound (\\ref{singleton-like-bound}) are then obtained according to the proofs. The \\emph{support} of a vector is the set of coordinates of its non-zero components. Specially, if $r \\mid k$ , then $(r+1) \\mid n$ and the supports of the rows which guarantee the locality property in the parity-check matrix have to be pairwise disjoint, and each of which has weight exactly $r+1$.\n\nLet $H'$ be obtained from $H$ by deleting a parity-check equation of $H$ and all the columns which corresponding to its support. It is clear that the minimum distance of the linear code with parity-check $H'$ upper bounds the one with $H$. Performing the above deleting procedure step by step for those rows ensuring locality, we have that the minimum distance $d$ satisfies\n\n", "index": 5, "text": "\\begin{equation}\n\\label{gb}\nd \\le \\min_{ 1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1} d^{(q)}_{\\rm opt}\\big (n  - t(r+1),k-tr\\big),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"d\\leq\\min_{1\\leq t\\leq\\left\\lceil\\frac{k}{r}\\right\\rceil-1}d^{(q)}_{\\rm opt}%&#10;\\big{(}n-t(r+1),k-tr\\big{)},\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2264</mo><mrow><mrow><munder><mi>min</mi><mrow><mn>1</mn><mo>\u2264</mo><mi>t</mi><mo>\u2264</mo><mrow><mrow><mo>\u2308</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u2309</mo></mrow><mo>-</mo><mn>1</mn></mrow></mrow></munder><mo>\u2061</mo><msubsup><mi>d</mi><mi>opt</mi><mrow><mo stretchy=\"false\">(</mo><mi>q</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mo>\u2062</mo><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><mi>n</mi><mo>-</mo><mrow><mi>t</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo><mrow><mi>k</mi><mo>-</mo><mrow><mi>t</mi><mo>\u2062</mo><mi>r</mi></mrow></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nThe second class is based on Vandermonde matrices. Suppose that $r \\geq 4$, $\\alpha_{i,j}\\in F_q$, and some other conditions (see the main body for details), then the corresponding linear code is an optimal LRC with all symbol locality $r$, and the minimum distance is $5$.\n\n", "itemtype": "equation", "pos": 13407, "prevtext": "\nwhere $d_{\\text{opt}}^{(q)}(n^*,k^*)$ is the largest possible minimum distance of a $q$-ary $[n^*,k^*]$ linear code. Simplex codes attain this general bound with equality, which indicates its tightness. It is easy to see that the bound (\\ref{gb}) essentially coincides with the Cadambe-Mazumdar bound (\\ref{general-bound-k}), which could also be directly derived under our framework.\nWhen $t = \\left\\lceil\\frac{k}{r}\\right\\rceil-1$ and using $d_{\\text{opt}}^{(q)} (n  - t(r+1),k-tr)\\le n-k-t+1$, the bound (\\ref{gb}) reduces to the Singleton-like bound $d\\le n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2$.\n\n\n\\subsubsection{Constructions of optimal LRCs}\n\nThe above results and discussions naturally suggest the next construction procedures.\n\\begin{itemize}\n\\item\nConstructing parity-check equations ensuring locality, or locality rows;\n\n\\vspace{-0.2cm}\n\\item\nAdding additional parity-check equations to enlarge the minimum distance.\n\\end{itemize}\nFollowing the necessary conditions meeting the Singleton-like bound, we construct optimal LRCs with all symbol locality. Suppose $(r+1) \\mid n$, we focus on the design of the parity-check matrix $H$ with $l=\\frac{n}{r+1}$ locality rows, each of which has weight $r+1$ and their supports are pairwise disjoint.\nBy adding additional parity-check equations, two classes of optimal LRCs are presented.\nThe first class is based on linearized polynomial theories. Let $F_q^m$ be the extension field of $F_q$. Let $\\alpha_{i,j} \\in F_{q^m}$ and $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\}$ are linearly independent over $F_q$, then the code defined by the parity-check matrix is an LRC with all symbol locality $r$ meeting the Singleton-like bound.\n\n", "index": 7, "text": "\\begin{equation*}\nH =\n  \\left(\n  \\begin{array}{cccc|cccc|c|cccc}\n    1&1&\\cdots&1&0&0&\\cdots&0&\\cdots&0&0&\\cdots&0\\\\\n    0&0&\\cdots&0&1&1&\\cdots&1&\\cdots&0&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    0&0&\\cdots&0&0&0&\\cdots&0&\\cdots&1&1&\\cdots&1\\\\\n    \\alpha_{1,1}&\\alpha_{1,2}&\\cdots&\\alpha_{1,r+1}&\\alpha_{2,1}&\\alpha_{2,2}&\\cdots&\\alpha_{2,r+1}&\\cdots&\\alpha_{l,1}&\\alpha_{l,2}&\\cdots&\\alpha_{l,r+1}\\\\\n    \\alpha_{1,1}^{q}&\\alpha_{1,2}^{q}&\\cdots&\\alpha_{1,r+1}^{q}&\\alpha_{2,1}^{q}&\\alpha_{2,2}^{q}&\\cdots&\\alpha_{2,r+1}^{q}&\\cdots&\\alpha_{l,1}^{q}&\\alpha_{l,2}^{q}&\\cdots&\\alpha_{l,r+1}^{q}\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    \\alpha_{1,1}^{q^s}&\\alpha_{1,2}^{q^s}&\\cdots&\\alpha_{1,r+1}^{q^s}&\\alpha_{2,1}^{q^s}&\\alpha_{2,2}^{q^s}&\\cdots&\\alpha_{2,r+1}^{q^s}&\\cdots&\\alpha_{l,1}^{q^s}&\\alpha_{l,2}^{q^s}&\\cdots&\\alpha_{l,r+1}^{q^s}\\\\\n  \\end{array}\n\\right).\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"H=\\left(\\begin{array}[]{cccc|cccc|c|cccc}1&amp;1&amp;\\cdots&amp;1&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;%&#10;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;1&amp;\\cdots&amp;1\\\\&#10;\\alpha_{1,1}&amp;\\alpha_{1,2}&amp;\\cdots&amp;\\alpha_{1,r+1}&amp;\\alpha_{2,1}&amp;\\alpha_{2,2}&amp;%&#10;\\cdots&amp;\\alpha_{2,r+1}&amp;\\cdots&amp;\\alpha_{l,1}&amp;\\alpha_{l,2}&amp;\\cdots&amp;\\alpha_{l,r+1}\\\\&#10;\\alpha_{1,1}^{q}&amp;\\alpha_{1,2}^{q}&amp;\\cdots&amp;\\alpha_{1,r+1}^{q}&amp;\\alpha_{2,1}^{q}&amp;%&#10;\\alpha_{2,2}^{q}&amp;\\cdots&amp;\\alpha_{2,r+1}^{q}&amp;\\cdots&amp;\\alpha_{l,1}^{q}&amp;\\alpha_{l,2%&#10;}^{q}&amp;\\cdots&amp;\\alpha_{l,r+1}^{q}\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;\\alpha_{1,1}^{q^{s}}&amp;\\alpha_{1,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{1,r+1}^{q^{s}}&amp;\\alpha%&#10;_{2,1}^{q^{s}}&amp;\\alpha_{2,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{2,r+1}^{q^{s}}&amp;\\cdots&amp;%&#10;\\alpha_{l,1}^{q^{s}}&amp;\\alpha_{l,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{l,r+1}^{q^{s}}\\\\&#10;\\end{array}\\right).\" display=\"block\"><mrow><mrow><mi>H</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mi>q</mi></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mi>q</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nFor large minimum distances, simple computer search could help to find favorite choices of $\\alpha_{i,j}$.\n\n\n\\subsection{Related work}\n\nThere are three kinds of codes which allow fast and efficient recovery of erased code symbols.\n\n\\emph{LRCs with Availability:} These codes were first discussed in \\cite{Ankit}\\cite{Wang}. If a code symbol of an LRC has $t$ disjoint repair sets, each of which has size at most $r+1$, then the code symbol is said to have \\emph{availability} $t$ \\cite{Ankit}. Ankit \\cite{Ankit} and Wang \\cite{Wang} derived the upper bound on the minimum distance for LRCs with locality $r$ and availability $t$ for information symbols.   \\cite{Wang an}\\cite{Itzhak} also derived some bounds for LRCs with availability $t$. \\cite{Tamo-RS}\\cite{Ankit}\\cite{Wang}\\cite{Pami}\\cite{WangCon}\\cite{pfhuangisit} constructed LRCs with availability.\n\n\n\\emph{Multiple-erasures and Vector LRCs:}  \\cite{Prakash-lrc-delta} proposed the locality $(r,\\delta)$ to locally recover multiple erasures, which reduces to locality $r$ when $\\delta = 2$. Upper bounds and constructions were given in \\cite{Prakash-lrc-delta,Prakash-lrc-two-erasure}.\n\\cite{papil} generalized the bound (\\ref{singleton-like-bound}) for vector LRCs and presented constructions for vector LRCs.  \\cite{Natalia-rank-matric,ankit-securelrc} further generalized the bound in \\cite{papil} to deal with multiple erasures.\n\n\n\\emph{Regenerating Codes:} These codes \\cite{Dimakis} are a class of MDS codes with subpacketization. When a single node failure occures, the repair process involves more  than $k$ nodes and  each node transfers a linear combination of the packets it stores, which reduces bandwidths compared to classical MDS codes. See \\cite{prod-matrix}\\cite{msr} for the construction of regenerating codes and \\cite{Dimakis-survey} for a survey.\n\n\n\\emph{Locally Decodable Codes (LDCs):} These codes were introduced in \\cite{ldc-jk}. See, e.g., \\cite{ldc-sk}\\cite{ldc-ke}\\cite{ldc-sy}, for the further developments  and \\cite{ldc-sysurvey} for a survey. LRCs are very similar to LDCs. The main difference is that LRCs discussed in this paper can perform local recovery after a single symbol erasure, while LDCs allow for local recovery even after a very large number of erasures.\n\\subsection{Organization}\n\nThe paper is organized as follows. Section~\\ref{sec:prelim} gives some basic notions and preliminaries. In section~\\ref{sec:lrc-bound}, a new characterization of parity-check matrices is proposed and several bounds are derived under a unified approach.  Section~\\ref{sec:construction} discussed the constructions, two classes of optimal LRCs are obtained. Finally some future directions are given in Section \\ref{sec:conclusion}.\n\n\n\n\n\\section{Preliminaries} \\label{sec:prelim}\nIn this section, we review some basic knowledge about linear codes and locally repairable codes, as well as the linearized polynomial theories.\n\n\\subsection{Linear codes and LRCs}\nLet $F_q$ be a finite field with $q$ elements. Let $\\mathcal{C}$ be a $q$-ary $[n,k,d]$ linear code with length $n$, dimension $k$ and minimum distance $d$ \\cite{MacWilliams}. The $k\\times n$ generator matrix $G$ and the $(n-k)\\times n$ parity-check matrix $H$ satisfies $G H^T = 0$. Let $\\mathcal{C}^\\bot$ denote the dual code of $\\mathcal{C}$. The rows of $H$ are the codewords of $\\mathcal{C}^\\bot$, are called parity-check equation sometimes. Let $[n] = \\{1,2,\\cdots,n\\}$ and $\\mathbf{a}=(a_1,a_2,\\ldots, a_n)$ be a vector. The support of a vector $\\mathbf{a}$ is $supp(\\mathbf{a}) = \\{i \\in [n]: a_i \\neq 0\\}$, and its (Hamming) weight is $wt(\\mathbf{a}) = |supp(\\mathbf{a})|$. The (Hamming) distance of two vectors is the number of coordinates at which they differ. The minimum distance $d$ of $\\mathcal{C}$ is the minimum value of distances between any two different codewords. The minimum distance satisfies the following well known facts \\cite{MacWilliams}.\n\n\n\\begin{lemma} \\label{lemma:min-dist}\nIf the parity-check matrix $H$ of a linear code $\\mathcal{C}$ has $\\delta$ linearly dependent columns, then the minimum distance  $d \\leq \\delta.$ Moreover, the minimum distance $d=\\delta$ if and only if any $\\delta-1$ columns of $H$ are linearly independent, and there exist $\\delta$ columns of $H$ which are linearly dependent.\n\\end{lemma}\n\n\n\\begin{lemma}\n[Singleton bound]\\quad\n$d \\leq n - k + 1.$\n\\end{lemma}\n\nCodes attaining the Singleton bound are called \\emph{Maximum Distance Separable (MDS) Codes.} The well-known Reed-Solomon codes are the most important classes of MDS codes.\n\n\nLRCs \\cite{Gopalan} are a class of linear codes with locality constraint on code symbols.\n\\begin{defin}\nA code symbol $c_{i}$ is said to have \\emph{locality} $r$ if there exists a subsets $R_i \\subset [n]\\backslash\\{i\\},|R_i|\\leq r$ such that $c_{i}$ can be recovered from the code symbols indexed by $R_i$.\n\\end{defin}\n\nIn other words, $c_i$ has locality $r$ if and only of the $i$th column of the generator matrix is a linear combination of at most $r$ other column vectors. For an LRC, $1 < r \\ll k$ usually. For an $[n,k]$ linear code, if only the $k$ information symbols have locality $r$, it is called an \\emph{$(n,k,r)$ LRC with information locality}. Similarly if all the $n$ code symbols have locality $r$, the resulting code is called an \\emph{$(n,k,r)$ LRC with all symbol locality}.\n\n\\subsection{Linearized polynomial theory}\\label{}\n\nThe contents in this subsection are from  \\cite{Rudolf}. Let $m$ be a positive integer and $F_{q^m}$ be the extension field of $F_q$. Let $\\alpha_1,\\alpha_2 \\in F_{q^m}$. Then\n$\\alpha_1$ and $\\alpha_2$ are said to be \\emph{linearly independent over $F_q$} if $\\lambda_1\\alpha_1+\\lambda_2\\alpha_2=0, \\;\\lambda_1,\\lambda_2\\in F_q \\Leftrightarrow \\lambda_1=\\lambda_2=0$.\nFor any $n \\in N$, $(\\alpha_1 \\pm \\alpha_2)^{q^n} = {\\alpha_1}^{q^n} \\pm {\\alpha_2}^{q^n}.$\n\nA polynomial of the form\n$L(x) = \\sum_{i=0}^n \\alpha_i x^{q^i}$\nwith coefficients in $F_{q^m}$ is called a \\emph{linearized polynomial} over $F_{q^m}$.\nSuppose the extension field $F_{q^s}$ of $F_{q^m}$ contains all the roots of $L(x)$. Then the roots form a linear subspace of $F_{q^s}$. The following lemma is from \\cite{Rudolf}.\n\\begin{lemma}\nLet $\\beta_1,\\beta_2,\\cdots,\\beta_n$ be the elements of $F_{q^m}$. Then\n\n\n", "itemtype": "equation", "pos": 14696, "prevtext": "\nThe second class is based on Vandermonde matrices. Suppose that $r \\geq 4$, $\\alpha_{i,j}\\in F_q$, and some other conditions (see the main body for details), then the corresponding linear code is an optimal LRC with all symbol locality $r$, and the minimum distance is $5$.\n\n", "index": 9, "text": "\\begin{equation*}\nH =\n  \\left(\n  \\begin{array}{cccc|cccc|c|cccc}\n    1&1&\\cdots&1&0&0&\\cdots&0&\\cdots&0&0&\\cdots&0\\\\\n    0&0&\\cdots&0&1&1&\\cdots&1&\\cdots&0&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    0&0&\\cdots&0&0&0&\\cdots&0&\\cdots&1&1&\\cdots&1\\\\\n    \\alpha_{1,1}&\\alpha_{1,2}&\\cdots&\\alpha_{1,r+1}&\\alpha_{2,1}&\\alpha_{2,2}&\\cdots&\\alpha_{2,r+1}&\\cdots&\\alpha_{l,1}&\\alpha_{l,2}&\\cdots&\\alpha_{l,r+1}\\\\\n    \\alpha_{1,1}^{2}&\\alpha_{1,2}^{2}&\\cdots&\\alpha_{1,r+1}^{2}&\\alpha_{2,1}^{2}&\\alpha_{2,2}^{2}&\\cdots&\\alpha_{2,r+1}^{2}&\\cdots&\\alpha_{l,1}^{2}&\\alpha_{l,2}^{2}&\\cdots&\\alpha_{l,r+1}^{2}\\\\\n    \\alpha_{1,1}^{3}&\\alpha_{1,2}^{3}&\\cdots&\\alpha_{1,r+1}^{3}&\\alpha_{2,1}^{3}&\\alpha_{2,2}^{3}&\\cdots&\\alpha_{2,r+1}^{3}&\\cdots&\\alpha_{l,1}^{3}&\\alpha_{l,2}^{3}&\\cdots&\\alpha_{l,r+1}^{3}\\\\\n  \\end{array}\n\\right).\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"H=\\left(\\begin{array}[]{cccc|cccc|c|cccc}1&amp;1&amp;\\cdots&amp;1&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;%&#10;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;1&amp;\\cdots&amp;1\\\\&#10;\\alpha_{1,1}&amp;\\alpha_{1,2}&amp;\\cdots&amp;\\alpha_{1,r+1}&amp;\\alpha_{2,1}&amp;\\alpha_{2,2}&amp;%&#10;\\cdots&amp;\\alpha_{2,r+1}&amp;\\cdots&amp;\\alpha_{l,1}&amp;\\alpha_{l,2}&amp;\\cdots&amp;\\alpha_{l,r+1}\\\\&#10;\\alpha_{1,1}^{2}&amp;\\alpha_{1,2}^{2}&amp;\\cdots&amp;\\alpha_{1,r+1}^{2}&amp;\\alpha_{2,1}^{2}&amp;%&#10;\\alpha_{2,2}^{2}&amp;\\cdots&amp;\\alpha_{2,r+1}^{2}&amp;\\cdots&amp;\\alpha_{l,1}^{2}&amp;\\alpha_{l,2%&#10;}^{2}&amp;\\cdots&amp;\\alpha_{l,r+1}^{2}\\\\&#10;\\alpha_{1,1}^{3}&amp;\\alpha_{1,2}^{3}&amp;\\cdots&amp;\\alpha_{1,r+1}^{3}&amp;\\alpha_{2,1}^{3}&amp;%&#10;\\alpha_{2,2}^{3}&amp;\\cdots&amp;\\alpha_{2,r+1}^{3}&amp;\\cdots&amp;\\alpha_{l,1}^{3}&amp;\\alpha_{l,2%&#10;}^{3}&amp;\\cdots&amp;\\alpha_{l,r+1}^{3}\\\\&#10;\\end{array}\\right).\" display=\"block\"><mrow><mrow><mi>H</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>3</mn></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>3</mn></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nand thus the determinant is non-zero if and only if $\\beta_1,\\beta_2,\\cdots,\\beta_n$ are linearly independent over $F_q$.\n\\end{lemma}\n\n\\section{Bounds for LRCs with all symbol locality} \\label{sec:lrc-bound}\n\n\n\n\nIn this section, we set up a new characterization of the parity-check matrix for an LRC. Then, the proposed parity-check matrix is employed to analyze the minimum distance. We give simple and unified proofs of the Singleton-like bound with all symbol locality and the Cadambe-Mazumdar bound. Necessary conditions of meeting the Singleton-like bound are obtained.\n\n\\subsection{Characterization of the parity-check matrix}\\label{cpm}\n\nLet $\\mathcal{C}$ be a $q$-ary $(n,k,r)$ LRC with length $n$, dimension $k$ and all symbol locality $r$. By choosing $n-k$ independent vectors from the dual code $\\mathcal{C}^\\bot$ (or parity-check equations), we obtain a full rank parity-check matrix of $\\mathcal{C}$. Although redundant parity-check equations might be added to the parity-check matrix sometimes for various purposes, e.g., simplifying the analysis or facilitating decoding, we only consider the full-rank case here.\nThe locality property of a linear code could be characterized by the parity-check matrix. In order to find a suitable parity-check matrix to involve locality, we begin with a simple observation:\n\n\\begin{claim}\\label{claim:locality}\nA code symbol has locality $r$ if and only if there exists a parity-check equation which has at most $r+1$ non-zero components and covers the coordinate of the symbol.\n\\end{claim}\n\nNow, we select $n-k$ parity-check equations from $\\mathcal{C}^\\bot$ to form the parity-check matrix $H$ of $\\mathcal{C}$, which is divided into two parts. The rows in the upper part $H_1$ cover all coordinates and ensure locality, while the rows in the lower part $H_2$ impact the minimum distance. The details follow.\n\n\\begin{center}\n\\fbox{\n\\parbox{15cm}{\n1.\\ \\ Let $i =1, S_0 = \\{\\}$.\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad // \\small{initialization.}\n\n2.\\ \\ While $S_{i-1} \\neq [n]$:\n\n3.\\ \\ \\hspace{0.5cm} Pick $j \\in [n] \\setminus S_{i-1}$. \\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad// \\small{pick a coordinate $j$ not covered.}\n\n4.\\ \\ \\hspace{0.5cm} Choose $\\mathbf{h}_i = \\mathop{{\\operatorname{argmin}}}_{\\mathbf{e} \\in \\mathcal{C}^\\bot, \\;e_j \\neq 0} \\;{wt(\\mathbf{e})}.$ \\;// \\small{find a parity-check equation covering $j$.}\n\n5.\\ \\ \\hspace{0.5cm} Set $S_i = S_{i-1} \\bigcup supp(\\mathbf{h}_i)$.\\quad\\quad\\quad\\quad\\quad\\;\\;// \\small{the set of coordinates covered by the first $i$ row.}\n\n6.\\ \\ \\hspace{0.5cm} $i=i+1.$\n\n7.\\ \\ Set $l = i-1$. Set $H_1 = \\left[\\begin{array}{c} \\mathbf{h}_1 \\\\ \\vdots \\\\ \\mathbf{h}_l \\end{array} \\right]$.\n\n8.\\ \\ Choose additional $n-k-l$ rows from $\\mathcal{C}^\\bot$  such that $H_2 = \\left[\\begin{array}{c} \\mathbf{h}_{l+1} \\\\ \\vdots \\\\ \\mathbf{h}_{n-k} \\end{array} \\right]$ and  $H = \\left[\\begin{array}{c} H_1 \\\\  H_2\\end{array} \\right]$\\\\\n\n\\ \\ \\ \\     is an $(n-k)\\times n$ full rank matrix .\n\n}\n}\n\\end{center}\nIn the line 4 of the $i$-th iteration, by the above Claim 1, such a parity-check equation exists and covers at most $r+1$ symbols. Moreover, the $i$-th row covers some coordinates not covered by previous ones, which implies it is independent with them. Repeat the choosing procedure step by step to get $l$ independent parity-check equations until all the code symbols are covered. Clearly, $l\\le n-k$ or $l+k\\le n$. Moreover, since each of the $l$ rows has weight at most $r+1$, $n\\le l(r+1)$, which implies $l+k\\le l(r+1)$ or $k/r\\le l$. Thus $l+k\\le n$ implies $k/r+k\\le n$ or $k/r\\le n/(r+1)$. Combining these, we have\n\\begin{eqnarray}\n\\label{eql}\n\\frac{k}{r}\\;\\le\\; \\frac{n}{r+1} &\\le&l\\;\\le\\; n-k\\quad \\mbox{and}\\quad\n\\frac{k}{n}\\;\\le\\; \\frac{r}{r+1}.\n\\end{eqnarray}\nIn the rest of the paper, the rows in $H_1$ are called \\emph{locality-rows}.\nSince $l\\le n-k$, line 8 is always feasible. All parity-check matrices in this paper are obtained through the above procedure.\n\n\n\n\\subsection{The Singleton-like bound and necessary conditions} \\label{sec:singleton-bound}\n\\begin{thm} [Singleton-like bound]\\label{thm:singleton-bound}\nFor an $(n,k,r)$ LRC with all symbol locality,\n    $d\\leq n-k- \\left\\lceil\\frac{k}{r} \\right\\rceil + 2.$\n\\end{thm}\n\n\n\\begin{proof}\nBy Lemma \\ref{lemma:min-dist}, it is enough to show the proposed parity-check matrix $H$ in Section \\ref{cpm} must have $n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2$ linearly dependent columns.\nBy (\\ref{eql}), consider the first $t=\\left\\lfloor\\frac{k}{r}\\right\\rfloor$ rows of $H_1$. Let $\\gamma$ be the number of the columns which the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$. The number of the remaining columns is $n - \\gamma \\geq n - t(r+1)$, where the equality holds if and only if the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. The number of the remaining rows is $\\eta=n-k-t$.\n\n\n\\textbf{Case 1}: If $r\\nmid k$,  then $n-\\gamma\\ge n - t (r+1) > n-k-t=\\eta$, i.e.,\n\n", "itemtype": "equation", "pos": 21863, "prevtext": "\nFor large minimum distances, simple computer search could help to find favorite choices of $\\alpha_{i,j}$.\n\n\n\\subsection{Related work}\n\nThere are three kinds of codes which allow fast and efficient recovery of erased code symbols.\n\n\\emph{LRCs with Availability:} These codes were first discussed in \\cite{Ankit}\\cite{Wang}. If a code symbol of an LRC has $t$ disjoint repair sets, each of which has size at most $r+1$, then the code symbol is said to have \\emph{availability} $t$ \\cite{Ankit}. Ankit \\cite{Ankit} and Wang \\cite{Wang} derived the upper bound on the minimum distance for LRCs with locality $r$ and availability $t$ for information symbols.   \\cite{Wang an}\\cite{Itzhak} also derived some bounds for LRCs with availability $t$. \\cite{Tamo-RS}\\cite{Ankit}\\cite{Wang}\\cite{Pami}\\cite{WangCon}\\cite{pfhuangisit} constructed LRCs with availability.\n\n\n\\emph{Multiple-erasures and Vector LRCs:}  \\cite{Prakash-lrc-delta} proposed the locality $(r,\\delta)$ to locally recover multiple erasures, which reduces to locality $r$ when $\\delta = 2$. Upper bounds and constructions were given in \\cite{Prakash-lrc-delta,Prakash-lrc-two-erasure}.\n\\cite{papil} generalized the bound (\\ref{singleton-like-bound}) for vector LRCs and presented constructions for vector LRCs.  \\cite{Natalia-rank-matric,ankit-securelrc} further generalized the bound in \\cite{papil} to deal with multiple erasures.\n\n\n\\emph{Regenerating Codes:} These codes \\cite{Dimakis} are a class of MDS codes with subpacketization. When a single node failure occures, the repair process involves more  than $k$ nodes and  each node transfers a linear combination of the packets it stores, which reduces bandwidths compared to classical MDS codes. See \\cite{prod-matrix}\\cite{msr} for the construction of regenerating codes and \\cite{Dimakis-survey} for a survey.\n\n\n\\emph{Locally Decodable Codes (LDCs):} These codes were introduced in \\cite{ldc-jk}. See, e.g., \\cite{ldc-sk}\\cite{ldc-ke}\\cite{ldc-sy}, for the further developments  and \\cite{ldc-sysurvey} for a survey. LRCs are very similar to LDCs. The main difference is that LRCs discussed in this paper can perform local recovery after a single symbol erasure, while LDCs allow for local recovery even after a very large number of erasures.\n\\subsection{Organization}\n\nThe paper is organized as follows. Section~\\ref{sec:prelim} gives some basic notions and preliminaries. In section~\\ref{sec:lrc-bound}, a new characterization of parity-check matrices is proposed and several bounds are derived under a unified approach.  Section~\\ref{sec:construction} discussed the constructions, two classes of optimal LRCs are obtained. Finally some future directions are given in Section \\ref{sec:conclusion}.\n\n\n\n\n\\section{Preliminaries} \\label{sec:prelim}\nIn this section, we review some basic knowledge about linear codes and locally repairable codes, as well as the linearized polynomial theories.\n\n\\subsection{Linear codes and LRCs}\nLet $F_q$ be a finite field with $q$ elements. Let $\\mathcal{C}$ be a $q$-ary $[n,k,d]$ linear code with length $n$, dimension $k$ and minimum distance $d$ \\cite{MacWilliams}. The $k\\times n$ generator matrix $G$ and the $(n-k)\\times n$ parity-check matrix $H$ satisfies $G H^T = 0$. Let $\\mathcal{C}^\\bot$ denote the dual code of $\\mathcal{C}$. The rows of $H$ are the codewords of $\\mathcal{C}^\\bot$, are called parity-check equation sometimes. Let $[n] = \\{1,2,\\cdots,n\\}$ and $\\mathbf{a}=(a_1,a_2,\\ldots, a_n)$ be a vector. The support of a vector $\\mathbf{a}$ is $supp(\\mathbf{a}) = \\{i \\in [n]: a_i \\neq 0\\}$, and its (Hamming) weight is $wt(\\mathbf{a}) = |supp(\\mathbf{a})|$. The (Hamming) distance of two vectors is the number of coordinates at which they differ. The minimum distance $d$ of $\\mathcal{C}$ is the minimum value of distances between any two different codewords. The minimum distance satisfies the following well known facts \\cite{MacWilliams}.\n\n\n\\begin{lemma} \\label{lemma:min-dist}\nIf the parity-check matrix $H$ of a linear code $\\mathcal{C}$ has $\\delta$ linearly dependent columns, then the minimum distance  $d \\leq \\delta.$ Moreover, the minimum distance $d=\\delta$ if and only if any $\\delta-1$ columns of $H$ are linearly independent, and there exist $\\delta$ columns of $H$ which are linearly dependent.\n\\end{lemma}\n\n\n\\begin{lemma}\n[Singleton bound]\\quad\n$d \\leq n - k + 1.$\n\\end{lemma}\n\nCodes attaining the Singleton bound are called \\emph{Maximum Distance Separable (MDS) Codes.} The well-known Reed-Solomon codes are the most important classes of MDS codes.\n\n\nLRCs \\cite{Gopalan} are a class of linear codes with locality constraint on code symbols.\n\\begin{defin}\nA code symbol $c_{i}$ is said to have \\emph{locality} $r$ if there exists a subsets $R_i \\subset [n]\\backslash\\{i\\},|R_i|\\leq r$ such that $c_{i}$ can be recovered from the code symbols indexed by $R_i$.\n\\end{defin}\n\nIn other words, $c_i$ has locality $r$ if and only of the $i$th column of the generator matrix is a linear combination of at most $r$ other column vectors. For an LRC, $1 < r \\ll k$ usually. For an $[n,k]$ linear code, if only the $k$ information symbols have locality $r$, it is called an \\emph{$(n,k,r)$ LRC with information locality}. Similarly if all the $n$ code symbols have locality $r$, the resulting code is called an \\emph{$(n,k,r)$ LRC with all symbol locality}.\n\n\\subsection{Linearized polynomial theory}\\label{}\n\nThe contents in this subsection are from  \\cite{Rudolf}. Let $m$ be a positive integer and $F_{q^m}$ be the extension field of $F_q$. Let $\\alpha_1,\\alpha_2 \\in F_{q^m}$. Then\n$\\alpha_1$ and $\\alpha_2$ are said to be \\emph{linearly independent over $F_q$} if $\\lambda_1\\alpha_1+\\lambda_2\\alpha_2=0, \\;\\lambda_1,\\lambda_2\\in F_q \\Leftrightarrow \\lambda_1=\\lambda_2=0$.\nFor any $n \\in N$, $(\\alpha_1 \\pm \\alpha_2)^{q^n} = {\\alpha_1}^{q^n} \\pm {\\alpha_2}^{q^n}.$\n\nA polynomial of the form\n$L(x) = \\sum_{i=0}^n \\alpha_i x^{q^i}$\nwith coefficients in $F_{q^m}$ is called a \\emph{linearized polynomial} over $F_{q^m}$.\nSuppose the extension field $F_{q^s}$ of $F_{q^m}$ contains all the roots of $L(x)$. Then the roots form a linear subspace of $F_{q^s}$. The following lemma is from \\cite{Rudolf}.\n\\begin{lemma}\nLet $\\beta_1,\\beta_2,\\cdots,\\beta_n$ be the elements of $F_{q^m}$. Then\n\n\n", "index": 11, "text": "\\begin{equation}\n\\left|\n  \\begin{matrix}\n    \\beta_1 & \\beta_1^q & \\beta_1^{q^2} & \\cdots & \\beta_1^{q^{n-1}} \\\\\n    \\beta_2 & \\beta_2^q & \\beta_2^{q^2} & \\cdots & \\beta_2^{q^{n-1}}\\\\\n    \\beta_3 & \\beta_3^q & \\beta_3^{q^2} & \\cdots & \\beta_3^{q^{n-1}} \\\\\n    \\vdots & \\vdots & \\vdots & \\vdots & \\vdots \\\\\n    \\beta_n & \\beta_n^q & \\beta_n^{q^2} & \\cdots & \\beta_n^{q^{n-1}} \\\\\n  \\end{matrix}\n\\right|\n=\\beta_1\\prod_{j=1}^{n-1}\\prod_{c_1,\\cdots,c_j \\in F_q}(\\beta_{j+1}-\\sum_{k=1}^jc_k\\beta_k),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\left|\\begin{matrix}\\beta_{1}&amp;\\beta_{1}^{q}&amp;\\beta_{1}^{q^{2}}&amp;\\cdots&amp;\\beta_{1}%&#10;^{q^{n-1}}\\\\&#10;\\beta_{2}&amp;\\beta_{2}^{q}&amp;\\beta_{2}^{q^{2}}&amp;\\cdots&amp;\\beta_{2}^{q^{n-1}}\\\\&#10;\\beta_{3}&amp;\\beta_{3}^{q}&amp;\\beta_{3}^{q^{2}}&amp;\\cdots&amp;\\beta_{3}^{q^{n-1}}\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots\\\\&#10;\\beta_{n}&amp;\\beta_{n}^{q}&amp;\\beta_{n}^{q^{2}}&amp;\\cdots&amp;\\beta_{n}^{q^{n-1}}\\\\&#10;\\end{matrix}\\right|=\\beta_{1}\\prod_{j=1}^{n-1}\\prod_{c_{1},\\cdots,c_{j}\\in F_{%&#10;q}}(\\beta_{j+1}-\\sum_{k=1}^{j}c_{k}\\beta_{k}),\" display=\"block\"><mrow><mrow><mrow><mo>|</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msub><mi>\u03b2</mi><mn>1</mn></msub></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>1</mn><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>1</mn><msup><mi>q</mi><mn>2</mn></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>1</mn><msup><mi>q</mi><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></msup></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b2</mi><mn>2</mn></msub></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>2</mn><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>2</mn><msup><mi>q</mi><mn>2</mn></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>2</mn><msup><mi>q</mi><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></msup></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b2</mi><mn>3</mn></msub></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>3</mn><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>3</mn><msup><mi>q</mi><mn>2</mn></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mn>3</mn><msup><mi>q</mi><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></msup></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b2</mi><mi>n</mi></msub></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mi>n</mi><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mi>n</mi><msup><mi>q</mi><mn>2</mn></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b2</mi><mi>n</mi><msup><mi>q</mi><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></msup></msubsup></mtd></mtr></mtable><mo>|</mo></mrow><mo>=</mo><mrow><msub><mi>\u03b2</mi><mn>1</mn></msub><mo>\u2062</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></munderover><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>,</mo><msub><mi>c</mi><mi>j</mi></msub></mrow><mo>\u2208</mo><msub><mi>F</mi><mi>q</mi></msub></mrow></munder><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\u03b2</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>-</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover><mrow><msub><mi>c</mi><mi>k</mi></msub><mo>\u2062</mo><msub><mi>\u03b2</mi><mi>k</mi></msub></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nThe first $\\eta+1$ columns in the remaining $n-\\gamma$ columns must be linearly dependent since the non-zero elements of these columns are contained in only $\\eta$ rows. This implies that $d\\le \\eta+1$.\n\n\n\\textbf{Case 2}: If $r\\mid k$, then $n-\\gamma\\ge n - t (r+1) = n-k-t=\\eta.$\nIf $n-\\gamma\\ge \\eta+1$, we have $d\\le \\eta+1$ with similar arguments to Case 1. Otherwise, if $n-\\gamma = \\eta$, then the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. Choose two columns from the support of the first row, and combine with the remaining $\\eta$ columns, we have $\\eta+2$ columns.\nThese $\\eta+2$ columns have their non-zero elements in only $\\eta+1$ rows, and thus are linearly dependent. This implies that $d\\le \\eta+2=n-k-\\frac{k}{r}+2$.\n\nCombining the above two cases, the conclusion follows.\n\\end{proof}\n\n\\begin{remark}\nRecall that Gopalan \\emph{et al.} \\cite{Gopalan} proved this Singleton-like bound when information symbols have locality $r$. They derived the bound by analyzing the rank of the columns in the generator matrix using Fact $1$ in \\cite{Gopalan}. For the locality of the parity symbols, they derived some upper bounds and lower bounds.  Tamo \\emph{et al.} \\cite{Tamo-RS} showed the all symbol locality case by using a very different method from Graph theory.\nMost previous works on the bounds and constructions of LRCs focused on generator matrices. As we see, studying the locality property by parity-check matrices of LRCs is very attractive. Generalizing the bounds and giving new constructions become easier and more straightforward.\n\\end{remark}\n\n\\iffalse\n\\begin{fact}\nIf the linear code $\\mathcal{C}$ has distance $d$ if and only if for every $S \\subset [n]$ such that $Rank(G_S) \\leq k-1$,\n\n", "itemtype": "equation", "pos": 27413, "prevtext": "\nand thus the determinant is non-zero if and only if $\\beta_1,\\beta_2,\\cdots,\\beta_n$ are linearly independent over $F_q$.\n\\end{lemma}\n\n\\section{Bounds for LRCs with all symbol locality} \\label{sec:lrc-bound}\n\n\n\n\nIn this section, we set up a new characterization of the parity-check matrix for an LRC. Then, the proposed parity-check matrix is employed to analyze the minimum distance. We give simple and unified proofs of the Singleton-like bound with all symbol locality and the Cadambe-Mazumdar bound. Necessary conditions of meeting the Singleton-like bound are obtained.\n\n\\subsection{Characterization of the parity-check matrix}\\label{cpm}\n\nLet $\\mathcal{C}$ be a $q$-ary $(n,k,r)$ LRC with length $n$, dimension $k$ and all symbol locality $r$. By choosing $n-k$ independent vectors from the dual code $\\mathcal{C}^\\bot$ (or parity-check equations), we obtain a full rank parity-check matrix of $\\mathcal{C}$. Although redundant parity-check equations might be added to the parity-check matrix sometimes for various purposes, e.g., simplifying the analysis or facilitating decoding, we only consider the full-rank case here.\nThe locality property of a linear code could be characterized by the parity-check matrix. In order to find a suitable parity-check matrix to involve locality, we begin with a simple observation:\n\n\\begin{claim}\\label{claim:locality}\nA code symbol has locality $r$ if and only if there exists a parity-check equation which has at most $r+1$ non-zero components and covers the coordinate of the symbol.\n\\end{claim}\n\nNow, we select $n-k$ parity-check equations from $\\mathcal{C}^\\bot$ to form the parity-check matrix $H$ of $\\mathcal{C}$, which is divided into two parts. The rows in the upper part $H_1$ cover all coordinates and ensure locality, while the rows in the lower part $H_2$ impact the minimum distance. The details follow.\n\n\\begin{center}\n\\fbox{\n\\parbox{15cm}{\n1.\\ \\ Let $i =1, S_0 = \\{\\}$.\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad // \\small{initialization.}\n\n2.\\ \\ While $S_{i-1} \\neq [n]$:\n\n3.\\ \\ \\hspace{0.5cm} Pick $j \\in [n] \\setminus S_{i-1}$. \\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad// \\small{pick a coordinate $j$ not covered.}\n\n4.\\ \\ \\hspace{0.5cm} Choose $\\mathbf{h}_i = \\mathop{{\\operatorname{argmin}}}_{\\mathbf{e} \\in \\mathcal{C}^\\bot, \\;e_j \\neq 0} \\;{wt(\\mathbf{e})}.$ \\;// \\small{find a parity-check equation covering $j$.}\n\n5.\\ \\ \\hspace{0.5cm} Set $S_i = S_{i-1} \\bigcup supp(\\mathbf{h}_i)$.\\quad\\quad\\quad\\quad\\quad\\;\\;// \\small{the set of coordinates covered by the first $i$ row.}\n\n6.\\ \\ \\hspace{0.5cm} $i=i+1.$\n\n7.\\ \\ Set $l = i-1$. Set $H_1 = \\left[\\begin{array}{c} \\mathbf{h}_1 \\\\ \\vdots \\\\ \\mathbf{h}_l \\end{array} \\right]$.\n\n8.\\ \\ Choose additional $n-k-l$ rows from $\\mathcal{C}^\\bot$  such that $H_2 = \\left[\\begin{array}{c} \\mathbf{h}_{l+1} \\\\ \\vdots \\\\ \\mathbf{h}_{n-k} \\end{array} \\right]$ and  $H = \\left[\\begin{array}{c} H_1 \\\\  H_2\\end{array} \\right]$\\\\\n\n\\ \\ \\ \\     is an $(n-k)\\times n$ full rank matrix .\n\n}\n}\n\\end{center}\nIn the line 4 of the $i$-th iteration, by the above Claim 1, such a parity-check equation exists and covers at most $r+1$ symbols. Moreover, the $i$-th row covers some coordinates not covered by previous ones, which implies it is independent with them. Repeat the choosing procedure step by step to get $l$ independent parity-check equations until all the code symbols are covered. Clearly, $l\\le n-k$ or $l+k\\le n$. Moreover, since each of the $l$ rows has weight at most $r+1$, $n\\le l(r+1)$, which implies $l+k\\le l(r+1)$ or $k/r\\le l$. Thus $l+k\\le n$ implies $k/r+k\\le n$ or $k/r\\le n/(r+1)$. Combining these, we have\n\\begin{eqnarray}\n\\label{eql}\n\\frac{k}{r}\\;\\le\\; \\frac{n}{r+1} &\\le&l\\;\\le\\; n-k\\quad \\mbox{and}\\quad\n\\frac{k}{n}\\;\\le\\; \\frac{r}{r+1}.\n\\end{eqnarray}\nIn the rest of the paper, the rows in $H_1$ are called \\emph{locality-rows}.\nSince $l\\le n-k$, line 8 is always feasible. All parity-check matrices in this paper are obtained through the above procedure.\n\n\n\n\\subsection{The Singleton-like bound and necessary conditions} \\label{sec:singleton-bound}\n\\begin{thm} [Singleton-like bound]\\label{thm:singleton-bound}\nFor an $(n,k,r)$ LRC with all symbol locality,\n    $d\\leq n-k- \\left\\lceil\\frac{k}{r} \\right\\rceil + 2.$\n\\end{thm}\n\n\n\\begin{proof}\nBy Lemma \\ref{lemma:min-dist}, it is enough to show the proposed parity-check matrix $H$ in Section \\ref{cpm} must have $n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2$ linearly dependent columns.\nBy (\\ref{eql}), consider the first $t=\\left\\lfloor\\frac{k}{r}\\right\\rfloor$ rows of $H_1$. Let $\\gamma$ be the number of the columns which the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$. The number of the remaining columns is $n - \\gamma \\geq n - t(r+1)$, where the equality holds if and only if the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. The number of the remaining rows is $\\eta=n-k-t$.\n\n\n\\textbf{Case 1}: If $r\\nmid k$,  then $n-\\gamma\\ge n - t (r+1) > n-k-t=\\eta$, i.e.,\n\n", "index": 13, "text": "\\begin{equation}\nn-\\gamma\\ge \\eta+1 = n - k - \\left\\lfloor\\frac{k}{r}\\right\\rfloor +1 = n - k - \\left\\lceil\\frac{k}{r}\\right\\rceil +2, \\label{conclusion1}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"n-\\gamma\\geq\\eta+1=n-k-\\left\\lfloor\\frac{k}{r}\\right\\rfloor+1=n-k-\\left\\lceil%&#10;\\frac{k}{r}\\right\\rceil+2,\" display=\"block\"><mrow><mrow><mrow><mi>n</mi><mo>-</mo><mi>\u03b3</mi></mrow><mo>\u2265</mo><mrow><mi>\u03b7</mi><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi><mo>-</mo><mrow><mo>\u230a</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u230b</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi><mo>-</mo><mrow><mo>\u2308</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\n\\end{fact}\n\\noindent where $Rank(G_S)$ denotes for the columns index by $S$ in the generator matrix $G$.\n\\fi\n\n\nFrom the above proofs of the Singleton-like bound, the necessary conditions meeting it follows.\n\\begin{thm}\\label{thm:necessary-condition}\nFor an $(n,k,r)$ LRC with all symbol locality, suppose $d = n-k-  \\left\\lceil\\frac{k}{r}\\right\\rceil + 2$ and $r<k$.\n\\begin{itemize}\n\n\\item If $r \\mid k$, then $(r+1) \\mid n$ and the supports of the locality-rows in the parity-check matrix must be pairwise disjoint, and each has weight exactly $r+1$.\n\\item If $r \\nmid k$, then the supports of any $ \\left\\lceil\\frac{k}{r}\\right\\rceil$ locality-rows in the parity-check matrix cover at leat $ k+ \\left\\lceil\\frac{k}{r}\\right\\rceil$ coordinates.\n\\end{itemize}\n\\end{thm}\n\n\n\n\n\\subsection{General upper bounds for LRCs}\\label{sec:general-bound}\nThe Singleton-like bound is tight only for non-binary codes over finite field with large size. Many famous binary codes, e.g., Simplex codes, Hamming codes and LDPC codes, also have some locality property \\cite{pfhuangisit,pfhuangitw}, but could not attain the Singleton-like bound. In this subsection, general bounds for LRCs with all symbol locality are derived under the proposed parity-check matrix framework, which is a generalization of the Singleton-like bound.\n\\begin{thm}\\label{thm:general-bound}\nFor a $q$-ary $(n,k,r)$ LRC with all symbol locality, the minimum distance satisfies\n\n", "itemtype": "equation", "pos": 29339, "prevtext": "\nThe first $\\eta+1$ columns in the remaining $n-\\gamma$ columns must be linearly dependent since the non-zero elements of these columns are contained in only $\\eta$ rows. This implies that $d\\le \\eta+1$.\n\n\n\\textbf{Case 2}: If $r\\mid k$, then $n-\\gamma\\ge n - t (r+1) = n-k-t=\\eta.$\nIf $n-\\gamma\\ge \\eta+1$, we have $d\\le \\eta+1$ with similar arguments to Case 1. Otherwise, if $n-\\gamma = \\eta$, then the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. Choose two columns from the support of the first row, and combine with the remaining $\\eta$ columns, we have $\\eta+2$ columns.\nThese $\\eta+2$ columns have their non-zero elements in only $\\eta+1$ rows, and thus are linearly dependent. This implies that $d\\le \\eta+2=n-k-\\frac{k}{r}+2$.\n\nCombining the above two cases, the conclusion follows.\n\\end{proof}\n\n\\begin{remark}\nRecall that Gopalan \\emph{et al.} \\cite{Gopalan} proved this Singleton-like bound when information symbols have locality $r$. They derived the bound by analyzing the rank of the columns in the generator matrix using Fact $1$ in \\cite{Gopalan}. For the locality of the parity symbols, they derived some upper bounds and lower bounds.  Tamo \\emph{et al.} \\cite{Tamo-RS} showed the all symbol locality case by using a very different method from Graph theory.\nMost previous works on the bounds and constructions of LRCs focused on generator matrices. As we see, studying the locality property by parity-check matrices of LRCs is very attractive. Generalizing the bounds and giving new constructions become easier and more straightforward.\n\\end{remark}\n\n\\iffalse\n\\begin{fact}\nIf the linear code $\\mathcal{C}$ has distance $d$ if and only if for every $S \\subset [n]$ such that $Rank(G_S) \\leq k-1$,\n\n", "index": 15, "text": "\\begin{equation}\n|S| \\leq n-d,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"|S|\\leq n-d,\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">|</mo><mi>S</mi><mo stretchy=\"false\">|</mo></mrow><mo>\u2264</mo><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nwhere $d_{\\text{opt}}^{(q)}(n^*,k^*)$ is the largest possible minimum distance of a $q$-ary linear code with length $n^*$ and dimension  $k^*$.\n\\end{thm}\n\n\\begin{proof}\nLet $H$ be the proposed parity-check matrix of $\\mathcal{C}$ in Section \\ref{cpm}. By (\\ref{eql}), consider the first $t$ rows of $H_1$, where $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$. Let $\\gamma$ be the number of the columns that the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$. By deleting the first $t$ rows and the corresponding $\\gamma$ columns of $H$, and further deleting $t(r+1)-\\gamma$ columns, we have an $m^*\\times n^*$ sub-matrix $H^*$, where $m^*= n-k-t$ and $n^* = n - t(r+1)$. Let $\\mathcal{C}^*$ be the $[n^*,k^*,d^*]$ linear code with parity-check matrix $H^*$.\nAmong the $n^*$ columns of $H$, since the elements lies above $H^*$ are all zero, $d \\leq d^*$.\nMoreover, by ${\\rm rank}(H^*)\\leq  n-k-t$, $k^* = n^*-{\\rm rank}(H^*) \\geq   k-tr>0$. Hence,\n\\begin{eqnarray}\n d\\;\\le \\;d^*  \\;\\leq\\; d^{(q)}_{\\rm opt}(n^*,k^*) \\;\\leq\\; d^{(q)}_{\\rm opt}(n - t(r+1),k-tr). \\label{C*}\n\\end{eqnarray}\nSince  $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$, the conclusion follows.\n\\end{proof}\n\nLetting $t=\\left\\lceil\\frac{k}{r}\\right\\rceil-1$ and using the Singleton bound, the Singleton-like bound follows naturally.\n\\begin{corol} [Singleton-like bound]\\label{thm:singleton-bound}\nFor $(n,k,r)$ LRCs with all symbol locality, $d\\leq n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2.$\n\\end{corol}\n\n\\begin{remark}\nDifferent bounds could be derived from the general bound (\\ref{label:general-bound}) by choosing various values of $t$ and upper bounds of $d^{(q)}_{\\rm opt}(n^*,k^*)$, e.g., Hamming bound, Plotikin bound, Griesmer bound \\cite{MacWilliams} \\emph{etc.} Since the field size is taken into account, the general bounds could yield better results than the Singleton-like bound over small fields.\nThe binary Simplex code \\cite{MacWilliams} has locality $2$ \\cite{pfhuangitw}.\nAs for the tightness of the bound in Theorem \\ref{thm:general-bound}, when $t=1$ and $q=2$, it is not difficult to verify that the $[2^m-1,m,2^{m-1}]$ Simplex code could achieve it with equality.\n\\end{remark}\n\n\\begin{corol}[Cadambe-Mazumdar bound]\\label{corol:general-bound-k}\n For a $q$-ary $(n,k,r)$ LRC with all symbol locality,\n\n", "itemtype": "equation", "pos": 30818, "prevtext": "\n\\end{fact}\n\\noindent where $Rank(G_S)$ denotes for the columns index by $S$ in the generator matrix $G$.\n\\fi\n\n\nFrom the above proofs of the Singleton-like bound, the necessary conditions meeting it follows.\n\\begin{thm}\\label{thm:necessary-condition}\nFor an $(n,k,r)$ LRC with all symbol locality, suppose $d = n-k-  \\left\\lceil\\frac{k}{r}\\right\\rceil + 2$ and $r<k$.\n\\begin{itemize}\n\n\\item If $r \\mid k$, then $(r+1) \\mid n$ and the supports of the locality-rows in the parity-check matrix must be pairwise disjoint, and each has weight exactly $r+1$.\n\\item If $r \\nmid k$, then the supports of any $ \\left\\lceil\\frac{k}{r}\\right\\rceil$ locality-rows in the parity-check matrix cover at leat $ k+ \\left\\lceil\\frac{k}{r}\\right\\rceil$ coordinates.\n\\end{itemize}\n\\end{thm}\n\n\n\n\n\\subsection{General upper bounds for LRCs}\\label{sec:general-bound}\nThe Singleton-like bound is tight only for non-binary codes over finite field with large size. Many famous binary codes, e.g., Simplex codes, Hamming codes and LDPC codes, also have some locality property \\cite{pfhuangisit,pfhuangitw}, but could not attain the Singleton-like bound. In this subsection, general bounds for LRCs with all symbol locality are derived under the proposed parity-check matrix framework, which is a generalization of the Singleton-like bound.\n\\begin{thm}\\label{thm:general-bound}\nFor a $q$-ary $(n,k,r)$ LRC with all symbol locality, the minimum distance satisfies\n\n", "index": 17, "text": "\\begin{equation} \\label{label:general-bound}\nd \\le \\min_{ 1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1} \\; d^{(q)}_{\\rm opt}(n  - t(r+1),k-tr),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"d\\leq\\min_{1\\leq t\\leq\\left\\lceil\\frac{k}{r}\\right\\rceil-1}\\;d^{(q)}_{\\rm opt}%&#10;(n-t(r+1),k-tr),\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2264</mo><mrow><mrow><mpadded width=\"+2.8pt\"><munder><mi>min</mi><mrow><mn>1</mn><mo>\u2264</mo><mi>t</mi><mo>\u2264</mo><mrow><mrow><mo>\u2308</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u2309</mo></mrow><mo>-</mo><mn>1</mn></mrow></mrow></munder></mpadded><mo>\u2061</mo><msubsup><mi>d</mi><mi>opt</mi><mrow><mo stretchy=\"false\">(</mo><mi>q</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mrow><mi>t</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo><mrow><mi>k</mi><mo>-</mo><mrow><mi>t</mi><mo>\u2062</mo><mi>r</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nwhere $k_{\\text{opt}}^{(q)}(n',d')$ is the largest possible dimension of a $q$-ary linear code with length $n'$ and minimum distance  $d'$.\n\\end{corol}\n\n\n\\begin{remark}\nIt is easy to see that the Cadambe-Mazumdar bound is essentially identical to our bound (\\ref{label:general-bound}) in linear cases.  The Cadambe-Mazumdar bound could also be derived directly under our framework, please see the appendix for details.\nWhen $t=2$, the bound in Corollary \\ref{corol:general-bound-k} was met with equality by binary Simplex codes \\cite{Cadambe:IT}.\nCadambe and Mazumdar derived their bound in \\cite{Cadambe:netcod,Cadambe:IT} by analyzing the dimension of sub-codebooks, where the proofs do not reveal apparent relations with the Singleton-like bound and are much more complex than ours. Moreover, it looks easier to analyze the necessary condition for the optimal codes under our framework, thus might provide guidelines for code constructions.\n\\end{remark}\n\n\n\n\n\n\n\\begin{remark}\nThe next Singleton-like bound for $(n,k,r)$ LRCs with availability $s$ \\cite{Ankit,Wang} could also be derived under our framework.\n\n", "itemtype": "equation", "pos": 33342, "prevtext": "\nwhere $d_{\\text{opt}}^{(q)}(n^*,k^*)$ is the largest possible minimum distance of a $q$-ary linear code with length $n^*$ and dimension  $k^*$.\n\\end{thm}\n\n\\begin{proof}\nLet $H$ be the proposed parity-check matrix of $\\mathcal{C}$ in Section \\ref{cpm}. By (\\ref{eql}), consider the first $t$ rows of $H_1$, where $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$. Let $\\gamma$ be the number of the columns that the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$. By deleting the first $t$ rows and the corresponding $\\gamma$ columns of $H$, and further deleting $t(r+1)-\\gamma$ columns, we have an $m^*\\times n^*$ sub-matrix $H^*$, where $m^*= n-k-t$ and $n^* = n - t(r+1)$. Let $\\mathcal{C}^*$ be the $[n^*,k^*,d^*]$ linear code with parity-check matrix $H^*$.\nAmong the $n^*$ columns of $H$, since the elements lies above $H^*$ are all zero, $d \\leq d^*$.\nMoreover, by ${\\rm rank}(H^*)\\leq  n-k-t$, $k^* = n^*-{\\rm rank}(H^*) \\geq   k-tr>0$. Hence,\n\\begin{eqnarray}\n d\\;\\le \\;d^*  \\;\\leq\\; d^{(q)}_{\\rm opt}(n^*,k^*) \\;\\leq\\; d^{(q)}_{\\rm opt}(n - t(r+1),k-tr). \\label{C*}\n\\end{eqnarray}\nSince  $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$, the conclusion follows.\n\\end{proof}\n\nLetting $t=\\left\\lceil\\frac{k}{r}\\right\\rceil-1$ and using the Singleton bound, the Singleton-like bound follows naturally.\n\\begin{corol} [Singleton-like bound]\\label{thm:singleton-bound}\nFor $(n,k,r)$ LRCs with all symbol locality, $d\\leq n-k-\\left\\lceil\\frac{k}{r} \\right\\rceil + 2.$\n\\end{corol}\n\n\\begin{remark}\nDifferent bounds could be derived from the general bound (\\ref{label:general-bound}) by choosing various values of $t$ and upper bounds of $d^{(q)}_{\\rm opt}(n^*,k^*)$, e.g., Hamming bound, Plotikin bound, Griesmer bound \\cite{MacWilliams} \\emph{etc.} Since the field size is taken into account, the general bounds could yield better results than the Singleton-like bound over small fields.\nThe binary Simplex code \\cite{MacWilliams} has locality $2$ \\cite{pfhuangitw}.\nAs for the tightness of the bound in Theorem \\ref{thm:general-bound}, when $t=1$ and $q=2$, it is not difficult to verify that the $[2^m-1,m,2^{m-1}]$ Simplex code could achieve it with equality.\n\\end{remark}\n\n\\begin{corol}[Cadambe-Mazumdar bound]\\label{corol:general-bound-k}\n For a $q$-ary $(n,k,r)$ LRC with all symbol locality,\n\n", "index": 19, "text": "\\begin{equation}\\label{label:general-bound-k}\nk \\le \\min_{  1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1} \\left[ tr + k^{(q)}_{\\rm opt}(n  - t(r+1),d) \\right],\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"k\\leq\\min_{1\\leq t\\leq\\left\\lceil\\frac{k}{r}\\right\\rceil-1}\\left[tr+k^{(q)}_{%&#10;\\rm opt}(n-t(r+1),d)\\right],\" display=\"block\"><mrow><mrow><mi>k</mi><mo>\u2264</mo><mrow><munder><mi>min</mi><mrow><mn>1</mn><mo>\u2264</mo><mi>t</mi><mo>\u2264</mo><mrow><mrow><mo>\u2308</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u2309</mo></mrow><mo>-</mo><mn>1</mn></mrow></mrow></munder><mo>\u2061</mo><mrow><mo>[</mo><mrow><mrow><mi>t</mi><mo>\u2062</mo><mi>r</mi></mrow><mo>+</mo><mrow><msubsup><mi>k</mi><mi>opt</mi><mrow><mo stretchy=\"false\">(</mo><mi>q</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mrow><mi>t</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>]</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\n\n\\end{remark}\n\n\n\n\n\n\n\n\n\\section{Code construction}\\label{sec:construction}\n\n\nIn this section we first present a construction framework for optimal $(n,k,r)$ LRCs with all symbol locality. Then two classes of optimal LRCs based on linearized polynomial theories and Vandermonde matrices are obtained under the framework.\n\n\\subsection{Construction framework}\n\nThe characterization of parity-check matrices for LRCs in the previous section naturally suggest the next construction procedures to obtain good LRCs.\n\\vspace{-0.2cm}\n\\begin{itemize}\n\\item\nConstructing parity-check equations ensuring locality, or locality rows in $H_1$;\n\\vspace{-0.2cm}\n\\item\nAdding additional parity-check equations to enlarge the minimum distance, or rows in $H_2$.\n\\end{itemize}\n\\vspace{-0.2cm}\nThen we obtain a parity-check matrix $H=(H_1^T, H_2^T)^T$ and the corresponding LRC.\n\nIn the rest of this section, we assume $r+1\\mid n$. By the necessary conditions in Theorem \\ref{thm:necessary-condition}, we know that for an optimal LRC meeting the Singleton-like bound, the locality-rows in $H_1$ should be pairwise disjoint if $r \\mid k$ and intersect on at most $\\left \\lceil \\frac{k}{r} \\right\\rceil r - k$ coordinates otherwise. Thus we could fix the form of $H_1$ as follows. $H_1$ has $l=\\frac{n}{r+1}$ locality rows, where the supports are pairwise disjoint and each row has uniform weight $r+1$. In order to achieve the Singleton-like bound, we should fill $H_2$ with favorite elements such that $H$ has full rank and its arbitrary $n-k-  \\left\\lceil\\frac{k}{r}\\right\\rceil + 1$ columns are linearly independent. It it not difficult to see that if the size $q$ of finite field is large enough, uniformly random choices could meet the demand with high probability. However, structured constructions, as well as the constructions reducing the size $q$, are more interesting.\n\n\\subsection{Constructions based on linearized polynomial theories}\\label{sec:con-linearizedpoly}\n\n\\begin{construction} \\label{cons:linearize-poly}\nSuppose that $r+1\\mid n$. Let $l = \\frac{n}{r+1}, s=n-k-l-1$. $\\alpha_{i,j} \\in F_{q^m}$ and $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\} $ are linearly independent over $F_q$, then the linear code defined by the  following $(n-k) \\times n$  parity-check matrix is a $q^m$-ary $(n,k,r)$ LRC.\n\n\n", "itemtype": "equation", "pos": 34633, "prevtext": "\nwhere $k_{\\text{opt}}^{(q)}(n',d')$ is the largest possible dimension of a $q$-ary linear code with length $n'$ and minimum distance  $d'$.\n\\end{corol}\n\n\n\\begin{remark}\nIt is easy to see that the Cadambe-Mazumdar bound is essentially identical to our bound (\\ref{label:general-bound}) in linear cases.  The Cadambe-Mazumdar bound could also be derived directly under our framework, please see the appendix for details.\nWhen $t=2$, the bound in Corollary \\ref{corol:general-bound-k} was met with equality by binary Simplex codes \\cite{Cadambe:IT}.\nCadambe and Mazumdar derived their bound in \\cite{Cadambe:netcod,Cadambe:IT} by analyzing the dimension of sub-codebooks, where the proofs do not reveal apparent relations with the Singleton-like bound and are much more complex than ours. Moreover, it looks easier to analyze the necessary condition for the optimal codes under our framework, thus might provide guidelines for code constructions.\n\\end{remark}\n\n\n\n\n\n\n\\begin{remark}\nThe next Singleton-like bound for $(n,k,r)$ LRCs with availability $s$ \\cite{Ankit,Wang} could also be derived under our framework.\n\n", "index": 21, "text": "\\begin{equation}\\label{distbound2}\n    d\\leq n-k-\\left\\lceil\\frac{s(k-1)+1}{s(r-1)+1} \\right\\rceil +2.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"d\\leq n-k-\\left\\lceil\\frac{s(k-1)+1}{s(r-1)+1}\\right\\rceil+2.\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi><mo>-</mo><mrow><mo>\u2308</mo><mfrac><mrow><mrow><mi>s</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mrow><mrow><mi>s</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\n\n\\end{construction}\n\n\n\\iffalse\n\n", "itemtype": "equation", "pos": 37065, "prevtext": "\n\n\\end{remark}\n\n\n\n\n\n\n\n\n\\section{Code construction}\\label{sec:construction}\n\n\nIn this section we first present a construction framework for optimal $(n,k,r)$ LRCs with all symbol locality. Then two classes of optimal LRCs based on linearized polynomial theories and Vandermonde matrices are obtained under the framework.\n\n\\subsection{Construction framework}\n\nThe characterization of parity-check matrices for LRCs in the previous section naturally suggest the next construction procedures to obtain good LRCs.\n\\vspace{-0.2cm}\n\\begin{itemize}\n\\item\nConstructing parity-check equations ensuring locality, or locality rows in $H_1$;\n\\vspace{-0.2cm}\n\\item\nAdding additional parity-check equations to enlarge the minimum distance, or rows in $H_2$.\n\\end{itemize}\n\\vspace{-0.2cm}\nThen we obtain a parity-check matrix $H=(H_1^T, H_2^T)^T$ and the corresponding LRC.\n\nIn the rest of this section, we assume $r+1\\mid n$. By the necessary conditions in Theorem \\ref{thm:necessary-condition}, we know that for an optimal LRC meeting the Singleton-like bound, the locality-rows in $H_1$ should be pairwise disjoint if $r \\mid k$ and intersect on at most $\\left \\lceil \\frac{k}{r} \\right\\rceil r - k$ coordinates otherwise. Thus we could fix the form of $H_1$ as follows. $H_1$ has $l=\\frac{n}{r+1}$ locality rows, where the supports are pairwise disjoint and each row has uniform weight $r+1$. In order to achieve the Singleton-like bound, we should fill $H_2$ with favorite elements such that $H$ has full rank and its arbitrary $n-k-  \\left\\lceil\\frac{k}{r}\\right\\rceil + 1$ columns are linearly independent. It it not difficult to see that if the size $q$ of finite field is large enough, uniformly random choices could meet the demand with high probability. However, structured constructions, as well as the constructions reducing the size $q$, are more interesting.\n\n\\subsection{Constructions based on linearized polynomial theories}\\label{sec:con-linearizedpoly}\n\n\\begin{construction} \\label{cons:linearize-poly}\nSuppose that $r+1\\mid n$. Let $l = \\frac{n}{r+1}, s=n-k-l-1$. $\\alpha_{i,j} \\in F_{q^m}$ and $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\} $ are linearly independent over $F_q$, then the linear code defined by the  following $(n-k) \\times n$  parity-check matrix is a $q^m$-ary $(n,k,r)$ LRC.\n\n\n", "index": 23, "text": "\\begin{equation*}\n\\label{paritycheckmatrix}\nH =\n  \\left(\n  \\begin{array}{cccc|cccc|c|cccc}\n    1&1&\\cdots&1&0&0&\\cdots&0&\\cdots&0&0&\\cdots&0\\\\\n    0&0&\\cdots&0&1&1&\\cdots&1&\\cdots&0&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    0&0&\\cdots&0&0&0&\\cdots&0&\\cdots&1&1&\\cdots&1\\\\\n    \\alpha_{1,1}&\\alpha_{1,2}&\\cdots&\\alpha_{1,r+1}&\\alpha_{2,1}&\\alpha_{2,2}&\\cdots&\\alpha_{2,r+1}&\\cdots&\\alpha_{l,1}&\\alpha_{l,2}&\\cdots&\\alpha_{l,r+1}\\\\\n    \\alpha_{1,1}^{q}&\\alpha_{1,2}^{q}&\\cdots&\\alpha_{1,r+1}^{q}&\\alpha_{2,1}^{q}&\\alpha_{2,2}^{q}&\\cdots&\\alpha_{2,r+1}^{q}&\\cdots&\\alpha_{l,1}^{q}&\\alpha_{l,2}^{q}&\\cdots&\\alpha_{l,r+1}^{q}\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    \\alpha_{1,1}^{q^s}&\\alpha_{1,2}^{q^s}&\\cdots&\\alpha_{1,r+1}^{q^s}&\\alpha_{2,1}^{q^s}&\\alpha_{2,2}^{q^s}&\\cdots&\\alpha_{2,r+1}^{q^s}&\\cdots&\\alpha_{l,1}^{q^s}&\\alpha_{l,2}^{q^s}&\\cdots&\\alpha_{l,r+1}^{q^s}\\\\\n  \\end{array}\n\\right)\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"H=\\left(\\begin{array}[]{cccc|cccc|c|cccc}1&amp;1&amp;\\cdots&amp;1&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;%&#10;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;1&amp;\\cdots&amp;1\\\\&#10;\\alpha_{1,1}&amp;\\alpha_{1,2}&amp;\\cdots&amp;\\alpha_{1,r+1}&amp;\\alpha_{2,1}&amp;\\alpha_{2,2}&amp;%&#10;\\cdots&amp;\\alpha_{2,r+1}&amp;\\cdots&amp;\\alpha_{l,1}&amp;\\alpha_{l,2}&amp;\\cdots&amp;\\alpha_{l,r+1}\\\\&#10;\\alpha_{1,1}^{q}&amp;\\alpha_{1,2}^{q}&amp;\\cdots&amp;\\alpha_{1,r+1}^{q}&amp;\\alpha_{2,1}^{q}&amp;%&#10;\\alpha_{2,2}^{q}&amp;\\cdots&amp;\\alpha_{2,r+1}^{q}&amp;\\cdots&amp;\\alpha_{l,1}^{q}&amp;\\alpha_{l,2%&#10;}^{q}&amp;\\cdots&amp;\\alpha_{l,r+1}^{q}\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;\\alpha_{1,1}^{q^{s}}&amp;\\alpha_{1,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{1,r+1}^{q^{s}}&amp;\\alpha%&#10;_{2,1}^{q^{s}}&amp;\\alpha_{2,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{2,r+1}^{q^{s}}&amp;\\cdots&amp;%&#10;\\alpha_{l,1}^{q^{s}}&amp;\\alpha_{l,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{l,r+1}^{q^{s}}\\\\&#10;\\end{array}\\right)\" display=\"block\"><mrow><mi>H</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mi>q</mi></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mi>q</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\n\\fi\n\n\n\n\\begin{lemma}\\label{lemma:element-independent}\nGiven $l$ elements $\\alpha_{1,w_1},\\ldots, \\alpha_{l,w_l}$, $w_i \\in [1, r+1]$. If $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\} $ are linearly independent over $F_q$, then $ \\{ \\alpha_{i,m_i} - \\alpha_{i,w_i}, i \\in [1,l] , m_i \\in [1,r+1]\\setminus w_i\\} $ are linearly independent over $F_q$.\n\\end{lemma}\n\n\n\n\n\n\\begin{lemma} \\label{lemma:poly-min-dist}\nAny $n-k-\\left\\lceil\\frac{k}{r}\\right\\rceil+1$ columns of $H$  are linearly independent.\n\\end{lemma}\n\n\n\\begin{lemma} \\label{lemma:poly-dimension}\nThe linear code defined by $H$ has dimension $k$.\n\\end{lemma}\n\n\nBy Lemma \\ref{lemma:poly-min-dist} and Lemma \\ref{lemma:poly-dimension}, the next theorem follows.\n\\begin{thm} \\label{min-dist}\nThe codes in Construction 1 are optimal LRCs meeting the Singleton-like bound.\n\\end{thm}\n\n\\begin{remark}\nSet 1 for all the elements in $\\{\\alpha_{i,r+1}, i \\in [1,l]\\}$. Then choose $\\frac{nr}{r+1}$ independent elements $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\}$  from $F_{q^m}$. Thus $\\{\\alpha_{i,j}, i \\in [1,l], j \\in [1,r]\\}$ are obtained by simple additions. Note that $\\frac{nr}{r+1}$ independent elements exist for $F_{q^m}$ with $m \\geq \\frac{nr}{r+1}$.\n\\end{remark}\n\n\\subsection{Code construction based on Vandermonde matrix}\\label{sec:con-vondermonde}\nIn this section we give two constructions of hight rate optimal LRCs with distance $4$ and $5$.\n\n\\begin{construction} \\label{cons:two-rows}\nSuppose that $r \\geq 3, (r+1)\\mid n$. Let $l = \\frac{n}{r+1}$, $\\alpha_{i,j}\\in F_q$ and $\\alpha_{i,j_1} \\neq \\alpha_{i,j_2}$ for $j_1 \\neq j_2 \\in [1,r+1]$, $i\\in [1,l]$. Then the linear code defined by the  following $(l+2)\\times n$  parity-check matrix is a $q$-ary $(n,n-l-2,r)$ LRC.\n\n", "itemtype": "equation", "pos": 38136, "prevtext": "\n\n\\end{construction}\n\n\n\\iffalse\n\n", "index": 25, "text": "\\begin{equation*}\n\\label{paritycheckmatrix}\nH =\n  \\left(\n  \\begin{array}{cccc|cccc|c|cccc}\n    1&1&\\cdots&1&0&0&\\cdots&0&\\cdots&0&0&\\cdots&0\\\\\n    0&0&\\cdots&0&1&1&\\cdots&1&\\cdots&0&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    0&0&\\cdots&0&0&0&\\cdots&0&\\cdots&1&1&\\cdots&1\\\\\n\n    \\alpha_1&\\alpha_2&\\cdots&\\alpha_{r+1}&\\alpha_{r+2}&\\alpha_{r+3}&\\cdots&\\alpha_{2(r+1)}&\\cdots&\\alpha_{n-r}&\\alpha_{n-r+1}&\\cdots&\\alpha_n\\\\\n    \\alpha_1^{q}&\\alpha_2^{q}&\\cdots&\\alpha_{r+1}^{q}&\\alpha_{r+2}^{q}&\\alpha_{r+3}^{q}&\\cdots&\\alpha_{2(r+1)}^{q}&\\cdots&\\alpha_{n-r}^{q}&\\alpha_{n-r+1}^{q}&\\cdots&\\alpha_n^{q}\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    \\alpha_1^{q^s}&\\alpha_2^{q^s}&\\cdots&\\alpha_{r+1}^{q^s}&\\alpha_{r+2}^{q^s}&\\alpha_{r+3}^{q^s}&\\cdots&\\alpha_{2(r+1)}^{q^s}&\\cdots&\\alpha_{n-r}^{q^s}&\\alpha_{n-r+1}^{q^s}&\\cdots&\\alpha_n^{q^s}\\\\\n  \\end{array}\n\\right)\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"H=\\left(\\begin{array}[]{cccc|cccc|c|cccc}1&amp;1&amp;\\cdots&amp;1&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;%&#10;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;1&amp;\\cdots&amp;1\\\\&#10;\\par&#10;\\alpha_{1}&amp;\\alpha_{2}&amp;\\cdots&amp;\\alpha_{r+1}&amp;\\alpha_{r+2}&amp;\\alpha_{r+3}&amp;%&#10;\\cdots&amp;\\alpha_{2(r+1)}&amp;\\cdots&amp;\\alpha_{n-r}&amp;\\alpha_{n-r+1}&amp;\\cdots&amp;\\alpha_{n}\\\\&#10;\\alpha_{1}^{q}&amp;\\alpha_{2}^{q}&amp;\\cdots&amp;\\alpha_{r+1}^{q}&amp;\\alpha_{r+2}^{q}&amp;\\alpha_%&#10;{r+3}^{q}&amp;\\cdots&amp;\\alpha_{2(r+1)}^{q}&amp;\\cdots&amp;\\alpha_{n-r}^{q}&amp;\\alpha_{n-r+1}^{q%&#10;}&amp;\\cdots&amp;\\alpha_{n}^{q}\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;\\alpha_{1}^{q^{s}}&amp;\\alpha_{2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{r+1}^{q^{s}}&amp;\\alpha_{r+2}%&#10;^{q^{s}}&amp;\\alpha_{r+3}^{q^{s}}&amp;\\cdots&amp;\\alpha_{2(r+1)}^{q^{s}}&amp;\\cdots&amp;\\alpha_{n-%&#10;r}^{q^{s}}&amp;\\alpha_{n-r+1}^{q^{s}}&amp;\\cdots&amp;\\alpha_{n}^{q^{s}}\\\\&#10;\\end{array}\\right)\" display=\"block\"><mrow><mi>H</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mn>1</mn></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mn>2</mn></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>3</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>n</mi><mo>-</mo><mi>r</mi></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>r</mi></mrow><mo>+</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mi>n</mi></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mn>1</mn><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mn>2</mn><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>3</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mi>q</mi></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>n</mi><mo>-</mo><mi>r</mi></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>r</mi></mrow><mo>+</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mi>n</mi><mi>q</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mn>1</mn><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mn>2</mn><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>r</mi><mo>+</mo><mn>3</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>n</mi><mo>-</mo><mi>r</mi></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>r</mi></mrow><mo>+</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mi>n</mi><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\n\\end{construction}\n\n\\begin{thm} \\label{thm:two-rows}\nThe codes in Construction \\ref{cons:two-rows} have  minimum distance $d =4$ and are optimal LRCs meeting the Singleton-like bound.\n\\end{thm}\n\n\\begin{remark}\nNote that the codes in Construction \\ref{cons:two-rows} are high rate LRCs with $R = \\frac{n-l-2}{n}=\\frac{r}{r+1}-\\frac{2}{n}$, which is near optimal by the rate bound (\\ref{eql}). Moreover, the codes exist over $F_q$ with $q \\geq r+1$.\n\\end{remark}\n\n\n\\begin{construction} \\label{cons:three-rows}\nSuppose that $r \\geq 4, (r+1)\\mid n$. Let $l = \\frac{n}{r+1}$, $\\alpha_{i,j}\\in F_q$, and  $\\alpha_{i,j_1} \\neq \\alpha_{i,j_2}$ for $j_1 \\neq j_2 \\in [1,r+1]$, $i\\in [1,l]$, and $\\alpha_{i_1,j_1}+\\alpha_{i_1,j_2} \\neq \\alpha_{i_2,h_1}+\\alpha_{i_2,h_2}$ for $i_1\\neq i_2 \\in [1,l], j_1\\neq j_2 \\in [1,r+1],h_1\\neq h_2 \\in [1,r+1]$. Then the linear code defined by the  following $(l+3)\\times n$  parity-check matrix is a  $q$-ary $(n,n-l-3,r)$ LRC.\n\n", "itemtype": "equation", "pos": 40908, "prevtext": "\n\\fi\n\n\n\n\\begin{lemma}\\label{lemma:element-independent}\nGiven $l$ elements $\\alpha_{1,w_1},\\ldots, \\alpha_{l,w_l}$, $w_i \\in [1, r+1]$. If $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\} $ are linearly independent over $F_q$, then $ \\{ \\alpha_{i,m_i} - \\alpha_{i,w_i}, i \\in [1,l] , m_i \\in [1,r+1]\\setminus w_i\\} $ are linearly independent over $F_q$.\n\\end{lemma}\n\n\n\n\n\n\\begin{lemma} \\label{lemma:poly-min-dist}\nAny $n-k-\\left\\lceil\\frac{k}{r}\\right\\rceil+1$ columns of $H$  are linearly independent.\n\\end{lemma}\n\n\n\\begin{lemma} \\label{lemma:poly-dimension}\nThe linear code defined by $H$ has dimension $k$.\n\\end{lemma}\n\n\nBy Lemma \\ref{lemma:poly-min-dist} and Lemma \\ref{lemma:poly-dimension}, the next theorem follows.\n\\begin{thm} \\label{min-dist}\nThe codes in Construction 1 are optimal LRCs meeting the Singleton-like bound.\n\\end{thm}\n\n\\begin{remark}\nSet 1 for all the elements in $\\{\\alpha_{i,r+1}, i \\in [1,l]\\}$. Then choose $\\frac{nr}{r+1}$ independent elements $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\}$  from $F_{q^m}$. Thus $\\{\\alpha_{i,j}, i \\in [1,l], j \\in [1,r]\\}$ are obtained by simple additions. Note that $\\frac{nr}{r+1}$ independent elements exist for $F_{q^m}$ with $m \\geq \\frac{nr}{r+1}$.\n\\end{remark}\n\n\\subsection{Code construction based on Vandermonde matrix}\\label{sec:con-vondermonde}\nIn this section we give two constructions of hight rate optimal LRCs with distance $4$ and $5$.\n\n\\begin{construction} \\label{cons:two-rows}\nSuppose that $r \\geq 3, (r+1)\\mid n$. Let $l = \\frac{n}{r+1}$, $\\alpha_{i,j}\\in F_q$ and $\\alpha_{i,j_1} \\neq \\alpha_{i,j_2}$ for $j_1 \\neq j_2 \\in [1,r+1]$, $i\\in [1,l]$. Then the linear code defined by the  following $(l+2)\\times n$  parity-check matrix is a $q$-ary $(n,n-l-2,r)$ LRC.\n\n", "index": 27, "text": "\\begin{equation}\n\\label{paritycheckmatrix}\nH =\n  \\left(\n  \\begin{array}{cccc|cccc|c|cccc}\n    1&1&\\cdots&1&0&0&\\cdots&0&\\cdots&0&0&\\cdots&0\\\\\n    0&0&\\cdots&0&1&1&\\cdots&1&\\cdots&0&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    0&0&\\cdots&0&0&0&\\cdots&0&\\cdots&1&1&\\cdots&1\\\\\n    \\alpha_{1,1}&\\alpha_{1,2}&\\cdots&\\alpha_{1,r+1}&\\alpha_{2,1}&\\alpha_{2,2}&\\cdots&\\alpha_{2,r+1}&\\cdots&\\alpha_{l,1}&\\alpha_{l,2}&\\cdots&\\alpha_{l,r+1}\\\\\n    \\alpha_{1,1}^{2}&\\alpha_{1,2}^{2}&\\cdots&\\alpha_{1,r+1}^{2}&\\alpha_{2,1}^{2}&\\alpha_{2,2}^{2}&\\cdots&\\alpha_{2,r+1}^{2}&\\cdots&\\alpha_{l,1}^{2}&\\alpha_{l,2}^{2}&\\cdots&\\alpha_{l,r+1}^{2}\\\\\n  \\end{array}\n\\right)\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E10.m1\" class=\"ltx_Math\" alttext=\"H=\\left(\\begin{array}[]{cccc|cccc|c|cccc}1&amp;1&amp;\\cdots&amp;1&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;%&#10;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;1&amp;\\cdots&amp;1\\\\&#10;\\alpha_{1,1}&amp;\\alpha_{1,2}&amp;\\cdots&amp;\\alpha_{1,r+1}&amp;\\alpha_{2,1}&amp;\\alpha_{2,2}&amp;%&#10;\\cdots&amp;\\alpha_{2,r+1}&amp;\\cdots&amp;\\alpha_{l,1}&amp;\\alpha_{l,2}&amp;\\cdots&amp;\\alpha_{l,r+1}\\\\&#10;\\alpha_{1,1}^{2}&amp;\\alpha_{1,2}^{2}&amp;\\cdots&amp;\\alpha_{1,r+1}^{2}&amp;\\alpha_{2,1}^{2}&amp;%&#10;\\alpha_{2,2}^{2}&amp;\\cdots&amp;\\alpha_{2,r+1}^{2}&amp;\\cdots&amp;\\alpha_{l,1}^{2}&amp;\\alpha_{l,2%&#10;}^{2}&amp;\\cdots&amp;\\alpha_{l,r+1}^{2}\\\\&#10;\\end{array}\\right)\" display=\"block\"><mrow><mi>H</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\n\\end{construction}\n\n\n\\begin{thm}\\label{thm:three-rows}\nThe codes in Construction \\ref{cons:three-rows} have minimum distance $d =5$ and are optimal LRCs meeting the Singleton-like bound.\n\\end{thm}\n\n\\begin{remark}\n If  $r=2$ and we add only two non-locality-rows in the lower part of $H$ in Construction \\ref{cons:three-rows}, we also obtain an LRC meeting the Singleton-like bound with distance $5$. The proof is similar to the proof of Theorem \\ref{thm:three-rows}.\n\\end{remark}\n\n\n\\begin{remark}\nNote that the codes in Construction \\ref{cons:three-rows} are high rate LRCs with $R = \\frac{n-l-3}{n}=\\frac{r}{r+1}-\\frac{3}{n}$ which is near optimal by the rate bound (\\ref{eql}). And the codes exist over $F_q$ with $q \\geq 2n+1$.\n\\end{remark}\n\n\\begin{remark}\nFor the codes in Construction \\ref{cons:two-rows} and \\ref{cons:three-rows}. If we add one non-locality-row in the lower part of $H$, we obtain an LRC meeting the Singleton-like bound with distance $3$, and the rate $R = \\frac{r}{r+1}-\\frac{1}{n}$.\n\\end{remark}\n\n\n\\begin{remark}\nFor LRCs with minimum distance $d > 5$ where the lower part of $H$ contains more than three rows, when the code length is small, computer search with low complexity could help to find favorite choices of $\\alpha_{i,j}$. Our future work is to present a theoretical construction.\n\\end{remark}\n\n\n\n\\section{Some future directions}\\label{sec:conclusion}\n\n\\begin{itemize}\n  \\item Whether some LDPC codes, e.g. finite plane LDPC code, or other classical codes meet our general bound still remains open. Future works might be deriving the conditions of meeting our general bound, and giving corresponding constructions.\n  \\item Two classes of LRCs are obtained under the parity-check matrix framework. It remains open to determine the minimum field size of these two classes of LRCs.  And it is interesting to find other parity-check matrices (e.g. using Cauchy matrices ) meeting the Singleton-like bound.\n  \\item Designs of efficient encoding and decoding algorithms for good LRCs under the parity-check matrix framework.\n\\end{itemize}\n\n\n\\newpage\n\n\\begin{thebibliography}{99}\n\\bibitem{Gopalan}\nP. Gopalan, C. Huang, H. Simitci, and S. Yekhanin, ``On the locality of codeword symbols,'' \\emph{IEEE Trans. Inf. Theory}, vol. 58, no. 11, pp. 6925-6934, Nov. 2012.\n\n\\bibitem{Tamo-RS}\nI. Tamo and A. Barg, ``A family of optimal locally recoverable codes,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 8, pp. 4661-4676, Aug. 2014.\n\n\n\\bibitem{Cadambe:netcod}\nV. R. Cadambe and A. Mazumdar, ``An upper bound on the size of locally recoverable codes,'' in \\emph{Proc. Int. Symp. Netw. coding (NetCod)}, Calgary, Cananda, Jun. 2013, pp 1-5.\n\n\\bibitem{Cadambe:IT}\nV. R. Cadambe and A. Mazumdar, ``Bounds on the size of locally recoverable codes,'' in \\emph{IEEE Trans. Inf. Theory}, vol. 61, no. 11, pp. 5787-5794, Nov. 2015.\n\n\n\\bibitem{pyramid}\nC. Huang, M. Chen, and J. Li, ``Pyramid codes: Flexible schemes to trade space for access efficiency in reliable data storage systems,'' in \\emph{Proc. 6th IEEE Int. Symp. Netw. Comput. Appl.}, 2007, pp. 79-86.\n\n\\bibitem{huang-atc}\nC. Huang, H. Simitci, Y. Xu, A.Ogus, B. Calder, P. Gopalan, J. Li, and S. Yekhanin, ``Erasure coding in windows azure storage,'' in  \\emph{Proc. USENIX Annu. Tech. Conf.}, Boston, MA, USA, 2012.\n\n\n\\bibitem{Gopa}\nS. Goparaju and R. Calderbank, ``Binary cyclic codes that are locally repairable,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp 676-680.\n\n\\bibitem{Tamo-matroid}\nI. Tamo, D. S. Papailiopoulos, and A. G. Dimakis, ``Optimal locally repairable codes and connections to matroid theory,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Turkey, Istanbul, Jul. 2013, pp. 1814-1818.\n\n\\bibitem{Prakash-lrc-delta}\nN. Prakash, G. M. Kamath, V. Lalitha and P. V. Kumar, ``Optimal linear codes with a local-error-correction property'', in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Cambridge, MA, USA,  Jul. 2012, pp. 2776-2780.\n\n\n\\bibitem{pfhuangitw}\nP. Huang, E. Yaakobi, H. Uchikawa,and P. H. Siegel, ``Cyclic linear binary locally repairable codes,''in \\emph{Proc. Inf. Theory .Workshop (ITW)}, Jerusalem, Apr. 2015, pp. 1 - 5.\n\n\\bibitem{tamo-cyclic}\nI. Tamo, A. Barg, S. Goparaju, and R. Calderbank, ``Cyclic LRC codes and their subfield subcodess,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp.  1262 - 1266.\n\n\\bibitem{anticode}\nN. Silberstein  and A. Zeh, ``Optimal binary locally repairable codes via anticodes,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp. 1247 - 1251.\n\n\\bibitem{zeh}\nA. Zeh and  E. Yaakobi, ``Optimal linear and cyclic locally repairable codes over small fields,''in \\emph{Proc. Inf. Theory Workshop (ITW)}, Jerusalem, Apr. 2015, pp. 1 - 5.\n\n\\bibitem{Goppa-IT}\nP. Gopalan, C. Huang, B. Jenkins, and S. Yekhanin, ``Explicit maximally recoverable codes with locality,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 9, pp. 5245 - 5256, Sep. 2014.\n\n\\iffalse\n\\bibitem{aywang-IP}\nA. Wang, Z. Zhang,``An integer programming-based bound for locally repairable codes,''\\emph{IEEE Trans. Inf. Theory}, vol. 61, no. 10, pp. 5280 - 5294, Oct. 2015.\n\\fi\n\n\\bibitem{Barg-curve}\nA. Barg, I. Tamo, and S. Vladut, ``Locally recoverable codes on algebraic curves,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp. 1252 - 1256.\n\n\\bibitem{Prakash-lrc-two-erasure}\nN. Prakash, V. Lalitha and P. V. Kumar, ``Codes with locality for two erasures,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp. 1962 - 1966.\n\n\n\\bibitem{papil}\nD. S. Papailiopoulos and A. G. Dimakis, ``Locally repairable codes,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 10, pp. 5843-5855, Oct. 2014.\n\n\n\\bibitem{Natalia-rank-matric}\nN. Silberstein, A. S. Rawat, O. O. Koyluoglu, and S. Vishwanath, ``Optimal locally repairable codes via rank-metric codes,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Turkey, Istanbul, Jul. 2013, pp. 1819-1823.\n\n\\bibitem{ankit-securelrc}\nA. S. Rawat, O.O. Koyluoglu, N. Silberstein,and S. Vishwanath,``Optimal locally repairable and secure codes for distributed storage systems,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 1, pp. 212 - 236, Jan. 2014.\n\n\\iffalse\n\\bibitem{Kamath-local-regeneration}\nG. M. Kamath, N. Prakash, V. Lalitha, and P. V. Kumar, ``Codes with local regeneration and erasure correction,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 8, pp. 4637 - 4660, Aug. 2014.\n\\fi\n\n\\bibitem{Xor-elephant-vldb}\nM. Sathiamoorthy, M. Asteris, D. S. Papailiopoulos, A. G. Dimakis, R. Vadali, S. Chen, and D. Borthakur, ``XORing elephants: novel erasure codes for big data,'' in \\emph{Proc. VLDB Endowment}, vol. 6, no. 5, 2013, pp. 325-336.\n\n\n\\bibitem{Ankit}\nA. S. Rawat and D. S. Papailiopoulos, A.G. Dimakis, and S. Vishwanath, ``Locality and availability in distributed Storage,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp. 681-685.\n\n\\bibitem{Wang}\nA. Wang and Z. Zhang, ``Repair locality with multiple erasure tolerance,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 11, pp. 6979-6987, Nov. 2014.\n\n\n\\bibitem{Wang an}\nA. Wang and Z. Zhang, ``Repair locality From a combinatorial perspective,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp. 1972-1976.\n\n\n\\bibitem{Itzhak}\nI. Tamo and A. Barg, ``Bounds on locally recoverable codes with multiple recovering sets,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp 691-695.\n\n\n\\bibitem{Pami}\nL. Pamies-Juarez , H. D. L. Hollmann, F. Oggier. ``Locally repairable codes with multiple repair alternatives,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Istanbul, Turkey, Jul. 2013, pp 892-896.\n\n\\bibitem{WangCon}\nA. Wang and Z. Zhang, ``Achieving arbitrary locality and availability in binary codes,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jul. 2015, pp 1866-1870.\n\n\\bibitem{pfhuangisit}\nP. Huang, E. Yaakobi, H. Uchikawa, P. H. Siegel, `` Linear locally repairable codes with availability,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp.  1871 - 1875.\n\n\n\n\\bibitem{ldc-jk}\nJ. Katz and L. Trevisan, ``On the efficiency of local decoding procedures for error-correcting codes,'' in \\emph{Proc. \\rm{32}nd ACM Symp. Theory Comput.}, 2000, pp. 80-86.\n\n\\bibitem{ldc-sk}\nS. Kopparty, S. Saraf, and S. Yekhanin, ``High-rate codes with sublinear-time decoding,'' in \\emph{Proc. \\rm{43}rd ACM Symp. Theory Comput.}, 2011, pp. 167-176.\n\n\\bibitem{ldc-ke}\nK. Efremenko, ``3-query locally decodable codes of subexponential length,'' in \\emph{Proc. \\rm{41}st ACM Symp.Theory Comput.}, 2009, pp. 39-44.\n\n\\bibitem{ldc-sy}\nS. Yekhanin, ``Towards 3-query locally decodable codes of subexponential length,'' in \\emph{J. ACM}, vol. 55, pp. 1-16, 2008.\n\n\\bibitem{ldc-sysurvey}\nS. Yekhanin, ``Locally decodable codes,'' in \\emph{Found. Trends Theory Comput. Sci.}, vol. 7, pp. 1-119, 2011.\n\n\n\n\n\\bibitem{Dimakis}\nA. G. Dimakis, P. Godfrey, Y. Wu, M. Wainwright, and K. Ramchandran. ``Network coding for distributed storage systems,''  \\emph{IEEE Trans. Inf. Theory}, vol.56, no. 9, pp. 4539-4551, Sept. 2010.\n\n\\bibitem{prod-matrix}\nK. V. Rashmi, N. B. Shah, and P. V.Kumar, ``Optimal exact-regenerating codes for distributed storage at the MSR and MBR points via a product-matrix construction,'' in \\emph{IEEE Trans. Inf. Theory}, vol. 57, no. 8, pp. 5227-5239, Aug. 2011.\n\n\\bibitem{msr}\nC. Suh and K. Ramchandran, ``Exact-repair MDS code construction using interference alignment'' in \\emph{IEEE Trans. Inf. Theory}, vol. 57, no. 3, pp. 1425-1442, Mar. 2011.\n\n\\bibitem{Dimakis-survey}\nA. G. Dimakis, K. Ramchandran, Y. Wu, and C. Suh, ``A survey on network codes for distributed storage,'' in  \\emph{Proc. of IEEE}, vol. 99, no. 3, pp. 476-489, Mar. 2011.\n\n\n\n\n\\bibitem{MacWilliams}\nF. J. MacWilliams and N. J. A. Sloane, \\emph{The Theory of Error-Correcting Codes.} Amsterdam, The Netherlands: North-Holland, 1981 (3rd printing).\n\n\\bibitem{Rudolf}\nL. Rudolf, and H. Niederreiter. \\emph{Finite Fields.} Cambridge university press, 1997.\n\n\n\\end{thebibliography}\n\n\n\n\\newpage\n\n\n\n\n\\section*{Appendix}\n\n\n\n\\subsection*{Proof of Theorem \\ref{thm:necessary-condition}}\n\\begin{proof}\nThe proofs are broken into two cases as follows.\n\\begin{itemize}\n\\item\nIf $r\\mid k$, then $t=\\frac{k}{r}\\ge 2$, $d=n-k-\\frac{k}{r}+ 2=\\eta+2$.\nRecall that the first $t=\\frac{k}{r}$ rows of $H_1$ are considered. Let $\\gamma$ be the number of the columns which the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$, which is equivalent to that the number of the remaining columns is $n - \\gamma \\geq n - t(r+1)$, where the equality holds if and only if the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. The number of the remaining rows is $\\eta=n-k-t$.\nIn the proof of Theorem \\ref{thm:singleton-bound}, $n-\\gamma\\ge \\eta$ and that $n-\\gamma\\ge \\eta+1$ implies $d\\le \\eta+1$,  thus we have that $n-\\gamma=\\eta=n-k-t=n-t(r+1)$. So the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. It is easy to see that if we choose any fixed $t$ rows of $H_1$, the same arguments still hold. Hence, we have that the supports of any fixed $t$ rows are pairwise disjoint and each has weight exactly $r+1$, which implies the supports of all rows in $H_1$ are pairwise disjoint and each has weight exactly $r+1$, which implies that $(r+1)\\mid n$.\n\n\\item\nIf $r\\nmid k$. Assume the contrary that there are $\\left\\lceil\\frac{k}{r}\\right\\rceil$ locality-rows whose nonzero elements cover less than $ k+ \\left\\lceil\\frac{k}{r}\\right\\rceil$ columns, then the number of remaining columns is greater than $n - k- \\left\\lceil\\frac{k}{r}\\right\\rceil$, the number of remaining rows is $ n - k -\\left\\lceil\\frac{k}{r}\\right\\rceil$. There must have $n - k -\\left\\lceil\\frac{k}{r}\\right\\rceil+1$ columns which are linearly dependent, thus $d \\leq n - k -\\left\\lceil\\frac{k}{r}\\right\\rceil+1$, which leads to a contradiction.\n\\end{itemize}\n\\end{proof}\n\n\n\n\n\n\n\\subsection*{Proof of Corollary \\ref{corol:general-bound-k}}\n\\begin{proof}\nLet $H$ be the proposed parity-check matrix of $\\mathcal{C}$ in Section \\ref{cpm}. By (\\ref{eql}), consider the first $t$ rows of $H_1$, where $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$. Let $\\gamma$ be the number of the columns that the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$. By deleting the first $t$ rows and the corresponding $\\gamma$ columns of $H$, and further deleting $t(r+1)-\\gamma$ columns, we have an $m^*\\times n^*$ sub-matrix $H^*$, where $m^*= n-k-t$ and $n^* = n - t(r+1)$. Let $\\mathcal{C}^*$ be the $[n^*,k^*,d^*]$ linear code with parity-check matrix $H^*$.\nAmong the $n^*$ columns of $H$, since the elements lies above $H^*$ are all zero, $d \\leq d^*$.\nMoreover, by ${\\rm rank}(H^*)\\leq  n-k-t$, $k^* = n^*-{\\rm rank}(H^*) \\geq   k-tr>0$. Hence,\n\\begin{eqnarray}\nk\\;\\le \\;k^*+tr  \\;\\leq\\; k^{(q)}_{\\rm opt}(n^*,d^*)+tr \\;\\leq\\; k^{(q)}_{\\rm opt}(n - t(r+1),d)+tr. \\label{C*}\n\\end{eqnarray}\nSince  $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$, the conclusion follows.\n\\end{proof}\n\n\n\n\n\n\\subsection*{Proof of Lemma \\ref{lemma:element-independent}}\n\\begin{proof}\n  For each $\\alpha_{1,w_1},\\ldots, \\alpha_{l,w_l}$, $w_i \\in [1, r+1]$, $\\alpha_{i,m_i} - \\alpha_{i,w_i} =  (\\alpha_{i,m_i} - \\alpha_{i,r+1}) - (\\alpha_{i,w_i} - \\alpha_{i,r+1})$. Suppose the contrary that the elements in $\\{ \\alpha_{i,m_i} - \\alpha_{i,w_i}, i \\in [1,l] , m_i \\in [1,r+1]\\setminus w_i \\}$ are linearly dependent over $F_q$, then there exist a set of coefficients $c_{i,m_i}$ some of which are not zero such that\n\n", "itemtype": "equation", "pos": 42594, "prevtext": "\n\\end{construction}\n\n\\begin{thm} \\label{thm:two-rows}\nThe codes in Construction \\ref{cons:two-rows} have  minimum distance $d =4$ and are optimal LRCs meeting the Singleton-like bound.\n\\end{thm}\n\n\\begin{remark}\nNote that the codes in Construction \\ref{cons:two-rows} are high rate LRCs with $R = \\frac{n-l-2}{n}=\\frac{r}{r+1}-\\frac{2}{n}$, which is near optimal by the rate bound (\\ref{eql}). Moreover, the codes exist over $F_q$ with $q \\geq r+1$.\n\\end{remark}\n\n\n\\begin{construction} \\label{cons:three-rows}\nSuppose that $r \\geq 4, (r+1)\\mid n$. Let $l = \\frac{n}{r+1}$, $\\alpha_{i,j}\\in F_q$, and  $\\alpha_{i,j_1} \\neq \\alpha_{i,j_2}$ for $j_1 \\neq j_2 \\in [1,r+1]$, $i\\in [1,l]$, and $\\alpha_{i_1,j_1}+\\alpha_{i_1,j_2} \\neq \\alpha_{i_2,h_1}+\\alpha_{i_2,h_2}$ for $i_1\\neq i_2 \\in [1,l], j_1\\neq j_2 \\in [1,r+1],h_1\\neq h_2 \\in [1,r+1]$. Then the linear code defined by the  following $(l+3)\\times n$  parity-check matrix is a  $q$-ary $(n,n-l-3,r)$ LRC.\n\n", "index": 29, "text": "\\begin{equation}\n\\label{paritycheckmatrix}\nH =\n  \\left(\n  \\begin{array}{cccc|cccc|c|cccc}\n    1&1&\\cdots&1&0&0&\\cdots&0&\\cdots&0&0&\\cdots&0\\\\\n    0&0&\\cdots&0&1&1&\\cdots&1&\\cdots&0&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    0&0&\\cdots&0&0&0&\\cdots&0&\\cdots&1&1&\\cdots&1\\\\\n    \\alpha_{1,1}&\\alpha_{1,2}&\\cdots&\\alpha_{1,r+1}&\\alpha_{2,1}&\\alpha_{2,2}&\\cdots&\\alpha_{2,r+1}&\\cdots&\\alpha_{l,1}&\\alpha_{l,2}&\\cdots&\\alpha_{l,r+1}\\\\\n    \\alpha_{1,1}^{2}&\\alpha_{1,2}^{2}&\\cdots&\\alpha_{1,r+1}^{2}&\\alpha_{2,1}^{2}&\\alpha_{2,2}^{2}&\\cdots&\\alpha_{2,r+1}^{2}&\\cdots&\\alpha_{l,1}^{2}&\\alpha_{l,2}^{2}&\\cdots&\\alpha_{l,r+1}^{2}\\\\\n    \\alpha_{1,1}^{3}&\\alpha_{1,2}^{3}&\\cdots&\\alpha_{1,r+1}^{3}&\\alpha_{2,1}^{3}&\\alpha_{2,2}^{3}&\\cdots&\\alpha_{2,r+1}^{3}&\\cdots&\\alpha_{l,1}^{3}&\\alpha_{l,2}^{3}&\\cdots&\\alpha_{l,r+1}^{3}\\\\\n  \\end{array}\n\\right)\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m1\" class=\"ltx_Math\" alttext=\"H=\\left(\\begin{array}[]{cccc|cccc|c|cccc}1&amp;1&amp;\\cdots&amp;1&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;%&#10;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;1&amp;\\cdots&amp;1\\\\&#10;\\alpha_{1,1}&amp;\\alpha_{1,2}&amp;\\cdots&amp;\\alpha_{1,r+1}&amp;\\alpha_{2,1}&amp;\\alpha_{2,2}&amp;%&#10;\\cdots&amp;\\alpha_{2,r+1}&amp;\\cdots&amp;\\alpha_{l,1}&amp;\\alpha_{l,2}&amp;\\cdots&amp;\\alpha_{l,r+1}\\\\&#10;\\alpha_{1,1}^{2}&amp;\\alpha_{1,2}^{2}&amp;\\cdots&amp;\\alpha_{1,r+1}^{2}&amp;\\alpha_{2,1}^{2}&amp;%&#10;\\alpha_{2,2}^{2}&amp;\\cdots&amp;\\alpha_{2,r+1}^{2}&amp;\\cdots&amp;\\alpha_{l,1}^{2}&amp;\\alpha_{l,2%&#10;}^{2}&amp;\\cdots&amp;\\alpha_{l,r+1}^{2}\\\\&#10;\\alpha_{1,1}^{3}&amp;\\alpha_{1,2}^{3}&amp;\\cdots&amp;\\alpha_{1,r+1}^{3}&amp;\\alpha_{2,1}^{3}&amp;%&#10;\\alpha_{2,2}^{3}&amp;\\cdots&amp;\\alpha_{2,r+1}^{3}&amp;\\cdots&amp;\\alpha_{l,1}^{3}&amp;\\alpha_{l,2%&#10;}^{3}&amp;\\cdots&amp;\\alpha_{l,r+1}^{3}\\\\&#10;\\end{array}\\right)\" display=\"block\"><mrow><mi>H</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>2</mn></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>2</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>3</mn></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>1</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mn>2</mn></mrow><mn>3</mn></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>l</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow><mn>3</mn></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nor\n\n", "itemtype": "equation", "pos": 57291, "prevtext": "\n\\end{construction}\n\n\n\\begin{thm}\\label{thm:three-rows}\nThe codes in Construction \\ref{cons:three-rows} have minimum distance $d =5$ and are optimal LRCs meeting the Singleton-like bound.\n\\end{thm}\n\n\\begin{remark}\n If  $r=2$ and we add only two non-locality-rows in the lower part of $H$ in Construction \\ref{cons:three-rows}, we also obtain an LRC meeting the Singleton-like bound with distance $5$. The proof is similar to the proof of Theorem \\ref{thm:three-rows}.\n\\end{remark}\n\n\n\\begin{remark}\nNote that the codes in Construction \\ref{cons:three-rows} are high rate LRCs with $R = \\frac{n-l-3}{n}=\\frac{r}{r+1}-\\frac{3}{n}$ which is near optimal by the rate bound (\\ref{eql}). And the codes exist over $F_q$ with $q \\geq 2n+1$.\n\\end{remark}\n\n\\begin{remark}\nFor the codes in Construction \\ref{cons:two-rows} and \\ref{cons:three-rows}. If we add one non-locality-row in the lower part of $H$, we obtain an LRC meeting the Singleton-like bound with distance $3$, and the rate $R = \\frac{r}{r+1}-\\frac{1}{n}$.\n\\end{remark}\n\n\n\\begin{remark}\nFor LRCs with minimum distance $d > 5$ where the lower part of $H$ contains more than three rows, when the code length is small, computer search with low complexity could help to find favorite choices of $\\alpha_{i,j}$. Our future work is to present a theoretical construction.\n\\end{remark}\n\n\n\n\\section{Some future directions}\\label{sec:conclusion}\n\n\\begin{itemize}\n  \\item Whether some LDPC codes, e.g. finite plane LDPC code, or other classical codes meet our general bound still remains open. Future works might be deriving the conditions of meeting our general bound, and giving corresponding constructions.\n  \\item Two classes of LRCs are obtained under the parity-check matrix framework. It remains open to determine the minimum field size of these two classes of LRCs.  And it is interesting to find other parity-check matrices (e.g. using Cauchy matrices ) meeting the Singleton-like bound.\n  \\item Designs of efficient encoding and decoding algorithms for good LRCs under the parity-check matrix framework.\n\\end{itemize}\n\n\n\\newpage\n\n\\begin{thebibliography}{99}\n\\bibitem{Gopalan}\nP. Gopalan, C. Huang, H. Simitci, and S. Yekhanin, ``On the locality of codeword symbols,'' \\emph{IEEE Trans. Inf. Theory}, vol. 58, no. 11, pp. 6925-6934, Nov. 2012.\n\n\\bibitem{Tamo-RS}\nI. Tamo and A. Barg, ``A family of optimal locally recoverable codes,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 8, pp. 4661-4676, Aug. 2014.\n\n\n\\bibitem{Cadambe:netcod}\nV. R. Cadambe and A. Mazumdar, ``An upper bound on the size of locally recoverable codes,'' in \\emph{Proc. Int. Symp. Netw. coding (NetCod)}, Calgary, Cananda, Jun. 2013, pp 1-5.\n\n\\bibitem{Cadambe:IT}\nV. R. Cadambe and A. Mazumdar, ``Bounds on the size of locally recoverable codes,'' in \\emph{IEEE Trans. Inf. Theory}, vol. 61, no. 11, pp. 5787-5794, Nov. 2015.\n\n\n\\bibitem{pyramid}\nC. Huang, M. Chen, and J. Li, ``Pyramid codes: Flexible schemes to trade space for access efficiency in reliable data storage systems,'' in \\emph{Proc. 6th IEEE Int. Symp. Netw. Comput. Appl.}, 2007, pp. 79-86.\n\n\\bibitem{huang-atc}\nC. Huang, H. Simitci, Y. Xu, A.Ogus, B. Calder, P. Gopalan, J. Li, and S. Yekhanin, ``Erasure coding in windows azure storage,'' in  \\emph{Proc. USENIX Annu. Tech. Conf.}, Boston, MA, USA, 2012.\n\n\n\\bibitem{Gopa}\nS. Goparaju and R. Calderbank, ``Binary cyclic codes that are locally repairable,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp 676-680.\n\n\\bibitem{Tamo-matroid}\nI. Tamo, D. S. Papailiopoulos, and A. G. Dimakis, ``Optimal locally repairable codes and connections to matroid theory,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Turkey, Istanbul, Jul. 2013, pp. 1814-1818.\n\n\\bibitem{Prakash-lrc-delta}\nN. Prakash, G. M. Kamath, V. Lalitha and P. V. Kumar, ``Optimal linear codes with a local-error-correction property'', in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Cambridge, MA, USA,  Jul. 2012, pp. 2776-2780.\n\n\n\\bibitem{pfhuangitw}\nP. Huang, E. Yaakobi, H. Uchikawa,and P. H. Siegel, ``Cyclic linear binary locally repairable codes,''in \\emph{Proc. Inf. Theory .Workshop (ITW)}, Jerusalem, Apr. 2015, pp. 1 - 5.\n\n\\bibitem{tamo-cyclic}\nI. Tamo, A. Barg, S. Goparaju, and R. Calderbank, ``Cyclic LRC codes and their subfield subcodess,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp.  1262 - 1266.\n\n\\bibitem{anticode}\nN. Silberstein  and A. Zeh, ``Optimal binary locally repairable codes via anticodes,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp. 1247 - 1251.\n\n\\bibitem{zeh}\nA. Zeh and  E. Yaakobi, ``Optimal linear and cyclic locally repairable codes over small fields,''in \\emph{Proc. Inf. Theory Workshop (ITW)}, Jerusalem, Apr. 2015, pp. 1 - 5.\n\n\\bibitem{Goppa-IT}\nP. Gopalan, C. Huang, B. Jenkins, and S. Yekhanin, ``Explicit maximally recoverable codes with locality,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 9, pp. 5245 - 5256, Sep. 2014.\n\n\\iffalse\n\\bibitem{aywang-IP}\nA. Wang, Z. Zhang,``An integer programming-based bound for locally repairable codes,''\\emph{IEEE Trans. Inf. Theory}, vol. 61, no. 10, pp. 5280 - 5294, Oct. 2015.\n\\fi\n\n\\bibitem{Barg-curve}\nA. Barg, I. Tamo, and S. Vladut, ``Locally recoverable codes on algebraic curves,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp. 1252 - 1256.\n\n\\bibitem{Prakash-lrc-two-erasure}\nN. Prakash, V. Lalitha and P. V. Kumar, ``Codes with locality for two erasures,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp. 1962 - 1966.\n\n\n\\bibitem{papil}\nD. S. Papailiopoulos and A. G. Dimakis, ``Locally repairable codes,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 10, pp. 5843-5855, Oct. 2014.\n\n\n\\bibitem{Natalia-rank-matric}\nN. Silberstein, A. S. Rawat, O. O. Koyluoglu, and S. Vishwanath, ``Optimal locally repairable codes via rank-metric codes,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Turkey, Istanbul, Jul. 2013, pp. 1819-1823.\n\n\\bibitem{ankit-securelrc}\nA. S. Rawat, O.O. Koyluoglu, N. Silberstein,and S. Vishwanath,``Optimal locally repairable and secure codes for distributed storage systems,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 1, pp. 212 - 236, Jan. 2014.\n\n\\iffalse\n\\bibitem{Kamath-local-regeneration}\nG. M. Kamath, N. Prakash, V. Lalitha, and P. V. Kumar, ``Codes with local regeneration and erasure correction,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 8, pp. 4637 - 4660, Aug. 2014.\n\\fi\n\n\\bibitem{Xor-elephant-vldb}\nM. Sathiamoorthy, M. Asteris, D. S. Papailiopoulos, A. G. Dimakis, R. Vadali, S. Chen, and D. Borthakur, ``XORing elephants: novel erasure codes for big data,'' in \\emph{Proc. VLDB Endowment}, vol. 6, no. 5, 2013, pp. 325-336.\n\n\n\\bibitem{Ankit}\nA. S. Rawat and D. S. Papailiopoulos, A.G. Dimakis, and S. Vishwanath, ``Locality and availability in distributed Storage,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp. 681-685.\n\n\\bibitem{Wang}\nA. Wang and Z. Zhang, ``Repair locality with multiple erasure tolerance,'' \\emph{IEEE Trans. Inf. Theory}, vol. 60, no. 11, pp. 6979-6987, Nov. 2014.\n\n\n\\bibitem{Wang an}\nA. Wang and Z. Zhang, ``Repair locality From a combinatorial perspective,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp. 1972-1976.\n\n\n\\bibitem{Itzhak}\nI. Tamo and A. Barg, ``Bounds on locally recoverable codes with multiple recovering sets,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Honolulu, HI, USA, Jul. 2014, pp 691-695.\n\n\n\\bibitem{Pami}\nL. Pamies-Juarez , H. D. L. Hollmann, F. Oggier. ``Locally repairable codes with multiple repair alternatives,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Istanbul, Turkey, Jul. 2013, pp 892-896.\n\n\\bibitem{WangCon}\nA. Wang and Z. Zhang, ``Achieving arbitrary locality and availability in binary codes,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jul. 2015, pp 1866-1870.\n\n\\bibitem{pfhuangisit}\nP. Huang, E. Yaakobi, H. Uchikawa, P. H. Siegel, `` Linear locally repairable codes with availability,'' in \\emph{Proc. Int. Symp. Inf. Theory (ISIT)}, Hong Kong, China, Jun. 2015, pp.  1871 - 1875.\n\n\n\n\\bibitem{ldc-jk}\nJ. Katz and L. Trevisan, ``On the efficiency of local decoding procedures for error-correcting codes,'' in \\emph{Proc. \\rm{32}nd ACM Symp. Theory Comput.}, 2000, pp. 80-86.\n\n\\bibitem{ldc-sk}\nS. Kopparty, S. Saraf, and S. Yekhanin, ``High-rate codes with sublinear-time decoding,'' in \\emph{Proc. \\rm{43}rd ACM Symp. Theory Comput.}, 2011, pp. 167-176.\n\n\\bibitem{ldc-ke}\nK. Efremenko, ``3-query locally decodable codes of subexponential length,'' in \\emph{Proc. \\rm{41}st ACM Symp.Theory Comput.}, 2009, pp. 39-44.\n\n\\bibitem{ldc-sy}\nS. Yekhanin, ``Towards 3-query locally decodable codes of subexponential length,'' in \\emph{J. ACM}, vol. 55, pp. 1-16, 2008.\n\n\\bibitem{ldc-sysurvey}\nS. Yekhanin, ``Locally decodable codes,'' in \\emph{Found. Trends Theory Comput. Sci.}, vol. 7, pp. 1-119, 2011.\n\n\n\n\n\\bibitem{Dimakis}\nA. G. Dimakis, P. Godfrey, Y. Wu, M. Wainwright, and K. Ramchandran. ``Network coding for distributed storage systems,''  \\emph{IEEE Trans. Inf. Theory}, vol.56, no. 9, pp. 4539-4551, Sept. 2010.\n\n\\bibitem{prod-matrix}\nK. V. Rashmi, N. B. Shah, and P. V.Kumar, ``Optimal exact-regenerating codes for distributed storage at the MSR and MBR points via a product-matrix construction,'' in \\emph{IEEE Trans. Inf. Theory}, vol. 57, no. 8, pp. 5227-5239, Aug. 2011.\n\n\\bibitem{msr}\nC. Suh and K. Ramchandran, ``Exact-repair MDS code construction using interference alignment'' in \\emph{IEEE Trans. Inf. Theory}, vol. 57, no. 3, pp. 1425-1442, Mar. 2011.\n\n\\bibitem{Dimakis-survey}\nA. G. Dimakis, K. Ramchandran, Y. Wu, and C. Suh, ``A survey on network codes for distributed storage,'' in  \\emph{Proc. of IEEE}, vol. 99, no. 3, pp. 476-489, Mar. 2011.\n\n\n\n\n\\bibitem{MacWilliams}\nF. J. MacWilliams and N. J. A. Sloane, \\emph{The Theory of Error-Correcting Codes.} Amsterdam, The Netherlands: North-Holland, 1981 (3rd printing).\n\n\\bibitem{Rudolf}\nL. Rudolf, and H. Niederreiter. \\emph{Finite Fields.} Cambridge university press, 1997.\n\n\n\\end{thebibliography}\n\n\n\n\\newpage\n\n\n\n\n\\section*{Appendix}\n\n\n\n\\subsection*{Proof of Theorem \\ref{thm:necessary-condition}}\n\\begin{proof}\nThe proofs are broken into two cases as follows.\n\\begin{itemize}\n\\item\nIf $r\\mid k$, then $t=\\frac{k}{r}\\ge 2$, $d=n-k-\\frac{k}{r}+ 2=\\eta+2$.\nRecall that the first $t=\\frac{k}{r}$ rows of $H_1$ are considered. Let $\\gamma$ be the number of the columns which the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$, which is equivalent to that the number of the remaining columns is $n - \\gamma \\geq n - t(r+1)$, where the equality holds if and only if the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. The number of the remaining rows is $\\eta=n-k-t$.\nIn the proof of Theorem \\ref{thm:singleton-bound}, $n-\\gamma\\ge \\eta$ and that $n-\\gamma\\ge \\eta+1$ implies $d\\le \\eta+1$,  thus we have that $n-\\gamma=\\eta=n-k-t=n-t(r+1)$. So the supports of the first $t$ rows are pairwise disjoint and each has weight exactly $r+1$. It is easy to see that if we choose any fixed $t$ rows of $H_1$, the same arguments still hold. Hence, we have that the supports of any fixed $t$ rows are pairwise disjoint and each has weight exactly $r+1$, which implies the supports of all rows in $H_1$ are pairwise disjoint and each has weight exactly $r+1$, which implies that $(r+1)\\mid n$.\n\n\\item\nIf $r\\nmid k$. Assume the contrary that there are $\\left\\lceil\\frac{k}{r}\\right\\rceil$ locality-rows whose nonzero elements cover less than $ k+ \\left\\lceil\\frac{k}{r}\\right\\rceil$ columns, then the number of remaining columns is greater than $n - k- \\left\\lceil\\frac{k}{r}\\right\\rceil$, the number of remaining rows is $ n - k -\\left\\lceil\\frac{k}{r}\\right\\rceil$. There must have $n - k -\\left\\lceil\\frac{k}{r}\\right\\rceil+1$ columns which are linearly dependent, thus $d \\leq n - k -\\left\\lceil\\frac{k}{r}\\right\\rceil+1$, which leads to a contradiction.\n\\end{itemize}\n\\end{proof}\n\n\n\n\n\n\n\\subsection*{Proof of Corollary \\ref{corol:general-bound-k}}\n\\begin{proof}\nLet $H$ be the proposed parity-check matrix of $\\mathcal{C}$ in Section \\ref{cpm}. By (\\ref{eql}), consider the first $t$ rows of $H_1$, where $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$. Let $\\gamma$ be the number of the columns that the non-zero elements of these $t$ rows lie in. Then the locality property implies $\\gamma \\leq t(r+1)$. By deleting the first $t$ rows and the corresponding $\\gamma$ columns of $H$, and further deleting $t(r+1)-\\gamma$ columns, we have an $m^*\\times n^*$ sub-matrix $H^*$, where $m^*= n-k-t$ and $n^* = n - t(r+1)$. Let $\\mathcal{C}^*$ be the $[n^*,k^*,d^*]$ linear code with parity-check matrix $H^*$.\nAmong the $n^*$ columns of $H$, since the elements lies above $H^*$ are all zero, $d \\leq d^*$.\nMoreover, by ${\\rm rank}(H^*)\\leq  n-k-t$, $k^* = n^*-{\\rm rank}(H^*) \\geq   k-tr>0$. Hence,\n\\begin{eqnarray}\nk\\;\\le \\;k^*+tr  \\;\\leq\\; k^{(q)}_{\\rm opt}(n^*,d^*)+tr \\;\\leq\\; k^{(q)}_{\\rm opt}(n - t(r+1),d)+tr. \\label{C*}\n\\end{eqnarray}\nSince  $1 \\leq t \\leq \\left\\lceil\\frac{k}{r}\\right\\rceil-1$, the conclusion follows.\n\\end{proof}\n\n\n\n\n\n\\subsection*{Proof of Lemma \\ref{lemma:element-independent}}\n\\begin{proof}\n  For each $\\alpha_{1,w_1},\\ldots, \\alpha_{l,w_l}$, $w_i \\in [1, r+1]$, $\\alpha_{i,m_i} - \\alpha_{i,w_i} =  (\\alpha_{i,m_i} - \\alpha_{i,r+1}) - (\\alpha_{i,w_i} - \\alpha_{i,r+1})$. Suppose the contrary that the elements in $\\{ \\alpha_{i,m_i} - \\alpha_{i,w_i}, i \\in [1,l] , m_i \\in [1,r+1]\\setminus w_i \\}$ are linearly dependent over $F_q$, then there exist a set of coefficients $c_{i,m_i}$ some of which are not zero such that\n\n", "index": 31, "text": "\\begin{equation}\n\\sum_{i \\in [1,l]}\\sum_{ m_i \\in [1,r+1]\\setminus w_i} c_{i,m_i} \\cdot (\\alpha_{i,m_i} - \\alpha_{i,w_i}) = 0,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m1\" class=\"ltx_Math\" alttext=\"\\sum_{i\\in[1,l]}\\sum_{m_{i}\\in[1,r+1]\\setminus w_{i}}c_{i,m_{i}}\\cdot(\\alpha_{%&#10;i,m_{i}}-\\alpha_{i,w_{i}})=0,\" display=\"block\"><mrow><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo>,</mo><mi>l</mi><mo stretchy=\"false\">]</mo></mrow></mrow></munder><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><msub><mi>m</mi><mi>i</mi></msub><mo>\u2208</mo><mrow><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">]</mo></mrow><mo>\u2216</mo><msub><mi>w</mi><mi>i</mi></msub></mrow></mrow></munder><mrow><msub><mi>c</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></msub><mo>\u22c5</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></msub><mo>-</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>w</mi><mi>i</mi></msub></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nThus\n\n", "itemtype": "equation", "pos": 57436, "prevtext": "\nor\n\n", "index": 33, "text": "\\begin{equation}\n\\sum_{i \\in [1,l]}\\sum_{ m_i \\in [1,r+1]\\setminus w_i} c_{i,m_i} \\cdot  [(\\alpha_{i,m_i} - \\alpha_{i,r+1}) - (\\alpha_{i,w_i} - \\alpha_{i,r+1})] = 0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E13.m1\" class=\"ltx_Math\" alttext=\"\\sum_{i\\in[1,l]}\\sum_{m_{i}\\in[1,r+1]\\setminus w_{i}}c_{i,m_{i}}\\cdot[(\\alpha_%&#10;{i,m_{i}}-\\alpha_{i,r+1})-(\\alpha_{i,w_{i}}-\\alpha_{i,r+1})]=0.\" display=\"block\"><mrow><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo>,</mo><mi>l</mi><mo stretchy=\"false\">]</mo></mrow></mrow></munder><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><msub><mi>m</mi><mi>i</mi></msub><mo>\u2208</mo><mrow><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">]</mo></mrow><mo>\u2216</mo><msub><mi>w</mi><mi>i</mi></msub></mrow></mrow></munder><mrow><msub><mi>c</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></msub><mo>\u22c5</mo><mrow><mo stretchy=\"false\">[</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></msub><mo>-</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>w</mi><mi>i</mi></msub></mrow></msub><mo>-</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">]</mo></mrow></mrow></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nSince there is non-zero coefficient in $\\{c_{i,m_i}, i \\in [1,l] , m_i \\in [1,r+1]\\setminus w_i\\}$, the coefficients of $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\}$ in (\\ref{coef}) are not all zero. Thus $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\} $ are linearly dependent over $F_q$, which leads to a contradiction and the conclusion follows.\n\\end{proof}\n\n\n\n\n\n\n\\subsection*{Proof of Lemma \\ref{lemma:poly-min-dist}}\n\\begin{proof}\nThe columns of the parity-check matrix $H$ are divided into $l=\\frac{n}{r+1}$ repair groups.\nChoose arbitrary $\\Gamma = n-k-\\Big\\lceil\\frac{k}{r}\\Big\\rceil+1$ columns from $H$, where $\\Gamma = r_{u_1}+r_{u_2}+\\cdots+r_{u_v}+\\cdots+r_{u_w}$, $v \\in [1,l], 1\\leq r_{u_v} \\leq r+1.$ And every $r_{u_v}$ columns are from the $v$th repair group. Without loss of generality, assume every $r_{u_v}$ columns are the first $r_{u_v}$ columns of the $v$th repair group.  Denote these $\\Gamma$ columns as $H'$.\n \n", "itemtype": "equation", "pos": 57622, "prevtext": "\nThus\n\n", "index": 35, "text": "\\begin{equation}\n\\sum_{i \\in [1,l]} \\left [\\sum_{ m_i \\in [1,r]\\setminus w_i} c_{i,m_i} \\cdot  (\\alpha_{i,m_i} - \\alpha_{i,r+1}) - \\left (\\sum_{ m_i \\in [1,r+1]\\setminus w_i} c_{i,m_i}\\right )\\cdot(\\alpha_{i,w_i} - \\alpha_{i,r+1})\\right ] = 0.\n\\label{coef}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E14.m1\" class=\"ltx_Math\" alttext=\"\\sum_{i\\in[1,l]}\\left[\\sum_{m_{i}\\in[1,r]\\setminus w_{i}}c_{i,m_{i}}\\cdot(%&#10;\\alpha_{i,m_{i}}-\\alpha_{i,r+1})-\\left(\\sum_{m_{i}\\in[1,r+1]\\setminus w_{i}}c_%&#10;{i,m_{i}}\\right)\\cdot(\\alpha_{i,w_{i}}-\\alpha_{i,r+1})\\right]=0.\" display=\"block\"><mrow><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo>,</mo><mi>l</mi><mo stretchy=\"false\">]</mo></mrow></mrow></munder><mrow><mo>[</mo><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><msub><mi>m</mi><mi>i</mi></msub><mo>\u2208</mo><mrow><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo>,</mo><mi>r</mi><mo stretchy=\"false\">]</mo></mrow><mo>\u2216</mo><msub><mi>w</mi><mi>i</mi></msub></mrow></mrow></munder><mrow><msub><mi>c</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></msub><mo>\u22c5</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></msub><mo>-</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>-</mo><mrow><mrow><mo>(</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><msub><mi>m</mi><mi>i</mi></msub><mo>\u2208</mo><mrow><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">]</mo></mrow><mo>\u2216</mo><msub><mi>w</mi><mi>i</mi></msub></mrow></mrow></munder><msub><mi>c</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>m</mi><mi>i</mi></msub></mrow></msub></mrow><mo>)</mo></mrow><mo>\u22c5</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><msub><mi>w</mi><mi>i</mi></msub></mrow></msub><mo>-</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>,</mo><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>]</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\n\nLet $\\Lambda$ is the number of rows which the non-zero elements of $H'$ lie in. By the proof of Theorem \\ref{thm:necessary-condition}, we know that  $\\Lambda \\geq n-k-\\Big\\lceil\\frac{k}{r}\\Big\\rceil+1$. By eliminating the all-zero rows and the last $\\Lambda - (n-k-\\Big\\lceil\\frac{k}{r}\\Big\\rceil+1)$ rows, we obtain a square matrix. Then we proceed with column transformation as follows. If more than one columns are from the same repair group, i.e., $r_{u_v} > 1$, we subtract the first $r_{u_v} - 1$ columns by the $r_{u_v}th$ column to eliminate the ones in the first non-zero row. Then we get a square matrix.\n\n", "itemtype": "equation", "pos": 58859, "prevtext": "\nSince there is non-zero coefficient in $\\{c_{i,m_i}, i \\in [1,l] , m_i \\in [1,r+1]\\setminus w_i\\}$, the coefficients of $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\}$ in (\\ref{coef}) are not all zero. Thus $\\{\\alpha_{i,j} - \\alpha_{i,r+1}, i \\in [1,l], j \\in [1,r]\\} $ are linearly dependent over $F_q$, which leads to a contradiction and the conclusion follows.\n\\end{proof}\n\n\n\n\n\n\n\\subsection*{Proof of Lemma \\ref{lemma:poly-min-dist}}\n\\begin{proof}\nThe columns of the parity-check matrix $H$ are divided into $l=\\frac{n}{r+1}$ repair groups.\nChoose arbitrary $\\Gamma = n-k-\\Big\\lceil\\frac{k}{r}\\Big\\rceil+1$ columns from $H$, where $\\Gamma = r_{u_1}+r_{u_2}+\\cdots+r_{u_v}+\\cdots+r_{u_w}$, $v \\in [1,l], 1\\leq r_{u_v} \\leq r+1.$ And every $r_{u_v}$ columns are from the $v$th repair group. Without loss of generality, assume every $r_{u_v}$ columns are the first $r_{u_v}$ columns of the $v$th repair group.  Denote these $\\Gamma$ columns as $H'$.\n \n", "index": 37, "text": "\\begin{equation*}\n\\label{paritycheckmatrix}\nH' =\n  \\left(\n  \\begin{array}{cccc|c|cccc|c|cccc}\n    1&1&\\cdots&1&\\cdots&0&0&\\cdots&0&\\cdots&0&\\cdots&0\\\\\n    0&0&\\cdots&0&\\cdots&1&1&\\cdots&1&\\cdots&0&\\cdots&0\\\\\n    0&0&\\cdots&0&\\cdots&0&0&\\cdots&0&\\cdots&1&\\cdots&1\\\\\n    0&0&\\cdots&0&\\cdots&0&0&\\cdots&0&\\cdots&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    \\alpha_{1,1}&\\alpha_{1,2}&\\cdots&\\alpha_{1,r_{u_1}}&\\cdots&\\alpha_{v,1}&\\alpha_{v,2}&\\cdots&\\alpha_{v,r_{u_v}}&\\cdots&\\alpha_{w,1}&\\cdots&\\alpha_{w,r_{u_w}}\\\\\n    \\alpha_{1,1}^{q}&\\alpha_{1,2}^{q}&\\cdots&\\alpha_{1,r_{u_1}}^{q}&\\cdots&\\alpha_{v,1}^{q}&\\alpha_{v,2}^{q}&\\cdots&\\alpha_{v,r_{u_v}}^{q}&\\cdots&\\alpha_{w,1}^{q}&\\cdots&\\alpha_{w,r_{u_w}}^{q}\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    \\alpha_{1,1}^{q^s}&\\alpha_{1,2}^{q^s}&\\cdots&\\alpha_{1,r_{u_1}}^{q^s}&\\cdots&\\alpha_{v,1}^{q^s}&\\alpha_{v,2}^{q^s}&\\cdots&\\alpha_{v,r_{u_v}}^{q^s}&\\cdots&\\alpha_{w,1}^{q^s}&\\cdots&\\alpha_{w,r_{u_w}}^{q^s}\\\\\n  \\end{array}\n\\right)\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"H^{\\prime}=\\left(\\begin{array}[]{cccc|c|cccc|c|cccc}1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;0&amp;%&#10;\\cdots&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;1&amp;\\cdots&amp;1&amp;\\cdots&amp;0&amp;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;1&amp;\\cdots&amp;1\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;\\alpha_{1,1}&amp;\\alpha_{1,2}&amp;\\cdots&amp;\\alpha_{1,r_{u_{1}}}&amp;\\cdots&amp;\\alpha_{v,1}&amp;%&#10;\\alpha_{v,2}&amp;\\cdots&amp;\\alpha_{v,r_{u_{v}}}&amp;\\cdots&amp;\\alpha_{w,1}&amp;\\cdots&amp;\\alpha_{w,%&#10;r_{u_{w}}}\\\\&#10;\\alpha_{1,1}^{q}&amp;\\alpha_{1,2}^{q}&amp;\\cdots&amp;\\alpha_{1,r_{u_{1}}}^{q}&amp;\\cdots&amp;%&#10;\\alpha_{v,1}^{q}&amp;\\alpha_{v,2}^{q}&amp;\\cdots&amp;\\alpha_{v,r_{u_{v}}}^{q}&amp;\\cdots&amp;%&#10;\\alpha_{w,1}^{q}&amp;\\cdots&amp;\\alpha_{w,r_{u_{w}}}^{q}\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots&amp;\\vdots\\\\&#10;\\alpha_{1,1}^{q^{s}}&amp;\\alpha_{1,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{1,r_{u_{1}}}^{q^{s}}&amp;%&#10;\\cdots&amp;\\alpha_{v,1}^{q^{s}}&amp;\\alpha_{v,2}^{q^{s}}&amp;\\cdots&amp;\\alpha_{v,r_{u_{v}}}^{%&#10;q^{s}}&amp;\\cdots&amp;\\alpha_{w,1}^{q^{s}}&amp;\\cdots&amp;\\alpha_{w,r_{u_{w}}}^{q^{s}}\\\\&#10;\\end{array}\\right)\" display=\"block\"><mrow><msup><mi>H</mi><mo>\u2032</mo></msup><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>1</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mn>0</mn></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mn>1</mn></msub></msub></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mi>v</mi></msub></msub></mrow></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>w</mi><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><mi>w</mi><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mi>w</mi></msub></msub></mrow></msub></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mn>1</mn></msub></msub></mrow><mi>q</mi></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><mn>2</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mi>v</mi></msub></msub></mrow><mi>q</mi></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>w</mi><mo>,</mo><mn>1</mn></mrow><mi>q</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>w</mi><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mi>w</mi></msub></msub></mrow><mi>q</mi></msubsup></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd/></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mn>1</mn><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mn>1</mn></msub></msub></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><mn>2</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>v</mi><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mi>v</mi></msub></msub></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>w</mi><mo>,</mo><mn>1</mn></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><mi>w</mi><mo>,</mo><msub><mi>r</mi><msub><mi>u</mi><mi>w</mi></msub></msub></mrow><msup><mi>q</mi><mi>s</mi></msup></msubsup></mtd><mtd/></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nThen we obtain the determinant by expansion along the rows with only the component 1 as\n\n", "itemtype": "equation", "pos": 60598, "prevtext": "\n\nLet $\\Lambda$ is the number of rows which the non-zero elements of $H'$ lie in. By the proof of Theorem \\ref{thm:necessary-condition}, we know that  $\\Lambda \\geq n-k-\\Big\\lceil\\frac{k}{r}\\Big\\rceil+1$. By eliminating the all-zero rows and the last $\\Lambda - (n-k-\\Big\\lceil\\frac{k}{r}\\Big\\rceil+1)$ rows, we obtain a square matrix. Then we proceed with column transformation as follows. If more than one columns are from the same repair group, i.e., $r_{u_v} > 1$, we subtract the first $r_{u_v} - 1$ columns by the $r_{u_v}th$ column to eliminate the ones in the first non-zero row. Then we get a square matrix.\n\n", "index": 39, "text": "\\begin{equation*}\n M =\n \\begin{pmatrix}\n  \\begin{smallmatrix}\n    0&0&\\cdots&\\bm{1}&\\cdots&0&\\cdots&0&\\cdots&0&\\cdots&0\\\\\n    0&0&\\cdots&0&\\cdots&0&\\cdots&\\bm{1}&\\cdots&0&\\cdots&0\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    0&0&\\cdots&0&\\cdots&0&\\cdots&0&\\cdots&0&\\cdots&\\bm{1}\\\\\n    \\alpha_{1,1}-\\alpha_{1,r_{u_1}}&\\alpha_{1,2}-\\alpha_{1,r_{u_1}}&\\cdots&\\bm{\\alpha_{1,r_{u_1}}}&\\cdots&\\alpha_{v,1}-\\alpha_{v,r_{u_v}}&\\cdots&\\bm{\\alpha_{v,r_{u_v}}}&\\cdots&\\alpha_{w,1}-\\alpha_{w,r_{u_w}}&\\cdots&\\bm{\\alpha_{w,r_{u_w}}}\\\\\n    (\\alpha_{1,1}-\\alpha_{1,r_{u_1}})^{q}&(\\alpha_{1,2}-\\alpha_{1,r_{u_1}})^{q}&\\cdots&\\bm{\\alpha_{1,r_{u_1}}^{q}}&\\cdots&(\\alpha_{v,1}-\\alpha_{v,r_{u_v}})^{q}&\\cdots&\\bm{\\alpha_{v,r_{u_v}}^{q}}&\\cdots&(\\alpha_{w,1}-\\alpha_{w,r_{u_w}})^{q}&\\cdots&\\bm{\\alpha_{w,r_{u_w}}^{q}}\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    (\\alpha_{1,1}-\\alpha_{1,r_{u_1}})^{q^{t}}&(\\alpha_{1,2}-\\alpha_{1,r_{u_1}})^{q^{t}}&\\cdots&\\bm{\\alpha_{1,r_{u_1}}^{q^{t}}}&\\cdots&(\\alpha_{v,1}-\\alpha_{v,r_{u_v}})^{q^t}&\\cdots&\\bm{\\alpha_{v,r_{u_v}}^{q^{t}}}&\\cdots&(\\alpha_{w,1}-\\alpha_{w,r_{u_w}})^{q^{t}}&\\cdots&\\bm{\\alpha_{w,r_{u_w}}^{q^{t}}}\\\\\n  \\end{smallmatrix}\n \\end{pmatrix}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"M=\\begin{pmatrix}\\begin{smallmatrix}0&amp;0&amp;\\cdots&amp;\\bm{1}&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;\\cdots%&#10;&amp;0&amp;\\cdots&amp;0\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;\\bm{1}&amp;\\cdots&amp;0&amp;\\cdots&amp;0\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots\\\\&#10;0&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;0&amp;\\cdots&amp;\\bm{1}\\\\&#10;\\alpha_{1,1}-\\alpha_{1,r_{u_{1}}}&amp;\\alpha_{1,2}-\\alpha_{1,r_{u_{1}}}&amp;\\cdots&amp;\\bm%&#10;{\\alpha_{1,r_{u_{1}}}}&amp;\\cdots&amp;\\alpha_{v,1}-\\alpha_{v,r_{u_{v}}}&amp;\\cdots&amp;\\bm{%&#10;\\alpha_{v,r_{u_{v}}}}&amp;\\cdots&amp;\\alpha_{w,1}-\\alpha_{w,r_{u_{w}}}&amp;\\cdots&amp;\\bm{%&#10;\\alpha_{w,r_{u_{w}}}}\\\\&#10;(\\alpha_{1,1}-\\alpha_{1,r_{u_{1}}})^{q}&amp;(\\alpha_{1,2}-\\alpha_{1,r_{u_{1}}})^{q%&#10;}&amp;\\cdots&amp;\\bm{\\alpha_{1,r_{u_{1}}}^{q}}&amp;\\cdots&amp;(\\alpha_{v,1}-\\alpha_{v,r_{u_{v}%&#10;}})^{q}&amp;\\cdots&amp;\\bm{\\alpha_{v,r_{u_{v}}}^{q}}&amp;\\cdots&amp;(\\alpha_{w,1}-\\alpha_{w,r_%&#10;{u_{w}}})^{q}&amp;\\cdots&amp;\\bm{\\alpha_{w,r_{u_{w}}}^{q}}\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;%&#10;\\vdots\\\\&#10;(\\alpha_{1,1}-\\alpha_{1,r_{u_{1}}})^{q^{t}}&amp;(\\alpha_{1,2}-\\alpha_{1,r_{u_{1}}}%&#10;)^{q^{t}}&amp;\\cdots&amp;\\bm{\\alpha_{1,r_{u_{1}}}^{q^{t}}}&amp;\\cdots&amp;(\\alpha_{v,1}-\\alpha%&#10;_{v,r_{u_{v}}})^{q^{t}}&amp;\\cdots&amp;\\bm{\\alpha_{v,r_{u_{v}}}^{q^{t}}}&amp;\\cdots&amp;(%&#10;\\alpha_{w,1}-\\alpha_{w,r_{u_{w}}})^{q^{t}}&amp;\\cdots&amp;\\bm{\\alpha_{w,r_{u_{w}}}^{q^%&#10;{t}}}\\\\&#10;\\end{smallmatrix}\\end{pmatrix}\" display=\"block\"><mrow><mi>M</mi><mo>=</mo><mrow><mo>(</mo><mtable displaystyle=\"true\"><mtr><mtd columnalign=\"center\"><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">\ud835\udfcf</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">\ud835\udfcf</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">0</mn></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mn mathsize=\"70%\">\ud835\udfcf</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">2</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mn mathsize=\"70%\">\ud835\udfcf</mn><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mn mathsize=\"70%\">\ud835\udfcf</mn></msub></msub></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">v</mi></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mi mathsize=\"70%\">\ud835\udc97</mi><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mi mathsize=\"70%\">\ud835\udc97</mi></msub></msub></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">w</mi></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mi mathsize=\"70%\">\ud835\udc98</mi><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mi mathsize=\"70%\">\ud835\udc98</mi></msub></msub></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">2</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mn mathsize=\"70%\">\ud835\udfcf</mn><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mn mathsize=\"70%\">\ud835\udfcf</mn></msub></msub></mrow><mi mathsize=\"70%\">\ud835\udc92</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">v</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mi mathsize=\"70%\">\ud835\udc97</mi><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mi mathsize=\"70%\">\ud835\udc97</mi></msub></msub></mrow><mi mathsize=\"70%\">\ud835\udc92</mi></msubsup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">w</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mi mathsize=\"70%\">\ud835\udc98</mi><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mi mathsize=\"70%\">\ud835\udc98</mi></msub></msub></mrow><mi mathsize=\"70%\">\ud835\udc92</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><mi mathsize=\"70%\">t</mi></msup></msup></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">2</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><mi mathsize=\"70%\">t</mi></msup></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mn mathsize=\"70%\">\ud835\udfcf</mn><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mn mathsize=\"70%\">\ud835\udfcf</mn></msub></msub></mrow><msup><mi mathsize=\"70%\">\ud835\udc92</mi><mi mathsize=\"70%\">\ud835\udc95</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">v</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><mi mathsize=\"70%\">t</mi></msup></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mi mathsize=\"70%\">\ud835\udc97</mi><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mi mathsize=\"70%\">\ud835\udc97</mi></msub></msub></mrow><msup><mi mathsize=\"70%\">\ud835\udc92</mi><mi mathsize=\"70%\">\ud835\udc95</mi></msup></msubsup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">w</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><mi mathsize=\"70%\">t</mi></msup></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msubsup><mi mathsize=\"70%\">\ud835\udf36</mi><mrow><mi mathsize=\"70%\">\ud835\udc98</mi><mo mathsize=\"70%\" mathvariant=\"bold\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">\ud835\udc93</mi><msub><mi mathsize=\"70%\">\ud835\udc96</mi><mi mathsize=\"70%\">\ud835\udc98</mi></msub></msub></mrow><msup><mi mathsize=\"70%\">\ud835\udc92</mi><mi mathsize=\"70%\">\ud835\udc95</mi></msup></msubsup></mtd></mtr></mtable></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nBy Lemma \\ref{lemma:element-independent} we know that the elements in the first row of the above matrix are linear independent over $F_q$, which implies $|M| \\neq 0$. Hence, the columns in $M$ is linear independent, which implies those $n-k-\\left\\lceil\\frac{k}{r}\\right\\rceil+1$ columns in $H$ are linearly independent.\n\\end{proof}\n\n\n\n\n\n\n\\subsection*{Proof of Lemma \\ref{lemma:poly-dimension}}\n\\begin{proof}\nIt is sufficient to show that the  $(n-k)\\times n$  parity-check matrix $H$ has full rank. Choose $n-k$ columns from $H$, among which at least one column from each repair group. Then we get a $(n-k)\\times(n-k)$ square matrix. Similar to the proof of Lemma \\ref{lemma:poly-min-dist}, by column transformation and expansion along the rows with only the component 1, it remains  $(n-k-\\frac{n}{r+1}) \\times (n-k-\\frac{n}{r+1})$ square matrix whose determinant $\\neq 0$. Thus the $(n-k)\\times(n-k)$ square matrix has full rank, which implies that $H$ has full rank.\n\\end{proof}\n\n\n\n\n\n\\subsection*{Proof of Theorem \\ref{thm:two-rows}}\n\\begin{proof}\nChoose one column from each of $l$ repair groups and additional two columns from the first repair group, we get an $(l+2)\\times(l+2)$ matrix $M$. These columns have full rank, which implies the rows of $M$ have full rank. Thus $H$ is full rank.\n\nWhen $r\\geq 3 $, there exist $4$ columns which are linearly dependent, e.g., the last $4$ columns. Choose arbitrary $3$ columns from $H$, there are $3$ cases: all three columns are from one repair group, one column from a group and the other two from another group, three columns are from different groups. Apparently these $3$ columns are independent. Thus $d=4$. According to Theorem \\ref{thm:singleton-bound},\n\n", "itemtype": "equation", "pos": 61973, "prevtext": "\nThen we obtain the determinant by expansion along the rows with only the component 1 as\n\n", "index": 41, "text": "\\begin{equation*}\n |M| = (\\pm 1)\\cdot\n \\begin{pmatrix}\n  \\begin{smallmatrix}\n    \\alpha_{1,1}-\\alpha_{1,r_{u_1}}&\\alpha_{1,2}-\\alpha_{1,r_{u_1}}&\\cdots&\\alpha_{v,1}-\\alpha_{v,r_{u_v}}&\\cdots&\\alpha_{w,1}-\\alpha_{w,r_{u_w}}&\\cdots&\\\\\n    (\\alpha_{1,1}-\\alpha_{1,r_{u_1}})^{q}&(\\alpha_{1,2}-\\alpha_{1,r_{u_1}})^{q}&\\cdots&(\\alpha_{v,1}-\\alpha_{v,r_{u_v}})^{q}&\\cdots&(\\alpha_{w,1}-\\alpha_{w,r_{u_w}})^{q}&\\cdots\\\\\n    \\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\vdots\\\\\n    (\\alpha_{1,1}-\\alpha_{1,r_{u_1}})^{q^{s'}}&(\\alpha_{1,2}-\\alpha_{1,r_{u_1}})^{q^{s'}}&\\cdots&(\\alpha_{v,1}-\\alpha_{v,r_{u_v}})^{q^s}&\\cdots&(\\alpha_{w,1}-\\alpha_{w,r_{u_w}})^{q^{s'}}&\\cdots\\\\\n  \\end{smallmatrix}\n \\end{pmatrix}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"|M|=(\\pm 1)\\cdot\\begin{pmatrix}\\begin{smallmatrix}\\alpha_{1,1}-\\alpha_{1,r_{u_%&#10;{1}}}&amp;\\alpha_{1,2}-\\alpha_{1,r_{u_{1}}}&amp;\\cdots&amp;\\alpha_{v,1}-\\alpha_{v,r_{u_{v}%&#10;}}&amp;\\cdots&amp;\\alpha_{w,1}-\\alpha_{w,r_{u_{w}}}&amp;\\cdots&amp;\\\\&#10;(\\alpha_{1,1}-\\alpha_{1,r_{u_{1}}})^{q}&amp;(\\alpha_{1,2}-\\alpha_{1,r_{u_{1}}})^{q%&#10;}&amp;\\cdots&amp;(\\alpha_{v,1}-\\alpha_{v,r_{u_{v}}})^{q}&amp;\\cdots&amp;(\\alpha_{w,1}-\\alpha_{%&#10;w,r_{u_{w}}})^{q}&amp;\\cdots\\\\&#10;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots&amp;\\vdots\\\\&#10;(\\alpha_{1,1}-\\alpha_{1,r_{u_{1}}})^{q^{s^{\\prime}}}&amp;(\\alpha_{1,2}-\\alpha_{1,r%&#10;_{u_{1}}})^{q^{s^{\\prime}}}&amp;\\cdots&amp;(\\alpha_{v,1}-\\alpha_{v,r_{u_{v}}})^{q^{s}}%&#10;&amp;\\cdots&amp;(\\alpha_{w,1}-\\alpha_{w,r_{u_{w}}})^{q^{s^{\\prime}}}&amp;\\cdots\\\\&#10;\\end{smallmatrix}\\end{pmatrix}\" display=\"block\"><mrow><mrow><mo stretchy=\"false\">|</mo><mi>M</mi><mo stretchy=\"false\">|</mo></mrow><mo>=</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u00b1</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u22c5</mo><mrow><mo>(</mo><mtable displaystyle=\"true\"><mtr><mtd columnalign=\"center\"><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">2</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">v</mi></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">w</mi></msub></msub></mrow></msub></mrow></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mi/></mtd></mtr><mtr><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">2</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">v</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">w</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><mi mathsize=\"70%\">q</mi></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><msup><mi mathsize=\"70%\">s</mi><mo mathsize=\"70%\" stretchy=\"false\">\u2032</mo></msup></msup></msup></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">2</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mn mathsize=\"70%\">1</mn><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mn mathsize=\"70%\">1</mn></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><msup><mi mathsize=\"70%\">s</mi><mo mathsize=\"70%\" stretchy=\"false\">\u2032</mo></msup></msup></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">v</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">v</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><mi mathsize=\"70%\">s</mi></msup></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msup><mrow><mo maxsize=\"70%\" minsize=\"70%\">(</mo><mrow><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><mn mathsize=\"70%\">1</mn></mrow></msub><mo mathsize=\"70%\" stretchy=\"false\">-</mo><msub><mi mathsize=\"70%\">\u03b1</mi><mrow><mi mathsize=\"70%\">w</mi><mo mathsize=\"70%\" stretchy=\"false\">,</mo><msub><mi mathsize=\"70%\">r</mi><msub><mi mathsize=\"70%\">u</mi><mi mathsize=\"70%\">w</mi></msub></msub></mrow></msub></mrow><mo maxsize=\"70%\" minsize=\"70%\">)</mo></mrow><msup><mi mathsize=\"70%\">q</mi><msup><mi mathsize=\"70%\">s</mi><mo mathsize=\"70%\" stretchy=\"false\">\u2032</mo></msup></msup></msup></mtd><mtd columnalign=\"center\"><mi mathsize=\"70%\" mathvariant=\"normal\">\u22ef</mi></mtd></mtr></mtable></mtd></mtr></mtable><mo>)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nwhich implies that the code is optimal.\n\\end{proof}\n\n\n\n\n\n\\subsection*{Proof of Theorem \\ref{thm:three-rows}}\n\\begin{proof}\nSimilar to proof of Theorem \\ref{thm:two-rows}, it is easy to see that $H$ is full rank. When $r\\geq 4 $, there exist $5$ columns which are linearly dependent, e.g., the last $5$ columns. Choose arbitrary $4$ columns from $H$, there are $5$ cases: all four columns are from one repair group, all four columns are from different groups, one column from a group and the other three from another group, two columns from a group and the other two from other two groups, two columns from a group and the other two from another group. Apparently in the first $4$ cases, these $4$ columns are independent. For the last case, without loss of generality, we choose two columns from the group  $i_1$, and the other two columns from the group $i_2$. By eliminating the all-zero rows in these four columns and the last row, we get a square matrix\n\n", "itemtype": "equation", "pos": 64397, "prevtext": "\nBy Lemma \\ref{lemma:element-independent} we know that the elements in the first row of the above matrix are linear independent over $F_q$, which implies $|M| \\neq 0$. Hence, the columns in $M$ is linear independent, which implies those $n-k-\\left\\lceil\\frac{k}{r}\\right\\rceil+1$ columns in $H$ are linearly independent.\n\\end{proof}\n\n\n\n\n\n\n\\subsection*{Proof of Lemma \\ref{lemma:poly-dimension}}\n\\begin{proof}\nIt is sufficient to show that the  $(n-k)\\times n$  parity-check matrix $H$ has full rank. Choose $n-k$ columns from $H$, among which at least one column from each repair group. Then we get a $(n-k)\\times(n-k)$ square matrix. Similar to the proof of Lemma \\ref{lemma:poly-min-dist}, by column transformation and expansion along the rows with only the component 1, it remains  $(n-k-\\frac{n}{r+1}) \\times (n-k-\\frac{n}{r+1})$ square matrix whose determinant $\\neq 0$. Thus the $(n-k)\\times(n-k)$ square matrix has full rank, which implies that $H$ has full rank.\n\\end{proof}\n\n\n\n\n\n\\subsection*{Proof of Theorem \\ref{thm:two-rows}}\n\\begin{proof}\nChoose one column from each of $l$ repair groups and additional two columns from the first repair group, we get an $(l+2)\\times(l+2)$ matrix $M$. These columns have full rank, which implies the rows of $M$ have full rank. Thus $H$ is full rank.\n\nWhen $r\\geq 3 $, there exist $4$ columns which are linearly dependent, e.g., the last $4$ columns. Choose arbitrary $3$ columns from $H$, there are $3$ cases: all three columns are from one repair group, one column from a group and the other two from another group, three columns are from different groups. Apparently these $3$ columns are independent. Thus $d=4$. According to Theorem \\ref{thm:singleton-bound},\n\n", "index": 43, "text": "\\begin{equation}\nd\\leq n-k- \\left\\lceil\\frac{k}{r} \\right\\rceil + 2 = \\frac{n}{r+1}+2 - \\left\\lceil\\frac{n-\\frac{n}{r+1}-2}{r} \\right\\rceil + 2 = 4,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E15.m1\" class=\"ltx_Math\" alttext=\"d\\leq n-k-\\left\\lceil\\frac{k}{r}\\right\\rceil+2=\\frac{n}{r+1}+2-\\left\\lceil%&#10;\\frac{n-\\frac{n}{r+1}-2}{r}\\right\\rceil+2=4,\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi><mo>-</mo><mrow><mo>\u2308</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow><mo>=</mo><mrow><mrow><mrow><mfrac><mi>n</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>+</mo><mn>2</mn></mrow><mo>-</mo><mrow><mo>\u2308</mo><mfrac><mrow><mi>n</mi><mo>-</mo><mfrac><mi>n</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>-</mo><mn>2</mn></mrow><mi>r</mi></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow><mo>=</mo><mn>4</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nThe determinant $|M| = (\\alpha_{i_1,j_1}-\\alpha_{i_1,j_2})(\\alpha_{i_2,h_1}-\\alpha_{i_2,h_2})[(\\alpha_{i_1,j_1}+\\alpha_{i_1,j_2})-(\\alpha_{i_2,h_1}+\\alpha_{i_2,h_2})] \\neq 0$, or the columns in $M$ are linearly independent, which implies that the corresponding four columns in $H$ are independent. Thus $d=5$. According to Theorem \\ref{thm:singleton-bound},\n\n", "itemtype": "equation", "pos": 65519, "prevtext": "\nwhich implies that the code is optimal.\n\\end{proof}\n\n\n\n\n\n\\subsection*{Proof of Theorem \\ref{thm:three-rows}}\n\\begin{proof}\nSimilar to proof of Theorem \\ref{thm:two-rows}, it is easy to see that $H$ is full rank. When $r\\geq 4 $, there exist $5$ columns which are linearly dependent, e.g., the last $5$ columns. Choose arbitrary $4$ columns from $H$, there are $5$ cases: all four columns are from one repair group, all four columns are from different groups, one column from a group and the other three from another group, two columns from a group and the other two from other two groups, two columns from a group and the other two from another group. Apparently in the first $4$ cases, these $4$ columns are independent. For the last case, without loss of generality, we choose two columns from the group  $i_1$, and the other two columns from the group $i_2$. By eliminating the all-zero rows in these four columns and the last row, we get a square matrix\n\n", "index": 45, "text": "\\begin{equation}\nM =\n  \\left(\n  \\begin{array}{cccc}\n    1&1&0&0\\\\\n    0&0&1&1\\\\\n    \\alpha_{i_1,j_1}&\\alpha_{i_1,j_2}&\\alpha_{i_2,h_1}&\\alpha_{i_2,h_2}\\\\\n    \\alpha_{i_1,j_1}^{2}&\\alpha_{i_1,j_2}^{2}&\\alpha_{i_2,h_1}^{2}&\\alpha_{i_2,h_2}^{2}\\\\\n \\end{array}\n\\right)\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E16.m1\" class=\"ltx_Math\" alttext=\"M=\\left(\\begin{array}[]{cccc}1&amp;1&amp;0&amp;0\\\\&#10;0&amp;0&amp;1&amp;1\\\\&#10;\\alpha_{i_{1},j_{1}}&amp;\\alpha_{i_{1},j_{2}}&amp;\\alpha_{i_{2},h_{1}}&amp;\\alpha_{i_{2},h%&#10;_{2}}\\\\&#10;\\alpha_{i_{1},j_{1}}^{2}&amp;\\alpha_{i_{1},j_{2}}^{2}&amp;\\alpha_{i_{2},h_{1}}^{2}&amp;%&#10;\\alpha_{i_{2},h_{2}}^{2}\\\\&#10;\\end{array}\\right)\" display=\"block\"><mrow><mi>M</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>1</mn></msub><mo>,</mo><msub><mi>j</mi><mn>1</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>1</mn></msub><mo>,</mo><msub><mi>j</mi><mn>2</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>2</mn></msub><mo>,</mo><msub><mi>h</mi><mn>1</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>2</mn></msub><mo>,</mo><msub><mi>h</mi><mn>2</mn></msub></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>1</mn></msub><mo>,</mo><msub><mi>j</mi><mn>1</mn></msub></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>1</mn></msub><mo>,</mo><msub><mi>j</mi><mn>2</mn></msub></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>2</mn></msub><mo>,</mo><msub><mi>h</mi><mn>1</mn></msub></mrow><mn>2</mn></msubsup></mtd><mtd columnalign=\"center\"><msubsup><mi>\u03b1</mi><mrow><msub><mi>i</mi><mn>2</mn></msub><mo>,</mo><msub><mi>h</mi><mn>2</mn></msub></mrow><mn>2</mn></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05595.tex", "nexttext": "\nwhich implies that the code is optimal.\n\\end{proof}\n\n", "itemtype": "equation", "pos": 66157, "prevtext": "\nThe determinant $|M| = (\\alpha_{i_1,j_1}-\\alpha_{i_1,j_2})(\\alpha_{i_2,h_1}-\\alpha_{i_2,h_2})[(\\alpha_{i_1,j_1}+\\alpha_{i_1,j_2})-(\\alpha_{i_2,h_1}+\\alpha_{i_2,h_2})] \\neq 0$, or the columns in $M$ are linearly independent, which implies that the corresponding four columns in $H$ are independent. Thus $d=5$. According to Theorem \\ref{thm:singleton-bound},\n\n", "index": 47, "text": "\\begin{equation}\nd\\leq n-k- \\left\\lceil\\frac{k}{r} \\right\\rceil + 2 = \\frac{n}{r+1}+3 - \\left\\lceil\\frac{n-\\frac{n}{r+1}-3}{r} \\right\\rceil + 2 = 5,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E17.m1\" class=\"ltx_Math\" alttext=\"d\\leq n-k-\\left\\lceil\\frac{k}{r}\\right\\rceil+2=\\frac{n}{r+1}+3-\\left\\lceil%&#10;\\frac{n-\\frac{n}{r+1}-3}{r}\\right\\rceil+2=5,\" display=\"block\"><mrow><mrow><mi>d</mi><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi><mo>-</mo><mrow><mo>\u2308</mo><mfrac><mi>k</mi><mi>r</mi></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow><mo>=</mo><mrow><mrow><mrow><mfrac><mi>n</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>+</mo><mn>3</mn></mrow><mo>-</mo><mrow><mo>\u2308</mo><mfrac><mrow><mi>n</mi><mo>-</mo><mfrac><mi>n</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>-</mo><mn>3</mn></mrow><mi>r</mi></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow><mo>=</mo><mn>5</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}]