[{"file": "1601.00479.tex", "nexttext": "\n\\end{lemma}\n\\begin{proof}\nIf $\\beta$ is equal to $0$, this claim is easy to verify.\nHowever, should $\\beta$ be greater than $0$, the geometric series $\\sum_{i=0}^{k-1}(1 - \\beta)^i$ and can be rewritten as $(1-(1-\\beta)^k)/\\beta$, which in turn implies that\n", "itemtype": "equation", "pos": 25531, "prevtext": "\n\n\\title{Motivating Time-Inconsistent Agents: A Computational Approach}\n\\author{Susanne Albers \\thanks{Department of Computer Science, Technische Universit\\\"at M\\\"unchen, 85748 Garching, \nGermany; {\\tt albers@in.tum.de}. Work supported by the German Research Foundation, project Al 464/7-1.}\\and \nDennis Kraft\\thanks{Department of Computer Science,Technische Universit\\\"at M\\\"unchen, 85748 Garching, Germany. \n{\\tt kraftd@in.tum.de} }}\n\\date{}\n\\maketitle\n\n\n\n\n\n\\begin{abstract}\nIn this paper we investigate the computational complexity of motivating time-inconsistent agents to complete long term projects.\nWe resort to an elegant graph-theoretic model, introduced by Kleinberg and Oren~\\cite{KO}, which consists of a task graph $G$ with $n$ vertices, including a source $s$ and target $t$, and an agent that incrementally constructs a path from $s$ to $t$ in order to collect rewards.\nThe twist is that the agent is present-biased and discounts future costs and rewards by a factor $\\beta\\in [0,1]$.\nOur design objective is to ensure that the agent reaches $t$ i.e.\\ completes the project, for as little reward as possible.\nSuch graphs are called motivating.\nWe consider two strategies.\n\nFirst, we place a single reward $r$ at $t$ and try to guide the agent by removing edges from $G$.\nWe prove that deciding the existence of such motivating subgraphs is NP-complete if $r$ is fixed.\nMore importantly, we generalize our reduction to a hardness of approximation result for computing the minimum $r$ that admits a motivating subgraph.\nIn particular, we show that no polynomial-time approximation to within a ratio of $\\sqrt{n}/4$ or less is possible, unless ${\\rm P}={\\rm NP}$.\nFurthermore, we develop a $(1+\\sqrt{n})$-approximation algorithm and thus settle the approximability of computing motivating subgraphs.\n\nSecondly, we study motivating reward configurations, where non-negative rewards $r(v)$ may be placed on arbitrary vertices $v$ of $G$.\nThe agent only receives the rewards of visited vertices.\nAgain we give an NP-completeness result for deciding the existence of a motivating reward configuration within a fixed budget $b$.\nThis result even holds if $b=0$, which in turn implies that no efficient approximation of a minimum $b$ within a ration grater or equal to $1$ is possible, unless ${\\rm P}={\\rm NP}$.\n\\end{abstract}\n\n\n\n\n\n\\section{Introduction}\nMotivated by a recent paper of Kleinberg and Oren~\\cite{KO}, we study the phenomenon of {\\em time-inconsistent behavior\\/} from a computer science perspective.\nThis fundamental problem in behavioral economics has many examples in every day life, including academia.\nConsider, for instance, a referee who agrees to evaluate a scientific proposal.\nDespite good intentions, the referee gets distracted and never submits a report.\nOr consider a student who enrolls in a course.\nAfter successfully completing the first couple of homework assignments the student drops out without earning any credit points.\nIn general, these situations have a reoccurring pattern.\nAn agent makes a plan to complete a set of tasks in the future but changes the plan at a later point in time.\nSometimes this is the result of unforeseen circumstances.\nHowever, in many cases the plan is changed or abandoned even if the circumstances are the same as when the plan was made.\nThis paradox behavior of {\\em procrastination\\/} and {\\em abandonment\\/} is well-known in the field of behavioral economics and can have substantial effects on the performance of agents in an economic or social domain, see e.g.~\\cite{A,DR1,DR2}.\n\nA sensible explanation for time-inconsistent behavior is that agents assign disproportionally greater value to current cost than to future expenses. \nAs an example, consider a simple {\\em car wash problem\\/} in which an agent, say Alice, is promised extra pocket money for washing her family's car.\nEach day Alice can either do the chore or postpone it to the next day.\nHowever, the longer she waits, the dirtier the car gets.\nAssume that washing the car on day $i$, with $i\\geq 1$, incurs a cost of $i/50$.\nThe cost of waiting another day is~$0$.\nAfter completion of the task, she will receive a reward of $1$ Euro from the family. \nAlice is present-biased, i.e.\\ she perceives current cost according to its true value but discounts future costs and rewards by a factor of $\\beta \\in [0,1]$. \nOn day $i$ she compares the cost of washing the car right away, which is $i/50$, to the perceived cost of washing it on the next day, which is $\\beta (i+1)/50$.\nSuppose that $\\beta = 1/3$. \nBecause $i/50>\\beta(i+1)/50$, she procrastinates with good intentions of doing the job on the following day.\nOn day $i=50$ Alice realizes that her perceived cost for washing the car on the next day, or any of the following days, is at least $\\beta (50+1)/50$, which exceeds the perceived value of $\\beta$.\nThus she abandons the project altogether.\n\n{\\bf Previous work:} In the economic literature there exists a considerable body of work on time-inconsistent behavior, cf.\\ again~\\cite{A,DR1,DR2}. \nWe build on work by Kleinberg and Oren~\\cite{KO} who propose a graph-theoretic model that elegantly captures the phenomena of procrastination and abandonment as observed in the car wash problem.\nWe will formally define the model in Section~\\ref{sec:model}.\nEssentially, it consists of a directed acyclic graph $G$ with $n$ vertices that models a long term project.\nAn agent, with bias factor $\\beta\\in[0,1]$, incrementally constructs a path from a designated source $s$ to a target $t$.\nThe edges of $G$, which represent the individual tasks of the project, are assigned non-negative costs.\nThe vertices, except for $s$ and $t$, correspond to intermediate states of the project.\nWhen located at a vertex $v$, the agent chooses a path $P$ from $v$ to $t$ that minimizes its {\\em perceived cost\\/}. \nThis means, the agent accounts for the first edge of $P$ by its true cost, whereas all remaining edges are discounted by $\\beta$.\n\nKleinberg and Oren~\\cite{KO} first investigating structural properties of $G$ under the assumption that the agent must not abandon the project.\nIn particular, they characterize task graphs in which the ratio between the total cost of a path traversed by the agent and the minimum cost of a path from $s$ to $t$ is exponential in $n$.\nInterestingly, any such graph, after removing the direction of its edges, must contain a {\\em $k$-fan\\/}, with $k \\in \\mathcal{O}(n)$, as a minor.\nFurthermore, Kleinberg and Oren analyze the number of different paths traversed the agent as $\\beta$ varies between~$0$ and $1$.\nThey show that this number is in $\\mathcal{O}(n^2)$.\nThe later result requires a consistent tie-breaking rule should the agent be indifferent between outgoing edges of the same vertex.\n\nNext, Kleinberg and Oren~\\cite{KO} assume that the agent is free to abandon the project and place a reward $r$ at $t$ as to motivate it to finish.\nWhen located at $v$, the agent continues to follow a path that minimizes its perceived cost as long as it does not exceed the perceived value of the reward.\nA graph in which the agent always successfully traverses a path from $s$ to $t$ is called {\\em motivating\\/} .\nKleinberg and Oren~\\cite{KO} are interested in finding motivating subgraphs, by removing edges from $G$.\nThe authors present structural properties that any motivating subgraph with a minimal number of edges must satisfy. \n\nFinally, Kleinberg and Oren~\\cite{KO} point to a number of open computational problems, including the complexity of finding motivating subgraphs.\nMoreover, Kleinberg and Oren propose a problem setting in which rewards may be placed at intermediate vertices instead of just $t$.\nIn this case $G$ may not be pruned.\nWe call such a construct a {\\em reward configuration}.\n\nIn an unpublished manuscript Tang et al.~\\cite{TT} address some of the open problems. \nThey refine the result on the cost ratio, which relates the path traversed by the agent to a cheapest path.\nMore specifically, they show that any task graph that does not contain a $k$-fan as minor after removing the direction of its edges must have a cost ratio of at most $\\beta^{2-k}$.\nHence, for any fixed $k$, the cost ratio is constant in $n$.\nMoreover, Tang et al. prove that it is NP-hard to decide if $G$ contains a motivating subgraph for a fixed reward.\nFinally, they explore the problem of deciding the existence of a motivating reward configuration within a given budget.\nTang et al. give NP-hardness results for three variations of the problem.\nThey distinguish between configurations that are restricted to non-negative rewards and configurations that allow for any real-valued rewards.\nFurthermore, they consider a setting in which every reward that is laid out on $G$ must also be collected.\nIn each of the three problem variations, Tang et al. measure the total value of a configuration by the sum of the absolute values of all rewards placed on $G$.\n\n{\\bf Our contribution:} In this paper we focus on the complexity and approximability of finding motivating subgraphs and reward configurations.\nOur objective is budget efficiency.\nNote that we take a design perspective.\nIn particular, we are not interested in minimizing the total cost experienced by the agent on its walk from $s$ to $t$ but rather the reward necessary to motivate the agent.\n\nAs for the first problem, by removing edges from $G$, it is possible to limit the agent's options in each of its steps.\nIdeally, this prevents the agent from pursuing costly distractions and thereby reduces the reward required for it to finish the project.\nThe benefit of choice reduction is a well-known phenomenon in the field of behavioral economics.\nIt also has a very natural intuition in many real-live projects.\nTake for instance the car wash problem.\nAs we will show in Section~\\ref{sec:model}, the removal of edges in the problem's task graph corresponds to the introduction of deadlines.\n\nThe second problem takes a slightly less restrictive approach and allows the placement of intermediate rewards at arbitrary vertices of $G$.\nAgain this is meant to prevent the agent from pursuing distractions and encourage it to complete the project. \nWe examine a version of the problem that, in our view, is the most sensible one. \nFirst, only non-negative rewards may be laid out.\nThis assumption is reasonable as it could be hard to convince an agent to pursue projects in which it has to make payments.\nFurthermore, it is not clear how to account for such payments in the budget.\nSecondly, the cost of a reward configuration is only measured by the sum of the rewards that are placed at vertice visited by the agent on its walk from $s$ to $t$.\nThis setting is a fundamentally different from the ones analyzed by Tang et al. as it may lead to configurations in which the agent is motivated by rewards that are never claimed.\nSuch configurations are also called {\\em exploitative}.\nWe give an example in Section~\\ref{sec:model}.\n\nIn Section~\\ref{sec:comp} we settle the complexity of finding a motivating subgraph for a fixed $r$. \nWe first observe that the problem is polynomially solvable if $\\beta=0$ or $\\beta=1$. \nWe then prove that, for general $\\beta\\in(0,1)$, it is NP-complete to decide the existence of a motivating subgraph. \nIn their paper~\\cite{TT}, Tang et al. showed NP-hardness via a reduction from 3-SAT.\nIn contrast, we present a different reduction via $k$ DISJOINT CONNECTING PATHS~\\cite{GJ}.\nWe believe that this reduction is slightly simpler. \nMore importantly, we are able to generalize the reduction and show a hardness of approximation result in the following section.\n\nIn Section~\\ref{sec:approx} we study the optimization version of the motivating subgraph problem. \nMore formally, given a $\\beta\\in(0,1)$, determine the smallest possible value of $r$ such that $G$ contains a motivating subgraph.\nWe develop a $(1+\\sqrt{n}$)-approximation algorithm that outputs $r$ as well as a corresponding motivating subgraph.\nInterestingly, these subgraphs are paths. \nThe algorithm is in fact a combination of two strategies, one which computes good solutions for small $\\beta$ and one which is effective for large $\\beta$. \nFurthermore, the approximation factor of our algorithm is asymptotically tight. \nAs the main technical contribution of this paper, we prove that the optimization problem cannot be approximated in polynomial-time to within a ratio of $\\sqrt{n}/4$ or less unless ${\\rm P}={\\rm NP}$.\nThus we resolve the approximability of the problem.\n\nIn Section~\\ref{sec:ir} we explore the problem of finding reward configuration within a fixed total budget of at most $b$.\nWe show that the problem can again be solved in polynomial-time if $\\beta=0$ or $\\beta=1$.\nUsing a reduction from SET PACKING~\\cite{GJ}, we prove that deciding the existence of a motivating reward configuration is NP-complete for general $\\beta\\in(0,1)$, even if $b=0$. \nThis immediately implies that the optimization problem of computing the minimum $b$ that admits a motivating reward configuration cannot be approximated efficiently to within any ratio greater or equal to $1$ unless ${\\rm P}={\\rm NP}$. \n\n\n\n\n\n\\section{The formal model}\\label{sec:model}\nIn the following, we present the model by Kleinberg and Oren~\\cite{KO}. \nLet $G =(V,E)$ be a directed acyclic graph.\nAssociated with each edge $(v,w)$ is a non-negative cost $c_G(v,w)$. \nAn agent, with a bias factor $\\beta\\in[0,1]$, has to incrementally construct a path from a source $s$ to a target $t$.\nAt any vertex $v$ the agent evaluates its {\\em lowest perceived cost\\/}. \nFor this purpose, the agent considers all paths from $v$ to $t$ and accounts for the cost of incident outgoing edges by their actual value, whereas it discounts future edges by $\\beta$.\nMore specifically, let $d_G(w)$ denote the cost of a cheapest path from some vertex $w$ to $t$, considering the original edge costs.\nIf no path exists, we assume that $d_G(w)=\\infty$.\nAccordingly, the agent's lowest perceived cost is defined as ${\\zeta_G(v)=\\min\\{c_G(v,w) + \\beta d_G(w) \\mid (v,w) \\in E\\}}$ if $v$ has at least one incident outgoing edge.\nOtherwise we assume that $\\zeta_G(v) = \\infty$.\nThe agent only traverses outgoing edges $(v,w)$ for which ${c_G(v,w) + \\beta d_G(w)=\\zeta_G(v)}$.\nTies are broken arbitrarily.\nShould $G$ be clear from context, we will omit the index and write $c(v,w)$, $d(v)$ and $\\zeta(v)$ instead.\n\nIn Section~\\ref{sec:comp} and~\\ref{sec:approx} we will investigate problems in which a single non-negative reward $r$ is placed at $t$.\nThe agent perceives the value of this reward as $\\beta r$ at every vertex different from $t$.\nA graph $G$ is {\\em motivating\\/} if the agent does not abandon the project while constructing a path from $s$ to $t$ in $G$.\nMore specifically, at any vertex $v$ along the agent's path, it compares $\\zeta(v)$ to $\\beta r$ and continues moving if $\\zeta(v) \\leq \\beta r$, i.e.\\ the reward is sufficiently motivating.\nOtherwise, if $\\zeta(v) > \\beta r$, the agent abandons.\nBecause ties are broken arbitrarily, there could be more than one path for the agent.\nConsequently, $G$ is only considered motivating if the agent abandons the project on non of these paths. \n\nIn Section~\\ref{sec:ir} we will generalize Kleinberg and Oren's model to allow the placement of non-negative rewards $r(v)$ at arbitrary vertices $v$.\nWe call such a placement a {\\em reward configuration\\/}.\nGiven a specific reward configuration $r$, let $c_r(v,w) = c(v,w) - r(w)$ be the cost of traversing $(v,w)$ minus the reward collected at $w$ with respect to $r$.\nUsing $c_r$ as new cost metric, we denote the cost of a cheapest path from $w$ to $t$ as $d_r(w)$.\nWhen located at $v$, the agent considers all paths from $v$ to $t$ and accounts for incident outgoing edges by their actual value, whereas future costs and rewards are discounted by $\\beta$.\nMore specifically, we define the agent's perceived cost as $\\zeta_r(v)=\\min\\{c(v,w) + \\beta(d_r(w) - r(w)) \\mid (v,w)\\in E\\}$.\nThe agent continues moving if $\\zeta_r(v) \\geq 0$. \nIn this case the agent traverses an outgoing edge $(v,w)$ which minimizes its perceived cost, i.e.\\ $c(v,w) + \\beta(d_r(w) - r(w))=\\zeta_r(v)$.\nAgain ties are broken arbitrarily.\nOtherwise, if $\\zeta_r(v) > 0$, the agent abandons. \nThe agent only collects the rewards that it visits on its path from $s$ to $t$.\nWe are only interested in the value of the total reward handed out to the agent.\nWe say $r$ is within some given budget $b$ if the agent does not collect a total reward greater than $b$ on any of these paths. \n \n\\begin{figure}[t]\n\\center\n\t\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\n\t\t\\node[nst] (v1) at (0,0) [label=left:\\small{$s$}] {};\n\t\t\\node[nst] (v2) at (2.25,0) [label=above left:\\small{$v_2$}] {};\n\t\t\\node[nst] (v3) at (4.5,0) [label=above left:\\small{$v_3$}] {};\n\t\t\\node[nst] (v4) at (6.75,0) [label=above left:\\small{$v_{m-1}$}] {};\n\t\t\\node[nst] (v5) at (9,0) [label=above left:\\small{$v_{m}$}] {};\n\t\t\\node[nst] (v6) at (9,3) [label=right:\\small{$t$}] {};\n\t\t\n\t\t\t\n\t\t\n\t\t\\node at (5.625,0) {$\\dots$};\n\t\t\\node at (5.625,3) {$\\dots$};\t\n\t\t\n\t\t\n\t\t\\path (v1) edge[est] node [below] {\\small{$0$}} (v2)\n\t\t(v2) edge[est] node [below] {\\small{$0$}} (v3)\n\t\t(v3) edge (5,0)\n\t\t(6.25,0) edge[est] (v4)\n\t\t(v4) edge[est] node [below] {\\small{$0$}} (v5)\n\t\t(v1) edge node [right] {\\small{$\\frac{1}{50}$}} (0,3)\n\t\t(v2) edge node [right] {\\small{$\\frac{2}{50}$}} (2.25,3)\n\t\t(v3) edge node [right] {\\small{$\\frac{3}{50}$}} (4.5,3)\n\t\t(v4) edge node [right] {\\small{$\\frac{m-1}{50}$}} (6.75,3)\n\t\t(v5) edge[est] node [right] {\\small{$\\frac{m}{50}$}} (v6)\n\t\t(0,3) edge (5,3)\n\t\t(6.25,3) edge[est] (v6);\n\t\t\n\t\\end{tikzpicture}\n\t\\vspace*{-0.2cm}\n\\caption{The task graph of the car wash problem.}\\label{fig:carwash}\n\\end{figure}\n\nTo illustrate the model, we consider the car wash problem once more. \nAssume that the car has to be washed during the next $m$ days, where $m > 50$. \nThe task graph $G$ is depicted in Figure~\\ref{fig:carwash}. \nFor each day $i$, with $1\\leq i \\leq m$, there is a vertex $v_i$. \nLet $v_1$ be the source. \nThere is an edge $(v_i,t)$ of cost $i/50$ representing the action that Alice washes the car on day $i$. \nIn order to keep the drawing simple, the edges $(v_i,t)$ merge in Figure~\\ref{fig:carwash}.\nMoreover, for every $i<m$ there is an edge $(v_i,v_{i+1})$ of cost~$0$ that represents the postponement of the job from day $i$ to the next day.\nAssume for now that Alice is located at some $v_i$, with $i<m$.\nHer perceived cost for procrastination is at least $\\beta (i+1)/50$.\nThis lower bound is tight if Alice plans to traverse the edges $(v_i,v_{i+1})$ and $(v_{i+1},t)$.\nAlternatively, her perceived cost for using $(v_i,t)$ and washing the car on day $i$ is $i/50$.\nRemember that $\\beta=1/3$.\nIt follows that $\\zeta(v_i) = \\beta (i+1)/50$, which means that Alice always prefers to wash the car on the next day instead of the current day.\nMoreover, if $i<50$, then $\\zeta(v_i) \\leq \\beta r$ for the reward of $r=1$ provided by the family at $t$. \nThus Alice procrastinates and moves along $(v_i,v_{i+1})$. \nNote that her planning is time-inconsistent. \nOn day $i$ she intends to follow the path $(v_i,v_{i+1}),(v_{i+1},t)$.\nHowever when located at $v_{i+1}$ she pursues a different strategy. \nOnce Alice reaches $v_{50}$, she realizes that $\\zeta(v_{50})=\\beta (50+1)/50$ exceeds the perceived value of the reward $\\beta r$ and abandons. \nThus $G$ is not motivating.\n\nNext assume that we delete $(v_{16},v_{17})$ from $G$. \nIn other words, we remove a procrastination edge and thereby set a deadline at day $i=16$. \nLet $G'$ be the resulting graph. \nWhen Alice reaches $v_{16}$ she can not procrastinate anymore and her perceived cost is $\\zeta_{G'}(v_{16}) = 16/50$ which is less than the perceived value $\\beta r =1/3$ of the reward. Hence Alice washes the car and reaches $t$. \nSubgraph $G'$ is motivating.\nHowever, it is interesting to observe, that there is no reward configuration $r$ within a budget less than $(m/50)/\\beta$ that is motivating in the original task graph $G$.\nThis is due to the fact that no matter how much reward is placed at $t$, Alice will always prefer to procrastinate until day $m$, when her cost for washing the car is $m/50$.\n\nTo illustrate the strengths of reward configurations, we consider a second scenario.\nSuppose that at day $i=50$ Alice's family offers her a new opportunity to earn pocket money.\nIf she first washes the family's car, which now incurs a cost of $1$, and afterwards also cleans her room, which due to years of neglect incures a cost of $6$, she receives $10$ Euros.\nSecretly, the family does not care about Alice cleaning her room.\nThey only try to trick her into washing the car for free.\nWe model this project with a new task graph $G$ that consists of a path from $s$ to $t$ via an intermediate vertex $v$ and another path from $v$ to $t$ via an intermediate vertex $w$.\nThe edge $(s,v)$ corresponds to the job of washing the car and has a cost of $1$, while $(v,w)$ is the job of cleaning Alice's room and has a cost of $6$.\nThe edges $(v,t)$ and $(w,t)$ are of cost~$0$.\nAssuming that $\\beta=1/3$, there is a reward configuration $r$ for which the family can motivate Alice to complete the project within a budget of $0$.\nSetting $r(w)=10$, Alice traverses $(s,v)$ with a lowest perceived cost of $\\zeta_r(s)=-1/3$.\nThis cost is realized along the edges $(s,v)$, $(v,w)$ and $(w,t)$.\nWhen at $v$, Alice perceives cost of $8/3$ for traversing $(v,w)$ and cleaning her room but $0$ for ending the project right away along $(s,t)$.\nThus she changes her plan and moves to $t$ without collecting a reward.\nInterestingly, there is no motivating subgraph of $G$ for a reward less than $3$ if the reward must be placed at $t$.\nThis suggests that, depending on the structure of the task graph, the performance of our two design strategies may vary drastically.\n\n\n\n\n\n\\section{The complexity of finding motivating subgraphs}\\label{sec:comp}\n\nIn this section we first observe that if $\\beta=0$ or $\\beta=1$, then the problem of finding a motivating subgraph can be solved in polynomial-time.\nWe then prove that the decision problem, which we refer to as MOTIVATING SUBGRAPH (MS), is NP-complete for general $\\beta\\in(0,1)$. \nOur proof is based on a reduction from $k$~DISJOINT CONNECTING PATHS ($k$-DCP), cf.~\\cite{GJ}.\nLynch~\\cite{L} showed that $k$-DCP is NP-complete in undirected graphs.\nIn the Appendix, by adapting Lynch's proof, we show that $k$-DCP is also NP-complete in directed acyclic graphs.\n\n\\begin{proposition}\\label{prop:01beta}\nA motivating sub graph can be found in polynomial time if $\\beta=0$ or $\\beta=1$. \n\\end{proposition}\n\\begin{proof}\nWe start with $\\beta=0$. \nIn this case a subgraph $G'$ of $G$ is only motivating if at every vertex of $G'$ the agent's perceived cost is~$0$. \nHence $G$ contains a motivating subgraph if and only if $G$ contains a path from $s$ to $t$ such that all of its edges have cost~$0$. \nAny such path is a motivating subgraph. \nIf $\\beta=1$, then the agent follows a cheapest path from $s$ to $t$ in any subgraph. \nHence $G$ contains a motivating subgraph if and only if there exists a path from $s$ to $t$ with a total edge cost of at most $r$.\nShould such a path exist, then $G$ is its own motivating subgraph.\nClearly, a motivating subgraph can be found in polynomial-time for both cases $\\beta=0$ and $\\beta=1$.\n\\end{proof}\n\nWe now formally define the decision problem MS. \n\n\\begin{definition}[MOTIVATING SUBGRAPH]\nGiven a task graph $G$, a reward $r$ and a bias factor $\\beta\\in[0,1]$, decide the existence of a motivating subgraph of $G$.\n\\end{definition}\n\nThe following proposition, while being interesting in its own right, implies that MS is contained in the complexity class NP.\n\n\\begin{proposition}\\label{prop:2}\nFor any task graph $G$, reward $r$ and bias factor $\\beta$, it can be decided in polynomial-time if $G$ is motivating.\n\\end{proposition}\n\\begin{proof}\nWe modify $G$ in the following way.\nFor each vertex $v$, we calculate the lowest perceived cost $\\zeta_G(v)$.\nNext, we take a copy of $G$, say $G'$, and remove all edges $(v,w)$ from $G'$ such that $\\zeta_G(v) < c_G(v,w) + \\beta d_G(w).$\nIn other words, we remove all edges from $G'$ that do not minimize the agents perceived cost.\nBecause the vertices that can be reached from $s$ in $G'$ are exactly those vertices that are visited by the agent in $G$, $G$ is motivating if and only if $\\zeta_G(v) \\leq \\beta r$ for all vertices that can be reached from $s$ in $G'$.\nThe latter condition can be checked in polynomial-time by standard graph search algorithms.\n\\end{proof}\n\nBefore we prove NP-hardness of MS, we restate the definition of $k$-DCP as a brief reminder.\n\n\\begin{definition}[$k$ DISJOINT CONNECTING PATHS]\nGiven a directed acyclic graph $H$ and $k$ disjoint vertex pairs $(s_1,t_1), \\ldots, (s_k,t_k)$, decide if $H$ contain $k$ mutually vertex-disjoint paths, one connecting every $s_i$ to the corresponding $t_i$.\n\\end{definition}\n\nFurthermore, we want to introduce to a simple but useful lemma, which lets us set prices along a path of arbitrary length $k$, such that at every vertex, except for the last, the perceived cost of following the path to its end is exactly~$1$.\nSuch price structures will be a reoccurring feature of the reductions in Theorem~\\ref{th:comp} and~\\ref{th:approx}.\n\n\\begin{lemma}\\label{lem:geoseries}\nFor every positive integer $k$ and bias factor $\\beta \\in [0,1]$ it holds that \n", "index": 1, "text": "\n\\[(1 - \\beta)^k + \\beta\\biggl(\\sum_{i=0}^{k-1}(1 - \\beta)^i\\biggr) = 1.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{k}+\\beta\\biggl{(}\\sum_{i=0}^{k-1}(1-\\beta)^{i}\\biggr{)}=1.\" display=\"block\"><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>k</mi></msup><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></munderover><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msup></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\n\\end{proof}\n\nWe are now ready to prove NP-completeness of MS.\n\n\\begin{theorem}\\label{th:comp}\nMS is NP-complete, for any bias factor $\\beta\\in(0,1)$. \n\\end{theorem}\n\\begin{proof}\nBy Proposition~\\ref{prop:2} we can take any motivating subgraph $G'$ as certificate for a \"yes\"-instance of MS.\nHence MS is in NP.\nIn the following we will present a polynomial-time reduction from $k$-DCP to show NP-hardness.\nThis establishes the theorem. \nConsider an instance ${\\cal I}$ of $k$-DCP, consisting of a directed acyclic graph $H$ and $k$ disjoint vertex pairs $(s_1,t_1), \\ldots, (s_k,t_k)$. \nWe construct an instance ${\\cal J}$ of MS that is composed of a task graph $G$, a bias factor $\\beta$ and a reward $r$.\nThe graph $H$ will be embedded into $G$ in such a way that $G$ has a motivating subgraph if and only if H has $k$ disjoint connecting paths. \n\n\\begin{figure}[t]\n\t\\center\n\t\t\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (0,0) [label=left:\\small{$s$}] {};\n\t\t\t\\node[nst] (v2) at (2.25,0) [label=above left:\\small{$v_1$}] {};\n\t\t\t\\node[nst] (v3) at (4.5,0) [label=above left:\\small{$v_2$}] {};\n\t\t\t\\node[nst] (v4) at (6.75,0) [label=above left:\\small{$v_{k}$}] {};\n\t\t\t\\node[nst] (v5) at (9,0) [label=right:\\small{$v_{k+1}$}] {};\n\t\t\t\\node[nst] (v6) at (9,1.5) [label=right:\\small{$v_{k+2}$}] {};\n\t\t\t\\node[nst] (v7) at (9,3) [label=right:\\small{$v_{k+3}$}] {};\n\t\t\t\\node[nst] (v8) at (9,4.5) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v9) at (2.25,1.5) [label=right:\\small{$w_1$}] {};\n\t\t\t\\node[nst] (v10) at (4.5,1.5) [label=right:\\small{$w_2$}] {};\n\t\t\t\\node[nst] (v11) at (6.75,1.5) [label=right:\\small{$w_k$}] {};\n\t\t\t\\node[nst] (v12) at (2.25,3) [label=right:\\small{$s_1$}] {};\n\t\t\t\\node[nst] (v13) at (4.5,3) [label=right:\\small{$s_2$}] {};\n\t\t\t\\node[nst] (v14) at (6.75,3) [label=right:\\small{$s_k$}] {};\n\t\t\t\\node[nst] (v15) at (2.25,4.5) [label=right:\\small{$t_1$}] {};\n\t\t\t\\node[nst] (v16) at (4.5,4.5) [label=right:\\small{$t_2$}] {};\n\t\t\t\\node[nst] (v17) at (6.75,4.5) [label=right:\\small{$t_k$}] {};\n\t\t\n\t\t\t\n\t\t\t\\draw[dashed] plot [smooth cycle] coordinates {(1.75,2.85) (4.5,2.525) (7.25,2.85) (7.25,4.65) (4.5,4.975) (1.75,4.65)};\t\n\t\t\t\\node at (4.5,3.75) {$H$};\n\t\t\t\\node at (5.625,0) {$\\dots$};\n\t\t\t\\node at (5.625,6) {$\\dots$};\n\t\t\n\t\t\t\n\t\t\t\\path (v1) edge[est] node [below] {\\small{$(1-\\beta)^3 - \\varepsilon$}} (v2)\n\t\t\t(v2) edge[est] node [below] {\\small{$(1-\\beta)^3 - \\varepsilon$}} (v3)\n\t\t\t(v3) edge (5,0)\n\t\t\t(6.25,0) edge[est] (v4)\n\t\t\t(v4) edge[est] node [below] {\\small{$(1-\\beta)^3 - \\varepsilon$}} (v5)\n\t\t\t(v5) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v6)\n\t\t\t(v6) edge[est] node [right] {\\small{$1-\\beta$}} (v7)\n\t\t\t(v7) edge[est] node [right] {\\small{$1$}} (v8)\n\t\t\t(v2) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v9)\t\t\n\t\t\t(v3) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v10)\n\t\t\t(v4) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v11)\n\t\t\t(v9) edge[est] node [right] {\\small{$\\frac{k(1-\\beta)}{k+1}$}} (v12)\t\t\n\t\t\t(v10) edge[est] node [right] {\\small{$\\frac{(k-1)(1-\\beta)}{k+1}$}} (v13)\n\t\t\t(v11) edge[est] node [right] {\\small{$\\frac{1-\\beta}{k+1}$}} (v14)\n\t\t\t(v17) edge node [right] {\\small{$\\frac{k(1-\\beta)}{k+1}$}} (6.75,6)\t\t\n\t\t\t(v16) edge node [right] {\\small{$\\frac{2(1-\\beta)}{k+1}$}} (4.5,6)\n\t\t\t(v15) edge node [right] {\\small{$\\frac{1-\\beta}{k+1}$}} (2.25,6)\n\t\t\t(2.25,6) edge  (5,6)\n\t\t\t(6.25,6) edge  (9,6)\n\t\t\t(9,6) edge[est] node [right] {\\small{$+ 1$}} (v8);\n\t\t\t\n\t\t\\end{tikzpicture}\n\t\\caption{The graph $G$ with an embedding of $H$.}\\label{fig:g1}\n\\end{figure}\n\nWe proceed to describe the MS instance ${\\cal J}$.\nLet $\\beta\\in(0,1)$ be any value with the property that its encoding length is polynomial in that of ${\\cal I}$.\nSet $r= 1/\\beta$. \nThe task graph $G$ is constructed as follows, see also Figure~\\ref{fig:g1}.\nIt consists of a source $s$ and a target $t$.\nThese two vertices are connected by a directed {\\em main path\\/} along intermediate vertices $v_1, \\ldots, v_{k+3}$.\nThe first $k+1$ edges of this main path each have a cost of $(1-\\beta)^3-\\varepsilon$, where $\\varepsilon$ is a positive constant satisfying\n", "itemtype": "equation", "pos": 25863, "prevtext": "\n\\end{lemma}\n\\begin{proof}\nIf $\\beta$ is equal to $0$, this claim is easy to verify.\nHowever, should $\\beta$ be greater than $0$, the geometric series $\\sum_{i=0}^{k-1}(1 - \\beta)^i$ and can be rewritten as $(1-(1-\\beta)^k)/\\beta$, which in turn implies that\n", "index": 3, "text": "\n\\[(1 - \\beta)^k + \\beta\\biggl(\\sum_{i=0}^{k-1}(1 - \\beta)^i\\biggr) = (1-\\beta)^k + \\beta\\biggl(\\frac{1-(1-k)^k}{\\beta}\\biggr) = 1.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{k}+\\beta\\biggl{(}\\sum_{i=0}^{k-1}(1-\\beta)^{i}\\biggr{)}=(1-\\beta)^{%&#10;k}+\\beta\\biggl{(}\\frac{1-(1-k)^{k}}{\\beta}\\biggr{)}=1.\" display=\"block\"><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>k</mi></msup><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow></munderover><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msup></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>k</mi></msup><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mfrac><mrow><mn>1</mn><mo>-</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>k</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>k</mi></msup></mrow><mi>\u03b2</mi></mfrac><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nThe last three edges of the main path, connecting $v_{k+1}$ to $t$, have a cost of $(1-\\beta)^2$, $1-\\beta$ and $1$ respectively. \nAdditionally, $G$ contains $k$ {\\em shortcuts\\/} that connect every $v_i$, with $1\\leq i\\leq k$, to $t$ via an embedding of $H$.\nMore formally, $H$ is added to $G$. \nThe $i$-th shortcut starts at $v_i$.\nIt visits a distinct vertex $w_i$ along an edge of cost $(1-\\beta)^2$.\nVertex $w_i$ is connected to $s_i$ in $H$.\nThe edge cost is $(k+1-i)(1-\\beta)/(k+1)$.\nFinally, vertex $t_i$ of $H$ is connected to $t$ via an edge of cost $i(1-\\beta)/(k+1)+1$. \nIn Figure~\\ref{fig:g1} the latter edge cost is shown as two terms, namely \\ $i(1-\\beta)/(k+1)$ and $1$, in order to keep the labels of the parallel edges $(t_i,t)$ simple. \nNote that for any shortcut $i$, the edge costs of $(w_i,s_i)$ and $(t_i,t)$ complement each other, i.e.\\ they sum to exactly $(1-\\beta) +1$.\nThe edges of $H$ all have a cost of~$0$.\nWe remark that at every vertex different from $t$, the perceived value of the reward is $\\beta r = 1$. \nThe resulting graph $G$ is acyclic and its encoding length is polynomial in that of ${\\cal I}$.\nWe next prove that ${\\cal I\\/}$ has a solution if and only if ${\\cal J}$ has one. \n\n($\\Longrightarrow$) First assume that ${\\cal I}$ has a solution, i.e.\\ there exist $k$ vertex-disjoint paths, one connecting every $s_i$ to the corresponding $t_i$. \nIn the embedding of $H$ we remove all edges, except for the $k$ vertex-disjoint paths.\nLet $G'$ be the resulting subgraph of $G$.\nWe will show that $G'$ is motivating, for $r=1/\\beta$.\nMore specifically, we will argue that the agent travels along the main path from $s$ to $t$.\nIf the agent resides at one of the first $k$ vertices $v_i$ it has two options.\nEither it traverses $(v_{i}, v_{i+1})$ and follows the main path, or it takes $(v_{i}, w_{i})$ and walks along the $i$-th shortcut.\nLet $s=0$.\nFor $0\\leq i<k$, the perceived cost of traversing $(v_{i}, v_{i+1})$ and following the $(i+1)$-st shortcut afterwards is $(1-\\beta)^3 - \\varepsilon + \\beta((1-\\beta)^2 + (1-\\beta) + 1)$.\nAccording to Lemma~\\ref{lem:geoseries}, the value of the perceived cost simplifies to $1-\\varepsilon$.\nNote that similar calculations are scattered throughout the entire proof.\nFor the sake of brevity, Lemma~\\ref{lem:geoseries} will not be referred to explicitly each time.\nIf the agent is at $v_k$, its perceived cost in following the main path to $t$ is also $1-\\varepsilon$.\nHence, taking $(v_{i}, v_{i+1})$ is a motivating option.\nIn contrast, if the agent resides at $v_i$, with $1\\leq i \\leq k$, and plans to traverse $(v_{i},w_{i})$, following the $i$-th shortcut, its perceived cost is $1$.\nAlthough this option is also motivating, it is perceived as more expensive than taking $(v_{i}, v_{i+1})$.\nAs a result, the agent follows the main path until it reaches $v_{k+1}$.\nAt this point the agent has no option but to stay on the main path.\nThe perceived cost at any of the vertices $v_{k+1}$, $v_{k+2}$ and $v_{k+3}$ is $1$. \nThus subgraph $G'$ is indeed motivating. \n\n($\\Longleftarrow$) Next assume that ${\\cal I}$ does not have a solution. \nWe prove that no subgraph $G'$ of $G$ is motivating.\nConsider any subgraph $G'$.\nObserve that $G'$ is only motivating if the agent never leaves the main path.\nOtherwise the agent must visit some $t_i$ on its way to $t$ at which point it perceives a cost of $i(1-\\beta)/(k+1) + 1 >1$ and abandons. \nWe therefore focus on subgraphs $G'$ that contain all edges of the main path.\nMore specifically, we focus on subgraphs $G'$ in which the agent walks along the main path.\nWe say that the $i$-th shortcut is {\\em degenerate\\/} if the total edge cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is different from the target value $\\theta=(1-\\beta)^2 + (1-\\beta) +1$.\nIn particular, the $i$-th shortcut is degenerate if there is no path from $v_i$ to $t$ via $(v_i,w_i)$, in which case the perceived cost of the shortcut is infinite. \nNote that by construction, every degenerate shortcut must miss the target value by $(1-\\beta)/(k+1)$ or more.\n\nWe first argue that there is at least one degenerate shortcut in $G'$.\nFor the sake of contradiction, assume no such shortcut exists.\nThis means that there is a cheapest path $P_i$ from $v_i$ to $t$ via $(v_i,w_i)$ for all $1\\leq i\\leq k$.\nBy construction, $P_i$ traverses $(w_i,s_i)$.\nRemember that the total cost of $P_i$ must sum up to $\\theta$.\nThe only way to achieve this is if $P_i$ ends in $(t_i,t)$.\nFurthermore, $P_i$ must be vertex disjoint from all other paths $P_j$ with $j<i$.\nOtherwise $P_i$ would not be a shortest path from $v_i$ to $t$, given that $c(t_j,t) < c(t_i,t)$.\nHowever, this implies that there are $k$ vertex disjoint paths in $H$, one from each $s_i$ to the corresponding $t_i$, which contradicts the assumption that ${\\cal I}$ has no solution.\n\nNow that we established the existence of a degenerate shortcut, we distinguish two cases. \nEither there exists a degenerate shortcut $i$ such that the cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is less than $\\theta$ or for each degenerate shortcut $i$ the cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is greater than $\\theta$. \n\nWe study the first case first.\nLet $i$ be the largest index of a degenerate shortcut such that the cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is less than $\\theta$.\nWhen located at $v_i$ the agent perceives cost less or equal to\n", "itemtype": "equation", "pos": 30160, "prevtext": "\n\\end{proof}\n\nWe are now ready to prove NP-completeness of MS.\n\n\\begin{theorem}\\label{th:comp}\nMS is NP-complete, for any bias factor $\\beta\\in(0,1)$. \n\\end{theorem}\n\\begin{proof}\nBy Proposition~\\ref{prop:2} we can take any motivating subgraph $G'$ as certificate for a \"yes\"-instance of MS.\nHence MS is in NP.\nIn the following we will present a polynomial-time reduction from $k$-DCP to show NP-hardness.\nThis establishes the theorem. \nConsider an instance ${\\cal I}$ of $k$-DCP, consisting of a directed acyclic graph $H$ and $k$ disjoint vertex pairs $(s_1,t_1), \\ldots, (s_k,t_k)$. \nWe construct an instance ${\\cal J}$ of MS that is composed of a task graph $G$, a bias factor $\\beta$ and a reward $r$.\nThe graph $H$ will be embedded into $G$ in such a way that $G$ has a motivating subgraph if and only if H has $k$ disjoint connecting paths. \n\n\\begin{figure}[t]\n\t\\center\n\t\t\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (0,0) [label=left:\\small{$s$}] {};\n\t\t\t\\node[nst] (v2) at (2.25,0) [label=above left:\\small{$v_1$}] {};\n\t\t\t\\node[nst] (v3) at (4.5,0) [label=above left:\\small{$v_2$}] {};\n\t\t\t\\node[nst] (v4) at (6.75,0) [label=above left:\\small{$v_{k}$}] {};\n\t\t\t\\node[nst] (v5) at (9,0) [label=right:\\small{$v_{k+1}$}] {};\n\t\t\t\\node[nst] (v6) at (9,1.5) [label=right:\\small{$v_{k+2}$}] {};\n\t\t\t\\node[nst] (v7) at (9,3) [label=right:\\small{$v_{k+3}$}] {};\n\t\t\t\\node[nst] (v8) at (9,4.5) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v9) at (2.25,1.5) [label=right:\\small{$w_1$}] {};\n\t\t\t\\node[nst] (v10) at (4.5,1.5) [label=right:\\small{$w_2$}] {};\n\t\t\t\\node[nst] (v11) at (6.75,1.5) [label=right:\\small{$w_k$}] {};\n\t\t\t\\node[nst] (v12) at (2.25,3) [label=right:\\small{$s_1$}] {};\n\t\t\t\\node[nst] (v13) at (4.5,3) [label=right:\\small{$s_2$}] {};\n\t\t\t\\node[nst] (v14) at (6.75,3) [label=right:\\small{$s_k$}] {};\n\t\t\t\\node[nst] (v15) at (2.25,4.5) [label=right:\\small{$t_1$}] {};\n\t\t\t\\node[nst] (v16) at (4.5,4.5) [label=right:\\small{$t_2$}] {};\n\t\t\t\\node[nst] (v17) at (6.75,4.5) [label=right:\\small{$t_k$}] {};\n\t\t\n\t\t\t\n\t\t\t\\draw[dashed] plot [smooth cycle] coordinates {(1.75,2.85) (4.5,2.525) (7.25,2.85) (7.25,4.65) (4.5,4.975) (1.75,4.65)};\t\n\t\t\t\\node at (4.5,3.75) {$H$};\n\t\t\t\\node at (5.625,0) {$\\dots$};\n\t\t\t\\node at (5.625,6) {$\\dots$};\n\t\t\n\t\t\t\n\t\t\t\\path (v1) edge[est] node [below] {\\small{$(1-\\beta)^3 - \\varepsilon$}} (v2)\n\t\t\t(v2) edge[est] node [below] {\\small{$(1-\\beta)^3 - \\varepsilon$}} (v3)\n\t\t\t(v3) edge (5,0)\n\t\t\t(6.25,0) edge[est] (v4)\n\t\t\t(v4) edge[est] node [below] {\\small{$(1-\\beta)^3 - \\varepsilon$}} (v5)\n\t\t\t(v5) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v6)\n\t\t\t(v6) edge[est] node [right] {\\small{$1-\\beta$}} (v7)\n\t\t\t(v7) edge[est] node [right] {\\small{$1$}} (v8)\n\t\t\t(v2) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v9)\t\t\n\t\t\t(v3) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v10)\n\t\t\t(v4) edge[est] node [right] {\\small{$(1-\\beta)^2$}} (v11)\n\t\t\t(v9) edge[est] node [right] {\\small{$\\frac{k(1-\\beta)}{k+1}$}} (v12)\t\t\n\t\t\t(v10) edge[est] node [right] {\\small{$\\frac{(k-1)(1-\\beta)}{k+1}$}} (v13)\n\t\t\t(v11) edge[est] node [right] {\\small{$\\frac{1-\\beta}{k+1}$}} (v14)\n\t\t\t(v17) edge node [right] {\\small{$\\frac{k(1-\\beta)}{k+1}$}} (6.75,6)\t\t\n\t\t\t(v16) edge node [right] {\\small{$\\frac{2(1-\\beta)}{k+1}$}} (4.5,6)\n\t\t\t(v15) edge node [right] {\\small{$\\frac{1-\\beta}{k+1}$}} (2.25,6)\n\t\t\t(2.25,6) edge  (5,6)\n\t\t\t(6.25,6) edge  (9,6)\n\t\t\t(9,6) edge[est] node [right] {\\small{$+ 1$}} (v8);\n\t\t\t\n\t\t\\end{tikzpicture}\n\t\\caption{The graph $G$ with an embedding of $H$.}\\label{fig:g1}\n\\end{figure}\n\nWe proceed to describe the MS instance ${\\cal J}$.\nLet $\\beta\\in(0,1)$ be any value with the property that its encoding length is polynomial in that of ${\\cal I}$.\nSet $r= 1/\\beta$. \nThe task graph $G$ is constructed as follows, see also Figure~\\ref{fig:g1}.\nIt consists of a source $s$ and a target $t$.\nThese two vertices are connected by a directed {\\em main path\\/} along intermediate vertices $v_1, \\ldots, v_{k+3}$.\nThe first $k+1$ edges of this main path each have a cost of $(1-\\beta)^3-\\varepsilon$, where $\\varepsilon$ is a positive constant satisfying\n", "index": 5, "text": "\n\\[\\varepsilon < \\min\\biggl\\{\\beta  \\frac{1-\\beta}{k+1}, \\beta\\frac{(1-\\beta)^3}{1+\\beta}\\biggr\\}.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\varepsilon&lt;\\min\\biggl{\\{}\\beta\\frac{1-\\beta}{k+1},\\beta\\frac{(1-\\beta)^{3}}{1%&#10;+\\beta}\\biggr{\\}}.\" display=\"block\"><mrow><mrow><mi>\u03b5</mi><mo>&lt;</mo><mrow><mi>min</mi><mo>\u2061</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">{</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><mo>,</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>3</mn></msup><mrow><mn>1</mn><mo>+</mo><mi>\u03b2</mi></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nalong $(v_i,w_i)$.\nConversely, in planning a cheapest path along $(v_i,v_{i+1})$ and following a subsequent shortcut or the main path, the agent perceives a cost of at least $1-\\varepsilon$.\nThis holds true because all subsequent shortcuts are of cost $\\theta$ or more.\nBy choice of $\\varepsilon$, the perceived cost along $(v_i,w_i)$ is less than the perceived cost along $(v_i,v_{i+1})$.\nHowever, this contradicts our assumption that the agent stays on the main path. \n\nWe finally study the second case.\nSuppose that the $i$-th shortcut is degenerate and consider the agent planing its path from $v_{i-1}$ to $t$ via $(v_{i-1},v_i)$.\nThe agent has two options.\nIf the agent plans to follow the $i$-th shortcut, it perceives a cost greater or equal to\n", "itemtype": "equation", "pos": 35700, "prevtext": "\nThe last three edges of the main path, connecting $v_{k+1}$ to $t$, have a cost of $(1-\\beta)^2$, $1-\\beta$ and $1$ respectively. \nAdditionally, $G$ contains $k$ {\\em shortcuts\\/} that connect every $v_i$, with $1\\leq i\\leq k$, to $t$ via an embedding of $H$.\nMore formally, $H$ is added to $G$. \nThe $i$-th shortcut starts at $v_i$.\nIt visits a distinct vertex $w_i$ along an edge of cost $(1-\\beta)^2$.\nVertex $w_i$ is connected to $s_i$ in $H$.\nThe edge cost is $(k+1-i)(1-\\beta)/(k+1)$.\nFinally, vertex $t_i$ of $H$ is connected to $t$ via an edge of cost $i(1-\\beta)/(k+1)+1$. \nIn Figure~\\ref{fig:g1} the latter edge cost is shown as two terms, namely \\ $i(1-\\beta)/(k+1)$ and $1$, in order to keep the labels of the parallel edges $(t_i,t)$ simple. \nNote that for any shortcut $i$, the edge costs of $(w_i,s_i)$ and $(t_i,t)$ complement each other, i.e.\\ they sum to exactly $(1-\\beta) +1$.\nThe edges of $H$ all have a cost of~$0$.\nWe remark that at every vertex different from $t$, the perceived value of the reward is $\\beta r = 1$. \nThe resulting graph $G$ is acyclic and its encoding length is polynomial in that of ${\\cal I}$.\nWe next prove that ${\\cal I\\/}$ has a solution if and only if ${\\cal J}$ has one. \n\n($\\Longrightarrow$) First assume that ${\\cal I}$ has a solution, i.e.\\ there exist $k$ vertex-disjoint paths, one connecting every $s_i$ to the corresponding $t_i$. \nIn the embedding of $H$ we remove all edges, except for the $k$ vertex-disjoint paths.\nLet $G'$ be the resulting subgraph of $G$.\nWe will show that $G'$ is motivating, for $r=1/\\beta$.\nMore specifically, we will argue that the agent travels along the main path from $s$ to $t$.\nIf the agent resides at one of the first $k$ vertices $v_i$ it has two options.\nEither it traverses $(v_{i}, v_{i+1})$ and follows the main path, or it takes $(v_{i}, w_{i})$ and walks along the $i$-th shortcut.\nLet $s=0$.\nFor $0\\leq i<k$, the perceived cost of traversing $(v_{i}, v_{i+1})$ and following the $(i+1)$-st shortcut afterwards is $(1-\\beta)^3 - \\varepsilon + \\beta((1-\\beta)^2 + (1-\\beta) + 1)$.\nAccording to Lemma~\\ref{lem:geoseries}, the value of the perceived cost simplifies to $1-\\varepsilon$.\nNote that similar calculations are scattered throughout the entire proof.\nFor the sake of brevity, Lemma~\\ref{lem:geoseries} will not be referred to explicitly each time.\nIf the agent is at $v_k$, its perceived cost in following the main path to $t$ is also $1-\\varepsilon$.\nHence, taking $(v_{i}, v_{i+1})$ is a motivating option.\nIn contrast, if the agent resides at $v_i$, with $1\\leq i \\leq k$, and plans to traverse $(v_{i},w_{i})$, following the $i$-th shortcut, its perceived cost is $1$.\nAlthough this option is also motivating, it is perceived as more expensive than taking $(v_{i}, v_{i+1})$.\nAs a result, the agent follows the main path until it reaches $v_{k+1}$.\nAt this point the agent has no option but to stay on the main path.\nThe perceived cost at any of the vertices $v_{k+1}$, $v_{k+2}$ and $v_{k+3}$ is $1$. \nThus subgraph $G'$ is indeed motivating. \n\n($\\Longleftarrow$) Next assume that ${\\cal I}$ does not have a solution. \nWe prove that no subgraph $G'$ of $G$ is motivating.\nConsider any subgraph $G'$.\nObserve that $G'$ is only motivating if the agent never leaves the main path.\nOtherwise the agent must visit some $t_i$ on its way to $t$ at which point it perceives a cost of $i(1-\\beta)/(k+1) + 1 >1$ and abandons. \nWe therefore focus on subgraphs $G'$ that contain all edges of the main path.\nMore specifically, we focus on subgraphs $G'$ in which the agent walks along the main path.\nWe say that the $i$-th shortcut is {\\em degenerate\\/} if the total edge cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is different from the target value $\\theta=(1-\\beta)^2 + (1-\\beta) +1$.\nIn particular, the $i$-th shortcut is degenerate if there is no path from $v_i$ to $t$ via $(v_i,w_i)$, in which case the perceived cost of the shortcut is infinite. \nNote that by construction, every degenerate shortcut must miss the target value by $(1-\\beta)/(k+1)$ or more.\n\nWe first argue that there is at least one degenerate shortcut in $G'$.\nFor the sake of contradiction, assume no such shortcut exists.\nThis means that there is a cheapest path $P_i$ from $v_i$ to $t$ via $(v_i,w_i)$ for all $1\\leq i\\leq k$.\nBy construction, $P_i$ traverses $(w_i,s_i)$.\nRemember that the total cost of $P_i$ must sum up to $\\theta$.\nThe only way to achieve this is if $P_i$ ends in $(t_i,t)$.\nFurthermore, $P_i$ must be vertex disjoint from all other paths $P_j$ with $j<i$.\nOtherwise $P_i$ would not be a shortest path from $v_i$ to $t$, given that $c(t_j,t) < c(t_i,t)$.\nHowever, this implies that there are $k$ vertex disjoint paths in $H$, one from each $s_i$ to the corresponding $t_i$, which contradicts the assumption that ${\\cal I}$ has no solution.\n\nNow that we established the existence of a degenerate shortcut, we distinguish two cases. \nEither there exists a degenerate shortcut $i$ such that the cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is less than $\\theta$ or for each degenerate shortcut $i$ the cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is greater than $\\theta$. \n\nWe study the first case first.\nLet $i$ be the largest index of a degenerate shortcut such that the cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is less than $\\theta$.\nWhen located at $v_i$ the agent perceives cost less or equal to\n", "index": 7, "text": "\n\\[(1-\\beta)^2 + \\beta\\biggl((1-\\beta)+1-\\frac{1-\\beta}{k+1}\\biggr)=1-\\beta\\frac{1-\\beta}{k+1}<1-\\varepsilon\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{2}+\\beta\\biggl{(}(1-\\beta)+1-\\frac{1-\\beta}{k+1}\\biggr{)}=1-\\beta%&#10;\\frac{1-\\beta}{k+1}&lt;1-\\varepsilon\" display=\"block\"><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><mn>1</mn></mrow><mo>-</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mn>1</mn><mo>-</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow></mrow><mo>&lt;</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nThe inequality holds by choice of $\\varepsilon$. \nIf the agent plans tor traverse $(v_{i-1},v_i)$ instead, taking either a shortcut $j>i$ or following the main path all the way to $t$, it perceives a cost of at least \n", "itemtype": "equation", "pos": 36563, "prevtext": "\nalong $(v_i,w_i)$.\nConversely, in planning a cheapest path along $(v_i,v_{i+1})$ and following a subsequent shortcut or the main path, the agent perceives a cost of at least $1-\\varepsilon$.\nThis holds true because all subsequent shortcuts are of cost $\\theta$ or more.\nBy choice of $\\varepsilon$, the perceived cost along $(v_i,w_i)$ is less than the perceived cost along $(v_i,v_{i+1})$.\nHowever, this contradicts our assumption that the agent stays on the main path. \n\nWe finally study the second case.\nSuppose that the $i$-th shortcut is degenerate and consider the agent planing its path from $v_{i-1}$ to $t$ via $(v_{i-1},v_i)$.\nThe agent has two options.\nIf the agent plans to follow the $i$-th shortcut, it perceives a cost greater or equal to\n", "index": 9, "text": "\n\\[(1-\\beta)^3 -\\varepsilon + \\beta\\biggl((1-\\beta)^2+(1-\\beta) +1 + \\frac{1-\\beta}{k+1}\\biggr) = 1+\\beta \\frac{1-\\beta}{k+1}-\\varepsilon > 1.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{3}-\\varepsilon+\\beta\\biggl{(}(1-\\beta)^{2}+(1-\\beta)+1+\\frac{1-%&#10;\\beta}{k+1}\\biggr{)}=1+\\beta\\frac{1-\\beta}{k+1}-\\varepsilon&gt;1.\" display=\"block\"><mrow><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>3</mn></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><mn>1</mn><mo>+</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mrow><mn>1</mn><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow></mrow><mo>-</mo><mi>\u03b5</mi></mrow><mo>&gt;</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nThis holds true because no shortcut is of cost less than $\\theta$.\nOnce more, the perceived cost is greater than $1$ by definition of $\\varepsilon$. \nHence the agent certainly abandons at $v_{i-1}$, which shows that $G'$ cannot be motivating.\n\\end{proof}\n\n\n\n\n\n\\section{Approximating optimum rewards}\\label{sec:approx}\n\nConsidering that the decision problem MS is NP-hard, the next and arguably natural question is whether there exist good approximation algorithms. \nHence we formulate MS as an optimization problem.\n\n\\begin{definition}[MOTIVATING SUBGRAPH OPT]\nGiven a task graph $G$ and a bias factor $\\beta\\in(0,1)$, determine the minimum reward $r$ to place at $t$ such that $G$ contains a motivating subgraph.\n\\end{definition}\n\nWe present two simple algorithms.\nThe first algorithm is designed for small values of $\\beta$.\nThe second algorithm computes good solutions for large $\\beta$. \nThe algorithms output $r$ as well as a corresponding motivating subgraph $G'$.\nBoth strategies are somewhat reminiscent of Proposition~\\ref{prop:01beta}.\nA combination of them yields a $(1+\\sqrt{n}$)-approximation, for any $\\beta\\in(0,1)$. \n\nSuppose that $\\beta$ is small.\nThen the agent is highly oblivious to the future. \nConsequently it is sensible to let the agent travel along a path that minimizes the maximum cost of any edge. \nWe call a path with this property a {\\em minmax path\\/}. \nA minmax path can be computed easily in polynomial-time.\nFor instance, starting with an empty subgraph, insert the edges of $G$ in non-decreasing order of cost until $s$ and $t$ become connected for the first time.\nNext, choose one of the possibly several paths that connect $s$ and $t$ in the subgraph as minmax path.\nOur first algorithm, called {\\sc MinmaxPathApprox}, computes a minmax path $P$ and returns the corresponding $G'$ containing only the edges of $P$.\nFurthermore, the algorithm sets $r$ according to the maximum over all perceived cost along $P$, or more formally $r = \\max\\{\\zeta_{G'}(v) \\mid v \\in P\\}/\\beta$.\nClearly, this reward is sufficient to make $G'$ motivating.\n\n\\begin{proposition}\\label{prop:alg1}\n{\\sc MinmaxPathApprox} achieves an approximation ratio of $1+\\beta n$, for any $\\beta\\in(0,1)$. \n\\end{proposition}\n\\begin{proof}\nLet $c$ denote the maximum cost of any edge along the path $P$ computed by {\\sc MinmaxPathApprox}.\nBy definition of $P$ the agent must encounter an edge of cost at least $c$ in any motivating subgraph.\nThus the optimum reward is lower bounded by $c/\\beta$.\nConversely, the cost of every edge in $P$, of which there are at most $n-1$, is upper bounded by $c$.\nThis means that {\\sc MinmaxPathApprox} returns a reward $r$, which is upper bounded by\n", "itemtype": "equation", "pos": 36925, "prevtext": "\nThe inequality holds by choice of $\\varepsilon$. \nIf the agent plans tor traverse $(v_{i-1},v_i)$ instead, taking either a shortcut $j>i$ or following the main path all the way to $t$, it perceives a cost of at least \n", "index": 11, "text": "\n\\[(1-\\beta)^3 -\\varepsilon + \\beta\\big((1-\\beta)^3 -\\varepsilon + (1-\\beta)^2+(1-\\beta) +1\\big) = 1 + (1+\\beta)\\biggl(\\beta\\frac{(1-\\beta)^3}{1+\\beta} -\\varepsilon\\biggr)>1.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{3}-\\varepsilon+\\beta\\big{(}(1-\\beta)^{3}-\\varepsilon+(1-\\beta)^{2}+%&#10;(1-\\beta)+1\\big{)}=1+(1+\\beta)\\biggl{(}\\beta\\frac{(1-\\beta)^{3}}{1+\\beta}-%&#10;\\varepsilon\\biggr{)}&gt;1.\" display=\"block\"><mrow><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>3</mn></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>3</mn></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><mn>1</mn></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mn>1</mn><mo>+</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>+</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>3</mn></msup><mrow><mn>1</mn><mo>+</mo><mi>\u03b2</mi></mrow></mfrac></mrow><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>&gt;</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nwhich yields the desired approximation ratio of $1+\\beta n$. \n\\end{proof}\n\nOur second algorithm, called {\\sc CheapestPathApprox}, computes a path $P$ of minimum total cost from $s$ to $t$ and returns the corresponding $G'$ containing only the edges of $P$.\nAgain, the algorithm sets the reward to $r = \\max\\{\\zeta_{G'}(v) \\mid v \\in P\\}/\\beta$.\n\n\\begin{proposition}\\label{prop:alg2}\n{\\sc CheapestPathApprox} achieves an approximation ratio of $1/\\beta$, for any $\\beta\\in(0,1)$. \n\\end{proposition}\n\\begin{proof}\nLet $P$ be the path computed by {\\sc CheapestPathApprox}.\nAt any vertex $v$ of $P$, the agent perceives a cost of at most $d_{G'}(v)$, which is upper bounded by $d_{G'}(s)$.\nThus $d_{G'}(s)/\\beta$ is an upper bound on the the reward $r$ calculated by {\\sc CheapestPathApprox}.\nIn an optimal solution, when located at $s$, the agent is faced with a cost of at least $\\beta d_{G}(s)$.\nConsequently, a reward of at least $d_{G}(s)$ is required to motivate the agent.\nBecause $P$ is a cheapest path, it holds that $d_{G}(s) = d_{G'}(s)$, which establishes an approximation ratio of $1/\\beta$.\n\\end{proof}\n\nLet {\\sc CombinedApprox} be the combined algorithm that chooses {\\sc MinmaxPathApprox} if $\\beta \\leq 1/\\sqrt{n}$ and {\\sc CheapestPathApprox} otherwise. \nPropositions~\\ref{prop:alg1} and~\\ref{prop:alg2} immediately imply the following result. \n\\begin{theorem}\\label{th:alg3}\n{\\sc CombinedApprox} achieves an approximation ratio of $1+\\sqrt{n}$, for any $\\beta\\in(0,1)$. \n\\end{theorem}\n\nWe next prove that, although our $(1+\\sqrt{n})$-approximation algorithm is simple, it achieves the best possible performance guarantee, up to a small constant factor, that can be hoped for in polynomial-time.\nFor the proof of the theorem we need the next technical lemma.\n\n\\begin{lemma}\\label{lem:rho}\nFor any integer $\\rho$, with $\\rho\\geq1$, it holds that \n", "itemtype": "equation", "pos": 39787, "prevtext": "\nThis holds true because no shortcut is of cost less than $\\theta$.\nOnce more, the perceived cost is greater than $1$ by definition of $\\varepsilon$. \nHence the agent certainly abandons at $v_{i-1}$, which shows that $G'$ cannot be motivating.\n\\end{proof}\n\n\n\n\n\n\\section{Approximating optimum rewards}\\label{sec:approx}\n\nConsidering that the decision problem MS is NP-hard, the next and arguably natural question is whether there exist good approximation algorithms. \nHence we formulate MS as an optimization problem.\n\n\\begin{definition}[MOTIVATING SUBGRAPH OPT]\nGiven a task graph $G$ and a bias factor $\\beta\\in(0,1)$, determine the minimum reward $r$ to place at $t$ such that $G$ contains a motivating subgraph.\n\\end{definition}\n\nWe present two simple algorithms.\nThe first algorithm is designed for small values of $\\beta$.\nThe second algorithm computes good solutions for large $\\beta$. \nThe algorithms output $r$ as well as a corresponding motivating subgraph $G'$.\nBoth strategies are somewhat reminiscent of Proposition~\\ref{prop:01beta}.\nA combination of them yields a $(1+\\sqrt{n}$)-approximation, for any $\\beta\\in(0,1)$. \n\nSuppose that $\\beta$ is small.\nThen the agent is highly oblivious to the future. \nConsequently it is sensible to let the agent travel along a path that minimizes the maximum cost of any edge. \nWe call a path with this property a {\\em minmax path\\/}. \nA minmax path can be computed easily in polynomial-time.\nFor instance, starting with an empty subgraph, insert the edges of $G$ in non-decreasing order of cost until $s$ and $t$ become connected for the first time.\nNext, choose one of the possibly several paths that connect $s$ and $t$ in the subgraph as minmax path.\nOur first algorithm, called {\\sc MinmaxPathApprox}, computes a minmax path $P$ and returns the corresponding $G'$ containing only the edges of $P$.\nFurthermore, the algorithm sets $r$ according to the maximum over all perceived cost along $P$, or more formally $r = \\max\\{\\zeta_{G'}(v) \\mid v \\in P\\}/\\beta$.\nClearly, this reward is sufficient to make $G'$ motivating.\n\n\\begin{proposition}\\label{prop:alg1}\n{\\sc MinmaxPathApprox} achieves an approximation ratio of $1+\\beta n$, for any $\\beta\\in(0,1)$. \n\\end{proposition}\n\\begin{proof}\nLet $c$ denote the maximum cost of any edge along the path $P$ computed by {\\sc MinmaxPathApprox}.\nBy definition of $P$ the agent must encounter an edge of cost at least $c$ in any motivating subgraph.\nThus the optimum reward is lower bounded by $c/\\beta$.\nConversely, the cost of every edge in $P$, of which there are at most $n-1$, is upper bounded by $c$.\nThis means that {\\sc MinmaxPathApprox} returns a reward $r$, which is upper bounded by\n", "index": 13, "text": "\n\\[r = \\frac{\\max\\{\\zeta_{G'}(v) \\mid v \\in P\\}}{\\beta} \\leq \\frac{c}{\\beta} + (n-2)c \\leq \\frac{c}{\\beta} + nc,\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"r=\\frac{\\max\\{\\zeta_{G^{\\prime}}(v)\\mid v\\in P\\}}{\\beta}\\leq\\frac{c}{\\beta}+(n%&#10;-2)c\\leq\\frac{c}{\\beta}+nc,\" display=\"block\"><mrow><mrow><mi>r</mi><mo>=</mo><mfrac><mrow><mi>max</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mi>\u03b6</mi><msup><mi>G</mi><mo>\u2032</mo></msup></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>v</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><mi>v</mi><mo>\u2208</mo><mi>P</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow><mi>\u03b2</mi></mfrac><mo>\u2264</mo><mrow><mfrac><mi>c</mi><mi>\u03b2</mi></mfrac><mo>+</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mn>2</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>c</mi></mrow></mrow><mo>\u2264</mo><mrow><mfrac><mi>c</mi><mi>\u03b2</mi></mfrac><mo>+</mo><mrow><mi>n</mi><mo>\u2062</mo><mi>c</mi></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\n\\end{lemma}\n\\begin{proof}\nThe sequence $(1-1/n)^n$ is monotonically increasing for $n\\geq 1$.\nHence it holds that\n", "itemtype": "equation", "pos": 41761, "prevtext": "\nwhich yields the desired approximation ratio of $1+\\beta n$. \n\\end{proof}\n\nOur second algorithm, called {\\sc CheapestPathApprox}, computes a path $P$ of minimum total cost from $s$ to $t$ and returns the corresponding $G'$ containing only the edges of $P$.\nAgain, the algorithm sets the reward to $r = \\max\\{\\zeta_{G'}(v) \\mid v \\in P\\}/\\beta$.\n\n\\begin{proposition}\\label{prop:alg2}\n{\\sc CheapestPathApprox} achieves an approximation ratio of $1/\\beta$, for any $\\beta\\in(0,1)$. \n\\end{proposition}\n\\begin{proof}\nLet $P$ be the path computed by {\\sc CheapestPathApprox}.\nAt any vertex $v$ of $P$, the agent perceives a cost of at most $d_{G'}(v)$, which is upper bounded by $d_{G'}(s)$.\nThus $d_{G'}(s)/\\beta$ is an upper bound on the the reward $r$ calculated by {\\sc CheapestPathApprox}.\nIn an optimal solution, when located at $s$, the agent is faced with a cost of at least $\\beta d_{G}(s)$.\nConsequently, a reward of at least $d_{G}(s)$ is required to motivate the agent.\nBecause $P$ is a cheapest path, it holds that $d_{G}(s) = d_{G'}(s)$, which establishes an approximation ratio of $1/\\beta$.\n\\end{proof}\n\nLet {\\sc CombinedApprox} be the combined algorithm that chooses {\\sc MinmaxPathApprox} if $\\beta \\leq 1/\\sqrt{n}$ and {\\sc CheapestPathApprox} otherwise. \nPropositions~\\ref{prop:alg1} and~\\ref{prop:alg2} immediately imply the following result. \n\\begin{theorem}\\label{th:alg3}\n{\\sc CombinedApprox} achieves an approximation ratio of $1+\\sqrt{n}$, for any $\\beta\\in(0,1)$. \n\\end{theorem}\n\nWe next prove that, although our $(1+\\sqrt{n})$-approximation algorithm is simple, it achieves the best possible performance guarantee, up to a small constant factor, that can be hoped for in polynomial-time.\nFor the proof of the theorem we need the next technical lemma.\n\n\\begin{lemma}\\label{lem:rho}\nFor any integer $\\rho$, with $\\rho\\geq1$, it holds that \n", "index": 15, "text": "\n\\[\\biggl(1-\\frac{1}{3\\rho+3}\\biggr)^{3\\rho+3} > \\frac{1}{3}.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"\\biggl{(}1-\\frac{1}{3\\rho+3}\\biggr{)}^{3\\rho+3}&gt;\\frac{1}{3}.\" display=\"block\"><mrow><mrow><msup><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mn>1</mn><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>&gt;</mo><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\n\\end{proof}\n\n\\begin{theorem}\\label{th:approx}\nMS-OPT is NP-hard to approximated within a ratio of $1/4 \\sqrt{n}$.\n\\end{theorem}\n\\begin{proof}\nAgain we present a reduction from $k$-DCP. \nLet $\\rho$ be an arbitrary positive integer.\nThe best choice of $\\rho$ will be determined later.\nGiven an instance ${\\cal I}$ of $k$-DCP we construct an instance ${\\cal J}$ of MS-OPT, consisting of a task graph $G$ and a bias factor $\\beta$, having the following two properties. \n(a)~If ${\\cal I}$ has a solution, then $G$ has a subgraph that is motivating for a reward of $r=1/\\beta$.\n(b)~If ${\\cal I}$ does not have a solution, then no subgraph of $G$ is motivating for a reward of at most $r=\\rho /\\beta$.\nHence any algorithm that achieves an approximation ratio of $\\rho$ or better must solve instances of $k$-DCP. \n\nWe begin with the description of ${\\cal J}$.\nAs before an instance of ${\\cal I}$ is specified by a graph $H$ together with $k$ vertex pairs $(s_1,t_1), \\ldots, (s_k,t_k)$. \nConsidering that Proposition~\\ref{prop:alg2} gives a $(1/\\beta)$-approximation, the bias factor of ${\\cal J}$ cannot be chosen arbitrarily anymore.\nIt must be less than $1/\\rho$.\nFor convenience we set $\\beta=1/(3\\rho+3)$.\nFrom a structural point of view $G$ of ${\\cal J}$ consists of two units, a {\\em central unit\\/} and an {\\em amplification unit\\/}.\nThe central unit contains an embedding of $H$.\nThe amplification unit precedes the central unit and increases any approximation error that might occur in the central unit. \n\n\\begin{figure}[t]\n\\center\n\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (-0.3,0) [label=left:\\small{$u_{9\\rho^2}$}] {};\n\t\t\t\\node[nst] (v2) at (2.25,0) [label=above left:\\small{$v_1$}] {};\n\t\t\t\\node[nst] (v3) at (4.5,0) [label=above left:\\small{$v_2$}] {};\n\t\t\t\\node[nst] (v4) at (6.75,0) [label=above left:\\small{$v_{k}$}] {};\n\t\t\t\\node[nst] (v5) at (9,0) [label=right:\\small{$v_{k+1}$}] {};\n\t\t\t\\node[nst] (v6) at (9,1.5) [label=right:\\small{$v_{k+2}$}] {};\n\t\t\t\\node[nst] (v7) at (9,3) [label=right:\\small{$v_{k+3\\rho+3}$}] {};\n\t\t\t\\node[nst] (v8) at (9,4.5) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v9) at (2.25,1.5) [label=right:\\small{$w_1$}] {};\n\t\t\t\\node[nst] (v10) at (4.5,1.5) [label=right:\\small{$w_2$}] {};\n\t\t\t\\node[nst] (v11) at (6.75,1.5) [label=right:\\small{$w_k$}] {};\n\t\t\t\\node[nst] (v12) at (2.25,3) [label=right:\\small{$s_1$}] {};\n\t\t\t\\node[nst] (v13) at (4.5,3) [label=right:\\small{$s_2$}] {};\n\t\t\t\\node[nst] (v14) at (6.75,3) [label=right:\\small{$s_k$}] {};\n\t\t\t\\node[nst] (v15) at (2.25,4.5) [label=right:\\small{$t_1$}] {};\n\t\t\t\\node[nst] (v16) at (4.5,4.5) [label=right:\\small{$t_2$}] {};\n\t\t\t\\node[nst] (v17) at (6.75,4.5) [label=right:\\small{$t_k$}] {};\n\t\t\n\t\t\t\n\t\t\t\\draw[dashed] plot [smooth cycle] coordinates {(1.75,2.85) (4.5,2.525) (7.25,2.85) (7.25,4.65) (4.5,4.975) (1.75,4.65)};\t\n\t\t\t\\node at (4.5,3.75) {$H$};\n\t\t\t\\node at (5.625,0) {$\\dots$};\n\t\t\t\\node at (5.625,6) {$\\dots$};\n\t\t\t\\node at (9,2.35) {$\\vdots$};\n\t\t\t\n\t\t\t\n\t\t\t\\path (v1) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v2)\n\t\t\t(v2) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v3)\n\t\t\t(v3) edge (5,0)\n\t\t\t(6.25,0) edge[est] (v4)\n\t\t\t(v4) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v5)\n\t\t\t(v5) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v6)\n\t\t\t(v6) edge (9,1.875)\n\t\t\t(9,2.625) edge[est] (v7)\n\t\t\t(v7) edge[est] node [right] {\\small{$1$}} (v8)\n\t\t\t(v2) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v9)\t\t\n\t\t\t(v3) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v10)\n\t\t\t(v4) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v11)\n\t\t\t(v9) edge[est] node [right] {\\small{$\\frac{k(1 - \\beta)^{3\\rho+1}}{k+1}$}} (v12)\t\t\n\t\t\t(v10) edge[est] node [right] {\\small{$\\frac{(k-1)(1-\\beta)^{3\\rho+1}}{k+1}$}} (v13)\n\t\t\t(v11) edge[est] node [right] {\\small{$\\frac{(1-\\beta)^{3\\rho+1}}{k+1}$}} (v14)\n\t\t\t(v17) edge node [right] {\\small{$\\frac{k(1-\\beta)^{3\\rho+1}}{k+1}$}} (6.75,6)\t\t\n\t\t\t(v16) edge node [right] {\\small{$\\frac{2(1-\\beta)^{3\\rho+1}}{k+1}$}} (4.5,6)\n\t\t\t(v15) edge node [right] {\\small{$\\frac{(1-\\beta)^{3\\rho+1}}{k+1}$}} (2.25,6)\n\t\t\t(2.25,6) edge  (5,6)\n\t\t\t(6.25,6) edge  (9,6)\n\t\t\t(9,6) edge[est] node [right] {\\small{$+\\sum\\limits_{j=0}^{3\\rho}(1-\\beta)^j$}} (v8);\n\t\t\t\n\\end{tikzpicture}\n\\caption{The central unit of $G$.}\\label{fig:g2}\n\\end{figure}\n\nThe central unit, depicted in Figure~\\ref{fig:g2}, has the same overall structure as the graph constructed in the proof of Theorem~\\ref{th:comp}.\nThere exists a {\\em main path} and $k$ {\\em shortcuts}, linking to an embedding of $H$.\nHowever, there are important differences.\nThe main path is longer and edge costs are different. \nMore specifically the main path starts at a vertex $u_{9\\rho^2}$, which is the last vertex of the amplification unit, and ends at vertex $t$.\nThe path consists of $k+3\\rho+3$ intermediate vertices $v_1, \\ldots, v_{k+3\\rho+3}$.\nThe first $k+1$ edges of the main path each have a cost of $(1-\\beta)^{3\\rho+3} -\\varepsilon$, where $\\varepsilon$ is a positive value satisfying\n", "itemtype": "equation", "pos": 41938, "prevtext": "\n\\end{lemma}\n\\begin{proof}\nThe sequence $(1-1/n)^n$ is monotonically increasing for $n\\geq 1$.\nHence it holds that\n", "index": 17, "text": "\n\\[\\biggl(1-\\frac{1}{3\\rho+3}\\biggr)^{3\\rho+3} \\geq (1-{1/6})^6 > {1/3}.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m1\" class=\"ltx_Math\" alttext=\"\\biggl{(}1-\\frac{1}{3\\rho+3}\\biggr{)}^{3\\rho+3}\\geq(1-{1/6})^{6}&gt;{1/3}.\" display=\"block\"><mrow><mrow><msup><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mn>1</mn><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>\u2265</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mrow><mn>1</mn><mo>/</mo><mn>6</mn></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mn>6</mn></msup><mo>&gt;</mo><mrow><mn>1</mn><mo>/</mo><mn>3</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": " \nNote that $(1-\\beta)^{3\\rho+3}-1/3$ is a positive quantity according to Lemma~\\ref{lem:rho}.\nThe remaining edges of the main path have increasing cost.\nIn particular, we set the cost of $(v_i,v_{i+1})$, with $k < i \\leq k+3\\rho+3$, to $(1-\\beta)^{k+3\\rho+3-i}$.\nEach of the first $k$ vertices $v_i$ is the starting point of a shortcut.\nSimilar to the construction in Theorem~\\ref{th:comp}, the $i$-th shortcut is routed through a distinct vertex $w_i$ before it enters the emending of $H$ and eventually reaches $t$.\nThe edges $(v_i,w_i)$ have a cost of $(1-\\beta)^{3\\rho+2}$.\nFurthermore, the edges $(w_i,s_i)$ and $(t_i,t)$ are of cost $(k+1-i)(1-\\beta)^{3\\rho+1}/(k+1)$ and $i(1-\\beta)^{3\\rho+1}/(k+1)+ \\sum_{j=0}^{3\\rho} (1-\\beta)^j$ respectively.\nIn Figure~\\ref{fig:g2}, the later edge cost is shown as two terms, namely $i(1-\\beta)^{3\\rho+1}/(k+1)$ and $\\sum_{j=0}^{3\\rho} (1-\\beta)^j$, in order to keep the labels of the parallel edges $(t_i,t)$ simple.\nNote that for $1 \\leq i \\leq k$, the costs of $(v_i,s_i)$ and $(t_i,t)$ sum to exactly $\\sum_{j=0}^{3\\rho+1} (1-\\beta)^j$.\nAll edges of $H$ have cost~0.\n\n\\begin{figure}[t]\n\\center\n\t\t\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (-0.3,0) [label=left:\\small{$s$}] {};\n\t\t\t\\node[nst] (v2) at (2.25,0) [label=above left:\\small{$u_1$}] {};\n\t\t\t\\node[nst] (v3) at (4.5,0) [label=above left:\\small{$u_2$}] {};\n\t\t\t\\node[nst] (v4) at (6.75,0) [label=above left:\\small{$u_{9\\rho^2}$}] {};\n\t\t\t\\node[nst] (v5) at (6.75,3) [label=above:\\small{$z$}] {};\n\t\t\t\\node[nst] (v6) at (9,3) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v7) at (9,0) [label=right:\\small{$v_1$}] {};\n\t\t\t\n\t\t\t\n\t\t\t\\node at (5.625,0) {$\\dots$};\n\t\t\t\\node at (5.625,3) {$\\dots$};\t\n\t\t\n\t\t\t\n\t\t\t\\path (v1) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v2)\n\t\t\t(v2) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v3)\n\t\t\t(v3) edge (5,0)\n\t\t\t(6.25,0) edge[est] (v4)\n\t\t\t(v2) edge node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (2.25,3)\n\t\t\t(v3) edge node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (4.5,3)\n\t\t\t(v4) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v5)\n\t\t\t(2.25,3) edge (5,3)\n\t\t\t(6.25,3) edge[est] (v5)\n\t\t\t(v5) edge[est] node [above] {\\small{$\\sum\\limits_{j=0}^{3\\rho+1}(1-\\beta)^j$}} (v6)\n\t\t\t(v4) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v7);\n\t\t\t\n\t\t\\end{tikzpicture}\n\\caption{The amplification unit of $G$.}\\label{fig:g3}\n\\end{figure}\n\nNext we describe the amplification unit, which is shown in Figure~\\ref{fig:g3}. \nStarting at vertex $s$, there is a directed path to $u_{9\\rho^2}$, called the {\\em amplification path}, that consists of intermediate vertices $u_1, \\ldots, u_{9\\rho^2-1}$.\nEach edge of the amplification path has a cost of $(1-\\beta)^{3\\rho+3}-\\varepsilon$. \nFrom every $u_i$, there is also an edge to a vertex $z$ of cost $(1-\\beta)^{3\\rho+2}$.\nVertex $z$ is connected to $t$ via an edge of cost $\\sum_{j=0}^{3\\rho+1} (1-\\beta)^j$.\nIn the following we prove the statements given in (a) and (b) above.\n\n(a)~Assume that ${\\cal I}$ has a solution. \nLet $G'$ be the subgraph of $G$ obtained by deleting all edges from the embedding of $H$ that do not belong to one of the $k$ vertex-disjoint paths in a fixed solution of ${\\cal I}$. \nWe claim that $G'$ is motivating with reward $r=1/\\beta$.\nRemember that the agent perceives $r$ as $1$ on all vertices of $G$ except for $t$.\nFurthermore, we will use Lemma~\\ref{lem:geoseries} to calculate the agent's perceived cost if not stated explicitly otherwise.\nLet $u_0=s$. \nAt every vertex $u_i$, with $i < 9\\rho^2$, the agent's perceived cost for moving to $u_{i+1}$ and then directly to $t$, hence traversing edges $(u_i,u_{i+1})$, $(u_{i+1},z)$ and $(z,t)$, is $1-\\varepsilon$.\nConversely, when residing at $u_i$, with $i \\leq 9\\rho^2$, the agent's perceived cost in moving directly to $t$ using edges $(u_{i+1},z)$ and $(z,t)$ is $1$.\nThus the agent moves along the edges of the amplification path, until it reaches $u_{9\\rho^2}$.\nAt $u_{9\\rho^2}$ the agent moves on to $u_1$ because its perceived cost in traversing $(u_{9\\rho^2},v_1)$ and then following the first shortcut, which starts at $v_1$, is $1-\\varepsilon$.\nSimilarly, when located at $v_i$, with $1\\leq i<k$, agent perceives cost of $1-\\varepsilon$ for traversing $(v_i,v_{i+1})$ and then taking the $(i+1)$-st shortcut.\nIn contrast, planning a path along $(v_i,w_i)$, with $1\\leq i\\leq k$, has a cost of $1$.\nThus the agent follows the main path until reaching $v_{k}$. \nBy the same calculations, the agent moves to $v_{k+1}$. \nAt this point the agent has no other option but to follow the main path.\nBecause the agent's perceived cost is $1$ for all vertices $v_{i}$, with $k<1\\leq k+3\\rho+3$, it eventually reaches $t$.\n\n(b)~Suppose that ${\\cal I}$ does not have a solution and consider any subgraph $G'$ of $G$. \nWe first argue that if the agent leaves the amplification path or main path, then it abandons given a reward of at most $\\rho/\\beta$, which is perceived as $\\rho$ at every vertex different from $t$.\nIf the agent leaves at some $u_i$, it must pass $z$ where it perceives cost of $\\sum_{j=0}^{3\\rho+1} (1-\\beta)^j$.\nHowever, it holds that\n", "itemtype": "equation", "pos": -1, "prevtext": "\n\\end{proof}\n\n\\begin{theorem}\\label{th:approx}\nMS-OPT is NP-hard to approximated within a ratio of $1/4 \\sqrt{n}$.\n\\end{theorem}\n\\begin{proof}\nAgain we present a reduction from $k$-DCP. \nLet $\\rho$ be an arbitrary positive integer.\nThe best choice of $\\rho$ will be determined later.\nGiven an instance ${\\cal I}$ of $k$-DCP we construct an instance ${\\cal J}$ of MS-OPT, consisting of a task graph $G$ and a bias factor $\\beta$, having the following two properties. \n(a)~If ${\\cal I}$ has a solution, then $G$ has a subgraph that is motivating for a reward of $r=1/\\beta$.\n(b)~If ${\\cal I}$ does not have a solution, then no subgraph of $G$ is motivating for a reward of at most $r=\\rho /\\beta$.\nHence any algorithm that achieves an approximation ratio of $\\rho$ or better must solve instances of $k$-DCP. \n\nWe begin with the description of ${\\cal J}$.\nAs before an instance of ${\\cal I}$ is specified by a graph $H$ together with $k$ vertex pairs $(s_1,t_1), \\ldots, (s_k,t_k)$. \nConsidering that Proposition~\\ref{prop:alg2} gives a $(1/\\beta)$-approximation, the bias factor of ${\\cal J}$ cannot be chosen arbitrarily anymore.\nIt must be less than $1/\\rho$.\nFor convenience we set $\\beta=1/(3\\rho+3)$.\nFrom a structural point of view $G$ of ${\\cal J}$ consists of two units, a {\\em central unit\\/} and an {\\em amplification unit\\/}.\nThe central unit contains an embedding of $H$.\nThe amplification unit precedes the central unit and increases any approximation error that might occur in the central unit. \n\n\\begin{figure}[t]\n\\center\n\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (-0.3,0) [label=left:\\small{$u_{9\\rho^2}$}] {};\n\t\t\t\\node[nst] (v2) at (2.25,0) [label=above left:\\small{$v_1$}] {};\n\t\t\t\\node[nst] (v3) at (4.5,0) [label=above left:\\small{$v_2$}] {};\n\t\t\t\\node[nst] (v4) at (6.75,0) [label=above left:\\small{$v_{k}$}] {};\n\t\t\t\\node[nst] (v5) at (9,0) [label=right:\\small{$v_{k+1}$}] {};\n\t\t\t\\node[nst] (v6) at (9,1.5) [label=right:\\small{$v_{k+2}$}] {};\n\t\t\t\\node[nst] (v7) at (9,3) [label=right:\\small{$v_{k+3\\rho+3}$}] {};\n\t\t\t\\node[nst] (v8) at (9,4.5) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v9) at (2.25,1.5) [label=right:\\small{$w_1$}] {};\n\t\t\t\\node[nst] (v10) at (4.5,1.5) [label=right:\\small{$w_2$}] {};\n\t\t\t\\node[nst] (v11) at (6.75,1.5) [label=right:\\small{$w_k$}] {};\n\t\t\t\\node[nst] (v12) at (2.25,3) [label=right:\\small{$s_1$}] {};\n\t\t\t\\node[nst] (v13) at (4.5,3) [label=right:\\small{$s_2$}] {};\n\t\t\t\\node[nst] (v14) at (6.75,3) [label=right:\\small{$s_k$}] {};\n\t\t\t\\node[nst] (v15) at (2.25,4.5) [label=right:\\small{$t_1$}] {};\n\t\t\t\\node[nst] (v16) at (4.5,4.5) [label=right:\\small{$t_2$}] {};\n\t\t\t\\node[nst] (v17) at (6.75,4.5) [label=right:\\small{$t_k$}] {};\n\t\t\n\t\t\t\n\t\t\t\\draw[dashed] plot [smooth cycle] coordinates {(1.75,2.85) (4.5,2.525) (7.25,2.85) (7.25,4.65) (4.5,4.975) (1.75,4.65)};\t\n\t\t\t\\node at (4.5,3.75) {$H$};\n\t\t\t\\node at (5.625,0) {$\\dots$};\n\t\t\t\\node at (5.625,6) {$\\dots$};\n\t\t\t\\node at (9,2.35) {$\\vdots$};\n\t\t\t\n\t\t\t\n\t\t\t\\path (v1) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v2)\n\t\t\t(v2) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v3)\n\t\t\t(v3) edge (5,0)\n\t\t\t(6.25,0) edge[est] (v4)\n\t\t\t(v4) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v5)\n\t\t\t(v5) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v6)\n\t\t\t(v6) edge (9,1.875)\n\t\t\t(9,2.625) edge[est] (v7)\n\t\t\t(v7) edge[est] node [right] {\\small{$1$}} (v8)\n\t\t\t(v2) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v9)\t\t\n\t\t\t(v3) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v10)\n\t\t\t(v4) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v11)\n\t\t\t(v9) edge[est] node [right] {\\small{$\\frac{k(1 - \\beta)^{3\\rho+1}}{k+1}$}} (v12)\t\t\n\t\t\t(v10) edge[est] node [right] {\\small{$\\frac{(k-1)(1-\\beta)^{3\\rho+1}}{k+1}$}} (v13)\n\t\t\t(v11) edge[est] node [right] {\\small{$\\frac{(1-\\beta)^{3\\rho+1}}{k+1}$}} (v14)\n\t\t\t(v17) edge node [right] {\\small{$\\frac{k(1-\\beta)^{3\\rho+1}}{k+1}$}} (6.75,6)\t\t\n\t\t\t(v16) edge node [right] {\\small{$\\frac{2(1-\\beta)^{3\\rho+1}}{k+1}$}} (4.5,6)\n\t\t\t(v15) edge node [right] {\\small{$\\frac{(1-\\beta)^{3\\rho+1}}{k+1}$}} (2.25,6)\n\t\t\t(2.25,6) edge  (5,6)\n\t\t\t(6.25,6) edge  (9,6)\n\t\t\t(9,6) edge[est] node [right] {\\small{$+\\sum\\limits_{j=0}^{3\\rho}(1-\\beta)^j$}} (v8);\n\t\t\t\n\\end{tikzpicture}\n\\caption{The central unit of $G$.}\\label{fig:g2}\n\\end{figure}\n\nThe central unit, depicted in Figure~\\ref{fig:g2}, has the same overall structure as the graph constructed in the proof of Theorem~\\ref{th:comp}.\nThere exists a {\\em main path} and $k$ {\\em shortcuts}, linking to an embedding of $H$.\nHowever, there are important differences.\nThe main path is longer and edge costs are different. \nMore specifically the main path starts at a vertex $u_{9\\rho^2}$, which is the last vertex of the amplification unit, and ends at vertex $t$.\nThe path consists of $k+3\\rho+3$ intermediate vertices $v_1, \\ldots, v_{k+3\\rho+3}$.\nThe first $k+1$ edges of the main path each have a cost of $(1-\\beta)^{3\\rho+3} -\\varepsilon$, where $\\varepsilon$ is a positive value satisfying\n", "index": 19, "text": "\n\\[\\varepsilon < \\min\\biggl\\{\\beta\\frac{(1-\\beta)^{3\\rho+1}}{k+1}, \\beta\\frac{(1-\\beta)^{3\\rho+3}}{1+\\beta}, \\frac{1}{1+\\rho}, (1-\\beta)^{3\\rho+3}-\\frac{1}{3}\\biggr\\}.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10.m1\" class=\"ltx_Math\" alttext=\"\\varepsilon&lt;\\min\\biggl{\\{}\\beta\\frac{(1-\\beta)^{3\\rho+1}}{k+1},\\beta\\frac{(1-%&#10;\\beta)^{3\\rho+3}}{1+\\beta},\\frac{1}{1+\\rho},(1-\\beta)^{3\\rho+3}-\\frac{1}{3}%&#10;\\biggr{\\}}.\" display=\"block\"><mrow><mrow><mi>\u03b5</mi><mo>&lt;</mo><mrow><mi>min</mi><mo>\u2061</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">{</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>1</mn></mrow></msup><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><mo>,</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mrow><mn>1</mn><mo>+</mo><mi>\u03b2</mi></mrow></mfrac></mrow><mo>,</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>\u03c1</mi></mrow></mfrac><mo>,</mo><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nsee Lemma~\\ref{lem:rho} for the second inequality, and therefore the agent abandons. \nSimilarly, if the agent leaves at some $v_i$, with $1 \\leq i \\leq k$, then it must pass one of the vertices $t_j$, where the perceived cost is greater than $\\sum_{j=0}^{3\\rho} (1-\\beta)^j$ and consequently also greater than $\\rho$.\nHence, we will restrict ourselves of subgraphs $G'$ in which the amplification path and main path are intact and assume that the agent walks them.\n\nWe say that the $i$-th shortcut is {\\em degenerate\\/} if the cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is different from the target value $\\theta = \\sum_{j=0}^{3\\rho+2} (1-\\beta)^j$.\nIn particular, the $i$-th shortcut is degenerate if there is no such path.\nNote that by construction, every degenerate shortcut must miss the target value by $(1-\\beta)^{3\\rho+1}/(k+1)$ or more.\nAs in the proof of Theorem~\\ref{th:comp}, the assumption that ${\\cal I}$ has no solution implies the existence of a degenerate shortcut.\nBy the same argument given in Theorem~\\ref{th:comp}, it is also clear that if there is a degenerate shortcut of cost less than $\\theta$, the agent leaves the main path and abandons.\nIn the remainder of the analysis of (b) we therefore assume that for all shortcuts $i$, the cost of a cheapest path from $v_i$ to $t$ via $(v_i, w_i)$ is greater than $\\theta$. \nWe distinguish two cases depending on whether or not the first shortcut is degenerate. \n\nIf the first shortcut is not degenerate, then there exists an integer $i$, with $1<i\\leq k$, such that the $(i-1)$-st shortcut is not degenerate but shortcut $i$ is.\nWhen the agent resides at $v_{i-1}$ and plans a cheapest path along $(v_{i-1}, w_{i-1})$, it perceives a cost of $1$. \nIn contrast, traversing $(v_{i-1},v_i)$ and taking the next shortcut $i$, has a perceives a cost of at least \n", "itemtype": "equation", "pos": 52590, "prevtext": " \nNote that $(1-\\beta)^{3\\rho+3}-1/3$ is a positive quantity according to Lemma~\\ref{lem:rho}.\nThe remaining edges of the main path have increasing cost.\nIn particular, we set the cost of $(v_i,v_{i+1})$, with $k < i \\leq k+3\\rho+3$, to $(1-\\beta)^{k+3\\rho+3-i}$.\nEach of the first $k$ vertices $v_i$ is the starting point of a shortcut.\nSimilar to the construction in Theorem~\\ref{th:comp}, the $i$-th shortcut is routed through a distinct vertex $w_i$ before it enters the emending of $H$ and eventually reaches $t$.\nThe edges $(v_i,w_i)$ have a cost of $(1-\\beta)^{3\\rho+2}$.\nFurthermore, the edges $(w_i,s_i)$ and $(t_i,t)$ are of cost $(k+1-i)(1-\\beta)^{3\\rho+1}/(k+1)$ and $i(1-\\beta)^{3\\rho+1}/(k+1)+ \\sum_{j=0}^{3\\rho} (1-\\beta)^j$ respectively.\nIn Figure~\\ref{fig:g2}, the later edge cost is shown as two terms, namely $i(1-\\beta)^{3\\rho+1}/(k+1)$ and $\\sum_{j=0}^{3\\rho} (1-\\beta)^j$, in order to keep the labels of the parallel edges $(t_i,t)$ simple.\nNote that for $1 \\leq i \\leq k$, the costs of $(v_i,s_i)$ and $(t_i,t)$ sum to exactly $\\sum_{j=0}^{3\\rho+1} (1-\\beta)^j$.\nAll edges of $H$ have cost~0.\n\n\\begin{figure}[t]\n\\center\n\t\t\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (-0.3,0) [label=left:\\small{$s$}] {};\n\t\t\t\\node[nst] (v2) at (2.25,0) [label=above left:\\small{$u_1$}] {};\n\t\t\t\\node[nst] (v3) at (4.5,0) [label=above left:\\small{$u_2$}] {};\n\t\t\t\\node[nst] (v4) at (6.75,0) [label=above left:\\small{$u_{9\\rho^2}$}] {};\n\t\t\t\\node[nst] (v5) at (6.75,3) [label=above:\\small{$z$}] {};\n\t\t\t\\node[nst] (v6) at (9,3) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v7) at (9,0) [label=right:\\small{$v_1$}] {};\n\t\t\t\n\t\t\t\n\t\t\t\\node at (5.625,0) {$\\dots$};\n\t\t\t\\node at (5.625,3) {$\\dots$};\t\n\t\t\n\t\t\t\n\t\t\t\\path (v1) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v2)\n\t\t\t(v2) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v3)\n\t\t\t(v3) edge (5,0)\n\t\t\t(6.25,0) edge[est] (v4)\n\t\t\t(v2) edge node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (2.25,3)\n\t\t\t(v3) edge node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (4.5,3)\n\t\t\t(v4) edge[est] node [right] {\\small{$(1-\\beta)^{3\\rho+2}$}} (v5)\n\t\t\t(2.25,3) edge (5,3)\n\t\t\t(6.25,3) edge[est] (v5)\n\t\t\t(v5) edge[est] node [above] {\\small{$\\sum\\limits_{j=0}^{3\\rho+1}(1-\\beta)^j$}} (v6)\n\t\t\t(v4) edge[est] node [below] {\\small{$(1-\\beta)^{3\\rho+3}-\\varepsilon$}} (v7);\n\t\t\t\n\t\t\\end{tikzpicture}\n\\caption{The amplification unit of $G$.}\\label{fig:g3}\n\\end{figure}\n\nNext we describe the amplification unit, which is shown in Figure~\\ref{fig:g3}. \nStarting at vertex $s$, there is a directed path to $u_{9\\rho^2}$, called the {\\em amplification path}, that consists of intermediate vertices $u_1, \\ldots, u_{9\\rho^2-1}$.\nEach edge of the amplification path has a cost of $(1-\\beta)^{3\\rho+3}-\\varepsilon$. \nFrom every $u_i$, there is also an edge to a vertex $z$ of cost $(1-\\beta)^{3\\rho+2}$.\nVertex $z$ is connected to $t$ via an edge of cost $\\sum_{j=0}^{3\\rho+1} (1-\\beta)^j$.\nIn the following we prove the statements given in (a) and (b) above.\n\n(a)~Assume that ${\\cal I}$ has a solution. \nLet $G'$ be the subgraph of $G$ obtained by deleting all edges from the embedding of $H$ that do not belong to one of the $k$ vertex-disjoint paths in a fixed solution of ${\\cal I}$. \nWe claim that $G'$ is motivating with reward $r=1/\\beta$.\nRemember that the agent perceives $r$ as $1$ on all vertices of $G$ except for $t$.\nFurthermore, we will use Lemma~\\ref{lem:geoseries} to calculate the agent's perceived cost if not stated explicitly otherwise.\nLet $u_0=s$. \nAt every vertex $u_i$, with $i < 9\\rho^2$, the agent's perceived cost for moving to $u_{i+1}$ and then directly to $t$, hence traversing edges $(u_i,u_{i+1})$, $(u_{i+1},z)$ and $(z,t)$, is $1-\\varepsilon$.\nConversely, when residing at $u_i$, with $i \\leq 9\\rho^2$, the agent's perceived cost in moving directly to $t$ using edges $(u_{i+1},z)$ and $(z,t)$ is $1$.\nThus the agent moves along the edges of the amplification path, until it reaches $u_{9\\rho^2}$.\nAt $u_{9\\rho^2}$ the agent moves on to $u_1$ because its perceived cost in traversing $(u_{9\\rho^2},v_1)$ and then following the first shortcut, which starts at $v_1$, is $1-\\varepsilon$.\nSimilarly, when located at $v_i$, with $1\\leq i<k$, agent perceives cost of $1-\\varepsilon$ for traversing $(v_i,v_{i+1})$ and then taking the $(i+1)$-st shortcut.\nIn contrast, planning a path along $(v_i,w_i)$, with $1\\leq i\\leq k$, has a cost of $1$.\nThus the agent follows the main path until reaching $v_{k}$. \nBy the same calculations, the agent moves to $v_{k+1}$. \nAt this point the agent has no other option but to follow the main path.\nBecause the agent's perceived cost is $1$ for all vertices $v_{i}$, with $k<1\\leq k+3\\rho+3$, it eventually reaches $t$.\n\n(b)~Suppose that ${\\cal I}$ does not have a solution and consider any subgraph $G'$ of $G$. \nWe first argue that if the agent leaves the amplification path or main path, then it abandons given a reward of at most $\\rho/\\beta$, which is perceived as $\\rho$ at every vertex different from $t$.\nIf the agent leaves at some $u_i$, it must pass $z$ where it perceives cost of $\\sum_{j=0}^{3\\rho+1} (1-\\beta)^j$.\nHowever, it holds that\n", "index": 21, "text": "\n\\[\\sum_{j=0}^{3\\rho+1} (1-\\beta)^j = \\sum_{j=0}^{3\\rho+1} \\biggl(1 - \\frac{1}{3\\rho+3}\\biggr)^j > \\sum_{j=0}^{3\\rho+1} \\biggl(1 - \\frac{1}{3\\rho+3}\\biggr)^{3\\rho+3} > \\sum_{j=0}^{3\\rho+1} \\frac{1}{3} > \\rho,\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m1\" class=\"ltx_Math\" alttext=\"\\sum_{j=0}^{3\\rho+1}(1-\\beta)^{j}=\\sum_{j=0}^{3\\rho+1}\\biggl{(}1-\\frac{1}{3%&#10;\\rho+3}\\biggr{)}^{j}&gt;\\sum_{j=0}^{3\\rho+1}\\biggl{(}1-\\frac{1}{3\\rho+3}\\biggr{)}%&#10;^{3\\rho+3}&gt;\\sum_{j=0}^{3\\rho+1}\\frac{1}{3}&gt;\\rho,\" display=\"block\"><mrow><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>1</mn></mrow></munderover><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>j</mi></msup></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>1</mn></mrow></munderover><msup><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mn>1</mn><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow><mi>j</mi></msup></mrow><mo>&gt;</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>1</mn></mrow></munderover><msup><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mn>1</mn><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup></mrow><mo>&gt;</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>1</mn></mrow></munderover><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><mo>&gt;</mo><mi>\u03c1</mi></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nThe inequality holds by the choice of $\\varepsilon$.\nMoreover, there are no degenerate shortcuts of cost less than $\\theta$.\nThus traversing $(v_{i-1},v_i)$ and continuing further on the main path, possibly taking a subsequent shortcut, the agent's perceived cost is at least \n", "itemtype": "equation", "pos": 54641, "prevtext": "\nsee Lemma~\\ref{lem:rho} for the second inequality, and therefore the agent abandons. \nSimilarly, if the agent leaves at some $v_i$, with $1 \\leq i \\leq k$, then it must pass one of the vertices $t_j$, where the perceived cost is greater than $\\sum_{j=0}^{3\\rho} (1-\\beta)^j$ and consequently also greater than $\\rho$.\nHence, we will restrict ourselves of subgraphs $G'$ in which the amplification path and main path are intact and assume that the agent walks them.\n\nWe say that the $i$-th shortcut is {\\em degenerate\\/} if the cost of a cheapest path from $v_i$ to $t$ via $(v_i,w_i)$ is different from the target value $\\theta = \\sum_{j=0}^{3\\rho+2} (1-\\beta)^j$.\nIn particular, the $i$-th shortcut is degenerate if there is no such path.\nNote that by construction, every degenerate shortcut must miss the target value by $(1-\\beta)^{3\\rho+1}/(k+1)$ or more.\nAs in the proof of Theorem~\\ref{th:comp}, the assumption that ${\\cal I}$ has no solution implies the existence of a degenerate shortcut.\nBy the same argument given in Theorem~\\ref{th:comp}, it is also clear that if there is a degenerate shortcut of cost less than $\\theta$, the agent leaves the main path and abandons.\nIn the remainder of the analysis of (b) we therefore assume that for all shortcuts $i$, the cost of a cheapest path from $v_i$ to $t$ via $(v_i, w_i)$ is greater than $\\theta$. \nWe distinguish two cases depending on whether or not the first shortcut is degenerate. \n\nIf the first shortcut is not degenerate, then there exists an integer $i$, with $1<i\\leq k$, such that the $(i-1)$-st shortcut is not degenerate but shortcut $i$ is.\nWhen the agent resides at $v_{i-1}$ and plans a cheapest path along $(v_{i-1}, w_{i-1})$, it perceives a cost of $1$. \nIn contrast, traversing $(v_{i-1},v_i)$ and taking the next shortcut $i$, has a perceives a cost of at least \n", "index": 23, "text": "\n\\[(1-\\beta)^{3\\rho+3} -\\varepsilon + \\beta\\biggl(\\sum_{j=0}^{3\\rho+2} (1-\\beta)^j + \\frac{(1-\\beta)^{3\\rho+1}}{k+1}\\biggr)= 1 + \\beta\\frac{(1-\\beta)^{3\\rho+1}}{k+1}-\\varepsilon >1.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{3\\rho+3}-\\varepsilon+\\beta\\biggl{(}\\sum_{j=0}^{3\\rho+2}(1-\\beta)^{j%&#10;}+\\frac{(1-\\beta)^{3\\rho+1}}{k+1}\\biggr{)}=1+\\beta\\frac{(1-\\beta)^{3\\rho+1}}{k%&#10;+1}-\\varepsilon&gt;1.\" display=\"block\"><mrow><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>2</mn></mrow></munderover><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>j</mi></msup></mrow><mo>+</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>1</mn></mrow></msup><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mrow><mn>1</mn><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>1</mn></mrow></msup><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow></mrow><mo>-</mo><mi>\u03b5</mi></mrow><mo>&gt;</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nAgain, the inequality holds by choice of $\\varepsilon$. \nThus the agent leaves the main path at $v_{i-1}$ and abandons.\n\nFinally, we study the case that the first shortcut is degenerate with cost of a cheapest path from $v_1$ to $t$ via $(v_1,w_1)$ greater than $\\theta$.\nLet $i$ be highest index of a vertex on the amplification path such that $u_i$ is connected to $t$ via $(u_i,z)$ and $(z,t)$ in $G'$.\nThe perceived cost of such a path is $1$.\nConversely, any path along $(u_i,u_{i+1})$, or $(u_{9\\rho^2},v_1)$ assuming $i= 9\\rho^2$, has a perceived cost greater than $1$ as calculated in the last paragraph. \nThus the agent leaves the amplification path and abandons. \nHowever, if no $u_i$ is connected to $t$ via $(u_i,z)$ and $(z,t)$, then the agent's lowest perceived cost at $s$ is lower bounded by\n", "itemtype": "equation", "pos": 55101, "prevtext": "\nThe inequality holds by the choice of $\\varepsilon$.\nMoreover, there are no degenerate shortcuts of cost less than $\\theta$.\nThus traversing $(v_{i-1},v_i)$ and continuing further on the main path, possibly taking a subsequent shortcut, the agent's perceived cost is at least \n", "index": 25, "text": "\n\\[(1-\\beta)^{3\\rho+3} -\\varepsilon + \\beta\\biggl((1-\\beta)^{3\\rho+3} -\\varepsilon + \\sum_{j=0}^{3\\rho+2} (1-\\beta)^j\\biggr) = 1+ (1+\\beta)\\biggl(\\beta\\frac{(1-\\beta)^{3\\rho+3}}{1 + \\beta}- \\varepsilon\\biggr)>1.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{3\\rho+3}-\\varepsilon+\\beta\\biggl{(}(1-\\beta)^{3\\rho+3}-\\varepsilon+%&#10;\\sum_{j=0}^{3\\rho+2}(1-\\beta)^{j}\\biggr{)}=1+(1+\\beta)\\biggl{(}\\beta\\frac{(1-%&#10;\\beta)^{3\\rho+3}}{1+\\beta}-\\varepsilon\\biggr{)}&gt;1.\" display=\"block\"><mrow><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>2</mn></mrow></munderover><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>j</mi></msup></mrow></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mn>1</mn><mo>+</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>+</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mrow><mi>\u03b2</mi><mo>\u2062</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mrow><mn>1</mn><mo>+</mo><mi>\u03b2</mi></mrow></mfrac></mrow><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>&gt;</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nTaking into account that $\\beta = 1/(3\\rho+3)$, we can further simplify this term to\n", "itemtype": "equation", "pos": 56122, "prevtext": "\nAgain, the inequality holds by choice of $\\varepsilon$. \nThus the agent leaves the main path at $v_{i-1}$ and abandons.\n\nFinally, we study the case that the first shortcut is degenerate with cost of a cheapest path from $v_1$ to $t$ via $(v_1,w_1)$ greater than $\\theta$.\nLet $i$ be highest index of a vertex on the amplification path such that $u_i$ is connected to $t$ via $(u_i,z)$ and $(z,t)$ in $G'$.\nThe perceived cost of such a path is $1$.\nConversely, any path along $(u_i,u_{i+1})$, or $(u_{9\\rho^2},v_1)$ assuming $i= 9\\rho^2$, has a perceived cost greater than $1$ as calculated in the last paragraph. \nThus the agent leaves the amplification path and abandons. \nHowever, if no $u_i$ is connected to $t$ via $(u_i,z)$ and $(z,t)$, then the agent's lowest perceived cost at $s$ is lower bounded by\n", "index": 27, "text": "\n\\[(1-\\beta)^{3\\rho+3}-\\varepsilon +\\beta\\biggl(9\\rho^2\\bigl((1-\\beta)^{3\\rho+3}-\\varepsilon\\bigr)+\\sum_{j=0}^{3\\rho+2} (1-\\beta)^j\\biggr) = 1 - \\varepsilon + 9\\beta\\rho^2\\bigl((1-\\beta)^{3\\rho+3}-\\varepsilon\\bigr)\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m1\" class=\"ltx_Math\" alttext=\"(1-\\beta)^{3\\rho+3}-\\varepsilon+\\beta\\biggl{(}9\\rho^{2}\\bigl{(}(1-\\beta)^{3%&#10;\\rho+3}-\\varepsilon\\bigr{)}+\\sum_{j=0}^{3\\rho+2}(1-\\beta)^{j}\\biggr{)}=1-%&#10;\\varepsilon+9\\beta\\rho^{2}\\bigl{(}(1-\\beta)^{3\\rho+3}-\\varepsilon\\bigr{)}\" display=\"block\"><mrow><mrow><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mrow><mn>9</mn><mo>\u2062</mo><msup><mi>\u03c1</mi><mn>2</mn></msup><mo>\u2062</mo><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow></mrow><mo>+</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>2</mn></mrow></munderover><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>j</mi></msup></mrow></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mn>9</mn><mo>\u2062</mo><mi>\u03b2</mi><mo>\u2062</mo><msup><mi>\u03c1</mi><mn>2</mn></msup><mo>\u2062</mo><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nOnce more, the two inequalities hold by choice of $\\varepsilon$.\nHence $G'$ is not motivating for a reward of at most $\\rho/\\beta$.\n\nIn order to finish the proof of the theorem we have to determine $\\rho$. \nWe set $\\rho = m$, where $m$ is the number of vertices in $H$. \nThe total number of vertices in $G$ is $n=2 + (9m^2+1)+(m+2k+3m+3)$. \nThe first term accounts for $s$ and $t$, the following bracket accounts for the number of vertices in the amplification unit and the last bracket accounts for the number of vertices in the central unit.\nThus we have presented a polynomial-time reduction.\nMoreover, it holds that $n\\leq 9m^2+6m+6 < 16m^2$ for every $m\\geq2$, which means that $\\rho$ is lower bounded by $1/4 \\sqrt{n}$.\n\\end{proof}\n\n\n\n\n\n\\section{Motivation through intermediate rewards}\\label{sec:ir}\nIn this section, we generalize the original model of Kleinberg and Oren~\\cite{KO} to incorporate the placement of rewards on arbitrary vertices instead of just $t$. \nThe goal is to minimize the total value of the rewards collected by the agent as it travels from $s$ to $t$. \nThe problem of finding an optimal reward configuration can be solved in polynomial-time if $\\beta=0$ or $\\beta =1$.\nWe prove that, for general $\\beta\\in(0,1)$, the corresponding decision problem, which we call MOTIVATING REWARD CONFIGURATION (MRC), is NP-complete. \nFurthermore, we show that the optimization version MRC-OPT, is NP-hard to approximate within any ratio greater or equal to $1$.\n\n\\begin{proposition}\\label{prop:mrc}\nAn optimal reward configuration can be found in polynomial time for $\\beta=0$ or $\\beta=1$. \n\\end{proposition}\n\\begin{proof}\nFirst suppose that $\\beta=0$.\nIn this case the agent does not perceive rewards placed at any vertex of $G$ and will only traverse edges of cost~$0$. \nConsider the subset $V'$ of the vertices that can be reached from $s$ on a path of cost~$0$.\nThe agent will definitely travel from $s$ to $t$ and not abandon if and only if $t$ can be reached from every vertex of $V'$ on a path of cost~$0$.\nBecause no rewards need to be placed in this scenario, the optimal budget is $b=0$.\nNext assume $\\beta=1$.\nWhen the agent is at $s$, its lowest perceived cost for moving from $s$ to $t$ is equal to $d(s)$.\nSetting $r(t) = d(s)$ yields a motivating and also optimal reward configuration.\nThis holds true because the agent travels from $s$ to $t$ along the edges of a cheapest path and its lowest perceived cost do not increase on its walk. \n\\end{proof}\n\nWe now formally introduce the decision problem MRC.\n\n\\begin{definition}[MOTIVATING REWARD CONFIGURATION]\nGiven a task graph $G$, a non-negative budget $b$ and bias factor $\\beta\\in[0,1]$, decide the existence of a motivating reward configuration $r$, with $r(v) \\geq 0$ for all vertices of $G$, such that the total reward collected on any of the agent's walks is at most $b$.\n\\end{definition}\n\nThe following proposition establishes membership of MRC in NP.\n\n\\begin{proposition}\\label{prop:3}\nFor any task graph $G$, reward configuration $r$ and bias factor $\\beta$, it is possible to decided in polynomial-time if $r$ is motivating within a given budget of $b$.\n\\end{proposition}\n\\begin{proof}\nSimilar to Proposition~\\ref{prop:2}, we modify $G$ in the following way.\nFirst, we compute the lowest perceived cost $\\zeta_r(v)$ for all vertices in $G$.\nNext we take a copy of $G$, say $G'$, and remove all edges from $G'$ that do not minimize the agents perceived cost in the original graph $G$.\nMore formally, we remove all edges $(v,w)$ for which $\\zeta_r(v) < c_r(c) + \\beta(d_r(w)-r(w))$.\nThe given reward configuration $r$ is motivating if and only if $\\zeta_r(v) \\leq 0$ for all $v$ that can be reached from $s$ in $G'$.\nThis condition can be checked in polynomial-time using graph search algorithms.\nTo determine if the budget constraint is satisfied, we assign all edges $(v,w)$ of $G'$ a cost of $r(w)$.\nLet $c$ be the maximum cost among all paths from $s$ to $t$ in $G'$ according to these prices.\nBecause $G'$ is acyclic, $c$ can be computed in polynomial-time.\nThus $r$ is within budget if and only if $c + r(s) \\leq b$.\n\\end{proof}\n\nOur NP-completeness proof of MRC relies on a reduction form SET PACKING (SP)~\\cite{GJ}.\nFor convenience, we restate SP in the following Definition.\n\n\\begin{definition}[SET PACKING]\nGiven a collection $S_1, \\ldots, S_\\ell$ of finite sets and an integer $k\\leq \\ell$, decide if there exist at least $k$ mutually disjoint sets?.\n\\end{definition}\n\nWe are now ready to prove NP-completeness of MRC.\n\n\\begin{theorem}\\label{th:comp2}\nMRC is NP-complete, for any bias factor $\\beta \\in (0,1)$, even if $b=0$.\n\\end{theorem}\n\\begin{proof}\nBy Proposition~\\ref{prop:3}, we can take any motivating reward configuration $r$ within budge $b$ as certificate for a \"yes\"-instance of MRC.\nHence MRC is in NP.\nIn the following we present a polynomial-time reduction from SP to MRC.\nWe focus on the case that $b=0$.\nAt the end of the proof we show how to modify the reduction to handle arbitrary values $b>0$. \n\n\\begin{figure}[t]\n\\center\n\t\t\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (0,0) [label=left:\\small{$s$}] {};\t\n\t\t\t\\node[nst] (v2) at (0,1.5) [label=left:\\small{$v_{1,1}$}] {};\n\t\t\t\\node[nst] (v3) at (2.25,1.5) [label=left:\\small{$v_{1,2}$}] {};\n\t\t\t\\node[nst] (v4) at (4.5,1.5) [label=left:\\small{$v_{1,3}$}] {};\n\t\t\t\\node[nst] (v5) at (6.75,1.5) [label=left:\\small{$v_{1,4}$}] {};\n\t\t\t\\node[nst] (v6) at (0,4.5) [label=left:\\small{$v_{2,1}$}] {};\n\t\t\t\\node[nst] (v7) at (2.25,4.5) [label=left:\\small{$v_{2,2}$}] {};\n\t\t\t\\node[nst] (v8) at (4.5,4.5) [label=left:\\small{$v_{2,3}$}] {};\n\t\t\t\\node[nst] (v9) at (6.75,4.5) [label=left:\\small{$v_{2,4}$}] {};\n\t\t\t\\node[nst] (v10) at (6.75,6) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v11) at (1.125,1.5) [label=below:\\small{$w_{1,1}$}] {};\n\t\t\t\\node[nst] (v12) at (3.375,1.5) [label=below:\\small{$w_{1,2}$}] {};\n\t\t\t\\node[nst] (v13) at (5.625,1.5) [label=below:\\small{$w_{1,3}$}] {};\n\t\t\t\\node[nst] (v14) at (7.875,1.5) [label=below:\\small{$w_{1,4}$}] {};\n\t\t\t\\node[nst] (v15) at (1.126,4.5) [label=above:\\small{$w_{2,1}$}] {};\n\t\t\t\\node[nst] (v16) at (3.375,4.5) [label=above:\\small{$w_{2,2}$}] {};\n\t\t\t\\node[nst] (v17) at (5.625,4.5) [label=above:\\small{$w_{2,3}$}] {};\n\t\t\t\\node[nst] (v18) at (7.875,4.5) [label=above:\\small{$w_{2,4}$}] {};\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\\path (v1) edge (6.75,0)\n\t\t\t(v1) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v2)\n\t\t\t(2.25,0) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v3)\n\t\t\t(4.5,0) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v4)\n\t\t\t(6.75,0) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v5)\n\t\t\t(v2) edge (0,2.25)\t\t\t\n\t\t\t(v3) edge (2.25,2.25)\n\t\t\t(v4) edge (4.5,2.25)\n\t\t\t(v5) edge (6.75,2.25)\n\t\t\t(0,2.25) edge (6.75,2.25)\n\t\t\t(0,2.25) edge node [left] {\\small{$1-\\beta-\\varepsilon$}} (0,3.75)\n\t\t\t(0,3.75) edge (6.75,3.75)\n\t\t\t(0,3.75) edge[est] (v6)\n\t\t\t(2.25,3.75) edge[est] (v7)\n\t\t\t(4.5,3.75) edge[est] (v8)\n\t\t\t(6.75,3.75) edge[est] (v9)\n\t\t\t(v6) edge node [right] {\\small{$0$}} (0,6)\n\t\t\t(v7) edge node [right] {\\small{$0$}} (2.25,6)\n\t\t\t(v8) edge node [right] {\\small{$0$}} (4.5,6)\n\t\t\t(v9) edge node [right] {\\small{$0$}} (v10)\n\t\t\t(0,6) edge[est] (v10)\n\t\t\t(v2) edge[est] node [below] {\\small{$1$}} (v11)\n\t\t\t(v3) edge[est] node [below] {\\small{$1$}} (v12)\n\t\t\t(v4) edge[est] node [below] {\\small{$1$}} (v13)\n\t\t\t(v5) edge[est] node [below] {\\small{$1$}} (v14)\n\t\t\t(v6) edge[est] node [above] {\\small{$1$}} (v15)\n\t\t\t(v7) edge[est] node [above] {\\small{$1$}} (v16)\n\t\t\t(v8) edge[est] node [above] {\\small{$1$}} (v17)\n\t\t\t(v9) edge[est] node [above] {\\small{$1$}} (v18)\n\t\t\t(v6) edge[est,bend right=10, dashed] (v11)\n\t\t\t(v6) edge[est,bend right=10, dashed] (v12)\n\t\t\t(v6) edge[est,bend right=10, dashed] (v13)\n\t\t\t(v7) edge[est,bend left=10, dashed] (v11)\n\t\t\t(v7) edge[est,bend right=10, dashed] (v12)\n\t\t\t(v7) edge[est,bend right=10, dashed] (v13)\n\t\t\t(v7) edge[est,bend right=10, dashed] (v14)\n\t\t\t(v8) edge[est,bend left=10, dashed] (v11)\n\t\t\t(v8) edge[est,bend left=10, dashed] (v12)\n\t\t\t(v8) edge[est,bend right=10, dashed] (v13)\n\t\t\t(v8) edge[est,bend right=10, dashed] (v14)\n\t\t\t(v9) edge[est,bend left=10, dashed] (v12)\n\t\t\t(v9) edge[est,bend left=10, dashed] (v13)\n\t\t\t(v9) edge[est,bend right=10, dashed] (v14);\n\t\t\t\n\t\t\t\n\t\t\\end{tikzpicture}\n\\caption{The task graph for $S_1=\\{a,c,d\\}$, $S_2=\\{a,b\\}$, $S_3=\\{b,c,e\\}$, $S_4 = \\{b,e\\}$ and $k=2$.}\\label{fig:sp}\n\\end{figure}\n\nLet ${\\cal I}$ be an arbitrary instance of SP, consisting of finite sets $S_1, \\ldots, S_\\ell$ and an integer $k\\leq \\ell$.\nWe start by constructing the task graph $G$ of an MRC instance ${\\cal J}$. \nFigure~\\ref{fig:sp} depicts $G$ for a small sample instance of SP. \nIn general, $G$ consists of a source $s$, a target $t$ and $k\\ell$ vertices $v_{i,j}$, where $1\\leq i \\leq k$ and $1\\leq j\\leq \\ell$. \nIntuitively, if the agents visit $v_{i,j}$, then $S_j$ is the $i$-th set to be added to the solution of $\\mathcal{I}$. \nFor every $v_{i,j}$, with $i<k$, there is a directed edge to all vertices $v_{i+1,j'}$ on the next level. \nWe call these edges {\\em upward edges\\/}. \nThe cost of any such edge is $1-\\beta -\\varepsilon$. \nHere $\\beta\\in (0,1)$ is any value whose encoding length is polynomial in that of ${\\cal I}$. \nFurthermore, $\\varepsilon$ is a positive value satisfying \n", "itemtype": "equation", "pos": 56423, "prevtext": "\nTaking into account that $\\beta = 1/(3\\rho+3)$, we can further simplify this term to\n", "index": 29, "text": "\n\\[1 - \\varepsilon + 9\\rho^2\\frac{1/3 + ((1-\\beta)^{3\\rho+3} - 1/3 -\\varepsilon)}{3\\rho+3} > 1 - \\varepsilon + 9\\rho^2\\frac{1/3}{3\\rho+3} = \\rho + \\biggl(\\frac{1}{1+\\rho} - \\varepsilon \\biggr) > \\rho.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m1\" class=\"ltx_Math\" alttext=\"1-\\varepsilon+9\\rho^{2}\\frac{1/3+((1-\\beta)^{3\\rho+3}-1/3-\\varepsilon)}{3\\rho+%&#10;3}&gt;1-\\varepsilon+9\\rho^{2}\\frac{1/3}{3\\rho+3}=\\rho+\\biggl{(}\\frac{1}{1+\\rho}-%&#10;\\varepsilon\\biggr{)}&gt;\\rho.\" display=\"block\"><mrow><mrow><mrow><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mn>9</mn><mo>\u2062</mo><msup><mi>\u03c1</mi><mn>2</mn></msup><mo>\u2062</mo><mfrac><mrow><mrow><mn>1</mn><mo>/</mo><mn>3</mn></mrow><mo>+</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></msup><mo>-</mo><mrow><mn>1</mn><mo>/</mo><mn>3</mn></mrow><mo>-</mo><mi>\u03b5</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></mfrac></mrow></mrow><mo>&gt;</mo><mrow><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mn>9</mn><mo>\u2062</mo><msup><mi>\u03c1</mi><mn>2</mn></msup><mo>\u2062</mo><mfrac><mrow><mn>1</mn><mo>/</mo><mn>3</mn></mrow><mrow><mrow><mn>3</mn><mo>\u2062</mo><mi>\u03c1</mi></mrow><mo>+</mo><mn>3</mn></mrow></mfrac></mrow></mrow><mo>=</mo><mrow><mi>\u03c1</mi><mo>+</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>\u03c1</mi></mrow></mfrac><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow><mo>&gt;</mo><mi>\u03c1</mi></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nIn Figure~\\ref{fig:sp} the upward edges are merged to maintain readability. \nFrom $s$ there is a directed edge to every vertex $v_{1,j}$ on the bottom level.\nAgain, the cost of all such edges is $1-\\beta-\\varepsilon$.\nFinally, for every vertex $v_{k,j}$ on level $k$ there exists an edge of cost~$0$ to $t$. \n\nIn order guide the agent onto a specific upward edge, we add {\\em shortcuts\\/} to $G$ that connect every $v_{i,j}$ to $t$ via an intermediate vertex $w_{i,j}$.\nThe first edge $(v_{i,j},w_{i,j})$ has cost~$1$ and the second edge $(w_{i,j},t)$ has cost~$0$. \nIn Figure~\\ref{fig:sp} the edges $(w_{i,j},t)$ are omitted for the sake of a readability.\nAs we will see, a reward of value less than~$1/\\beta$ can be placed on $w_{i,j}$ and the agent will not claim it.\nFinally we introduce {\\em downward paths\\/} of length two that connect each $v_{i,j}$ with all $w_{i',j'}$ for which $i'<i$ and $S_j\\cap S_{j'}\\neq \\emptyset$, i.e.\\ the sets are not disjoint.\nThe first edge has a cost of~$0$, while the second edge has a cost of $(1-\\beta-k\\varepsilon)/(\\beta-\\beta^2)$. \nIn Figure~\\ref{fig:sp} each downward path is drawn as a single dashed edge.\nThe purpose of these paths is to let the agent claim a reward or abandon whenever the disjointness constraints of ${\\cal I}$ are violated.\nNotice that $G$ is acyclic.\nWe will show that ${\\cal I}$ has a solution if and only if ${\\cal J}$ has one.\n\n($\\Longrightarrow$) First assume that ${\\cal I}$ has a solution, i.e.\\ there exist $k$ mutually disjoint sets among $S_1, \\ldots, S_\\ell$.\nFix such a selection of $k$ disjoint sets and assign each set to a distinct level of $G$. \nSuppose that $S_j$ of the collection is assigned to level $i$. \nThen place a reward of value $(1-\\varepsilon)/\\beta$ on $w_{i,j}$.\nThe corresponding shortcut from $v_{i,j}$ is referred to as an {\\em active shortcut\\/}. \nWe now analyze the agent's walk through $G$ and show that it visits exactly the vertices $v_{i,j}$ at which the active shortcuts start.\nThe agent does not claim any reward.\n\nSuppose that the agent is located at the initial vertex $v_{i,j}$, with $i < k$, of an active shortcut.\nThere are three options.\nFirst the agent could follow the shortcut to $w_{i,j}$. \nHowever, the perceived cost along this path to $t$ is $\\varepsilon$, so the agent has no incentive to move to $w_{i,j}$.\nSecondly, the agent could take a downward path.\nBy construction, none of them leads to an active shortcut.\nThis means that the agent cannot collect any reward on such a path but encounters a positive cost on the downward path.\nHence this option is not motivating either.\nThe agent's only remaining option is to take an upward edge. \nIf the agent plans to take the active shortcut of level $i+1$, it perceives a total cost of $0$. \nThis is a motivating choice. \nConversely, assume that the agent plans a path $P$ to $t$ that visits a vertex $v_{i+1,j'}$ on the next level such that the corresponding shortcut is not active.\nWe distinguish between four scenarios.\nIf $P$ includes a downward path, then at best one reward can be located along $P$ so that the agent's perceived cost is at least \n", "itemtype": "equation", "pos": 65991, "prevtext": "\nOnce more, the two inequalities hold by choice of $\\varepsilon$.\nHence $G'$ is not motivating for a reward of at most $\\rho/\\beta$.\n\nIn order to finish the proof of the theorem we have to determine $\\rho$. \nWe set $\\rho = m$, where $m$ is the number of vertices in $H$. \nThe total number of vertices in $G$ is $n=2 + (9m^2+1)+(m+2k+3m+3)$. \nThe first term accounts for $s$ and $t$, the following bracket accounts for the number of vertices in the amplification unit and the last bracket accounts for the number of vertices in the central unit.\nThus we have presented a polynomial-time reduction.\nMoreover, it holds that $n\\leq 9m^2+6m+6 < 16m^2$ for every $m\\geq2$, which means that $\\rho$ is lower bounded by $1/4 \\sqrt{n}$.\n\\end{proof}\n\n\n\n\n\n\\section{Motivation through intermediate rewards}\\label{sec:ir}\nIn this section, we generalize the original model of Kleinberg and Oren~\\cite{KO} to incorporate the placement of rewards on arbitrary vertices instead of just $t$. \nThe goal is to minimize the total value of the rewards collected by the agent as it travels from $s$ to $t$. \nThe problem of finding an optimal reward configuration can be solved in polynomial-time if $\\beta=0$ or $\\beta =1$.\nWe prove that, for general $\\beta\\in(0,1)$, the corresponding decision problem, which we call MOTIVATING REWARD CONFIGURATION (MRC), is NP-complete. \nFurthermore, we show that the optimization version MRC-OPT, is NP-hard to approximate within any ratio greater or equal to $1$.\n\n\\begin{proposition}\\label{prop:mrc}\nAn optimal reward configuration can be found in polynomial time for $\\beta=0$ or $\\beta=1$. \n\\end{proposition}\n\\begin{proof}\nFirst suppose that $\\beta=0$.\nIn this case the agent does not perceive rewards placed at any vertex of $G$ and will only traverse edges of cost~$0$. \nConsider the subset $V'$ of the vertices that can be reached from $s$ on a path of cost~$0$.\nThe agent will definitely travel from $s$ to $t$ and not abandon if and only if $t$ can be reached from every vertex of $V'$ on a path of cost~$0$.\nBecause no rewards need to be placed in this scenario, the optimal budget is $b=0$.\nNext assume $\\beta=1$.\nWhen the agent is at $s$, its lowest perceived cost for moving from $s$ to $t$ is equal to $d(s)$.\nSetting $r(t) = d(s)$ yields a motivating and also optimal reward configuration.\nThis holds true because the agent travels from $s$ to $t$ along the edges of a cheapest path and its lowest perceived cost do not increase on its walk. \n\\end{proof}\n\nWe now formally introduce the decision problem MRC.\n\n\\begin{definition}[MOTIVATING REWARD CONFIGURATION]\nGiven a task graph $G$, a non-negative budget $b$ and bias factor $\\beta\\in[0,1]$, decide the existence of a motivating reward configuration $r$, with $r(v) \\geq 0$ for all vertices of $G$, such that the total reward collected on any of the agent's walks is at most $b$.\n\\end{definition}\n\nThe following proposition establishes membership of MRC in NP.\n\n\\begin{proposition}\\label{prop:3}\nFor any task graph $G$, reward configuration $r$ and bias factor $\\beta$, it is possible to decided in polynomial-time if $r$ is motivating within a given budget of $b$.\n\\end{proposition}\n\\begin{proof}\nSimilar to Proposition~\\ref{prop:2}, we modify $G$ in the following way.\nFirst, we compute the lowest perceived cost $\\zeta_r(v)$ for all vertices in $G$.\nNext we take a copy of $G$, say $G'$, and remove all edges from $G'$ that do not minimize the agents perceived cost in the original graph $G$.\nMore formally, we remove all edges $(v,w)$ for which $\\zeta_r(v) < c_r(c) + \\beta(d_r(w)-r(w))$.\nThe given reward configuration $r$ is motivating if and only if $\\zeta_r(v) \\leq 0$ for all $v$ that can be reached from $s$ in $G'$.\nThis condition can be checked in polynomial-time using graph search algorithms.\nTo determine if the budget constraint is satisfied, we assign all edges $(v,w)$ of $G'$ a cost of $r(w)$.\nLet $c$ be the maximum cost among all paths from $s$ to $t$ in $G'$ according to these prices.\nBecause $G'$ is acyclic, $c$ can be computed in polynomial-time.\nThus $r$ is within budget if and only if $c + r(s) \\leq b$.\n\\end{proof}\n\nOur NP-completeness proof of MRC relies on a reduction form SET PACKING (SP)~\\cite{GJ}.\nFor convenience, we restate SP in the following Definition.\n\n\\begin{definition}[SET PACKING]\nGiven a collection $S_1, \\ldots, S_\\ell$ of finite sets and an integer $k\\leq \\ell$, decide if there exist at least $k$ mutually disjoint sets?.\n\\end{definition}\n\nWe are now ready to prove NP-completeness of MRC.\n\n\\begin{theorem}\\label{th:comp2}\nMRC is NP-complete, for any bias factor $\\beta \\in (0,1)$, even if $b=0$.\n\\end{theorem}\n\\begin{proof}\nBy Proposition~\\ref{prop:3}, we can take any motivating reward configuration $r$ within budge $b$ as certificate for a \"yes\"-instance of MRC.\nHence MRC is in NP.\nIn the following we present a polynomial-time reduction from SP to MRC.\nWe focus on the case that $b=0$.\nAt the end of the proof we show how to modify the reduction to handle arbitrary values $b>0$. \n\n\\begin{figure}[t]\n\\center\n\t\t\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\n\t\t\t\\node[nst] (v1) at (0,0) [label=left:\\small{$s$}] {};\t\n\t\t\t\\node[nst] (v2) at (0,1.5) [label=left:\\small{$v_{1,1}$}] {};\n\t\t\t\\node[nst] (v3) at (2.25,1.5) [label=left:\\small{$v_{1,2}$}] {};\n\t\t\t\\node[nst] (v4) at (4.5,1.5) [label=left:\\small{$v_{1,3}$}] {};\n\t\t\t\\node[nst] (v5) at (6.75,1.5) [label=left:\\small{$v_{1,4}$}] {};\n\t\t\t\\node[nst] (v6) at (0,4.5) [label=left:\\small{$v_{2,1}$}] {};\n\t\t\t\\node[nst] (v7) at (2.25,4.5) [label=left:\\small{$v_{2,2}$}] {};\n\t\t\t\\node[nst] (v8) at (4.5,4.5) [label=left:\\small{$v_{2,3}$}] {};\n\t\t\t\\node[nst] (v9) at (6.75,4.5) [label=left:\\small{$v_{2,4}$}] {};\n\t\t\t\\node[nst] (v10) at (6.75,6) [label=right:\\small{$t$}] {};\n\t\t\t\\node[nst] (v11) at (1.125,1.5) [label=below:\\small{$w_{1,1}$}] {};\n\t\t\t\\node[nst] (v12) at (3.375,1.5) [label=below:\\small{$w_{1,2}$}] {};\n\t\t\t\\node[nst] (v13) at (5.625,1.5) [label=below:\\small{$w_{1,3}$}] {};\n\t\t\t\\node[nst] (v14) at (7.875,1.5) [label=below:\\small{$w_{1,4}$}] {};\n\t\t\t\\node[nst] (v15) at (1.126,4.5) [label=above:\\small{$w_{2,1}$}] {};\n\t\t\t\\node[nst] (v16) at (3.375,4.5) [label=above:\\small{$w_{2,2}$}] {};\n\t\t\t\\node[nst] (v17) at (5.625,4.5) [label=above:\\small{$w_{2,3}$}] {};\n\t\t\t\\node[nst] (v18) at (7.875,4.5) [label=above:\\small{$w_{2,4}$}] {};\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\\path (v1) edge (6.75,0)\n\t\t\t(v1) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v2)\n\t\t\t(2.25,0) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v3)\n\t\t\t(4.5,0) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v4)\n\t\t\t(6.75,0) edge[est] node [right] {\\small{$1-\\beta-\\varepsilon$}} (v5)\n\t\t\t(v2) edge (0,2.25)\t\t\t\n\t\t\t(v3) edge (2.25,2.25)\n\t\t\t(v4) edge (4.5,2.25)\n\t\t\t(v5) edge (6.75,2.25)\n\t\t\t(0,2.25) edge (6.75,2.25)\n\t\t\t(0,2.25) edge node [left] {\\small{$1-\\beta-\\varepsilon$}} (0,3.75)\n\t\t\t(0,3.75) edge (6.75,3.75)\n\t\t\t(0,3.75) edge[est] (v6)\n\t\t\t(2.25,3.75) edge[est] (v7)\n\t\t\t(4.5,3.75) edge[est] (v8)\n\t\t\t(6.75,3.75) edge[est] (v9)\n\t\t\t(v6) edge node [right] {\\small{$0$}} (0,6)\n\t\t\t(v7) edge node [right] {\\small{$0$}} (2.25,6)\n\t\t\t(v8) edge node [right] {\\small{$0$}} (4.5,6)\n\t\t\t(v9) edge node [right] {\\small{$0$}} (v10)\n\t\t\t(0,6) edge[est] (v10)\n\t\t\t(v2) edge[est] node [below] {\\small{$1$}} (v11)\n\t\t\t(v3) edge[est] node [below] {\\small{$1$}} (v12)\n\t\t\t(v4) edge[est] node [below] {\\small{$1$}} (v13)\n\t\t\t(v5) edge[est] node [below] {\\small{$1$}} (v14)\n\t\t\t(v6) edge[est] node [above] {\\small{$1$}} (v15)\n\t\t\t(v7) edge[est] node [above] {\\small{$1$}} (v16)\n\t\t\t(v8) edge[est] node [above] {\\small{$1$}} (v17)\n\t\t\t(v9) edge[est] node [above] {\\small{$1$}} (v18)\n\t\t\t(v6) edge[est,bend right=10, dashed] (v11)\n\t\t\t(v6) edge[est,bend right=10, dashed] (v12)\n\t\t\t(v6) edge[est,bend right=10, dashed] (v13)\n\t\t\t(v7) edge[est,bend left=10, dashed] (v11)\n\t\t\t(v7) edge[est,bend right=10, dashed] (v12)\n\t\t\t(v7) edge[est,bend right=10, dashed] (v13)\n\t\t\t(v7) edge[est,bend right=10, dashed] (v14)\n\t\t\t(v8) edge[est,bend left=10, dashed] (v11)\n\t\t\t(v8) edge[est,bend left=10, dashed] (v12)\n\t\t\t(v8) edge[est,bend right=10, dashed] (v13)\n\t\t\t(v8) edge[est,bend right=10, dashed] (v14)\n\t\t\t(v9) edge[est,bend left=10, dashed] (v12)\n\t\t\t(v9) edge[est,bend left=10, dashed] (v13)\n\t\t\t(v9) edge[est,bend right=10, dashed] (v14);\n\t\t\t\n\t\t\t\n\t\t\\end{tikzpicture}\n\\caption{The task graph for $S_1=\\{a,c,d\\}$, $S_2=\\{a,b\\}$, $S_3=\\{b,c,e\\}$, $S_4 = \\{b,e\\}$ and $k=2$.}\\label{fig:sp}\n\\end{figure}\n\nLet ${\\cal I}$ be an arbitrary instance of SP, consisting of finite sets $S_1, \\ldots, S_\\ell$ and an integer $k\\leq \\ell$.\nWe start by constructing the task graph $G$ of an MRC instance ${\\cal J}$. \nFigure~\\ref{fig:sp} depicts $G$ for a small sample instance of SP. \nIn general, $G$ consists of a source $s$, a target $t$ and $k\\ell$ vertices $v_{i,j}$, where $1\\leq i \\leq k$ and $1\\leq j\\leq \\ell$. \nIntuitively, if the agents visit $v_{i,j}$, then $S_j$ is the $i$-th set to be added to the solution of $\\mathcal{I}$. \nFor every $v_{i,j}$, with $i<k$, there is a directed edge to all vertices $v_{i+1,j'}$ on the next level. \nWe call these edges {\\em upward edges\\/}. \nThe cost of any such edge is $1-\\beta -\\varepsilon$. \nHere $\\beta\\in (0,1)$ is any value whose encoding length is polynomial in that of ${\\cal I}$. \nFurthermore, $\\varepsilon$ is a positive value satisfying \n", "index": 31, "text": "\n\\[\\varepsilon < \\min\\biggl\\{\\frac{(1-\\beta)^2}{k}, \\frac{\\beta-\\beta^2}{k-1+\\beta}\\biggr\\}.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16.m1\" class=\"ltx_Math\" alttext=\"\\varepsilon&lt;\\min\\biggl{\\{}\\frac{(1-\\beta)^{2}}{k},\\frac{\\beta-\\beta^{2}}{k-1+%&#10;\\beta}\\biggr{\\}}.\" display=\"block\"><mrow><mrow><mi>\u03b5</mi><mo>&lt;</mo><mrow><mi>min</mi><mo>\u2061</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">{</mo><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mi>k</mi></mfrac><mo>,</mo><mfrac><mrow><mi>\u03b2</mi><mo>-</mo><msup><mi>\u03b2</mi><mn>2</mn></msup></mrow><mrow><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo>+</mo><mi>\u03b2</mi></mrow></mfrac><mo maxsize=\"210%\" minsize=\"210%\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nwhich is not motivating.\nThe inequality follows from our choice of $\\varepsilon$.\nIf $P$ includes the shortcut at $v_{i+1,j'}$ then the agent encounters no reward but a positive cost, which is not motivating either.\nIf $P$ includes a shortcut on some level above $i+1$, then the agent must traverse at least two upward edges but can collect at most one reward.\nIn this case the agent's perceived cost is lower bounded by\n", "itemtype": "equation", "pos": 69208, "prevtext": "\nIn Figure~\\ref{fig:sp} the upward edges are merged to maintain readability. \nFrom $s$ there is a directed edge to every vertex $v_{1,j}$ on the bottom level.\nAgain, the cost of all such edges is $1-\\beta-\\varepsilon$.\nFinally, for every vertex $v_{k,j}$ on level $k$ there exists an edge of cost~$0$ to $t$. \n\nIn order guide the agent onto a specific upward edge, we add {\\em shortcuts\\/} to $G$ that connect every $v_{i,j}$ to $t$ via an intermediate vertex $w_{i,j}$.\nThe first edge $(v_{i,j},w_{i,j})$ has cost~$1$ and the second edge $(w_{i,j},t)$ has cost~$0$. \nIn Figure~\\ref{fig:sp} the edges $(w_{i,j},t)$ are omitted for the sake of a readability.\nAs we will see, a reward of value less than~$1/\\beta$ can be placed on $w_{i,j}$ and the agent will not claim it.\nFinally we introduce {\\em downward paths\\/} of length two that connect each $v_{i,j}$ with all $w_{i',j'}$ for which $i'<i$ and $S_j\\cap S_{j'}\\neq \\emptyset$, i.e.\\ the sets are not disjoint.\nThe first edge has a cost of~$0$, while the second edge has a cost of $(1-\\beta-k\\varepsilon)/(\\beta-\\beta^2)$. \nIn Figure~\\ref{fig:sp} each downward path is drawn as a single dashed edge.\nThe purpose of these paths is to let the agent claim a reward or abandon whenever the disjointness constraints of ${\\cal I}$ are violated.\nNotice that $G$ is acyclic.\nWe will show that ${\\cal I}$ has a solution if and only if ${\\cal J}$ has one.\n\n($\\Longrightarrow$) First assume that ${\\cal I}$ has a solution, i.e.\\ there exist $k$ mutually disjoint sets among $S_1, \\ldots, S_\\ell$.\nFix such a selection of $k$ disjoint sets and assign each set to a distinct level of $G$. \nSuppose that $S_j$ of the collection is assigned to level $i$. \nThen place a reward of value $(1-\\varepsilon)/\\beta$ on $w_{i,j}$.\nThe corresponding shortcut from $v_{i,j}$ is referred to as an {\\em active shortcut\\/}. \nWe now analyze the agent's walk through $G$ and show that it visits exactly the vertices $v_{i,j}$ at which the active shortcuts start.\nThe agent does not claim any reward.\n\nSuppose that the agent is located at the initial vertex $v_{i,j}$, with $i < k$, of an active shortcut.\nThere are three options.\nFirst the agent could follow the shortcut to $w_{i,j}$. \nHowever, the perceived cost along this path to $t$ is $\\varepsilon$, so the agent has no incentive to move to $w_{i,j}$.\nSecondly, the agent could take a downward path.\nBy construction, none of them leads to an active shortcut.\nThis means that the agent cannot collect any reward on such a path but encounters a positive cost on the downward path.\nHence this option is not motivating either.\nThe agent's only remaining option is to take an upward edge. \nIf the agent plans to take the active shortcut of level $i+1$, it perceives a total cost of $0$. \nThis is a motivating choice. \nConversely, assume that the agent plans a path $P$ to $t$ that visits a vertex $v_{i+1,j'}$ on the next level such that the corresponding shortcut is not active.\nWe distinguish between four scenarios.\nIf $P$ includes a downward path, then at best one reward can be located along $P$ so that the agent's perceived cost is at least \n", "index": 33, "text": "\n\\[1-\\beta -\\varepsilon + \\beta\\biggl(\\frac{1-\\beta-k\\varepsilon}{\\beta-\\beta^2} - \\frac{1-\\varepsilon}{\\beta}\\biggr) = \\frac{k}{1-\\beta}\\biggl(\\frac{(1-\\beta)^2}{k} - \\varepsilon\\biggr) >0,\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex17.m1\" class=\"ltx_Math\" alttext=\"1-\\beta-\\varepsilon+\\beta\\biggl{(}\\frac{1-\\beta-k\\varepsilon}{\\beta-\\beta^{2}}%&#10;-\\frac{1-\\varepsilon}{\\beta}\\biggr{)}=\\frac{k}{1-\\beta}\\biggl{(}\\frac{(1-\\beta%&#10;)^{2}}{k}-\\varepsilon\\biggr{)}&gt;0,\" display=\"block\"><mrow><mrow><mrow><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi><mo>-</mo><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03b5</mi></mrow></mrow><mrow><mi>\u03b2</mi><mo>-</mo><msup><mi>\u03b2</mi><mn>2</mn></msup></mrow></mfrac><mo>-</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow><mi>\u03b2</mi></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mfrac><mi>k</mi><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow></mfrac><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mi>k</mi></mfrac><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow><mo>&gt;</mo><mn>0</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nAs always, the last inequality follows by choice of $\\varepsilon$.\nFinally, $P$ may neither include a downward path nor a shortcut.\nHowever, this means that the agent has positive cost and does not collect any reward.\nAll in all, the only motivating option is to take the upward edge leading to the active shortcut of level $i+1$.\n\nThe same arguments also apply when the agent is at $s$ or the initial vertex of an active shortcut on the top level. \nAt $s$, the agents only option is to take an upward edge.\nHence it moves to the initial vertex of the active shortcut of the bottom level.\nAt the top level the agent will take the direct edge to $t$, which incurs no cost.\nAll other options, namely taking a downward path or the current shortcut, are not motivating.\n\n($\\Longleftarrow$) Next assume that ${\\cal J}$ has a solution, i.e.\\ there exists a motivating reward configuration such that the agent does not claim any reward.\nConsider arbitrary walks of the agent.\nA first crucial observation is that no such walk enters a shortcut or a downward path, because a positive reward on a vertex along these paths is needed to guide the agent onto them.\nConsidering that the agent cannot change its plan once it entered a shortcut or downward path, it would either claim the reward or abandon, which contradicts the assumption that ${\\cal J}$ has a solution. \nHence the agents visits one vertex $v_{i,j}$ at each level $i$. \nWe call every $v_{i,j}$ that is contained in one of the agent's possible walks an {\\em active vertices\\/}.\nNote that there might be more than one active vertex per level.\n\nWe next prove that at every active vertex the agent's lowest perceived cost at least $(1-k)\\varepsilon$. \nMore specifically, we show by backwards induction, from the top level down to the bottom level, that whenever the agent is located at an active vertex of level~$i$, its perceived cost in planing a path to $t$ is at least $(i-k)\\varepsilon$. \nMoreover, if $i<k$, then the only motivating paths are paths passing through the shortcuts of active vertices on level~$i+1$. \nFirst assume that the agent is at an active vertex $v_{k,j}$ on the top level. \nAs argued above, the agent cannot take the shortcut or downward path to $t$. \nHowever, the edge $(v_{k,j},t)$ is a motivating path with a perceived cost of $0$, which is equal to $(k-k)\\varepsilon$.\nThis proves the basis of our induction.\n\nFor the inductive step, suppose that $i<k$ and that the agent is located at some active vertex $v_{i,j}$.\nLet $v_{i+1,j'}$ be the active vertex visited next by the agent. \nBecause the agent will move from $v_{i,j}$ to $v_{i+1,j'}$, there must exist a path $P$ from $v_{i,j}$ to $t$ via $(v_{i,j},v_{i+1,j'})$ that minimizes the agent's perceived cost.\nWe distinguish four scenarios.\nFirst, assume that $i = k-1$  and $P$ contains $(v_{i+1,j'}, t)$.\nThis means that the agent receives no reward but has positive cost, which is not motivating.\nSecondly, assume $P$ contains a forward edge leaving $v_{i+1,j'}$ and consider the perceived cost of the remaining portion of $P$ when viewed from $v_{i+1,j'}$.\nBy induction hypothesis this cost must be at least $((i+1)-k)\\varepsilon$.\nFurthermore, no reward must be placed at $v_{i+1,j'}$, as this would violate the budget.\nThis means that the perceived cost of $P$ at $v_{i,j}$ increases by $\\beta (1-\\beta -\\varepsilon)$ when compared to the perceived cost of $P$ at $v_{i+1,j'}$.\nThus the perceived cost at of $P$ at $v_{i,j}$ is at least \n", "itemtype": "equation", "pos": 69821, "prevtext": "\nwhich is not motivating.\nThe inequality follows from our choice of $\\varepsilon$.\nIf $P$ includes the shortcut at $v_{i+1,j'}$ then the agent encounters no reward but a positive cost, which is not motivating either.\nIf $P$ includes a shortcut on some level above $i+1$, then the agent must traverse at least two upward edges but can collect at most one reward.\nIn this case the agent's perceived cost is lower bounded by\n", "index": 35, "text": "\n\\[1-\\beta -\\varepsilon + \\beta \\biggl((1-\\beta -\\varepsilon) + 1 - \\frac{1-\\varepsilon}{\\beta}\\biggr) = \\beta(1-\\beta-\\varepsilon) > \\beta\\biggl(\\frac{(1-\\beta)^2}{k}-\\varepsilon\\biggr) >0.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18.m1\" class=\"ltx_Math\" alttext=\"1-\\beta-\\varepsilon+\\beta\\biggl{(}(1-\\beta-\\varepsilon)+1-\\frac{1-\\varepsilon}%&#10;{\\beta}\\biggr{)}=\\beta(1-\\beta-\\varepsilon)&gt;\\beta\\biggl{(}\\frac{(1-\\beta)^{2}}%&#10;{k}-\\varepsilon\\biggr{)}&gt;0.\" display=\"block\"><mrow><mrow><mrow><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi><mo>-</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi><mo>-</mo><mi>\u03b5</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><mn>1</mn></mrow><mo>-</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow><mi>\u03b2</mi></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi><mo>-</mo><mi>\u03b5</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&gt;</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mfrac><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup><mi>k</mi></mfrac><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow><mo>&gt;</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nThe last inequality holds by choice of $\\varepsilon$.\nHence $P$ is not motivating.\nThirdly, assume $P$ contains a downward path out of $v_{i+1,j'}$.\nIn this case, the perceived cost of $P$ at $v_{i,j}$ compared to the perceived cost of $P$ at $v_{i+1,j'}$ increases by even more, namely $1-\\beta -\\varepsilon$.\nCertainly, $P$ can not be motivating.  \nFinally, assume $P$ contains the shortcut out of $v_{i+1,j'}$.\nWhen viewed from $v_{i,j}$ instead of $v_{i+1,j'}$, the perceived cost of $P$ increases by $1-\\beta -\\varepsilon$ and decreases by $1-\\beta$.\nThus the perceived cost is at least $((i+1)-k)\\varepsilon -\\varepsilon = (i-k)\\varepsilon$ which concludes the induction step.\nBy a similar argument, the only motivating paths out of $s$ traverse the shortcut of an active vertex on the bottom level.\n\nThe last three paragraphs imply that for every active vertex $v_{i,j}$ a reward of at least $(1-\\varepsilon)/\\beta$ has to be placed at $w_{i,j}$.\nOtherwise the shortcut would not be motivating when the agent resides at an active vertex on the previous level $i-1$, or at $s$ if $i=1$.\nThis implies that there can be no downward path connecting an active vertex $v_{i,j}$ to the shortcut of an active vertex on a lower level, because the perceived cost at $v_{i,j}$ for following the downward path would be at most\n", "itemtype": "equation", "pos": 73489, "prevtext": "\nAs always, the last inequality follows by choice of $\\varepsilon$.\nFinally, $P$ may neither include a downward path nor a shortcut.\nHowever, this means that the agent has positive cost and does not collect any reward.\nAll in all, the only motivating option is to take the upward edge leading to the active shortcut of level $i+1$.\n\nThe same arguments also apply when the agent is at $s$ or the initial vertex of an active shortcut on the top level. \nAt $s$, the agents only option is to take an upward edge.\nHence it moves to the initial vertex of the active shortcut of the bottom level.\nAt the top level the agent will take the direct edge to $t$, which incurs no cost.\nAll other options, namely taking a downward path or the current shortcut, are not motivating.\n\n($\\Longleftarrow$) Next assume that ${\\cal J}$ has a solution, i.e.\\ there exists a motivating reward configuration such that the agent does not claim any reward.\nConsider arbitrary walks of the agent.\nA first crucial observation is that no such walk enters a shortcut or a downward path, because a positive reward on a vertex along these paths is needed to guide the agent onto them.\nConsidering that the agent cannot change its plan once it entered a shortcut or downward path, it would either claim the reward or abandon, which contradicts the assumption that ${\\cal J}$ has a solution. \nHence the agents visits one vertex $v_{i,j}$ at each level $i$. \nWe call every $v_{i,j}$ that is contained in one of the agent's possible walks an {\\em active vertices\\/}.\nNote that there might be more than one active vertex per level.\n\nWe next prove that at every active vertex the agent's lowest perceived cost at least $(1-k)\\varepsilon$. \nMore specifically, we show by backwards induction, from the top level down to the bottom level, that whenever the agent is located at an active vertex of level~$i$, its perceived cost in planing a path to $t$ is at least $(i-k)\\varepsilon$. \nMoreover, if $i<k$, then the only motivating paths are paths passing through the shortcuts of active vertices on level~$i+1$. \nFirst assume that the agent is at an active vertex $v_{k,j}$ on the top level. \nAs argued above, the agent cannot take the shortcut or downward path to $t$. \nHowever, the edge $(v_{k,j},t)$ is a motivating path with a perceived cost of $0$, which is equal to $(k-k)\\varepsilon$.\nThis proves the basis of our induction.\n\nFor the inductive step, suppose that $i<k$ and that the agent is located at some active vertex $v_{i,j}$.\nLet $v_{i+1,j'}$ be the active vertex visited next by the agent. \nBecause the agent will move from $v_{i,j}$ to $v_{i+1,j'}$, there must exist a path $P$ from $v_{i,j}$ to $t$ via $(v_{i,j},v_{i+1,j'})$ that minimizes the agent's perceived cost.\nWe distinguish four scenarios.\nFirst, assume that $i = k-1$  and $P$ contains $(v_{i+1,j'}, t)$.\nThis means that the agent receives no reward but has positive cost, which is not motivating.\nSecondly, assume $P$ contains a forward edge leaving $v_{i+1,j'}$ and consider the perceived cost of the remaining portion of $P$ when viewed from $v_{i+1,j'}$.\nBy induction hypothesis this cost must be at least $((i+1)-k)\\varepsilon$.\nFurthermore, no reward must be placed at $v_{i+1,j'}$, as this would violate the budget.\nThis means that the perceived cost of $P$ at $v_{i,j}$ increases by $\\beta (1-\\beta -\\varepsilon)$ when compared to the perceived cost of $P$ at $v_{i+1,j'}$.\nThus the perceived cost at of $P$ at $v_{i,j}$ is at least \n", "index": 37, "text": "\n\\[\\bigl((i+1)-k\\bigr)\\varepsilon + \\beta (1-\\beta -\\varepsilon) = (k-(i+1)+\\beta)\\biggl(\\frac{\\beta-\\beta^2}{k-(i+1)+\\beta}-\\varepsilon\\biggr)>(k-(i+1)+\\beta)\\biggl(\\frac{\\beta-\\beta^2}{k-1+\\beta}-\\varepsilon\\biggr)>0.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex19.m1\" class=\"ltx_Math\" alttext=\"\\bigl{(}(i+1)-k\\bigr{)}\\varepsilon+\\beta(1-\\beta-\\varepsilon)=(k-(i+1)+\\beta)%&#10;\\biggl{(}\\frac{\\beta-\\beta^{2}}{k-(i+1)+\\beta}-\\varepsilon\\biggr{)}&gt;(k-(i+1)+%&#10;\\beta)\\biggl{(}\\frac{\\beta-\\beta^{2}}{k-1+\\beta}-\\varepsilon\\biggr{)}&gt;0.\" display=\"block\"><mrow><mrow><mrow><mrow><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>-</mo><mi>k</mi></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow><mo>\u2062</mo><mi>\u03b5</mi></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi><mo>-</mo><mi>\u03b5</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>k</mi><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mfrac><mrow><mi>\u03b2</mi><mo>-</mo><msup><mi>\u03b2</mi><mn>2</mn></msup></mrow><mrow><mrow><mi>k</mi><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mi>\u03b2</mi></mrow></mfrac><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow><mo>&gt;</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>k</mi><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mfrac><mrow><mi>\u03b2</mi><mo>-</mo><msup><mi>\u03b2</mi><mn>2</mn></msup></mrow><mrow><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo>+</mo><mi>\u03b2</mi></mrow></mfrac><mo>-</mo><mi>\u03b5</mi></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow><mo>&gt;</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.00479.tex", "nexttext": "\nThus the active vertices $v_{i,j}$ along any walk of the agent correspond to $k$ disjoint sets $S_j$, which proves that ${\\cal I}$ has a solution.\n\nWe finally address the case that the agent may collect a total reward of $b>0$. \nConsider a slightly modify version of $G$.\nWe rename $t$ by $t'$ and add an edge from $t'$ to a new target $t$. \nThe cost of this edge is $\\beta b$. \nThe agent only reaches $t$ from $t'$ if a reward of value $b$ is placed on $t$. \nWith this observation the above proof immediately carries over.\n\\end{proof}\n\nWe next turn to the optimization variant of MRC. \n\n\\begin{definition}[MOTIVATING REWARD CONFIGURATION OPT]\nGiven a task graph $G$ and a bias factor $\\beta\\in(0,1)$, determine the minimum budget $b$ for which there exists a reward configuration $r$, with $r(v) \\geq 0$ for all vertices of $G$,such that the total reward collected on any of the agent's walks is at most $b$.\n\\end{definition}\n\nAssuming that ${\\rm P}\\neq{\\rm NP}$, Theorem~\\ref{th:comp2} implies that there exists no polynomial-time algorithm that approximates a motivating reward configuration such that the required budget is within any ratio greater of equal to $1$ compared to the budget of an optimal solution.\nThis, follows from the fact that MRC is NP-complete even in the special case that $b=0$.\n\n\\begin{corollary}\\label{cor:approx}\nMRC-OPT is NP-hard to approximated within any ratio greater of equal to $1$.\n\\end{corollary}\n\n\n\\section{Conclusions}\nIn this paper we have studied computational problems in time-inconsistent planning using a graph model by Kleinberg and Oren~\\cite{KO}. \nAs a main result, assuming ${\\rm P}\\neq{\\rm NP}$, we established asymptotically tight upper and lower bounds of $\\Theta(\\sqrt{n})$ on the efficient approximability of MSG-OPT as well as a negative approximability result for MRC-OPT.\nGiven the state of the art, we believe that a generalization of the graph model to quasi hyperbolic discount functions is a promising research direction. \nIn hyperbolic discounting, which is frequently used in the behavioral economics literature~\\cite{FLO,La}, there are two parameters $\\beta,\\delta\\in [0,1]$.\nAny value $c$ that is realized $t$ time steps in the future is perceived with a current value of $\\beta \\delta^t c$. \nFor $t=0$, the perceived value is $c$.\nNote that Kleinberg and Oren's~\\cite{KO} model is a special case of quasi hyperbolic discounting for $\\delta=1$.\nAlthough such discount functions are more involved, the exponentially fading value of future costs and rewards might allow for improved approximation guarantees if $\\delta<1$.\n\n\\section*{Appendix}\n\n\n\\begin{proposition}\n$k$-DCP is NP-complete in directed acyclic graphs.\n\\end{proposition}\n\\begin{proof}\nMembership of $k$-DCP in NP is easy to see.\nIn order to show NP-hardness we modify Lynch's~\\cite{L} reduction that mapped instances of 3-SAT to instances of $k$-DCP in undirected graphs.\nLet $\\mathcal{I}$ be a $3$-SAT instance with $m$ clauses $c_1 \\ldots c_m$ over $n$ variables $x_1 \\ldots x_n$.\nFurthermore, let $\\mathcal{J}$ be an $(m+n)$-DCP instance on a directed acyclic graph $H$ that is constructed in the following way.\nFor every variable $x_i$, there are terminals $s_i$ and $t_i$ that are connected via two vertex-disjoint paths.\nOne path, the so called high path, corresponds to the case that $x_i$ is set to true, while the other path, called low path, corresponds to the case that $x_i$ is false.\nSimilar to the variables, there are terminals $s'_j$ and $t'_j$ for each clause $c_j$.\nAgain, the terminals are connected by vertex-disjoints paths, this time one for each literal in $c_j$.\nIf the $k$-th literal of $c_j$ is equal to $x_i$, a vertex $v_{i,j,k}$ is added to the low path of $x_i$ and the literal's path.\nShould the literal be negated, $v_{i,j,k}$ is added to the high path of $x_i$ and the literal's path instead.\nAssuming that the position of the vertices $v_{i,j,k}$ along their respective paths is ordered according to the indices $i$ and $j$, one obtains a directed acyclic graph $H$.\nMoreover, it is easy to verify that the size of $H$ is polynomial with respect to the original $3$-SAT formula.\nFigure~\\ref{fig:kdcp} shows an example of $H$ for a small sample instance of 3-SAT.\nWe next prove that $\\mathcal{I}$ is feasible if and only if $\\mathcal{J}$ is.\n\n\\begin{figure}[t]\n\\center\t\n\\begin{tikzpicture}[nst/.style={draw,circle,fill=black,minimum size=4pt,inner sep=0pt]}, est/.style={draw,>=latex,->}]\n\t\t\t\n\t\t\t\t\n\t\t\t\t\\node[nst] (v1) at (0,5.5) [label=left:\\small{$s_1$}] {};\n\t\t\t\t\\node[nst] (v2) at (0,3.5) [label=left:\\small{$s_2$}] {};\n\t\t\t\t\\node[nst] (v3) at (0,1.5) [label=left:\\small{$s_3$}] {};\n\t\t\t\t\\node[nst] (v4) at (1.5,7) [label=above:\\small{$s'_1$}] {};\n\t\t\t\t\\node[nst] (v5) at (4,7) [label=above:\\small{$s'_2$}] {};\n\t\t\t\t\\node[nst] (v6) at (7,7) [label=above:\\small{$s'_3$}] {};\n\t\t\t\t\\node[nst] (v7) at (9,5.5) [label=right:\\small{$t_1$}] {};\n\t\t\t\t\\node[nst] (v8) at (9,3.5) [label=right:\\small{$t_2$}] {};\n\t\t\t\t\\node[nst] (v9) at (9,1.5) [label=right:\\small{$t_3$}] {};\n\t\t\t\t\\node[nst] (v10) at (1.5,0) [label=below:\\small{$t'_1$}] {};\n\t\t\t\t\\node[nst] (v11) at (4,0) [label=below:\\small{$t'_2$}] {};\n\t\t\t\t\\node[nst] (v12) at (7,0) [label=below:\\small{$t'_3$}] {};\n\t\t\t\t\\node[nst] (v13) at (3,5) [label=above left:\\small{$v_{1,2,1}$}] {};\n\t\t\t\t\\node[nst] (v14) at (6,6) [label=above left:\\small{$v_{1,3,1}$}] {};\n\t\t\t\t\\node[nst] (v15) at (1,4) [label=above left:\\small{$v_{2,1,1}$}] {};\n\t\t\t\t\\node[nst] (v16) at (4,3) [label=above left:\\small{$v_{2,2,2}$}] {};\n\t\t\t\t\\node[nst] (v17) at (7,3) [label=above left:\\small{$v_{2,3,2}$}] {};\n\t\t\t\t\\node[nst] (v18) at (2,2) [label=above left:\\small{$v_{3,1,2}$}] {};\n\t\t\t\t\\node[nst] (v19) at (5,2) [label=above left:\\small{$v_{3,2,3}$}] {};\n\t\t\t\t\\node[nst] (v20) at (8,1) [label=above left:\\small{$v_{3,3,3}$}] {};\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\\path (v1) edge (0,6)\n\t\t\t\t(0,6) edge[est] (v14)\n\t\t\t\t(v14) edge (9,6)\n\t\t\t\t(9,6) edge[est] (v7)\n\t\t\t\t(v1) edge (0,5)\n\t\t\t\t(0,5) edge[est] (v13)\n\t\t\t\t(v13) edge (9,5)\n\t\t\t\t(9,5) edge[est] (v7)\n\t\t\t\t(v2) edge (0,4)\n\t\t\t\t(0,4) edge[est] (v15)\n\t\t\t\t(v15) edge (9,4)\n\t\t\t\t(9,4) edge[est] (v8)\n\t\t\t\t(v2) edge (0,3)\n\t\t\t\t(0,3) edge[est] (v16)\n\t\t\t\t(v16) edge[est] (v17)\n\t\t\t\t(v17) edge (9,3)\n\t\t\t\t(9,3) edge[est] (v8)\n\t\t\t\t(v3) edge (0,2)\n\t\t\t\t(0,2) edge[est] (v18)\n\t\t\t\t(v18) edge[est] (v19)\n\t\t\t\t(v19) edge (9,2)\n\t\t\t\t(9,2) edge[est] (v9)\n\t\t\t\t(v3) edge (0,1)\n\t\t\t\t(0,1) edge[est] (v20)\n\t\t\t\t(v20) edge (9,1)\n\t\t\t\t(9,1) edge[est] (v9)\n\t\t\t\t(v4) edge (1,7)\n\t\t\t\t(1,7) edge[est] (v15)\n\t\t\t\t(v15) edge (1,0)\n\t\t\t\t(1,0) edge[est] (v10)\n\t\t\t\t(v4) edge (2,7)\n\t\t\t\t(2,7) edge[est] (v18)\n\t\t\t\t(v18) edge (2,0)\n\t\t\t\t(2,0) edge[est] (v10)\n\t\t\t\t(v5) edge (3,7)\n\t\t\t\t(3,7) edge[est] (v13)\n\t\t\t\t(v13) edge (3,0)\n\t\t\t\t(3,0) edge[est] (v11)\n\t\t\t\t(v5) edge[est] (v16)\n\t\t\t\t(v16) edge[est] (v11)\n\t\t\t\t(v5) edge (5,7)\n\t\t\t\t(5,7) edge[est] (v19)\n\t\t\t\t(v19) edge (5,0)\n\t\t\t\t(5,0) edge[est] (v11)\n\t\t\t\t(v6) edge (6,7)\n\t\t\t\t(6,7) edge[est] (v14)\n\t\t\t\t(v14) edge (6,0)\n\t\t\t\t(6,0) edge[est] (v12)\n\t\t\t\t(v6) edge[est] (v17)\n\t\t\t\t(v17) edge[est] (v12)\n\t\t\t\t(v6) edge (8,7)\n\t\t\t\t(8,7) edge[est] (v20)\n\t\t\t\t(v20) edge (8,0)\n\t\t\t\t(8,0) edge[est] (v12);\n\t\t\t\t\n\\end{tikzpicture}\n\\caption{$H$ for $(\\bar{x}_2\\vee\\bar{x}_3)\\wedge(x_1\\vee x_2 \\vee \\bar{x}_3)\\wedge(\\bar{x}_1\\vee x_2 \\vee x_3)$}\n\\label{fig:kdcp}\n\\end{figure}\n\n($\\Longleftarrow$) Given a variable assignment that satisfies the $3$-SAT formula, it is easy to construct $m+n$ vertex-disjoint connecting path.\nFor all pairs $s_i$ and $t_i$, choose the high path if $x_i$ is true or the low path if $x_i$ is false.\nFor $s'_j$ and $t'_j$ the path of any literal in $c_j$ that evaluates to true can be selected.\nBecause the formula is satisfied, at least one such path must exist.\nBy construction of $H$, this yields $m+n$ vertex disjoint connecting path.\n\t\t\n($\\Longrightarrow$) Observe, that every literal's path has exactly one intermediate vertex.\nAs a result, the only paths that connect a terminal $s'_j$ with $t'_j$ are exactly the paths that correspond to the literals of $c_j$.\nThe same holds for the high and low paths of a variable $x_i$.\nHence, if there are $m+n$ vertex-disjoint connecting path in $H$, then the chosen high and low paths directly translate to a satisfying variable assignment of the $3$-SAT formula.\n\\end{proof}\n\n\n\\begin{thebibliography}{10}\n\\setlength{\\itemsep}{0pt plus .3pt}\n\\setlength{\\parsep}{0pt plus .3pt}\n\\setlength{\\parskip}{0pt plus .3pt}\n\n\\bibitem{A}\nG.A.\\ Akerlof. Procrastination and obedience. {\\em The American Economic Review\\/}, \n{\\em Proc.\\ 103rd Annual Meeting of the American Economic Association\\/}, 81(2):1--19, 1991.\n\n\\bibitem{FLO}\nS.\\ Frederick, G.\\ Loewenstein and T.\\ O'Donoghue. Time discounting and time preference: A critical review.\n{\\em Journal of Economic Literature\\/}, 340(2):351--40151--401, 2002.\n\n\\bibitem{GJ}\nM.R.\\ Garay and D.S.\\ Johnson. {\\em Computers and Intractability: A Guide to the Theory of NP-Completeness\\/}.\nW.H. Freeman \\& Co., 1979.\n\n\\bibitem{KO}\nJ.M.\\ Kleinberg and S.\\ Oren. Time-inconsistent planning: a computational problem in behavioral economics. \n{\\em Proc.\\ 15th ACM Conference on Economics and Computation (EC)}, 547-564, 2014.\n\n\\bibitem{La}\nD.\\ Laibson. Golden eggs and hyperbolic discounting. {\\em Quarterly Journal of Economics\\/}, 112(2):443--478, 1997.\n\n\\bibitem{L}\nJ.F.\\ Lynch. The equivalence of theorem proving and the interconnection problem. {\\em ACM SIGDA Newsletter\\/},\n5(3):31--36, 1975. \n\n\\bibitem{DR1}\nT.\\ O'Donoghue and M.\\ Rabin. Doing it now or later. {\\em The American Economic Review\\/}, 89(1):103--124, 1999.\n\n\\bibitem{DR2}\nT.\\ O'Donoghue and M.\\ Rabin. Procrastination on long-term projects. {\\em Journal of Economic Behavior\\& Organization\\/}, \n66(2):161--175, 2008.\n\n\\bibitem{TT}\nP.\\ Tang, Y.\\ Teng, Z.\\ Wang, S.\\ Xiao and Y.\\ Xu. Computational issues in time-inconsistent planning. \nManuscript {\\tt http://arxiv.org/abs/1411.7472}, 2015.\n\n\n\\end{thebibliography}\n\n\n", "itemtype": "equation", "pos": 75032, "prevtext": "\nThe last inequality holds by choice of $\\varepsilon$.\nHence $P$ is not motivating.\nThirdly, assume $P$ contains a downward path out of $v_{i+1,j'}$.\nIn this case, the perceived cost of $P$ at $v_{i,j}$ compared to the perceived cost of $P$ at $v_{i+1,j'}$ increases by even more, namely $1-\\beta -\\varepsilon$.\nCertainly, $P$ can not be motivating.  \nFinally, assume $P$ contains the shortcut out of $v_{i+1,j'}$.\nWhen viewed from $v_{i,j}$ instead of $v_{i+1,j'}$, the perceived cost of $P$ increases by $1-\\beta -\\varepsilon$ and decreases by $1-\\beta$.\nThus the perceived cost is at least $((i+1)-k)\\varepsilon -\\varepsilon = (i-k)\\varepsilon$ which concludes the induction step.\nBy a similar argument, the only motivating paths out of $s$ traverse the shortcut of an active vertex on the bottom level.\n\nThe last three paragraphs imply that for every active vertex $v_{i,j}$ a reward of at least $(1-\\varepsilon)/\\beta$ has to be placed at $w_{i,j}$.\nOtherwise the shortcut would not be motivating when the agent resides at an active vertex on the previous level $i-1$, or at $s$ if $i=1$.\nThis implies that there can be no downward path connecting an active vertex $v_{i,j}$ to the shortcut of an active vertex on a lower level, because the perceived cost at $v_{i,j}$ for following the downward path would be at most\n", "index": 39, "text": "\n\\[\\beta\\biggl(\\frac{1-\\beta-k\\varepsilon}{\\beta-\\beta^2} - \\frac{1-\\varepsilon}{\\beta}\\biggr) = \\frac{(1-k-\\beta)\\varepsilon}{1-\\beta} < (1-k)\\varepsilon.\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex20.m1\" class=\"ltx_Math\" alttext=\"\\beta\\biggl{(}\\frac{1-\\beta-k\\varepsilon}{\\beta-\\beta^{2}}-\\frac{1-\\varepsilon%&#10;}{\\beta}\\biggr{)}=\\frac{(1-k-\\beta)\\varepsilon}{1-\\beta}&lt;(1-k)\\varepsilon.\" display=\"block\"><mrow><mrow><mrow><mi>\u03b2</mi><mo>\u2062</mo><mrow><mo maxsize=\"210%\" minsize=\"210%\">(</mo><mrow><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi><mo>-</mo><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03b5</mi></mrow></mrow><mrow><mi>\u03b2</mi><mo>-</mo><msup><mi>\u03b2</mi><mn>2</mn></msup></mrow></mfrac><mo>-</mo><mfrac><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow><mi>\u03b2</mi></mfrac></mrow><mo maxsize=\"210%\" minsize=\"210%\">)</mo></mrow></mrow><mo>=</mo><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>k</mi><mo>-</mo><mi>\u03b2</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>\u03b5</mi></mrow><mrow><mn>1</mn><mo>-</mo><mi>\u03b2</mi></mrow></mfrac><mo>&lt;</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>-</mo><mi>k</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>\u03b5</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}]