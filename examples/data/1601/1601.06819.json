[{"file": "1601.06819.tex", "nexttext": "\nwhere $S_{x, y} = \\sigma_1^{x, y} + \\cdots + \\sigma_N^{x, y}$ are the total spin projections on the \\emph{x} or \\emph{y} axes, and $\\sigma_j^{x, y, z}$ are the respective Pauli operators corresponding to qubit $j$. For the sake of brevity we also define rotations around the X and Y axes as:\n\n", "itemtype": "equation", "pos": 5574, "prevtext": "\n\n\\title{Compiling quantum algorithms for architectures with multi-qubit gates}\n\\author{Esteban A. Martinez}\n\\author{Thomas Monz}\n\\author{Daniel Nigg}\n\\author{Philipp Schindler}\n\\affiliation{Institut f\\\"ur Experimentalphysik, Universit\\\"at Innsbruck, Technikerstra\u00c3\u009fe 25/4, 6020 Innsbruck, Austria}\n\\author{Rainer Blatt}\n\\affiliation{Institut f\\\"ur Experimentalphysik, Universit\\\"at Innsbruck, Technikerstra\u00c3\u009fe 25/4, 6020 Innsbruck, Austria}\n\\affiliation{Institut f\\\"ur Quantenoptik und Quanteninformation, \\\"Osterreichische Akademie der Wissenschaften, Technikerstra\u00c3\u009fe 21a, 6020 Innsbruck, Austria}\n\n\\begin{abstract}  \nQuantum algorithms require a universal set of gates that can be implemented in a physical system. For these, an optimal decomposition into a sequence of available operations is desired. Here, we present a method to find such sequences for a small-scale ion trap quantum information processor. We further adapt the method to state preparation and quantum algorithms with in-sequence measurements.\n\\end{abstract}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{Introduction}\n\\label{sec:introduction}\nQuantum technologies open new possibilities that are inaccessible with current classical devices, ranging from cryptography \\cite{Ekert1996,Gisin2002} to efficient simulation of physical systems \\cite{Cirac2012,Bloch2012,Blatt2012}. To utilize the full computational power of quantum systems, one needs a \\emph{universal quantum computer}: a device able to implement arbitrary unitary operations, or at least to approximate them to arbitrary accuracy. However, in any specific physical system, only a certain set of operations is readily available. Therefore, it is necessary to decompose the desired unitary operation as a sequence of these experimentally available gates. An available set of gates is known as \\emph{universal} if it is possible to find such a decomposition for an arbitrary unitary quantum operation acting on the qubit register.\n\nA canonical universal set of gates consists of two-qubit CNOT gates and arbitrary single qubit rotations. There exist deterministic algorithms that can provide near-optimal decompositions of unitaries in terms of these gates \\cite{nielsen-chuang}. However, the set of gates that yields the highest fidelities depends on the particular experimental implementation. In particular, two-qubit CNOT gates may not be the most efficient to implement. Architectures like trapped ions \\cite{Schindler2013,Harty2014} or atom lattices \\cite{Xia2015} include in their toolboxes high-fidelity $N$-qubit gates that act on the entire qubit register (see section \\ref{sec:toolbox}). Implementing two-qubit gates in terms of these requires refocusing \\cite{Vandersypen2005} or decoupling \\cite{Schindler2013} techniques, and thus increases the overhead. Therefore it is desirable to find a direct decomposition of the target unitary into the available operations. In general, entangling operations are more prone to errors than single-qubit operations, so the number of entangling operations needs to be minimized.\n\nAn approach for finding such decompositions has been studied in ref. \\cite{Nebendahl2009}, where optimal control techniques are used to find a pulse sequence for a given target unitary operation. The algorithm presented there starts with long sequences and then removes pulses, if possible. This often produces sequences with more entangling operations than actually required. In this work we present an algorithm that ensures, by design, that the least number of entangling gates is used. In addition, we introduce a deterministic algorithm for finding decompositions of local unitaries. We also extend the algorithm for general unitaries to cases where the unitary must not be fully specified, for instance for state preparation, in a way that yields simpler decompositions.\n\nThe paper is organized as follows: in section \\ref{sec:toolbox} we review some architectures for quantum information processing to which the methods described in this work can be applied, and describe precisely which gates we will consider as part of our experimentally available toolbox. In section \\ref{sec:local} we show an analytic algorithm to compile local unitaries, which can be used to find efficient implementations of state and process tomographies. Finally, in section \\ref{sec:algorithm} we describe and analyze an algorithm to compile fully general unitaries which relies on numerical optimization.\n\n\\subsection{Experimental toolbox}\n\\label{sec:toolbox}\n\nMany quantum information processing experiments based on atomic and molecular systems have similar sets of quantum operations at their disposal. Often, it is convenient to apply collective rotations on an entire qubit register. These collective (yet local) gates, combined with addressed operations (typically rotations around the Z axis) allow one to implement arbitrary local unitaries, as we show in section \\ref{sec:local}. Together with suitable multi-qubit entangling operations, arbitrary quantum unitaries can be implemented. In this section we explain the set of gates that will be used in the following, and give a brief overview of some architectures where the methods described in this work can be applied.\n\nIn particular, we describe the set of gates currently at use in our trapped-ion quantum processing experiments \\cite{Schindler2013}:\n\n\\begin{itemize}\n\n\\item Collective rotations of the whole qubit register about any axis on the equator of the Bloch sphere ${C}(\\theta, \\phi)$. Here $\\theta$ is the rotation angle and $\\phi$ is the phase, so that:\n\n", "index": 1, "text": "\\begin{equation}\n{C}(\\theta, \\phi) = e^{-i \\theta (S_x \\cos{\\phi} + S_y \\sin{\\phi}) / 2},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"{C}(\\theta,\\phi)=e^{-i\\theta(S_{x}\\cos{\\phi}+S_{y}\\sin{\\phi})/2},\" display=\"block\"><mrow><mrow><mrow><mi>C</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo>,</mo><mi>\u03d5</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>\u03b8</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><msub><mi>S</mi><mi>x</mi></msub><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mi>\u03d5</mi></mrow></mrow><mo>+</mo><mrow><msub><mi>S</mi><mi>y</mi></msub><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03d5</mi></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>/</mo><mn>2</mn></mrow></mrow></msup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\n\\item Single qubit rotations around the $Z$ axis $Z_n(\\theta)$, where $\\theta$ is the rotation angle, and $n$ is the qubit index:\n\n", "itemtype": "equation", "pos": 5971, "prevtext": "\nwhere $S_{x, y} = \\sigma_1^{x, y} + \\cdots + \\sigma_N^{x, y}$ are the total spin projections on the \\emph{x} or \\emph{y} axes, and $\\sigma_j^{x, y, z}$ are the respective Pauli operators corresponding to qubit $j$. For the sake of brevity we also define rotations around the X and Y axes as:\n\n", "index": 3, "text": "\\begin{align}\nX(\\theta) &= C(\\theta, 0),\\\\\nY(\\theta) &= C(\\theta, \\pi / 2).\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle X(\\theta)\" display=\"inline\"><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=C(\\theta,0),\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mi>C</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo>,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle Y(\\theta)\" display=\"inline\"><mrow><mi>Y</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=C(\\theta,\\pi/2).\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mi>C</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo>,</mo><mrow><mi>\u03c0</mi><mo>/</mo><mn>2</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwith $\\sigma_n^{z}$ being the Pauli Z operator applied to the \\emph{n}-th ion.\n\n\\item Entangling M{\\o}lmer-S{\\o}rensen (MS) gates \\cite{Sorensen2000}, with arbitrary rotation angle and phase $\\operatorname{MS}_{\\phi}(\\theta)$. Here $\\theta$ is the rotation angle and $\\phi$ is the phase of the gate, resulting in:\n\n", "itemtype": "equation", "pos": 6190, "prevtext": "\n\n\\item Single qubit rotations around the $Z$ axis $Z_n(\\theta)$, where $\\theta$ is the rotation angle, and $n$ is the qubit index:\n\n", "index": 5, "text": "\\begin{equation}\n\\rm{Z}_n(\\theta) = e^{-i \\theta \\sigma_n^{z} / 2},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\rm{Z}_{n}(\\theta)=e^{-i\\theta\\sigma_{n}^{z}/2},\" display=\"block\"><mrow><mrow><mrow><msub><mi mathvariant=\"normal\">Z</mi><mi mathvariant=\"normal\">n</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><msup><mi mathvariant=\"normal\">e</mi><mrow><mo>-</mo><mrow><mrow><mi mathvariant=\"normal\">i</mi><mo>\u2062</mo><mi>\u03b8</mi><mo>\u2062</mo><msubsup><mi>\u03c3</mi><mi mathvariant=\"normal\">n</mi><mi mathvariant=\"normal\">z</mi></msubsup></mrow><mo>/</mo><mn>2</mn></mrow></mrow></msup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $S_{x, y} = \\sigma_1^{x, y} + \\cdots + \\sigma_N^{x, y}$ are the total spin projections on the \\emph{x} or \\emph{y} axes, as before. For $\\phi = 0$ or $\\phi = \\pi / 2$ we obtain gates that act around the $X$ or $Y$ axes, which we will denote:\n\n", "itemtype": "equation", "pos": 6587, "prevtext": "\nwith $\\sigma_n^{z}$ being the Pauli Z operator applied to the \\emph{n}-th ion.\n\n\\item Entangling M{\\o}lmer-S{\\o}rensen (MS) gates \\cite{Sorensen2000}, with arbitrary rotation angle and phase $\\operatorname{MS}_{\\phi}(\\theta)$. Here $\\theta$ is the rotation angle and $\\phi$ is the phase of the gate, resulting in:\n\n", "index": 7, "text": "\\begin{equation}\n\\operatorname{MS}_{\\phi}(\\theta) = e^{-i \\theta (S_x \\cos{\\phi} + S_y \\sin{\\phi})^2 / 4},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"\\operatorname{MS}_{\\phi}(\\theta)=e^{-i\\theta(S_{x}\\cos{\\phi}+S_{y}\\sin{\\phi})^%&#10;{2}/4},\" display=\"block\"><mrow><mrow><mrow><msub><mo>MS</mo><mi>\u03d5</mi></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>\u03b8</mi><mo>\u2062</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><msub><mi>S</mi><mi>x</mi></msub><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mi>\u03d5</mi></mrow></mrow><mo>+</mo><mrow><msub><mi>S</mi><mi>y</mi></msub><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03d5</mi></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></msup></mrow><mo>/</mo><mn>4</mn></mrow></mrow></msup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\n\\end{itemize}\n\nA similar toolbox of operations is available for architectures based on trapped-ion hyperfine qubits. For example, ref. \\cite{Harty2014} describes high-fidelity microwave gates applied to a single hyperfine $^{43}$Ca$^+$ qubit. In a multi-qubit system, these gates would drive collective rotations like the ones described above. In addition, ref. \\cite{Ballance2015} describes a Raman-driven $\\sigma^z \\otimes \\sigma^z$ phase gate on two qubits, which applied to a many-qubit register would act analogously to the MS gate already described.\n\nRecently, an implementation of high-fidelity gates in a 2D array of neutral atom qubits was reported \\cite{Xia2015}. The toolbox described there consists of global microwave-driven gates and single-site Stark shifts on the atoms, which are completely equivalent to the local operations described before for the trapped ion architecture. A multi-qubit CNOT gate, equivalent to the MS gate, could also be implemented by means of long-range Rydberg blockade interactions \\cite{Isenhower2011}.\n\n\n\\section{Compilation of local unitaries}\n\\label{sec:local}\n\n\\emph{Local} unitaries can be written as a product of single-qubit unitaries. In this section we show a fully deterministic algorithm that produces decompositions of any local unitary as a sequence of collective equatorial rotations and addressed Z rotations, as described in section \\ref{sec:toolbox}. The decompositions presented here are optimal in the number of pulses. These techniques are particularly useful for the implementation of state and process tomographies, as exemplified in figure \\ref{fig:local}, since both require only local operations at the beginning and end of the algorithm.\n\n\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{local.pdf}\n\\caption{Pulse sequence to perform a projective measurement on the $\\{\\text{X}, \\text{Y}, \\text{Z}\\}$ bases for qubits $\\{1, 2, 3\\}$, respectively.}\n\\label{fig:local}\n\\end{figure}\n\nLet us consider a register of $N$ qubits, and a local unitary $U = U_1 \\otimes U_2 \\otimes \\dotsm \\otimes U_N$ to be applied to them, where $U_i$ is the action of the unitary on the $i$-th qubit. If the same operation has to be applied to more than one qubit ($U_i = U_j$) we can replace both with a single instance of the operation. Therefore, we only have to consider the case where every $U_i$ is unique, and then apply the same addressed operations on all qubits subject to the same operation $U_i$.\n\nIn order to apply a general local unitary to each qubit we need to have at least three degrees of freedom per qubit \\cite{nielsen-chuang}, so the decomposition must have at least $3N$ free parameters. During the sequence at least $N - 1$ of the qubits must eventually be addressed, since a different unitary has to be applied to each qubit. Therefore, a sequence of addressed operations of the form $Z_1(\\theta_1), Z_2(\\theta_2), \\dotsc Z_{N-1}(\\theta_{N-1})$ must be included in the decomposition. These provide $N - 1$ parameters, so $2N + 1$ more degrees of freedom are required. The most economic way to provide these is by means of collective gates ${C}(\\theta, \\phi)$, which have two degrees of freedom each, so the shortest sequence possible must include at least $N$ global operations, for a total of $3N - 1$ free parameters. One additional degree of freedom remains, so either an addressed operation on qubit $N$ or a collective gate must be added. If we add an addressed gate, we obtain a sequence of the form:\n\n", "itemtype": "equation", "pos": 6957, "prevtext": "\nwhere $S_{x, y} = \\sigma_1^{x, y} + \\cdots + \\sigma_N^{x, y}$ are the total spin projections on the \\emph{x} or \\emph{y} axes, as before. For $\\phi = 0$ or $\\phi = \\pi / 2$ we obtain gates that act around the $X$ or $Y$ axes, which we will denote:\n\n", "index": 9, "text": "\\begin{equation}\n  \\rm{MS}_{x,y}(\\theta) = e^{-i \\theta S_{x,y}^2 / 4}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\rm{MS}_{x,y}(\\theta)=e^{-i\\theta S_{x,y}^{2}/4}.\" display=\"block\"><mrow><mrow><mrow><msub><mi>MS</mi><mrow><mi mathvariant=\"normal\">x</mi><mo>,</mo><mi mathvariant=\"normal\">y</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><msup><mi mathvariant=\"normal\">e</mi><mrow><mo>-</mo><mrow><mrow><mi mathvariant=\"normal\">i</mi><mo>\u2062</mo><mi>\u03b8</mi><mo>\u2062</mo><msubsup><mi mathvariant=\"normal\">S</mi><mrow><mi mathvariant=\"normal\">x</mi><mo>,</mo><mi mathvariant=\"normal\">y</mi></mrow><mn>2</mn></msubsup></mrow><mo>/</mo><mn>4</mn></mrow></mrow></msup></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $C_i = C(\\theta_i, \\phi_i)$ and $Z_i = Z_i(\\theta_i)$. If unitary $U_N$ needs to be applied to many qubits, all of these need to be addressed. Instead of multiple addressed operations one can add a collective rotation $C'_N$:\n\n", "itemtype": "equation", "pos": 10544, "prevtext": "\n\n\\end{itemize}\n\nA similar toolbox of operations is available for architectures based on trapped-ion hyperfine qubits. For example, ref. \\cite{Harty2014} describes high-fidelity microwave gates applied to a single hyperfine $^{43}$Ca$^+$ qubit. In a multi-qubit system, these gates would drive collective rotations like the ones described above. In addition, ref. \\cite{Ballance2015} describes a Raman-driven $\\sigma^z \\otimes \\sigma^z$ phase gate on two qubits, which applied to a many-qubit register would act analogously to the MS gate already described.\n\nRecently, an implementation of high-fidelity gates in a 2D array of neutral atom qubits was reported \\cite{Xia2015}. The toolbox described there consists of global microwave-driven gates and single-site Stark shifts on the atoms, which are completely equivalent to the local operations described before for the trapped ion architecture. A multi-qubit CNOT gate, equivalent to the MS gate, could also be implemented by means of long-range Rydberg blockade interactions \\cite{Isenhower2011}.\n\n\n\\section{Compilation of local unitaries}\n\\label{sec:local}\n\n\\emph{Local} unitaries can be written as a product of single-qubit unitaries. In this section we show a fully deterministic algorithm that produces decompositions of any local unitary as a sequence of collective equatorial rotations and addressed Z rotations, as described in section \\ref{sec:toolbox}. The decompositions presented here are optimal in the number of pulses. These techniques are particularly useful for the implementation of state and process tomographies, as exemplified in figure \\ref{fig:local}, since both require only local operations at the beginning and end of the algorithm.\n\n\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{local.pdf}\n\\caption{Pulse sequence to perform a projective measurement on the $\\{\\text{X}, \\text{Y}, \\text{Z}\\}$ bases for qubits $\\{1, 2, 3\\}$, respectively.}\n\\label{fig:local}\n\\end{figure}\n\nLet us consider a register of $N$ qubits, and a local unitary $U = U_1 \\otimes U_2 \\otimes \\dotsm \\otimes U_N$ to be applied to them, where $U_i$ is the action of the unitary on the $i$-th qubit. If the same operation has to be applied to more than one qubit ($U_i = U_j$) we can replace both with a single instance of the operation. Therefore, we only have to consider the case where every $U_i$ is unique, and then apply the same addressed operations on all qubits subject to the same operation $U_i$.\n\nIn order to apply a general local unitary to each qubit we need to have at least three degrees of freedom per qubit \\cite{nielsen-chuang}, so the decomposition must have at least $3N$ free parameters. During the sequence at least $N - 1$ of the qubits must eventually be addressed, since a different unitary has to be applied to each qubit. Therefore, a sequence of addressed operations of the form $Z_1(\\theta_1), Z_2(\\theta_2), \\dotsc Z_{N-1}(\\theta_{N-1})$ must be included in the decomposition. These provide $N - 1$ parameters, so $2N + 1$ more degrees of freedom are required. The most economic way to provide these is by means of collective gates ${C}(\\theta, \\phi)$, which have two degrees of freedom each, so the shortest sequence possible must include at least $N$ global operations, for a total of $3N - 1$ free parameters. One additional degree of freedom remains, so either an addressed operation on qubit $N$ or a collective gate must be added. If we add an addressed gate, we obtain a sequence of the form:\n\n", "index": 11, "text": "\\begin{equation}\n\\label{eq:complete-z}\nU = Z_N {C}_N Z_{N-1} {C}_{N-1} \\dotsm Z_2 {C}_2 Z_1 {C}_1,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"U=Z_{N}{C}_{N}Z_{N-1}{C}_{N-1}\\cdots Z_{2}{C}_{2}Z_{1}{C}_{1},\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><msub><mi>Z</mi><mi>N</mi></msub><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nThus, a sequence of the form (\\ref{eq:complete-g}) is the shortest possible that will implement an arbitrary local unitary in terms of the desired gates. For particular unitaries some of the $C_i$ and $Z_i$ may actually be the identity, in which case the sequence is even simpler. Moreover, the decomposition depends on the ordering of the qubits, so by reordering them a simpler sequence may be obtained.\n\nWe will describe now how to compile a generic local unitary $U = U_1 \\otimes U_2 \\otimes \\dotsm \\otimes U_N$ exactly, using a decomposition of the form (\\ref{eq:complete-g}). Factoring this equation for each qubit we obtain $N$ equations:\n\n", "itemtype": "equation", "pos": 10890, "prevtext": "\nwhere $C_i = C(\\theta_i, \\phi_i)$ and $Z_i = Z_i(\\theta_i)$. If unitary $U_N$ needs to be applied to many qubits, all of these need to be addressed. Instead of multiple addressed operations one can add a collective rotation $C'_N$:\n\n", "index": 13, "text": "\\begin{equation}\n\\label{eq:complete-g}\nU = {C}_N' {C}_N Z_{N-1} {C}_{N-1} \\dotsm Z_2 {C}_2 Z_1 {C}_1.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"U={C}_{N}^{\\prime}{C}_{N}Z_{N-1}{C}_{N-1}\\cdots Z_{2}{C}_{2}Z_{1}{C}_{1}.\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><msubsup><mi>C</mi><mi>N</mi><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nFrom the last equation we can determine ${C}_N' {C}_N$:\n\n", "itemtype": "equation", "pos": 11653, "prevtext": "\nThus, a sequence of the form (\\ref{eq:complete-g}) is the shortest possible that will implement an arbitrary local unitary in terms of the desired gates. For particular unitaries some of the $C_i$ and $Z_i$ may actually be the identity, in which case the sequence is even simpler. Moreover, the decomposition depends on the ordering of the qubits, so by reordering them a simpler sequence may be obtained.\n\nWe will describe now how to compile a generic local unitary $U = U_1 \\otimes U_2 \\otimes \\dotsm \\otimes U_N$ exactly, using a decomposition of the form (\\ref{eq:complete-g}). Factoring this equation for each qubit we obtain $N$ equations:\n\n", "index": 15, "text": "\\begin{align}\nU_1 &= {C}_N' {C}_N \\dotsm {C}_2 Z_1 {C}_1,\\\\\nU_2 &= {C}_N' {C}_N \\dotsm  Z_2 {C}_2 {C}_1, \\nonumber\\\\\n&\\ \\ \\vdots \\nonumber\\\\\nU_N &= {C}_N' {C}_N \\cdots {C}_2 {C}_1. \\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{1}\" display=\"inline\"><msub><mi>U</mi><mn>1</mn></msub></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{N}^{\\prime}{C}_{N}\\cdots{C}_{2}Z_{1}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mi>N</mi><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{2}\" display=\"inline\"><msub><mi>U</mi><mn>2</mn></msub></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{N}^{\\prime}{C}_{N}\\cdots Z_{2}{C}_{2}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mi>N</mi><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ \\ \\vdots\" display=\"inline\"><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u00a0</mi></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ee</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}\" display=\"inline\"><msub><mi>U</mi><mi>N</mi></msub></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{N}^{\\prime}{C}_{N}\\cdots{C}_{2}{C}_{1}.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mi>N</mi><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nand eliminating this factor from the remaining equations we obtain:\n\n", "itemtype": "equation", "pos": 11913, "prevtext": "\n\nFrom the last equation we can determine ${C}_N' {C}_N$:\n\n", "index": 17, "text": "\\begin{equation}\n  \\label{eq:last-u}\n  {C}_N' {C}_N = U_N  {C}_1^{-1} {C}_2^{-1} \\dotsm {C}_{N-1}^{-1},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E10.m1\" class=\"ltx_Math\" alttext=\"{C}_{N}^{\\prime}{C}_{N}=U_{N}{C}_{1}^{-1}{C}_{2}^{-1}\\cdots{C}_{N-1}^{-1},\" display=\"block\"><mrow><mrow><mrow><msubsup><mi>C</mi><mi>N</mi><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub></mrow><mo>=</mo><mrow><msub><mi>U</mi><mi>N</mi></msub><mo>\u2062</mo><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nWe solve each equation in (\\ref{eq:system-eliminated}) consecutively. To solve the first equation in (\\ref{eq:system-eliminated}), let us notice that its left-hand side is a known unitary, which can be written as:\n\n", "itemtype": "equation", "pos": 12100, "prevtext": "\nand eliminating this factor from the remaining equations we obtain:\n\n", "index": 19, "text": "\\begin{align}\n  \\label{eq:system-eliminated}\nU_N^{-1} U_1 &= {C}_1^{-1} Z_1 {C}_1,\\\\\nU_N^{-1} U_2 &= {C}_1^{-1} {C}_2^{-1} Z_2 {C}_2 {C}_1,\\nonumber\\\\\n&\\ \\ \\vdots \\nonumber\\\\\nU_N^{-1} U_{N-1} &= {C}_1^{-1} {C}_2^{-1} \\dotsm {C}_{N-1}^{-1} Z_{N-1} {C}_{N-1} \\dotsm {C}_2 {C}_1.\\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}U_{1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>1</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}Z_{1}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}U_{2}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>2</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}{C}_{2}^{-1}Z_{2}{C}_{2}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ \\ \\vdots\" display=\"inline\"><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u00a0</mi></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ee</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}U_{N-1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}{C}_{2}^{-1}\\cdots{C}_{N-1}^{-1}Z_{N-1}{C}_{N-1}%&#10;\\cdots{C}_{2}{C}_{1}.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $\\alpha_1$ is the angle of the rotation and $u_1$ its generator. The right-hand side is simply a rotation around Z and a change of basis. Therefore, the rotation angle of $Z_1$ must be equal to $\\alpha_1$, and the change of basis must be such that:\n\n", "itemtype": "equation", "pos": 12613, "prevtext": "\n\nWe solve each equation in (\\ref{eq:system-eliminated}) consecutively. To solve the first equation in (\\ref{eq:system-eliminated}), let us notice that its left-hand side is a known unitary, which can be written as:\n\n", "index": 21, "text": "\\begin{equation}\n  \\label{eq:generator}\n  U_N^{-1} U_1 = e^{-i \\alpha_1 u_1 / 2},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m1\" class=\"ltx_Math\" alttext=\"U_{N}^{-1}U_{1}=e^{-i\\alpha_{1}u_{1}/2},\" display=\"block\"><mrow><mrow><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>1</mn></msub></mrow><mo>=</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mrow><mi>i</mi><mo>\u2062</mo><msub><mi>\u03b1</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>u</mi><mn>1</mn></msub></mrow><mo>/</mo><mn>2</mn></mrow></mrow></msup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nWe show in appendix \\ref{sec:ap-exact} how to find the generator and angle of the collective rotation ${C}_1$.\n\nHaving determined ${C}_1$, we can write the second equation in (\\ref{eq:system-eliminated}) as:\n\n", "itemtype": "equation", "pos": 12965, "prevtext": "\nwhere $\\alpha_1$ is the angle of the rotation and $u_1$ its generator. The right-hand side is simply a rotation around Z and a change of basis. Therefore, the rotation angle of $Z_1$ must be equal to $\\alpha_1$, and the change of basis must be such that:\n\n", "index": 23, "text": "\\begin{equation}\n  \\label{eq:basis-change}\n  u_1 = {C}_1^{-1} \\sigma_z {C}_1.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E13.m1\" class=\"ltx_Math\" alttext=\"u_{1}={C}_{1}^{-1}\\sigma_{z}{C}_{1}.\" display=\"block\"><mrow><mrow><msub><mi>u</mi><mn>1</mn></msub><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>z</mi></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nAs before, the left-hand side of this equation is a known unitary, and the right-hand side consists of a rotation around Z and a change of basis, so the rotation angle $\\theta_2$ and generator of the change of basis $C_2$ can be found as for the previous equation. This procedure can be repeated until all of the ${C}_k$ and $Z_k$ with $k \\leq N - 1$ are determined. The last collective operations $C_N$ and $C_N'$ can be determined from equation (\\ref{eq:last-u}). For this we need to decompose an arbitrary unitary into a product of two equatorial rotations; this can be done as explained in appendix \\ref{sec:ap-two-coll}.\n\nWe have shown so far how to compile a local unitary exactly. However, in certain cases the constraints on the target unitary are weaker, so that it can be implemented with a simpler sequence. For instance, a unitary that is followed by global gates whose phase can be freely adjusted must only be specified up to a collective Z rotation afterwards, since this rotation can be absorbed into the phase. This removes one free parameter from the sequence, thus simplifying its implementation. The details of this procedure are presented in appendix \\ref{sec:up-to-collective}. Another case of interest is when the target unitary is specified up to arbitrary independent Z rotations afterwards, for instance when the unitary is followed by a projective measurement on the Z basis. This is particularly useful for tomographic measurements; details are shown in appendix \\ref{sec:up-to-independent}.\n\n\\section{Compilation of general unitaries}\n\\label{sec:algorithm}\nIn section \\ref{sec:local} we studied how to compile local unitaries in terms of collective and addressed rotations. However, a universal quantum computer also requires entangling unitaries, which must be compiled into the experimentally available local and entangling gates. For example, in figure \\ref{fig:toffoli} we show a decomposition of a Toffoli gate into a sequence of local and entangling gates applied consecutively. In this section, we present an algorithm to find such decompositions for arbitrary unitaries.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{toffoli.pdf}\n\\caption{Decomposition of a Toffoli gate into a pulse sequence of collective equatorial rotations, addressed Z rotations and entangling M{\\o}lmer-S{\\o}rensen (MS) gates.}\n\\label{fig:toffoli}\n\\end{figure}\n\nWe seek decompositions directly in terms of multi-qubit entangling gates, since these are often more efficient than decompositions in terms of two-qubit gates. For example, a Toffoli gate can be implemented using only 3 M{\\o}lmer-S{\\o}rensen (MS) gates \\cite{Nebendahl2009}, while 6 CNOT gates are needed to implement it \\cite{Shende2009}), and a Fredkin gate can be implemented using 4 MS gates \\cite{Monz2015}, while the least number of two-qubit gates required is 5 \\cite{Yu2013}. As described in section \\ref{sec:toolbox}, many equivalent types of entangling gates are experimentally available. We will consider MS gates, but the methods shown here are applicable to any entangling gate that forms a universal set together with local operations.\n\n\\subsection{Compilation in layers}\n\\label{sec:compilation-in-layers}\nIn many quantum information processing experiments the most costly operations in terms of fidelity are entangling gates. Therefore, when trying to compile a unitary we seek to minimize the number of those. A straightforward way to do this is to use pulse sequences where layers of local unitaries and entangling gates are applied consecutively, as shown in figure \\ref{fig:layers}.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{layers.pdf}\n\\caption{Sequence with layers of local and entangling gates applied consecutively.}\n\\label{fig:layers}\n\\end{figure}\n\nAny unitary can be decomposed in terms of single-qubit gates and two-qubit CNOT gates \\cite{divincenzo}:\n\n", "itemtype": "equation", "pos": 13266, "prevtext": "\nWe show in appendix \\ref{sec:ap-exact} how to find the generator and angle of the collective rotation ${C}_1$.\n\nHaving determined ${C}_1$, we can write the second equation in (\\ref{eq:system-eliminated}) as:\n\n", "index": 25, "text": "\\begin{equation}\n  {C}_1 U_N^{-1} U_2 {C}_1^{-1} = {C}_2^{-1} Z_2 {C}_2.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E14.m1\" class=\"ltx_Math\" alttext=\"{C}_{1}U_{N}^{-1}U_{2}{C}_{1}^{-1}={C}_{2}^{-1}Z_{2}{C}_{2}.\" display=\"block\"><mrow><mrow><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>\u2062</mo><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>2</mn></msub><mo>\u2062</mo><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow><mo>=</mo><mrow><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $L_i$ denotes an arbitrary local unitary on the whole qubit register and ${\\textnormal{CNOT}}_i$ denotes a gate between some two qubits. A two-qubit ${\\textnormal{CNOT}}$ gate can be implemented in an arbitrary $N$-qubit register as a sequence of local unitaries and ${\\textnormal{MS}_x}(\\pi / 8)$ gates \\cite{Nebendahl2009}. Therefore, the following decomposition is always possible:\n\n", "itemtype": "equation", "pos": 17256, "prevtext": "\nAs before, the left-hand side of this equation is a known unitary, and the right-hand side consists of a rotation around Z and a change of basis, so the rotation angle $\\theta_2$ and generator of the change of basis $C_2$ can be found as for the previous equation. This procedure can be repeated until all of the ${C}_k$ and $Z_k$ with $k \\leq N - 1$ are determined. The last collective operations $C_N$ and $C_N'$ can be determined from equation (\\ref{eq:last-u}). For this we need to decompose an arbitrary unitary into a product of two equatorial rotations; this can be done as explained in appendix \\ref{sec:ap-two-coll}.\n\nWe have shown so far how to compile a local unitary exactly. However, in certain cases the constraints on the target unitary are weaker, so that it can be implemented with a simpler sequence. For instance, a unitary that is followed by global gates whose phase can be freely adjusted must only be specified up to a collective Z rotation afterwards, since this rotation can be absorbed into the phase. This removes one free parameter from the sequence, thus simplifying its implementation. The details of this procedure are presented in appendix \\ref{sec:up-to-collective}. Another case of interest is when the target unitary is specified up to arbitrary independent Z rotations afterwards, for instance when the unitary is followed by a projective measurement on the Z basis. This is particularly useful for tomographic measurements; details are shown in appendix \\ref{sec:up-to-independent}.\n\n\\section{Compilation of general unitaries}\n\\label{sec:algorithm}\nIn section \\ref{sec:local} we studied how to compile local unitaries in terms of collective and addressed rotations. However, a universal quantum computer also requires entangling unitaries, which must be compiled into the experimentally available local and entangling gates. For example, in figure \\ref{fig:toffoli} we show a decomposition of a Toffoli gate into a sequence of local and entangling gates applied consecutively. In this section, we present an algorithm to find such decompositions for arbitrary unitaries.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{toffoli.pdf}\n\\caption{Decomposition of a Toffoli gate into a pulse sequence of collective equatorial rotations, addressed Z rotations and entangling M{\\o}lmer-S{\\o}rensen (MS) gates.}\n\\label{fig:toffoli}\n\\end{figure}\n\nWe seek decompositions directly in terms of multi-qubit entangling gates, since these are often more efficient than decompositions in terms of two-qubit gates. For example, a Toffoli gate can be implemented using only 3 M{\\o}lmer-S{\\o}rensen (MS) gates \\cite{Nebendahl2009}, while 6 CNOT gates are needed to implement it \\cite{Shende2009}), and a Fredkin gate can be implemented using 4 MS gates \\cite{Monz2015}, while the least number of two-qubit gates required is 5 \\cite{Yu2013}. As described in section \\ref{sec:toolbox}, many equivalent types of entangling gates are experimentally available. We will consider MS gates, but the methods shown here are applicable to any entangling gate that forms a universal set together with local operations.\n\n\\subsection{Compilation in layers}\n\\label{sec:compilation-in-layers}\nIn many quantum information processing experiments the most costly operations in terms of fidelity are entangling gates. Therefore, when trying to compile a unitary we seek to minimize the number of those. A straightforward way to do this is to use pulse sequences where layers of local unitaries and entangling gates are applied consecutively, as shown in figure \\ref{fig:layers}.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{layers.pdf}\n\\caption{Sequence with layers of local and entangling gates applied consecutively.}\n\\label{fig:layers}\n\\end{figure}\n\nAny unitary can be decomposed in terms of single-qubit gates and two-qubit CNOT gates \\cite{divincenzo}:\n\n", "index": 27, "text": "\\begin{equation}\n\\label{eq:divincenzo}\nU = L_M \\ {\\textnormal{CNOT}}_{M} \\ L_{M-1}  \\ \\dotsm \\ {\\textnormal{CNOT}}_1 \\ L_0,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E15.m1\" class=\"ltx_Math\" alttext=\"U=L_{M}\\ {\\textnormal{CNOT}}_{M}\\ L_{M-1}\\ \\cdots\\ {\\textnormal{CNOT}}_{1}\\ L_%&#10;{0},\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><mpadded width=\"+5pt\"><msub><mi>L</mi><mi>M</mi></msub></mpadded><mo>\u2062</mo><mpadded width=\"+5pt\"><msub><mtext>CNOT</mtext><mi>M</mi></msub></mpadded><mo>\u2062</mo><mpadded width=\"+5pt\"><msub><mi>L</mi><mrow><mi>M</mi><mo>-</mo><mn>1</mn></mrow></msub></mpadded><mo>\u2062</mo><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u22ef</mi></mpadded><mo>\u2062</mo><mpadded width=\"+5pt\"><msub><mtext>CNOT</mtext><mn>1</mn></msub></mpadded><mo>\u2062</mo><msub><mi>L</mi><mn>0</mn></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nHowever, some of the local unitaries $L_i$ in a decomposition of the form (\\ref{eq:divincenzo-ms}) may actually be identity, so after removing them the resulting sequence has the following structure:\n\n", "itemtype": "equation", "pos": 17786, "prevtext": "\nwhere $L_i$ denotes an arbitrary local unitary on the whole qubit register and ${\\textnormal{CNOT}}_i$ denotes a gate between some two qubits. A two-qubit ${\\textnormal{CNOT}}$ gate can be implemented in an arbitrary $N$-qubit register as a sequence of local unitaries and ${\\textnormal{MS}_x}(\\pi / 8)$ gates \\cite{Nebendahl2009}. Therefore, the following decomposition is always possible:\n\n", "index": 29, "text": "\\begin{equation}\n\\label{eq:divincenzo-ms}\nU = L_M \\ {\\textnormal{MS}_x}(\\pi / 8) \\ L_{M-1} \\ {\\textnormal{MS}_x}(\\pi / 8) \\dotsm {\\textnormal{MS}_x}(\\pi / 8) \\ L_0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E16.m1\" class=\"ltx_Math\" alttext=\"U=L_{M}\\ {\\textnormal{MS}_{x}}(\\pi/8)\\ L_{M-1}\\ {\\textnormal{MS}_{x}}(\\pi/8)%&#10;\\cdots{\\textnormal{MS}_{x}}(\\pi/8)\\ L_{0}.\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><mpadded width=\"+5pt\"><msub><mi>L</mi><mi>M</mi></msub></mpadded><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03c0</mi><mo>/</mo><mn>8</mn></mrow><mo rspace=\"7.5pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mpadded width=\"+5pt\"><msub><mi>L</mi><mrow><mi>M</mi><mo>-</mo><mn>1</mn></mrow></msub></mpadded><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03c0</mi><mo>/</mo><mn>8</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03c0</mi><mo>/</mo><mn>8</mn></mrow><mo rspace=\"7.5pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>L</mi><mn>0</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nThe decomposition consists of $M$ entangling gates, and the MS rotation angles $\\alpha_i$ are multiples of $\\pi / 8$. It is not necessary to consider angles $\\alpha_i \\geq \\pi$ since ${\\textnormal{MS}_x}(\\pi)$ is either the identity for an odd number of qubits, or a $\\pi$ rotation around $X$ for an even number of qubits.\n\nWe now seek to further simplify sequence (\\ref{eq:seq}). Every single-qubit unitary $U_i$ on qubit $i$ can be written as a composition of rotations around two different fixed axes \\cite{nielsen-chuang}, which means that we can always choose $\\alpha_{i1}$, $\\alpha_{i2}$ and $\\alpha_{i3}$ such that:\n\n", "itemtype": "equation", "pos": 18166, "prevtext": "\nHowever, some of the local unitaries $L_i$ in a decomposition of the form (\\ref{eq:divincenzo-ms}) may actually be identity, so after removing them the resulting sequence has the following structure:\n\n", "index": 31, "text": "\\begin{equation}\n\\label{eq:seq}\nU = L_{M} \\ {\\textnormal{MS}_x}(\\alpha_M) \\ L_{M-1} \\ \\dotsm \\ {\\textnormal{MS}_x}(\\alpha_1) \\ L_0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E17.m1\" class=\"ltx_Math\" alttext=\"U=L_{M}\\ {\\textnormal{MS}_{x}}(\\alpha_{M})\\ L_{M-1}\\ \\cdots\\ {\\textnormal{MS}_%&#10;{x}}(\\alpha_{1})\\ L_{0}.\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><mpadded width=\"+5pt\"><msub><mi>L</mi><mi>M</mi></msub></mpadded><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mi>M</mi></msub><mo rspace=\"7.5pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mpadded width=\"+5pt\"><msub><mi>L</mi><mrow><mi>M</mi><mo>-</mo><mn>1</mn></mrow></msub></mpadded><mo>\u2062</mo><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u22ef</mi></mpadded><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mn>1</mn></msub><mo rspace=\"7.5pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>L</mi><mn>0</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nAny local unitary $L = \\prod_{i = 1}^N U_i$ can therefore be written as:\n\n", "itemtype": "equation", "pos": 18936, "prevtext": "\nThe decomposition consists of $M$ entangling gates, and the MS rotation angles $\\alpha_i$ are multiples of $\\pi / 8$. It is not necessary to consider angles $\\alpha_i \\geq \\pi$ since ${\\textnormal{MS}_x}(\\pi)$ is either the identity for an odd number of qubits, or a $\\pi$ rotation around $X$ for an even number of qubits.\n\nWe now seek to further simplify sequence (\\ref{eq:seq}). Every single-qubit unitary $U_i$ on qubit $i$ can be written as a composition of rotations around two different fixed axes \\cite{nielsen-chuang}, which means that we can always choose $\\alpha_{i1}$, $\\alpha_{i2}$ and $\\alpha_{i3}$ such that:\n\n", "index": 33, "text": "\\begin{equation}\nU_i = X_i(\\alpha_{i3}) Z_i(\\alpha_{i2}) X_i(\\alpha_{i1}).\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E18.m1\" class=\"ltx_Math\" alttext=\"U_{i}=X_{i}(\\alpha_{i3})Z_{i}(\\alpha_{i2})X_{i}(\\alpha_{i1}).\" display=\"block\"><mrow><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>=</mo><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>3</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>Z</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>2</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>X</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere the product goes over the $N$ qubits in the register. Since unitaries acting on different qubits commute, we can write this as:\n\n", "itemtype": "equation", "pos": 19099, "prevtext": "\nAny local unitary $L = \\prod_{i = 1}^N U_i$ can therefore be written as:\n\n", "index": 35, "text": "\\begin{equation}\nL = \\prod_{i = 1}^N X_i(\\alpha_{i3}) Z_i(\\alpha_{i2}) X_i(\\alpha_{i1}),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E19.m1\" class=\"ltx_Math\" alttext=\"L=\\prod_{i=1}^{N}X_{i}(\\alpha_{i3})Z_{i}(\\alpha_{i2})X_{i}(\\alpha_{i1}),\" display=\"block\"><mrow><mrow><mi>L</mi><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>3</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>Z</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>2</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>X</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere ${\\tilde{{X}}}$ and ${\\tilde{{Z}}}$ denote arbitrary products of rotations around the $X$ or $Z$ axes for all qubits. Therefore, the sequence in (\\ref{eq:seq}) can be written as:\n\n", "itemtype": "equation", "pos": 19337, "prevtext": "\nwhere the product goes over the $N$ qubits in the register. Since unitaries acting on different qubits commute, we can write this as:\n\n", "index": 37, "text": "\\begin{align}\nL &= \\prod_{i = 1}^N X_i(\\alpha_{i3}) \\prod_{i = 1}^N Z_i(\\alpha_{i2}) \\prod_{i = 1}^N X_i(\\alpha_{i1}) \\\\\n&= {\\tilde{{X'}}} {\\tilde{{Z}}} {\\tilde{{X}}},\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E20.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle L\" display=\"inline\"><mi>L</mi></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E20.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\prod_{i=1}^{N}X_{i}(\\alpha_{i3})\\prod_{i=1}^{N}Z_{i}(\\alpha_{i2%&#10;})\\prod_{i=1}^{N}X_{i}(\\alpha_{i1})\" display=\"inline\"><mrow><mi/><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover></mstyle><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>3</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover></mstyle><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>2</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover></mstyle><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mrow><mi>i</mi><mo>\u2062</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></mrow></mrow></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E21.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\tilde{{X^{\\prime}}}}{\\tilde{{Z}}}{\\tilde{{X}}},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mover accent=\"true\"><msup><mi>X</mi><mo>\u2032</mo></msup><mo stretchy=\"false\">~</mo></mover><mo>\u2062</mo><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mo>\u2062</mo><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nand commuting the $X$ rotations with the MS gates we obtain a sequence of the form:\n\n", "itemtype": "equation", "pos": 19702, "prevtext": "\nwhere ${\\tilde{{X}}}$ and ${\\tilde{{Z}}}$ denote arbitrary products of rotations around the $X$ or $Z$ axes for all qubits. Therefore, the sequence in (\\ref{eq:seq}) can be written as:\n\n", "index": 39, "text": "\\begin{align}\nU = {\\tilde{{X}}}_{M}' {\\tilde{{Z}}}_{M} {\\tilde{{X}}}_{M} {\\textnormal{MS}_x}(\\alpha_M) \\cdots {\\tilde{{X}}}_1' {\\tilde{{Z}}}_1 {\\tilde{{X}}}_1 {\\textnormal{MS}_x}(\\alpha_1) {\\tilde{{X}}}_0' {\\tilde{{Z}}}_0 {\\tilde{{X}}}_0,\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E22.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U={\\tilde{{X}}}_{M}^{\\prime}{\\tilde{{Z}}}_{M}{\\tilde{{X}}}_{M}{%&#10;\\textnormal{MS}_{x}}(\\alpha_{M})\\cdots{\\tilde{{X}}}_{1}^{\\prime}{\\tilde{{Z}}}_%&#10;{1}{\\tilde{{X}}}_{1}{\\textnormal{MS}_{x}}(\\alpha_{1}){\\tilde{{X}}}_{0}^{\\prime%&#10;}{\\tilde{{Z}}}_{0}{\\tilde{{X}}}_{0},\" display=\"inline\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><msubsup><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mi>M</mi><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mi>M</mi></msub><mo>\u2062</mo><msub><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mi>M</mi></msub><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mi>M</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>1</mn><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mn>1</mn></msub><mo>\u2062</mo><msub><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>1</mn></msub><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msubsup><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>0</mn><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mn>0</mn></msub><mo>\u2062</mo><msub><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>0</mn></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nEvery odd local unitary (except for the last one) is a product of Z rotations on all qubits, and the even local unitaries can be grouped as $L_i = {\\tilde{{X}}}_i' {\\tilde{{Z}}}_i {\\tilde{{X}}}_i$. Moreover, a collective Z rotation can be extracted from each even local unitary $L_i$ and absorbed into the phase of the subsequent MS gates and collective operations to simplify the implementation of $L_i$. Therefore the sequence can be written as:\n\n", "itemtype": "equation", "pos": 20037, "prevtext": "\nand commuting the $X$ rotations with the MS gates we obtain a sequence of the form:\n\n", "index": 41, "text": "\\begin{align}\nU &= {\\tilde{{X}}}_M' {\\tilde{{Z}}}_M {\\tilde{{X}}}_M {\\textnormal{MS}_x}(\\alpha_M) \\cdots \\times \\nonumber \\\\\n& \\quad \\ \\times {\\tilde{{X}}}_2' {\\tilde{{Z}}}_2 {\\tilde{{X}}}_2 {\\textnormal{MS}_x}(\\alpha_2) {\\tilde{{Z}}}_1 {\\textnormal{MS}_x}(\\alpha_1) {\\tilde{{X}}}_0' {\\tilde{{Z}}}_0 {\\tilde{{X}}}_0.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U\" display=\"inline\"><mi>U</mi></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={\\tilde{{X}}}_{M}^{\\prime}{\\tilde{{Z}}}_{M}{\\tilde{{X}}}_{M}{%&#10;\\textnormal{MS}_{x}}(\\alpha_{M})\\cdots\\times\" display=\"inline\"><mrow><mo>=</mo><msubsup><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mi>M</mi><mo>\u2032</mo></msubsup><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mi>M</mi></msub><msub><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mi>M</mi></msub><msub><mtext>MS</mtext><mi>x</mi></msub><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mi>M</mi></msub><mo stretchy=\"false\">)</mo></mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>\u00d7</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E23.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\quad\\ \\times{\\tilde{{X}}}_{2}^{\\prime}{\\tilde{{Z}}}_{2}{\\tilde{{%&#10;X}}}_{2}{\\textnormal{MS}_{x}}(\\alpha_{2}){\\tilde{{Z}}}_{1}{\\textnormal{MS}_{x}%&#10;}(\\alpha_{1}){\\tilde{{X}}}_{0}^{\\prime}{\\tilde{{Z}}}_{0}{\\tilde{{X}}}_{0}.\" display=\"inline\"><mrow><mrow><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u2003</mi></mpadded><mo>\u00d7</mo><msubsup><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>2</mn><mo>\u2032</mo></msubsup></mrow><mo>\u2062</mo><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mn>2</mn></msub><mo>\u2062</mo><msub><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>2</mn></msub><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mn>1</mn></msub><mo>\u2062</mo><msub><mtext>MS</mtext><mi>x</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msubsup><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>0</mn><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mn>0</mn></msub><mo>\u2062</mo><msub><mover accent=\"true\"><mi>X</mi><mo stretchy=\"false\">~</mo></mover><mn>0</mn></msub></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nWe have thus shown that any $N$-qubit unitary $U$ can be decomposed into a sequence of the form shown in (\\ref{eq:sequence-ms-phase}). These sequences always have the same structure, which makes it easier to identify patterns if one wants to compile families of unitaries, i.e. unitaries that depend on some tunable parameter.\n\n\\subsection{Numerical optimization}\n\\label{sec:optimization}\n\nWe have described a general form of a sequence of local operations and global entangling gates that implements any desired target unitary. It remains to find the actual sequence parameters, that is, the rotation angles and phases of the gates. However, we do not know a priori how many entangling gates will be needed for a given unitary. Therefore we suggest the following algorithm:\n\\begin{enumerate}\n\\item Propose a sequence with $M = 0$ entangling gates.\n\n\\item Search numerically for the sequence parameters that maximize the fidelity with the target unitary.\n\n\\item If the sequence has converged to the desired unitary (i.e. the fidelity equals 1), stop. Otherwise increase $M$ by 1 and go back to step 2.\n\\end{enumerate}\n\nWhen performing the numerical optimization in step 2 there might be a number of local optima in addition to the true global optimum, making fully deterministic optimization methods difficult to apply. We apply therefore a \\emph{repeated local search}, where an efficient deterministic optimization method is iterated, each time using randomly determined initial conditions. The initial conditions are chosen randomly for every optimization run, as experience has shown us that starting close to previously found local minima does not offer any improvement. The search is finalized whenever the fidelity with the target unitary is above some predefined threshold, or when a maximum number of tries is exceeded. An advantage of this method is that, since each optimization run starts from random initial conditions, these are easy to perform in parallel.\n\nThe algorithm chosen for each numerical optimization is the quasi-Newton method of Broyden, Fletcher, Goldfarb, and Shanno (BFGS) \\cite{Nocedal1999}. The function to be maximized is the fidelity of the unitary resulting from the pulse sequence with the target unitary. The gradient of the fidelity can be calculated analytically as a function of the sequence parameters, which speeds up the computation as compared to using several evaluations of the fidelity function.\n\nA previously used approach to this optimization problem was a combination of local gradient descent and simulated annealing (SA) \\cite{Nebendahl2009}, which also helps to avoid local maxima. However, this method did not make use of the analytic expression for the fidelity gradient, which speeds up the search. Moreover, its performance depends on the ``topography'' of the optimization space and requires manual tuning of the search parameters to achieve optimal results. We have compared the BFGS and simulated annealing approaches by compiling 100 unitaries randomly distributed in the Haar measure as explained in \\cite{Mezzadri2007} for different numbers of qubits. Repeated application of the BFGS method seems to scale better with the number of qubits than simulated annealing (see figure \\ref{fig:scaling}). The median number of search repetitions needed to find the global optimum was 1 in all the cases.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{scaling.pdf}\n\\caption{Average time required to find the global optimum for 100 unitaries randomly distributed in the Haar measure with the BFGS and simulated annealing methods, using an Intel\\textcopyright Core i5-4670s CPU 550 @ 3.10~GHz x 4 (one processing thread per optimization run). No data was obtained for the simulated annealing approach for 4 qubits owing to the excessive time required.}\n\\label{fig:scaling}\n\\end{figure}\n\nThe exponential scaling of the optimization problem complexity depends on the number of entangling gates required to compile a given unitary, which is an intrinsic property of the unitary and does not depend on the search algorithm. It is already known that it is not possible to efficiently implement an arbitrary unitary in terms of two-qubit gates \\cite{nielsen-chuang}; our numerical results suggest a similar result for $N$-qubit gates. In the two-qubit case the compilation always succeeded with 3 entangling gates, and not less (using 200 search repetitions). This was to be expected, since for two qubits an MS gate is equivalent to a $\\operatorname{CNOT}$ gate, and it is known that 3 CNOT gates are enough (and in general necessary) to implement an arbitrary two-qubit unitary \\cite{Vatan2004}. In the three-qubit case the optimization always succeeded with 8 entangling gates, and never with fewer (also using 200 repetitions). For 4 qubits, the optimization always succeeded for 25 entangling gates, and succeeded only 4\\% of the time with 24 entangling gates. However, we did only 4 optimization repeats in the four-qubit case, owing to the increased time it takes for these to converge. Therefore, it might be the case that given enough optimization runs, more unitaries would have been compiled with only 24 gates. We are not aware of any result in the literature concerning the number of $N$-qubit global entangling gates required for implementing a general $N$-qubit unitary for more than $N = 2$ qubits. From our numerical results, we conjecture that 8 is the maximum number of MS gates required for implementing arbitrary three-qubit unitaries, and 25 or less for four-qubit unitaries.\n\nHowever, completely random unitaries are not the most likely to appear in practice. A particularly interesting group of unitaries are Clifford gates, which find applications in quantum error correction \\cite{Gottesman1999} and state distillation protocols \\cite{nielsen-chuang}. To explore the difficulty of compiling general Clifford gates, we have randomly generated 100 Clifford gates for different qubit numbers as explained in \\cite{Appleby2005}. As can be seen in figure \\ref{fig:statistics}, the average number of required entangling gates also grows quickly with the number of qubits. However, most unitaries require less entangling gates than the maximum needed for an arbitrary unitary, at least in the two- and three-qubit cases. In the more challenging four-qubit case, we have done the compilation using only 4 optimization repeats per unitary, so it is possible that less gates are needed than what was actually obtained.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{statistics.pdf}\n\\caption{Number of entangling gates needed to compile a unitary for 100 randomly chosen Clifford operations.}\n\\label{fig:statistics}\n\\end{figure}\n\n\\subsection{Restricted optimization in subspaces}\n\nA particular case of interest is the compilation of a unitary whose action only matters on certain input states. This happens, for instance, when one is interested in state preparation starting from some fixed input state.  In this case the problem to be solved has less constraints than when fully specifying the target unitary, so a simpler sequence may be found. The unitary resulting from the compiled sequence only needs to be specified in a particular subspace of the input states, for example:\n\n", "itemtype": "equation", "pos": 20814, "prevtext": "\nEvery odd local unitary (except for the last one) is a product of Z rotations on all qubits, and the even local unitaries can be grouped as $L_i = {\\tilde{{X}}}_i' {\\tilde{{Z}}}_i {\\tilde{{X}}}_i$. Moreover, a collective Z rotation can be extracted from each even local unitary $L_i$ and absorbed into the phase of the subsequent MS gates and collective operations to simplify the implementation of $L_i$. Therefore the sequence can be written as:\n\n", "index": 43, "text": "\\begin{equation}\n\\label{eq:sequence-ms-phase}\nU = L_M \\operatorname{MS}_{\\phi_M}(\\alpha_M)  \\cdots L_2 \\operatorname{MS}_{\\phi_2}(\\alpha_2) {\\tilde{{Z}}}_1 \\operatorname{MS}_{\\phi_1}(\\alpha_1) L_0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E24.m1\" class=\"ltx_Math\" alttext=\"U=L_{M}\\operatorname{MS}_{\\phi_{M}}(\\alpha_{M})\\cdots L_{2}\\operatorname{MS}_{%&#10;\\phi_{2}}(\\alpha_{2}){\\tilde{{Z}}}_{1}\\operatorname{MS}_{\\phi_{1}}(\\alpha_{1})%&#10;L_{0}.\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><msub><mi>L</mi><mi>M</mi></msub><mo>\u2062</mo><mrow><mrow><msub><mo>MS</mo><msub><mi>\u03d5</mi><mi>M</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mi>M</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2061</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>L</mi><mn>2</mn></msub></mrow></mrow><mo>\u2062</mo><mrow><mrow><msub><mo>MS</mo><msub><mi>\u03d5</mi><mn>2</mn></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2061</mo><msub><mover accent=\"true\"><mi>Z</mi><mo stretchy=\"false\">~</mo></mover><mn>1</mn></msub></mrow><mo>\u2062</mo><mrow><mrow><msub><mo>MS</mo><msub><mi>\u03d5</mi><mn>1</mn></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b1</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2061</mo><msub><mi>L</mi><mn>0</mn></msub></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere the columns marked as `free' are left unspecified. In this case, a suitable fidelity function for the numerical optimization is:\n\n", "itemtype": "equation", "pos": 28316, "prevtext": "\n\nWe have thus shown that any $N$-qubit unitary $U$ can be decomposed into a sequence of the form shown in (\\ref{eq:sequence-ms-phase}). These sequences always have the same structure, which makes it easier to identify patterns if one wants to compile families of unitaries, i.e. unitaries that depend on some tunable parameter.\n\n\\subsection{Numerical optimization}\n\\label{sec:optimization}\n\nWe have described a general form of a sequence of local operations and global entangling gates that implements any desired target unitary. It remains to find the actual sequence parameters, that is, the rotation angles and phases of the gates. However, we do not know a priori how many entangling gates will be needed for a given unitary. Therefore we suggest the following algorithm:\n\\begin{enumerate}\n\\item Propose a sequence with $M = 0$ entangling gates.\n\n\\item Search numerically for the sequence parameters that maximize the fidelity with the target unitary.\n\n\\item If the sequence has converged to the desired unitary (i.e. the fidelity equals 1), stop. Otherwise increase $M$ by 1 and go back to step 2.\n\\end{enumerate}\n\nWhen performing the numerical optimization in step 2 there might be a number of local optima in addition to the true global optimum, making fully deterministic optimization methods difficult to apply. We apply therefore a \\emph{repeated local search}, where an efficient deterministic optimization method is iterated, each time using randomly determined initial conditions. The initial conditions are chosen randomly for every optimization run, as experience has shown us that starting close to previously found local minima does not offer any improvement. The search is finalized whenever the fidelity with the target unitary is above some predefined threshold, or when a maximum number of tries is exceeded. An advantage of this method is that, since each optimization run starts from random initial conditions, these are easy to perform in parallel.\n\nThe algorithm chosen for each numerical optimization is the quasi-Newton method of Broyden, Fletcher, Goldfarb, and Shanno (BFGS) \\cite{Nocedal1999}. The function to be maximized is the fidelity of the unitary resulting from the pulse sequence with the target unitary. The gradient of the fidelity can be calculated analytically as a function of the sequence parameters, which speeds up the computation as compared to using several evaluations of the fidelity function.\n\nA previously used approach to this optimization problem was a combination of local gradient descent and simulated annealing (SA) \\cite{Nebendahl2009}, which also helps to avoid local maxima. However, this method did not make use of the analytic expression for the fidelity gradient, which speeds up the search. Moreover, its performance depends on the ``topography'' of the optimization space and requires manual tuning of the search parameters to achieve optimal results. We have compared the BFGS and simulated annealing approaches by compiling 100 unitaries randomly distributed in the Haar measure as explained in \\cite{Mezzadri2007} for different numbers of qubits. Repeated application of the BFGS method seems to scale better with the number of qubits than simulated annealing (see figure \\ref{fig:scaling}). The median number of search repetitions needed to find the global optimum was 1 in all the cases.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{scaling.pdf}\n\\caption{Average time required to find the global optimum for 100 unitaries randomly distributed in the Haar measure with the BFGS and simulated annealing methods, using an Intel\\textcopyright Core i5-4670s CPU 550 @ 3.10~GHz x 4 (one processing thread per optimization run). No data was obtained for the simulated annealing approach for 4 qubits owing to the excessive time required.}\n\\label{fig:scaling}\n\\end{figure}\n\nThe exponential scaling of the optimization problem complexity depends on the number of entangling gates required to compile a given unitary, which is an intrinsic property of the unitary and does not depend on the search algorithm. It is already known that it is not possible to efficiently implement an arbitrary unitary in terms of two-qubit gates \\cite{nielsen-chuang}; our numerical results suggest a similar result for $N$-qubit gates. In the two-qubit case the compilation always succeeded with 3 entangling gates, and not less (using 200 search repetitions). This was to be expected, since for two qubits an MS gate is equivalent to a $\\operatorname{CNOT}$ gate, and it is known that 3 CNOT gates are enough (and in general necessary) to implement an arbitrary two-qubit unitary \\cite{Vatan2004}. In the three-qubit case the optimization always succeeded with 8 entangling gates, and never with fewer (also using 200 repetitions). For 4 qubits, the optimization always succeeded for 25 entangling gates, and succeeded only 4\\% of the time with 24 entangling gates. However, we did only 4 optimization repeats in the four-qubit case, owing to the increased time it takes for these to converge. Therefore, it might be the case that given enough optimization runs, more unitaries would have been compiled with only 24 gates. We are not aware of any result in the literature concerning the number of $N$-qubit global entangling gates required for implementing a general $N$-qubit unitary for more than $N = 2$ qubits. From our numerical results, we conjecture that 8 is the maximum number of MS gates required for implementing arbitrary three-qubit unitaries, and 25 or less for four-qubit unitaries.\n\nHowever, completely random unitaries are not the most likely to appear in practice. A particularly interesting group of unitaries are Clifford gates, which find applications in quantum error correction \\cite{Gottesman1999} and state distillation protocols \\cite{nielsen-chuang}. To explore the difficulty of compiling general Clifford gates, we have randomly generated 100 Clifford gates for different qubit numbers as explained in \\cite{Appleby2005}. As can be seen in figure \\ref{fig:statistics}, the average number of required entangling gates also grows quickly with the number of qubits. However, most unitaries require less entangling gates than the maximum needed for an arbitrary unitary, at least in the two- and three-qubit cases. In the more challenging four-qubit case, we have done the compilation using only 4 optimization repeats per unitary, so it is possible that less gates are needed than what was actually obtained.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=\\columnwidth]{statistics.pdf}\n\\caption{Number of entangling gates needed to compile a unitary for 100 randomly chosen Clifford operations.}\n\\label{fig:statistics}\n\\end{figure}\n\n\\subsection{Restricted optimization in subspaces}\n\nA particular case of interest is the compilation of a unitary whose action only matters on certain input states. This happens, for instance, when one is interested in state preparation starting from some fixed input state.  In this case the problem to be solved has less constraints than when fully specifying the target unitary, so a simpler sequence may be found. The unitary resulting from the compiled sequence only needs to be specified in a particular subspace of the input states, for example:\n\n", "index": 45, "text": "\\begin{equation}\nU_{\\text{target}} = \n\\begin{pmatrix}\nu_{11} & u_{12} & \\vdots & \\vdots\\\\\nu_{21} & u_{22} & \\text{free} & \\text{free}\\\\\nu_{31} & u_{32} & \\vdots & \\vdots\\\\\nu_{41} & u_{42} & \\vdots & \\vdots\n\\end{pmatrix},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E25.m1\" class=\"ltx_Math\" alttext=\"U_{\\text{target}}=\\begin{pmatrix}u_{11}&amp;u_{12}&amp;\\vdots&amp;\\vdots\\\\&#10;u_{21}&amp;u_{22}&amp;\\text{free}&amp;\\text{free}\\\\&#10;u_{31}&amp;u_{32}&amp;\\vdots&amp;\\vdots\\\\&#10;u_{41}&amp;u_{42}&amp;\\vdots&amp;\\vdots\\end{pmatrix},\" display=\"block\"><mrow><mrow><msub><mi>U</mi><mtext>target</mtext></msub><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msub><mi>u</mi><mn>11</mn></msub></mtd><mtd columnalign=\"center\"><msub><mi>u</mi><mn>12</mn></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>u</mi><mn>21</mn></msub></mtd><mtd columnalign=\"center\"><msub><mi>u</mi><mn>22</mn></msub></mtd><mtd columnalign=\"center\"><mtext>free</mtext></mtd><mtd columnalign=\"center\"><mtext>free</mtext></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>u</mi><mn>31</mn></msub></mtd><mtd columnalign=\"center\"><msub><mi>u</mi><mn>32</mn></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>u</mi><mn>41</mn></msub></mtd><mtd columnalign=\"center\"><msub><mi>u</mi><mn>42</mn></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $U|_{S}$ is a rectangular matrix with the components of the desired unitary in the restricted subspace.\n\nA more general case is where some of the relative phases of the projections of the unitary acting on different subspaces of the whole Hilbert space are irrelevant. For example, suppose that one wants to apply a unitary to map some observable onto an ancilla qubit and then measure the ancilla, as shown in figure \\ref{fig:feedback}. Since the input state of qubit 3 is known to be $\\ket{0}$, only the subspace of input states spanned by \\{$\\ket{000}$, $\\ket{010}$, $\\ket{100}$, $\\ket{110}$\\} is relevant. Moreover, the measurement will project the state of the system onto either the subspace spanned by \\{$\\ket{000}$, $\\ket{010}$, $\\ket{100}$\\}, or that spanned by \\{$\\ket{111}$\\}, and all phase coherence between these alternatives will be lost. Therefore, the compiled sequence can be sought such that it matches the desired unitary in each of the subspaces but allowing an arbitrary phase $\\phi$ between them:\n\n", "itemtype": "equation", "pos": 28687, "prevtext": "\nwhere the columns marked as `free' are left unspecified. In this case, a suitable fidelity function for the numerical optimization is:\n\n", "index": 47, "text": "\\begin{equation}\n  \\label{eq:cost-function-restricted}\n  f(U) = \\operatorname{tr} \\left( U|_{S} \\, U|_{S}^{\\dagger} \\right),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E26.m1\" class=\"ltx_Math\" alttext=\"f(U)=\\operatorname{tr}\\left(U|_{S}\\,U|_{S}^{\\dagger}\\right),\" display=\"block\"><mrow><mrow><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>tr</mo><mo>\u2061</mo><mrow><mo>(</mo><msubsup><mrow><mrow><mpadded width=\"+1.7pt\"><msub><mrow><mi>U</mi><mo fence=\"true\" stretchy=\"false\">|</mo></mrow><mi>S</mi></msub></mpadded><mo>\u2062</mo><mi>U</mi></mrow><mo fence=\"true\" stretchy=\"false\">|</mo></mrow><mi>S</mi><mo>\u2020</mo></msubsup><mo>)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nIn this case (figure \\ref{fig:feedback}) it is possible to find a simpler implementation than in the fully constrained case (figure \\ref{fig:toffoli}), owing to the additional degrees of freedom available, namely arbitrary outputs for the $\\ket{\\psi_3} = \\ket{1}$ input states and an arbitrary relative phase between the two possible measurement outcomes.\n\n\\begin{figure*}[htbp]\n\\centering\n\\includegraphics[width=.7\\linewidth]{feedback.pdf}\n\\caption{Left: a unitary mapping (Toffoli gate) is applied, after which qubit 3 is measured. Right: a pulse sequence for implementing the circuit on the left. This implementation is simpler than in the fully constrained case (figure \\ref{fig:toffoli}) because of the additional degrees of freedom when compiling.}\n\\label{fig:feedback}\n\\end{figure*}\n\nIn the general case considered here we want to maximize the fidelity in each subspace, without regard to the relative phases between these. Therefore we can seek to maximize the function $f$ consisting of the sum of the fidelity functions (\\ref{eq:cost-function-restricted}) corresponding to each subspace:\n\n", "itemtype": "equation", "pos": 29852, "prevtext": "\nwhere $U|_{S}$ is a rectangular matrix with the components of the desired unitary in the restricted subspace.\n\nA more general case is where some of the relative phases of the projections of the unitary acting on different subspaces of the whole Hilbert space are irrelevant. For example, suppose that one wants to apply a unitary to map some observable onto an ancilla qubit and then measure the ancilla, as shown in figure \\ref{fig:feedback}. Since the input state of qubit 3 is known to be $\\ket{0}$, only the subspace of input states spanned by \\{$\\ket{000}$, $\\ket{010}$, $\\ket{100}$, $\\ket{110}$\\} is relevant. Moreover, the measurement will project the state of the system onto either the subspace spanned by \\{$\\ket{000}$, $\\ket{010}$, $\\ket{100}$\\}, or that spanned by \\{$\\ket{111}$\\}, and all phase coherence between these alternatives will be lost. Therefore, the compiled sequence can be sought such that it matches the desired unitary in each of the subspaces but allowing an arbitrary phase $\\phi$ between them:\n\n", "index": 49, "text": "\\begin{equation}\nU_{\\text{target}} = \n\\begin{pmatrix}\n1 & \\vdots & 0 & \\vdots & 0 & \\vdots & 0 & \\vdots\\\\\n0 & \\vdots & 0 & \\vdots & 0 & \\vdots & 0 & \\vdots\\\\\n0 & \\vdots & 1 & \\vdots & 0 & \\vdots & 0 & \\vdots\\\\\n0 & \\text{free} & 0 & \\text{free} & 0 & \\text{free} & 0 & \\text{free}\\\\\n0 & \\vdots & 0 & \\vdots & 1 & \\vdots & 0 & \\vdots\\\\\n0 & \\vdots & 0 & \\vdots & 0 & \\vdots & 0 & \\vdots\\\\\n0 & \\vdots & 0 & \\vdots & 0 & \\vdots & 0 & \\vdots\\\\\n0 & \\vdots & 0 & \\vdots & 0 & \\vdots & e^{i \\phi} & \\vdots\\\\\n\\end{pmatrix}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E27.m1\" class=\"ltx_Math\" alttext=\"U_{\\text{target}}=\\begin{pmatrix}1&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots\\\\&#10;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots\\\\&#10;0&amp;\\vdots&amp;1&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots\\\\&#10;0&amp;\\text{free}&amp;0&amp;\\text{free}&amp;0&amp;\\text{free}&amp;0&amp;\\text{free}\\\\&#10;0&amp;\\vdots&amp;0&amp;\\vdots&amp;1&amp;\\vdots&amp;0&amp;\\vdots\\\\&#10;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots\\\\&#10;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots\\\\&#10;0&amp;\\vdots&amp;0&amp;\\vdots&amp;0&amp;\\vdots&amp;e^{i\\phi}&amp;\\vdots\\\\&#10;\\end{pmatrix}\" display=\"block\"><mrow><msub><mi>U</mi><mtext>target</mtext></msub><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mtext>free</mtext></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mtext>free</mtext></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mtext>free</mtext></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mtext>free</mtext></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><msup><mi>e</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>\u03d5</mi></mrow></msup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere the sum goes over all the subspaces with different relative phases, and $U|_{S_j}$ is a rectangular matrix with the components of the desired unitary in the $j$-th subspace. \n\n\\subsection{Compensation of systematic errors}\n\nOwing to systematic errors, the operations experimentally applied may still be unitary but deviate from the intended ones. An example of this is addressing crosstalk due to laser light leaking onto adjacent qubits. If it is possible to characterize the actual experimental operations being applied, then they can be taken into account for the compilation by adapting our optimization procedure:\n\\begin{enumerate}\n\\item Compile the target unitary in terms of the ideal gates.\n\\item Replace the ideal gates by the experimentally characterized operations.\n\\item Add operations to obtain a higher fidelity with the ideal target unitary.\n\\end{enumerate}\n\nAs an example we show that excessive crosstalk can be corrected in an implementation of a Toffoli gate. Figure \\ref{fig:toffoli-pops} depicts experimental data corresponding to the action of the Toffoli gate on the 8 input basis states. It can be seen that, by adding just two pulses, the output fidelity for each input state increased in some cases by up to 20\\%. The sequence with 11 pulses is actually only an approximate correction to the uncorrected case. The exact correction requires 14 pulses, and actually yields a lower fidelity than the approximate one, since it requires more pulses and each of these has a non-zero error probability.\n\n\\begin{figure*}[htbp]\n\\centering\n\\includegraphics[width=.7\\linewidth]{toffoli-pops.pdf}\n\\caption{State fidelity for a Toffoli gate applied on the 8 canonical input states.}\n\\label{fig:toffoli-pops}\n\\end{figure*}\n\n\n\\section{Conclusions and outlook}\n\nIn this work we have shown methods to compile quantum unitaries into a sequence of collective rotations, addressed rotations and global entangling operations. For local unitaries, we have demonstrated an analytic approach that produces the shortest possible sequences in the general case, and adapted the method to simplify the resulting sequences if some constraints on the unitary are lifted. For arbitrary unitaries, we have presented an approach that produces sequences of layered local and entangling operations. This approach is based on a numerical optimization procedure that is faster than previously used ones, and the sequences obtained are by design optimal with respect to the number of entangling gates. Our numerical results suggest upper bounds on the number of $N$-qubit gates required to implement arbitrary three- and four-qubit unitaries.\n\nThe results of this paper show that in many cases one may obtain more efficient implementations by considering operations more general than two-qubit entangling gates. However, the exponentially growing complexity of decompositions as the number of qubits increases points to the necessity of keeping the register size small. \n\n\\section{Acknowledgements}\n\nWe thank I. Chuang, B. Lanyon, and V. Nebendahl for fruitful discussions. We gratefully acknowledge support by the Austrian Science Fund (FWF), through the SFB FoQuS (FWF Project No. F4002-N16), as well as the Institut f\u00c3\u00bcr Quantenoptik und Quanteninformation GmbH. E.A.M. is a recipient of a DOC fellowship from the Austrian Academy of Sciences. P.S. was supported by the Austrian Science Foundation (FWF) Erwin Schr\u00c3\u00b6dinger Stipendium 3600-N27. This research was funded by the Office of the Director of National Intelligence (ODNI), Intelligence Advanced Reasearch Projects Activity (IARPA), through the Army Research Office grant W911NF-10-1-0284. All statements of fact, opinion or conclusions contained herein are those of the authors and should not be construed as representing the official views or policies of IARPA, the ODNI, or the U.S. Government.\n\n\n\\appendix\n\n\n\\section{Compiling local unitaries}\n\n\\subsection{Finding basis changes}\n\\label{sec:ap-exact}\n\nIn this appendix we will show how to satisfy equation (\\ref{eq:basis-change}). We need to find a rotation ${C}$ around the equator of the Bloch sphere such that:\n\n", "itemtype": "equation", "pos": 31478, "prevtext": "\nIn this case (figure \\ref{fig:feedback}) it is possible to find a simpler implementation than in the fully constrained case (figure \\ref{fig:toffoli}), owing to the additional degrees of freedom available, namely arbitrary outputs for the $\\ket{\\psi_3} = \\ket{1}$ input states and an arbitrary relative phase between the two possible measurement outcomes.\n\n\\begin{figure*}[htbp]\n\\centering\n\\includegraphics[width=.7\\linewidth]{feedback.pdf}\n\\caption{Left: a unitary mapping (Toffoli gate) is applied, after which qubit 3 is measured. Right: a pulse sequence for implementing the circuit on the left. This implementation is simpler than in the fully constrained case (figure \\ref{fig:toffoli}) because of the additional degrees of freedom when compiling.}\n\\label{fig:feedback}\n\\end{figure*}\n\nIn the general case considered here we want to maximize the fidelity in each subspace, without regard to the relative phases between these. Therefore we can seek to maximize the function $f$ consisting of the sum of the fidelity functions (\\ref{eq:cost-function-restricted}) corresponding to each subspace:\n\n", "index": 51, "text": "\\begin{equation}\n  \\label{eq:cost-function-phases}\n  f(U) = \\sum_j \\operatorname{tr} \\left( U|_{S_j} \\, U|_{S_j}^{\\dagger} \\right),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E28.m1\" class=\"ltx_Math\" alttext=\"f(U)=\\sum_{j}\\operatorname{tr}\\left(U|_{S_{j}}\\,U|_{S_{j}}^{\\dagger}\\right),\" display=\"block\"><mrow><mrow><mrow><mi>f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mi>j</mi></munder><mrow><mo>tr</mo><mo>\u2061</mo><mrow><mo>(</mo><msubsup><mrow><mrow><mpadded width=\"+1.7pt\"><msub><mrow><mi>U</mi><mo fence=\"true\" stretchy=\"false\">|</mo></mrow><msub><mi>S</mi><mi>j</mi></msub></msub></mpadded><mo>\u2062</mo><mi>U</mi></mrow><mo fence=\"true\" stretchy=\"false\">|</mo></mrow><msub><mi>S</mi><mi>j</mi></msub><mo>\u2020</mo></msubsup><mo>)</mo></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $u$ is the generator of a given known unitary $U$, and it can always be written as:\n\n", "itemtype": "equation", "pos": 35747, "prevtext": "\nwhere the sum goes over all the subspaces with different relative phases, and $U|_{S_j}$ is a rectangular matrix with the components of the desired unitary in the $j$-th subspace. \n\n\\subsection{Compensation of systematic errors}\n\nOwing to systematic errors, the operations experimentally applied may still be unitary but deviate from the intended ones. An example of this is addressing crosstalk due to laser light leaking onto adjacent qubits. If it is possible to characterize the actual experimental operations being applied, then they can be taken into account for the compilation by adapting our optimization procedure:\n\\begin{enumerate}\n\\item Compile the target unitary in terms of the ideal gates.\n\\item Replace the ideal gates by the experimentally characterized operations.\n\\item Add operations to obtain a higher fidelity with the ideal target unitary.\n\\end{enumerate}\n\nAs an example we show that excessive crosstalk can be corrected in an implementation of a Toffoli gate. Figure \\ref{fig:toffoli-pops} depicts experimental data corresponding to the action of the Toffoli gate on the 8 input basis states. It can be seen that, by adding just two pulses, the output fidelity for each input state increased in some cases by up to 20\\%. The sequence with 11 pulses is actually only an approximate correction to the uncorrected case. The exact correction requires 14 pulses, and actually yields a lower fidelity than the approximate one, since it requires more pulses and each of these has a non-zero error probability.\n\n\\begin{figure*}[htbp]\n\\centering\n\\includegraphics[width=.7\\linewidth]{toffoli-pops.pdf}\n\\caption{State fidelity for a Toffoli gate applied on the 8 canonical input states.}\n\\label{fig:toffoli-pops}\n\\end{figure*}\n\n\n\\section{Conclusions and outlook}\n\nIn this work we have shown methods to compile quantum unitaries into a sequence of collective rotations, addressed rotations and global entangling operations. For local unitaries, we have demonstrated an analytic approach that produces the shortest possible sequences in the general case, and adapted the method to simplify the resulting sequences if some constraints on the unitary are lifted. For arbitrary unitaries, we have presented an approach that produces sequences of layered local and entangling operations. This approach is based on a numerical optimization procedure that is faster than previously used ones, and the sequences obtained are by design optimal with respect to the number of entangling gates. Our numerical results suggest upper bounds on the number of $N$-qubit gates required to implement arbitrary three- and four-qubit unitaries.\n\nThe results of this paper show that in many cases one may obtain more efficient implementations by considering operations more general than two-qubit entangling gates. However, the exponentially growing complexity of decompositions as the number of qubits increases points to the necessity of keeping the register size small. \n\n\\section{Acknowledgements}\n\nWe thank I. Chuang, B. Lanyon, and V. Nebendahl for fruitful discussions. We gratefully acknowledge support by the Austrian Science Fund (FWF), through the SFB FoQuS (FWF Project No. F4002-N16), as well as the Institut f\u00c3\u00bcr Quantenoptik und Quanteninformation GmbH. E.A.M. is a recipient of a DOC fellowship from the Austrian Academy of Sciences. P.S. was supported by the Austrian Science Foundation (FWF) Erwin Schr\u00c3\u00b6dinger Stipendium 3600-N27. This research was funded by the Office of the Director of National Intelligence (ODNI), Intelligence Advanced Reasearch Projects Activity (IARPA), through the Army Research Office grant W911NF-10-1-0284. All statements of fact, opinion or conclusions contained herein are those of the authors and should not be construed as representing the official views or policies of IARPA, the ODNI, or the U.S. Government.\n\n\n\\appendix\n\n\n\\section{Compiling local unitaries}\n\n\\subsection{Finding basis changes}\n\\label{sec:ap-exact}\n\nIn this appendix we will show how to satisfy equation (\\ref{eq:basis-change}). We need to find a rotation ${C}$ around the equator of the Bloch sphere such that:\n\n", "index": 53, "text": "\\begin{equation}\n  \\label{eq:basis-change-ap}\n  u = {C}^{-1} \\sigma_z {C},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E29.m1\" class=\"ltx_Math\" alttext=\"u={C}^{-1}\\sigma_{z}{C},\" display=\"block\"><mrow><mrow><mi>u</mi><mo>=</mo><mrow><msup><mi>C</mi><mrow><mo>-</mo><mn>1</mn></mrow></msup><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>z</mi></msub><mo>\u2062</mo><mi>C</mi></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nfor some angles $\\theta$, $\\phi$.\n\nIn general ${C}$ is of the form:\n\n", "itemtype": "equation", "pos": 35927, "prevtext": "\nwhere $u$ is the generator of a given known unitary $U$, and it can always be written as:\n\n", "index": 55, "text": "\\begin{equation}\n  u = \\sin \\theta \\cos \\phi \\, \\sigma_x + \\sin \\theta \\sin \\phi \\, \\sigma_y + \\cos \\theta \\, \\sigma_z,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E30.m1\" class=\"ltx_Math\" alttext=\"u=\\sin\\theta\\cos\\phi\\,\\sigma_{x}+\\sin\\theta\\sin\\phi\\,\\sigma_{y}+\\cos\\theta\\,%&#10;\\sigma_{z},\" display=\"block\"><mrow><mrow><mi>u</mi><mo>=</mo><mrow><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>x</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>y</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03b8</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>z</mi></msub></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $\\gamma$ is its rotation angle and $c$ its generator, which must lie on the equator and thus be a linear combination of $\\sigma_x$ and $\\sigma_y$. If we propose:\n\n", "itemtype": "equation", "pos": 36130, "prevtext": "\nfor some angles $\\theta$, $\\phi$.\n\nIn general ${C}$ is of the form:\n\n", "index": 57, "text": "\\begin{equation}\n  {C} = e^{-i \\gamma c / 2},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E31.m1\" class=\"ltx_Math\" alttext=\"{C}=e^{-i\\gamma c/2},\" display=\"block\"><mrow><mrow><mi>C</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>\u03b3</mi><mo>\u2062</mo><mi>c</mi></mrow><mo>/</mo><mn>2</mn></mrow></mrow></msup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nand replace in equation (\\ref{eq:basis-change-ap}), we find that the angle of rotation must be:\n\n", "itemtype": "equation", "pos": 36359, "prevtext": "\nwhere $\\gamma$ is its rotation angle and $c$ its generator, which must lie on the equator and thus be a linear combination of $\\sigma_x$ and $\\sigma_y$. If we propose:\n\n", "index": 59, "text": "\\begin{equation}\n  c = \\sin \\phi \\, \\sigma_x - \\cos \\phi \\, \\sigma_y,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E32.m1\" class=\"ltx_Math\" alttext=\"c=\\sin\\phi\\,\\sigma_{x}-\\cos\\phi\\,\\sigma_{y},\" display=\"block\"><mrow><mrow><mi>c</mi><mo>=</mo><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>x</mi></msub></mrow></mrow><mo>-</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>y</mi></msub></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\n\\subsection{Writing a unitary as a product of two equatorial rotations}\n\\label{sec:ap-two-coll}\n\nWe will show here how to decompose an arbitrary unitary as a product of two rotations around the equator of the Bloch sphere, namely:\n\n", "itemtype": "equation", "pos": 36540, "prevtext": "\nand replace in equation (\\ref{eq:basis-change-ap}), we find that the angle of rotation must be:\n\n", "index": 61, "text": "\\begin{equation}\n  \\gamma = \\theta.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E33.m1\" class=\"ltx_Math\" alttext=\"\\gamma=\\theta.\" display=\"block\"><mrow><mrow><mi>\u03b3</mi><mo>=</mo><mi>\u03b8</mi></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nThe target unitary can be written as:\n\n", "itemtype": "equation", "pos": 36823, "prevtext": "\n\n\\subsection{Writing a unitary as a product of two equatorial rotations}\n\\label{sec:ap-two-coll}\n\nWe will show here how to decompose an arbitrary unitary as a product of two rotations around the equator of the Bloch sphere, namely:\n\n", "index": 63, "text": "\\begin{equation}\n\\label{eq:ap-two-coll-decomposition}\nU = C_2 C_1.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E34.m1\" class=\"ltx_Math\" alttext=\"U=C_{2}C_{1}.\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $\\beta$ is its rotation angle,and $\\theta, \\phi$ determine its rotation axis. Similarly, the equatorial rotations can be written as:\n\n", "itemtype": "equation", "pos": 36943, "prevtext": "\nThe target unitary can be written as:\n\n", "index": 65, "text": "\\begin{align}\nU &= \\cos \\left( \\frac{\\beta}{2} \\right) {\\mathbf{1}} - i \\sin \\left( \\frac{\\beta}{2} \\right) \\times \\nonumber \\\\\n& \\quad \\ \\times (\\sin \\theta \\cos \\phi \\ \\sigma_x + \\sin \\theta \\sin \\phi \\ \\sigma_y + \\cos \\theta \\ \\sigma_z),\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U\" display=\"inline\"><mi>U</mi></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\cos\\left(\\frac{\\beta}{2}\\right){\\mathbf{1}}-i\\sin\\left(\\frac{%&#10;\\beta}{2}\\right)\\times\" display=\"inline\"><mrow><mo>=</mo><mi>cos</mi><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow><mn>\ud835\udfcf</mn><mo>-</mo><mi>i</mi><mi>sin</mi><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow><mo>\u00d7</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E35.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\quad\\ \\times(\\sin\\theta\\cos\\phi\\ \\sigma_{x}+\\sin\\theta\\sin\\phi\\ %&#10;\\sigma_{y}+\\cos\\theta\\ \\sigma_{z}),\" display=\"inline\"><mrow><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u2003</mi></mpadded><mo>\u00d7</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+5pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>x</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mpadded width=\"+5pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>y</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+5pt\"><mi>\u03b8</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>z</mi></msub></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nfor some rotation angles $\\alpha_i$ and phases $\\phi_i'$.\n\nWe shall asume that:\n\n", "itemtype": "equation", "pos": 37335, "prevtext": "\nwhere $\\beta$ is its rotation angle,and $\\theta, \\phi$ determine its rotation axis. Similarly, the equatorial rotations can be written as:\n\n", "index": 67, "text": "\\begin{equation}\nC_i = \\cos \\left( \\frac{\\alpha_i}{2} \\right) {\\mathbf{1}} - i \\sin \\left( \\frac{\\alpha_i}{2} \\right) (\\cos \\phi_i' \\ \\sigma_x + \\sin \\phi_i' \\ \\sigma_y ),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E36.m1\" class=\"ltx_Math\" alttext=\"C_{i}=\\cos\\left(\\frac{\\alpha_{i}}{2}\\right){\\mathbf{1}}-i\\sin\\left(\\frac{%&#10;\\alpha_{i}}{2}\\right)(\\cos\\phi_{i}^{\\prime}\\ \\sigma_{x}+\\sin\\phi_{i}^{\\prime}%&#10;\\ \\sigma_{y}),\" display=\"block\"><mrow><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mrow><mrow><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><msub><mi>\u03b1</mi><mi>i</mi></msub><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo>\u2062</mo><mn>\ud835\udfcf</mn></mrow><mo>-</mo><mrow><mi>i</mi><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><msub><mi>\u03b1</mi><mi>i</mi></msub><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+5pt\"><msubsup><mi>\u03d5</mi><mi>i</mi><mo>\u2032</mo></msubsup></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>x</mi></msub></mrow></mrow><mo>+</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mpadded width=\"+5pt\"><msubsup><mi>\u03d5</mi><mi>i</mi><mo>\u2032</mo></msubsup></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>y</mi></msub></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nReplacing these into (\\ref{eq:ap-two-coll-decomposition}) and solving for $\\alpha$ and $\\Delta$ we obtain:\n\n", "itemtype": "equation", "pos": 37602, "prevtext": "\nfor some rotation angles $\\alpha_i$ and phases $\\phi_i'$.\n\nWe shall asume that:\n\n", "index": 69, "text": "\\begin{align}\n\\alpha_1 &= \\alpha_2 = \\alpha,\\\\\n\\phi_1' &= \\phi + \\Delta / 2,\\\\\n\\phi_2' &= \\phi - \\Delta / 2.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E37.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\alpha_{1}\" display=\"inline\"><msub><mi>\u03b1</mi><mn>1</mn></msub></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E37.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\alpha_{2}=\\alpha,\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><msub><mi>\u03b1</mi><mn>2</mn></msub><mo>=</mo><mi>\u03b1</mi></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E38.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\phi_{1}^{\\prime}\" display=\"inline\"><msubsup><mi>\u03d5</mi><mn>1</mn><mo>\u2032</mo></msubsup></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E38.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\phi+\\Delta/2,\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mi>\u03d5</mi><mo>+</mo><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>/</mo><mn>2</mn></mrow></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E39.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\phi_{2}^{\\prime}\" display=\"inline\"><msubsup><mi>\u03d5</mi><mn>2</mn><mo>\u2032</mo></msubsup></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E39.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\phi-\\Delta/2.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mi>\u03d5</mi><mo>-</mo><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>/</mo><mn>2</mn></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\n\\subsection{Unitaries up to a collective Z rotation}\n\\label{sec:up-to-collective}\n\nSuppose that the unitary $U$ we want to implement is followed by gates whose phase can be freely chosen. Then it must only be specified up to an arbitrary collective rotation $Z'$, since this phase can be absorbed in the following gates. To compile $U$, we shall consider a decomposition of the form (\\ref{eq:complete-z}):\n\n", "itemtype": "equation", "pos": 37830, "prevtext": "\nReplacing these into (\\ref{eq:ap-two-coll-decomposition}) and solving for $\\alpha$ and $\\Delta$ we obtain:\n\n", "index": 71, "text": "\\begin{align}\n\\cos^2 \\left( \\frac{\\alpha}{2} \\right) &= \\frac{1}{2} \\left( \\cos \\left( \\frac{\\beta}{2} \\right) + 1 \\right) \\sin^2 \\theta,\\\\\n\\cos \\Delta &= \\frac{\\cos^2 \\left( \\frac{\\alpha}{2} \\right) - \\cos \\left( \\frac{\\beta}{2} \\right)}{1 - \\cos^2 \\left( \\frac{\\alpha}{2} \\right)}.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E40.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\cos^{2}\\left(\\frac{\\alpha}{2}\\right)\" display=\"inline\"><mrow><msup><mi>cos</mi><mn>2</mn></msup><mo>\u2061</mo><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E40.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\frac{1}{2}\\left(\\cos\\left(\\frac{\\beta}{2}\\right)+1\\right)\\sin^{%&#10;2}\\theta,\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mo>\u2062</mo><mrow><mo>(</mo><mrow><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mo>)</mo></mrow><mo>\u2062</mo><mrow><msup><mi>sin</mi><mn>2</mn></msup><mo>\u2061</mo><mi>\u03b8</mi></mrow></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E41.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\cos\\Delta\" display=\"inline\"><mrow><mi>cos</mi><mo>\u2061</mo><mi mathvariant=\"normal\">\u0394</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E41.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\frac{\\cos^{2}\\left(\\frac{\\alpha}{2}\\right)-\\cos\\left(\\frac{%&#10;\\beta}{2}\\right)}{1-\\cos^{2}\\left(\\frac{\\alpha}{2}\\right)}.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mstyle displaystyle=\"true\"><mfrac><mrow><mrow><msup><mi>cos</mi><mn>2</mn></msup><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo>-</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow></mrow><mrow><mn>1</mn><mo>-</mo><mrow><msup><mi>cos</mi><mn>2</mn></msup><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow></mrow></mfrac></mstyle></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nSuch a decomposition is more convenient is this case because the last addressed pulse $Z_N$ has been eliminated by taking advantage of the additional degree of freedom provided by $Z'$. We can now follow the same steps as in section \\ref{sec:local}. The unitary ${C}_N$ is given by:\n\n", "itemtype": "equation", "pos": 38533, "prevtext": "\n\n\\subsection{Unitaries up to a collective Z rotation}\n\\label{sec:up-to-collective}\n\nSuppose that the unitary $U$ we want to implement is followed by gates whose phase can be freely chosen. Then it must only be specified up to an arbitrary collective rotation $Z'$, since this phase can be absorbed in the following gates. To compile $U$, we shall consider a decomposition of the form (\\ref{eq:complete-z}):\n\n", "index": 73, "text": "\\begin{equation}\nU = Z' {C}_N Z_{N-1} {C}_{N-1} \\dotsm Z_2 {C}_2 Z_1 {C}_1.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E42.m1\" class=\"ltx_Math\" alttext=\"U=Z^{\\prime}{C}_{N}Z_{N-1}{C}_{N-1}\\cdots Z_{2}{C}_{2}Z_{1}{C}_{1}.\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><mrow><msup><mi>Z</mi><mo>\u2032</mo></msup><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nand eliminating this factor from the rest of the equations we obtain:\n\n", "itemtype": "equation", "pos": 38907, "prevtext": "\nSuch a decomposition is more convenient is this case because the last addressed pulse $Z_N$ has been eliminated by taking advantage of the additional degree of freedom provided by $Z'$. We can now follow the same steps as in section \\ref{sec:local}. The unitary ${C}_N$ is given by:\n\n", "index": 75, "text": "\\begin{equation}\n  \\label{eq:coll-n-2}\n  {C}_N = Z'^{-1} \\, U_N  {C}_1^{-1} {C}_2^{-1} \\dotsm {C}_{N-1}^{-1},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E43.m1\" class=\"ltx_Math\" alttext=\"{C}_{N}=Z^{\\prime-1}\\,U_{N}{C}_{1}^{-1}{C}_{2}^{-1}\\cdots{C}_{N-1}^{-1},\" display=\"block\"><mrow><mrow><msub><mi>C</mi><mi>N</mi></msub><mo>=</mo><mrow><mpadded width=\"+1.7pt\"><msup><mi>Z</mi><mrow><mi mathsize=\"142%\" mathvariant=\"normal\">\u2032</mi><mo>\u2063</mo><mrow><mo>-</mo><mn>1</mn></mrow></mrow></msup></mpadded><mo>\u2062</mo><msub><mi>U</mi><mi>N</mi></msub><mo>\u2062</mo><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nEquations (\\ref{eq:system-eliminated-2}) can be satisfied in exactly the same way as explained in section \\ref{sec:local}. In order to satisfy equation (\\ref{eq:coll-n-2}) we need to find a rotation $Z'$ such that the generator of ${C}_N$ lies on the equator. This can be done as follows.\n\nWe wish to find how to satisfy equation (\\ref{eq:coll-n-2}). For this we need to find a rotation $Z$ around the Z axis and a rotation ${C}$ around an axis on the equator of the Bloch sphere such that, for a given unitary $U$, the following equation holds:\n\n", "itemtype": "equation", "pos": 39102, "prevtext": "\nand eliminating this factor from the rest of the equations we obtain:\n\n", "index": 77, "text": "\\begin{align}\n  \\label{eq:system-eliminated-2}\nU_N^{-1} U_1 &= {C}_1^{-1} Z_1 {C}_1,\\\\\nU_N^{-1} U_2 &= {C}_1^{-1} {C}_2^{-1} Z_2 {C}_2 {C}_1,\\nonumber\\\\\n&\\ \\ \\vdots \\nonumber\\\\\nU_N^{-1} U_{N-1} &= {C}_1^{-1} {C}_2^{-1} \\dotsm {C}_{N-1}^{-1} Z_{N-1} {C}_{N-1} \\dotsm {C}_2 {C}_1.\\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E44.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}U_{1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>1</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E44.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}Z_{1}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}U_{2}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>2</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}{C}_{2}^{-1}Z_{2}{C}_{2}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ \\ \\vdots\" display=\"inline\"><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u00a0</mi></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ee</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}U_{N-1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}{C}_{2}^{-1}\\cdots{C}_{N-1}^{-1}Z_{N-1}{C}_{N-1}%&#10;\\cdots{C}_{2}{C}_{1}.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n$U$ is in general of the form:\n\n", "itemtype": "equation", "pos": 39949, "prevtext": "\n\nEquations (\\ref{eq:system-eliminated-2}) can be satisfied in exactly the same way as explained in section \\ref{sec:local}. In order to satisfy equation (\\ref{eq:coll-n-2}) we need to find a rotation $Z'$ such that the generator of ${C}_N$ lies on the equator. This can be done as follows.\n\nWe wish to find how to satisfy equation (\\ref{eq:coll-n-2}). For this we need to find a rotation $Z$ around the Z axis and a rotation ${C}$ around an axis on the equator of the Bloch sphere such that, for a given unitary $U$, the following equation holds:\n\n", "index": 79, "text": "\\begin{equation}\n  \\label{eq:basis-change-ap-2}\n  {C} = Z U.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E45.m1\" class=\"ltx_Math\" alttext=\"{C}=ZU.\" display=\"block\"><mrow><mrow><mi>C</mi><mo>=</mo><mrow><mi>Z</mi><mo>\u2062</mo><mi>U</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nand $Z$ is of the form:\n\n", "itemtype": "equation", "pos": 40056, "prevtext": "\n$U$ is in general of the form:\n\n", "index": 81, "text": "\\begin{equation}\n  U = e^{-i \\alpha u / 2},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E46.m1\" class=\"ltx_Math\" alttext=\"U=e^{-i\\alpha u/2},\" display=\"block\"><mrow><mrow><mi>U</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>\u03b1</mi><mo>\u2062</mo><mi>u</mi></mrow><mo>/</mo><mn>2</mn></mrow></mrow></msup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nWe will first find the angle of rotation $\\beta$. If we write out (\\ref{eq:basis-change-ap-2}) in terms of the generators of $U$ and $Z$ we have:\n\n", "itemtype": "equation", "pos": 40139, "prevtext": "\nand $Z$ is of the form:\n\n", "index": 83, "text": "\\begin{equation}\n  Z = e^{-i \\beta \\sigma_z / 2}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E47.m1\" class=\"ltx_Math\" alttext=\"Z=e^{-i\\beta\\sigma_{z}/2}.\" display=\"block\"><mrow><mrow><mi>Z</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>\u03b2</mi><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>z</mi></msub></mrow><mo>/</mo><mn>2</mn></mrow></mrow></msup></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nSince the axis of rotation of ${C}$ lies on the equator, its generator must not have any Z component, and thus:\n\n", "itemtype": "equation", "pos": 40351, "prevtext": "\n\nWe will first find the angle of rotation $\\beta$. If we write out (\\ref{eq:basis-change-ap-2}) in terms of the generators of $U$ and $Z$ we have:\n\n", "index": 85, "text": "\\begin{align}\n  {C} &= \\left( \\cos \\left( \\frac{\\beta}{2} \\right) {\\mathbf{1}} - i \\sin \\left( \\frac{\\beta}{2} \\right) \\sigma_z \\right) \\times \\nonumber \\\\\n  & \\quad \\ \\times \\left( \\cos \\left( \\frac{\\alpha}{2} \\right) {\\mathbf{1}} - i \\sin \\left( \\frac{\\alpha}{2} \\right) u \\right).\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{C}\" display=\"inline\"><mi>C</mi></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\left(\\cos\\left(\\frac{\\beta}{2}\\right){\\mathbf{1}}-i\\sin\\left(%&#10;\\frac{\\beta}{2}\\right)\\sigma_{z}\\right)\\times\" display=\"inline\"><mrow><mo>=</mo><mrow><mo>(</mo><mi>cos</mi><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow><mn>\ud835\udfcf</mn><mo>-</mo><mi>i</mi><mi>sin</mi><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow><msub><mi>\u03c3</mi><mi>z</mi></msub><mo>)</mo></mrow><mo>\u00d7</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E48.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\quad\\ \\times\\left(\\cos\\left(\\frac{\\alpha}{2}\\right){\\mathbf{1}}-%&#10;i\\sin\\left(\\frac{\\alpha}{2}\\right)u\\right).\" display=\"inline\"><mrow><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u2003</mi></mpadded><mo>\u00d7</mo><mrow><mo>(</mo><mrow><mrow><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow></mrow><mo>\u2062</mo><mn>\ud835\udfcf</mn></mrow><mo>-</mo><mrow><mi>i</mi><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac></mstyle><mo>)</mo></mrow></mrow><mo>\u2062</mo><mi>u</mi></mrow></mrow><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nthat is:\n\n", "itemtype": "equation", "pos": 40759, "prevtext": "\nSince the axis of rotation of ${C}$ lies on the equator, its generator must not have any Z component, and thus:\n\n", "index": 87, "text": "\\begin{equation}\n  0 = \\sin \\left( \\frac{\\beta}{2} \\right) \\cos \\left( \\frac{\\alpha}{2} \\right) + \\cos \\left( \\frac{\\beta}{2} \\right) \\sin \\left( \\frac{\\alpha}{2} \\right) u_z,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E49.m1\" class=\"ltx_Math\" alttext=\"0=\\sin\\left(\\frac{\\beta}{2}\\right)\\cos\\left(\\frac{\\alpha}{2}\\right)+\\cos\\left(%&#10;\\frac{\\beta}{2}\\right)\\sin\\left(\\frac{\\alpha}{2}\\right)u_{z},\" display=\"block\"><mrow><mrow><mn>0</mn><mo>=</mo><mrow><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow></mrow><mo>+</mo><mrow><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b2</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo>\u2062</mo><msub><mi>u</mi><mi>z</mi></msub></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nOnce $\\beta$ is known, the unitary on the right-hand side of (\\ref{eq:basis-change-ap-2}) is fully determined, and thus ${C}$ as well.\n\n\\subsection{Unitaries up to independent Z rotations}\n\\label{sec:up-to-independent}\n\nFinally, suppose that the unitary we want to implement is defined up to arbitrary independent rotations for each qubit around the Z axis. This is useful if the unitary is followed by a projective measurement, since any final rotation around the measurement axis for any qubit simply adds a phase and will not change the measured probabilities.\n\nLet us again consider a sequence of the form (\\ref{eq:complete-z}). The decomposition must now satisfy, for each qubit:\n\n", "itemtype": "equation", "pos": 40959, "prevtext": "\nthat is:\n\n", "index": 89, "text": "\\begin{equation}\n  \\beta = - 2 \\arctan \\left( \\tan \\left( \\frac{\\alpha}{2} \\right) u_z \\right).\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E50.m1\" class=\"ltx_Math\" alttext=\"\\beta=-2\\arctan\\left(\\tan\\left(\\frac{\\alpha}{2}\\right)u_{z}\\right).\" display=\"block\"><mrow><mrow><mi>\u03b2</mi><mo>=</mo><mrow><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mrow><mi>arctan</mi><mo>\u2061</mo><mrow><mo>(</mo><mrow><mrow><mi>tan</mi><mo>\u2061</mo><mrow><mo>(</mo><mfrac><mi>\u03b1</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mrow><mo>\u2062</mo><msub><mi>u</mi><mi>z</mi></msub></mrow><mo>)</mo></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere the $Z'_i$ are arbitrary rotations around the Z axis. As before, we can set $Z_N = {\\mathbf{1}}$ and find ${C}_N$:\n\n", "itemtype": "equation", "pos": 41755, "prevtext": "\nOnce $\\beta$ is known, the unitary on the right-hand side of (\\ref{eq:basis-change-ap-2}) is fully determined, and thus ${C}$ as well.\n\n\\subsection{Unitaries up to independent Z rotations}\n\\label{sec:up-to-independent}\n\nFinally, suppose that the unitary we want to implement is defined up to arbitrary independent rotations for each qubit around the Z axis. This is useful if the unitary is followed by a projective measurement, since any final rotation around the measurement axis for any qubit simply adds a phase and will not change the measured probabilities.\n\nLet us again consider a sequence of the form (\\ref{eq:complete-z}). The decomposition must now satisfy, for each qubit:\n\n", "index": 91, "text": "\\begin{align}\nZ'_1 U_1 &= {C}_N \\dotsm {C}_2 Z_1 {C}_1,\\\\\nZ'_2 U_2 &= {C}_N \\dotsm  Z_2 {C}_2 {C}_1, \\nonumber\\\\\n&\\ \\ \\vdots \\nonumber\\\\\nZ'_N U_N &= Z_N {C}_N \\cdots {C}_2 {C}_1, \\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E51.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle Z^{\\prime}_{1}U_{1}\" display=\"inline\"><mrow><msubsup><mi>Z</mi><mn>1</mn><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>1</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E51.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{N}\\cdots{C}_{2}Z_{1}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle Z^{\\prime}_{2}U_{2}\" display=\"inline\"><mrow><msubsup><mi>Z</mi><mn>2</mn><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>2</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{N}\\cdots Z_{2}{C}_{2}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ \\ \\vdots\" display=\"inline\"><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u00a0</mi></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ee</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle Z^{\\prime}_{N}U_{N}\" display=\"inline\"><mrow><msubsup><mi>Z</mi><mi>N</mi><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>U</mi><mi>N</mi></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=Z_{N}{C}_{N}\\cdots{C}_{2}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msub><mi>Z</mi><mi>N</mi></msub><mo>\u2062</mo><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nEliminating ${C}_N$ from the remaining equations we obtain:\n\n", "itemtype": "equation", "pos": 42077, "prevtext": "\nwhere the $Z'_i$ are arbitrary rotations around the Z axis. As before, we can set $Z_N = {\\mathbf{1}}$ and find ${C}_N$:\n\n", "index": 93, "text": "\\begin{equation}\n  \\label{eq:coll-n-3}\n  {C}_N = Z_N' \\, U_N  {C}_1^{-1} {C}_2^{-1} \\dotsm {C}_{N-1}^{-1}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E52.m1\" class=\"ltx_Math\" alttext=\"{C}_{N}=Z_{N}^{\\prime}\\,U_{N}{C}_{1}^{-1}{C}_{2}^{-1}\\cdots{C}_{N-1}^{-1}.\" display=\"block\"><mrow><mrow><msub><mi>C</mi><mi>N</mi></msub><mo>=</mo><mrow><mpadded width=\"+1.7pt\"><msubsup><mi>Z</mi><mi>N</mi><mo>\u2032</mo></msubsup></mpadded><mo>\u2062</mo><msub><mi>U</mi><mi>N</mi></msub><mo>\u2062</mo><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nEach equation has now an extra degree of freedom coming from the angle of the $Z'_k$ rotation. Let us for simplicity consider the case where the number of qubits $N$ is odd. If we group equations (\\ref{eq:system-eliminated-3}) in pairs we get two degrees of freedom per pair, which can be used to remove one of the global operations. Therefore we will discard every even-numbered global operation ${C}_{2k}$ from our decomposition and look for the solution of the following system of equations:\n\n", "itemtype": "equation", "pos": 42259, "prevtext": "\nEliminating ${C}_N$ from the remaining equations we obtain:\n\n", "index": 95, "text": "\\begin{align}\n  \\label{eq:system-eliminated-3}\nU_N^{-1} Z_N'^{-1} Z_1' U_1 &= {C}_1^{-1} Z_1 {C}_1,\\\\\nU_N^{-1} Z_N'^{-1} Z_2' U_2 &= {C}_1^{-1} {C}_2^{-1} Z_2 {C}_2 {C}_1,\\nonumber\\\\\n&\\ \\ \\vdots \\nonumber\\\\\nU_N^{-1} Z_N'^{-1} Z_{N-1}' U_{N-1} &= {C}_1^{-1} \\dotsm {C}_{N-1}^{-1} Z_{N-1} {C}_{N-1} \\dotsm {C}_1.\\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E53.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{N}^{\\prime-1}Z_{1}^{\\prime}U_{1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mi>N</mi><mrow><mi mathsize=\"142%\" mathvariant=\"normal\">\u2032</mi><mo>\u2063</mo><mrow><mo>-</mo><mn>1</mn></mrow></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mn>1</mn><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>1</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E53.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}Z_{1}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{N}^{\\prime-1}Z_{2}^{\\prime}U_{2}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mi>N</mi><mrow><mi mathsize=\"142%\" mathvariant=\"normal\">\u2032</mi><mo>\u2063</mo><mrow><mo>-</mo><mn>1</mn></mrow></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mn>2</mn><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>2</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}{C}_{2}^{-1}Z_{2}{C}_{2}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>2</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex17.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ \\ \\vdots\" display=\"inline\"><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u00a0</mi></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ee</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{N}^{\\prime-1}Z_{N-1}^{\\prime}U_{N-1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mi>N</mi><mrow><mi mathsize=\"142%\" mathvariant=\"normal\">\u2032</mi><mo>\u2063</mo><mrow><mo>-</mo><mn>1</mn></mrow></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mo>\u2032</mo></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}\\cdots{C}_{N-1}^{-1}Z_{N-1}{C}_{N-1}\\cdots{C}_{1}.\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $Z_k'' = Z_N'^{-1} Z'_{k}$. If the number of qubits $N$ is even, then the last equation is simply left unpaired. It is easy to verify that for each pair of equations the right-hand sides commute, and therefore we must have:\n\n", "itemtype": "equation", "pos": 43087, "prevtext": "\n\nEach equation has now an extra degree of freedom coming from the angle of the $Z'_k$ rotation. Let us for simplicity consider the case where the number of qubits $N$ is odd. If we group equations (\\ref{eq:system-eliminated-3}) in pairs we get two degrees of freedom per pair, which can be used to remove one of the global operations. Therefore we will discard every even-numbered global operation ${C}_{2k}$ from our decomposition and look for the solution of the following system of equations:\n\n", "index": 97, "text": "\\begin{align}\n\\label{eq:local-independent-system-pairs}\nU_N^{-1} Z_1'' U_1 &= {C}_1^{-1} Z_1 {C}_1,\\\\\nU_N^{-1} Z_2'' U_2 &= {C}_1^{-1} Z_2 {C}_1, \\nonumber\\\\\nU_N^{-1} Z_3'' U_3 &= {C}_1^{-1} {C}_3^{-1} Z_3 {C}_3 {C}_1, \\nonumber\\\\\nU_N^{-1} Z_4'' U_4 &= {C}_1^{-1} {C}_3^{-1} Z_4  {C}_3 {C}_1, \\nonumber\\\\\n&\\ \\ \\vdots \\nonumber \\\\\nU_N^{-1} Z_{N-2}'' U_{N-2} &= {C}_1^{-1} \\dotsm {C}_{N-2}^{-1} Z_{N-2} {C}_{N-2} \\dotsm {C}_1, \\nonumber\\\\\nU_N^{-1} Z_{N-1}'' U_{N-1} &= {C}_1^{-1} \\dotsm {C}_{N-2}^{-1} Z_{N-1} {C}_{N-2} \\dotsm {C}_1, \\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E54.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{1}^{\\prime\\prime}U_{1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mn>1</mn><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>1</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E54.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}Z_{1}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex19.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{2}^{\\prime\\prime}U_{2}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mn>2</mn><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>2</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex19.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}Z_{2}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex20.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{3}^{\\prime\\prime}U_{3}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mn>3</mn><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>3</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex20.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}{C}_{3}^{-1}Z_{3}{C}_{3}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>3</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>3</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>3</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex21.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{4}^{\\prime\\prime}U_{4}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mn>4</mn><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mn>4</mn></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex21.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}{C}_{3}^{-1}Z_{4}{C}_{3}{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>C</mi><mn>3</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mn>4</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>3</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex22.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ \\ \\vdots\" display=\"inline\"><mrow><mpadded width=\"+5pt\"><mi mathvariant=\"normal\">\u00a0</mi></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ee</mi></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex23.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{N-2}^{\\prime\\prime}U_{N-2}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex23.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}\\cdots{C}_{N-2}^{-1}Z_{N-2}{C}_{N-2}\\cdots{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex24.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{N}^{-1}Z_{N-1}^{\\prime\\prime}U_{N-1}\" display=\"inline\"><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex24.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle={C}_{1}^{-1}\\cdots{C}_{N-2}^{-1}Z_{N-1}{C}_{N-2}\\cdots{C}_{1},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><msubsup><mi>C</mi><mn>1</mn><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msubsup><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nor equivalently:\n\n", "itemtype": "equation", "pos": 43871, "prevtext": "\nwhere $Z_k'' = Z_N'^{-1} Z'_{k}$. If the number of qubits $N$ is even, then the last equation is simply left unpaired. It is easy to verify that for each pair of equations the right-hand sides commute, and therefore we must have:\n\n", "index": 99, "text": "\\begin{equation}\n[U_N^{-1} Z_{2k-1}'' U_{2k-1}, U_N^{-1} Z_{2k}'' U_{2k}] = 0,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E55.m1\" class=\"ltx_Math\" alttext=\"[U_{N}^{-1}Z_{2k-1}^{\\prime\\prime}U_{2k-1},U_{N}^{-1}Z_{2k}^{\\prime\\prime}U_{2%&#10;k}]=0,\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">[</mo><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow><mo>-</mo><mn>1</mn></mrow><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow><mo>-</mo><mn>1</mn></mrow></msub></mrow><mo>,</mo><mrow><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msubsup><mi>Z</mi><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow></msub></mrow><mo stretchy=\"false\">]</mo></mrow><mo>=</mo><mn>0</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nIn order to solve equation (\\ref{eq:cond-3}) we need to find rotations $Z_1 = Z(\\beta_1)$, $Z_2 = Z(\\beta_2)$ that satisfy a general equation of the form:\n\n", "itemtype": "equation", "pos": 43982, "prevtext": "\nor equivalently:\n\n", "index": 101, "text": "\\begin{equation}\n  \\label{eq:cond-3}\n[Z_{2k-1}'' U_{2k-1} U_N^{-1}, Z_{2k}'' U_{2k} U_N^{-1}] = 0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E56.m1\" class=\"ltx_Math\" alttext=\"[Z_{2k-1}^{\\prime\\prime}U_{2k-1}U_{N}^{-1},Z_{2k}^{\\prime\\prime}U_{2k}U_{N}^{-%&#10;1}]=0.\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">[</mo><mrow><msubsup><mi>Z</mi><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow><mo>-</mo><mn>1</mn></mrow><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow><mo>,</mo><mrow><msubsup><mi>Z</mi><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow><mi>\u2032\u2032</mi></msubsup><mo>\u2062</mo><msub><mi>U</mi><mrow><mn>2</mn><mo>\u2062</mo><mi>k</mi></mrow></msub><mo>\u2062</mo><msubsup><mi>U</mi><mi>N</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow><mo stretchy=\"false\">]</mo></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nfor given arbitrary $U_1$, $U_2$, whose generators are $u_1$ and $u_2$ respectively.\n\nLet us define:\n\n", "itemtype": "equation", "pos": 44252, "prevtext": "\n\nIn order to solve equation (\\ref{eq:cond-3}) we need to find rotations $Z_1 = Z(\\beta_1)$, $Z_2 = Z(\\beta_2)$ that satisfy a general equation of the form:\n\n", "index": 103, "text": "\\begin{equation}\n\\label{eq:ap-begin}\n  [Z_1 U_1, Z_2 U_2] = 0,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E57.m1\" class=\"ltx_Math\" alttext=\"[Z_{1}U_{1},Z_{2}U_{2}]=0,\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">[</mo><mrow><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>U</mi><mn>1</mn></msub></mrow><mo>,</mo><mrow><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>U</mi><mn>2</mn></msub></mrow><mo stretchy=\"false\">]</mo></mrow><mo>=</mo><mn>0</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nand let $v_i$ be the generators of the $V_i$. In order to satisfy (\\ref{eq:ap-begin}), the $v_i$ must satisfy:\n\n", "itemtype": "equation", "pos": 44431, "prevtext": "\nfor given arbitrary $U_1$, $U_2$, whose generators are $u_1$ and $u_2$ respectively.\n\nLet us define:\n\n", "index": 105, "text": "\\begin{equation}\n  V_i = Z_i U_i,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E58.m1\" class=\"ltx_Math\" alttext=\"V_{i}=Z_{i}U_{i},\" display=\"block\"><mrow><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>=</mo><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mi>U</mi><mi>i</mi></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nsince if two unitaries commute their generators must be the same. Our first goal is to determine the generator $v$. Let us consider the unitary:\n\n", "itemtype": "equation", "pos": 44591, "prevtext": "\nand let $v_i$ be the generators of the $V_i$. In order to satisfy (\\ref{eq:ap-begin}), the $v_i$ must satisfy:\n\n", "index": 107, "text": "\\begin{equation}\n  v_1 = v_2 = v,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E59.m1\" class=\"ltx_Math\" alttext=\"v_{1}=v_{2}=v,\" display=\"block\"><mrow><mrow><msub><mi>v</mi><mn>1</mn></msub><mo>=</mo><msub><mi>v</mi><mn>2</mn></msub><mo>=</mo><mi>v</mi></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nBy writing down $W_i$ explicitly in terms of the generators of each factor, it can be seen that its generator $w_i$ satisfies:\n\n", "itemtype": "equation", "pos": 44785, "prevtext": "\nsince if two unitaries commute their generators must be the same. Our first goal is to determine the generator $v$. Let us consider the unitary:\n\n", "index": 109, "text": "\\begin{equation}\n  W_i = Z_i^{1/2} U_i Z_i^{1/2}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E60.m1\" class=\"ltx_Math\" alttext=\"W_{i}=Z_{i}^{1/2}U_{i}Z_{i}^{1/2}.\" display=\"block\"><mrow><mrow><msub><mi>W</mi><mi>i</mi></msub><mo>=</mo><mrow><msubsup><mi>Z</mi><mi>i</mi><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>U</mi><mi>i</mi></msub><mo>\u2062</mo><msubsup><mi>Z</mi><mi>i</mi><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msubsup></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nSince we have:\n\n", "itemtype": "equation", "pos": 44977, "prevtext": "\nBy writing down $W_i$ explicitly in terms of the generators of each factor, it can be seen that its generator $w_i$ satisfies:\n\n", "index": 111, "text": "\\begin{equation}\n\\label{eq:acom-w}\n  \\{w_i, [\\sigma_z, u_i]\\} = 0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E61.m1\" class=\"ltx_Math\" alttext=\"\\{w_{i},[\\sigma_{z},u_{i}]\\}=0.\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">{</mo><msub><mi>w</mi><mi>i</mi></msub><mo>,</mo><mrow><mo stretchy=\"false\">[</mo><msub><mi>\u03c3</mi><mi>z</mi></msub><mo>,</mo><msub><mi>u</mi><mi>i</mi></msub><mo stretchy=\"false\">]</mo></mrow><mo stretchy=\"false\">}</mo></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nfrom equation (\\ref{eq:acom-w}) we see that:\n\n", "itemtype": "equation", "pos": 45074, "prevtext": "\nSince we have:\n\n", "index": 113, "text": "\\begin{equation}\n  V_i = Z_i^{1/2} W_i Z_i^{-1/2},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E62.m1\" class=\"ltx_Math\" alttext=\"V_{i}=Z_{i}^{1/2}W_{i}Z_{i}^{-1/2},\" display=\"block\"><mrow><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>=</mo><mrow><msubsup><mi>Z</mi><mi>i</mi><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msubsup><mo>\u2062</mo><msub><mi>W</mi><mi>i</mi></msub><mo>\u2062</mo><msubsup><mi>Z</mi><mi>i</mi><mrow><mo>-</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></mrow></msubsup></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nThe geometrical meaning of this equation is that the vector defined by $v$ on the Bloch sphere is perpendicular to that defined by $Z_i^{1/2} [\\sigma_z, u_i] Z_i^{-1/2}$. Since (\\ref{eq:ap-perpendicular}) must hold for $i = 1, 2$, $v$ must correspond to the cross product of these vectors:\n\n", "itemtype": "equation", "pos": 45185, "prevtext": "\nfrom equation (\\ref{eq:acom-w}) we see that:\n\n", "index": 115, "text": "\\begin{equation}\n  \\label{eq:ap-perpendicular}\n  \\left\\{ v, Z_i^{1/2} [\\sigma_z, u_i] Z_i^{-1/2} \\right\\} = 0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E63.m1\" class=\"ltx_Math\" alttext=\"\\left\\{v,Z_{i}^{1/2}[\\sigma_{z},u_{i}]Z_{i}^{-1/2}\\right\\}=0.\" display=\"block\"><mrow><mrow><mrow><mo>{</mo><mi>v</mi><mo>,</mo><mrow><msubsup><mi>Z</mi><mi>i</mi><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><msub><mi>\u03c3</mi><mi>z</mi></msub><mo>,</mo><msub><mi>u</mi><mi>i</mi></msub><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msubsup><mi>Z</mi><mi>i</mi><mrow><mo>-</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></mrow></msubsup></mrow><mo>}</mo></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nwhere $\\mathcal{N}$ is chosen such that:\n\n", "itemtype": "equation", "pos": 45601, "prevtext": "\nThe geometrical meaning of this equation is that the vector defined by $v$ on the Bloch sphere is perpendicular to that defined by $Z_i^{1/2} [\\sigma_z, u_i] Z_i^{-1/2}$. Since (\\ref{eq:ap-perpendicular}) must hold for $i = 1, 2$, $v$ must correspond to the cross product of these vectors:\n\n", "index": 117, "text": "\\begin{equation}\n  v = \\mathcal{N} \\left[ Z_1^{1/2} [z, u_1] Z_1^{-1/2}, Z_2^{1/2} [\\sigma_z, u_2] Z_2^{-1/2} \\right],\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E64.m1\" class=\"ltx_Math\" alttext=\"v=\\mathcal{N}\\left[Z_{1}^{1/2}[z,u_{1}]Z_{1}^{-1/2},Z_{2}^{1/2}[\\sigma_{z},u_{%&#10;2}]Z_{2}^{-1/2}\\right],\" display=\"block\"><mrow><mrow><mi>v</mi><mo>=</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udca9</mi><mo>\u2062</mo><mrow><mo>[</mo><mrow><msubsup><mi>Z</mi><mn>1</mn><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>z</mi><mo>,</mo><msub><mi>u</mi><mn>1</mn></msub><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msubsup><mi>Z</mi><mn>1</mn><mrow><mo>-</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></mrow></msubsup></mrow><mo>,</mo><mrow><msubsup><mi>Z</mi><mn>2</mn><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><msub><mi>\u03c3</mi><mi>z</mi></msub><mo>,</mo><msub><mi>u</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msubsup><mi>Z</mi><mn>2</mn><mrow><mo>-</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></mrow></msubsup></mrow><mo>]</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nHaving found $v$, it remains to find the rotation angles $\\beta_i$. Now, $v$ must satisfy $[Z_i U_i, v] = 0$, and therefore:\n\n", "itemtype": "equation", "pos": 45776, "prevtext": "\nwhere $\\mathcal{N}$ is chosen such that:\n\n", "index": 119, "text": "\\begin{equation}\n  \\frac{1}{2} \\operatorname{tr}(v^2) = 1.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E65.m1\" class=\"ltx_Math\" alttext=\"\\frac{1}{2}\\operatorname{tr}(v^{2})=1.\" display=\"block\"><mrow><mrow><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><mrow><mo>tr</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>v</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nBoth $v$ and $U_i$ are known, so $v$ and $U_i v U_i^{-1}$ can be written down explicitely as: \n\n", "itemtype": "equation", "pos": 45976, "prevtext": "\n\nHaving found $v$, it remains to find the rotation angles $\\beta_i$. Now, $v$ must satisfy $[Z_i U_i, v] = 0$, and therefore:\n\n", "index": 121, "text": "\\begin{equation}\n  U_i v U_i^{-1} = Z(\\beta_i)^{-1} v Z(\\beta_i).\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E66.m1\" class=\"ltx_Math\" alttext=\"U_{i}vU_{i}^{-1}=Z(\\beta_{i})^{-1}vZ(\\beta_{i}).\" display=\"block\"><mrow><mrow><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>\u2062</mo><mi>v</mi><mo>\u2062</mo><msubsup><mi>U</mi><mi>i</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow><mo>=</mo><mrow><mi>Z</mi><mo>\u2062</mo><msup><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b2</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><mo>-</mo><mn>1</mn></mrow></msup><mo>\u2062</mo><mi>v</mi><mo>\u2062</mo><mi>Z</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b2</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\nand therefore:\n\n", "itemtype": "equation", "pos": 46152, "prevtext": "\nBoth $v$ and $U_i$ are known, so $v$ and $U_i v U_i^{-1}$ can be written down explicitely as: \n\n", "index": 123, "text": "\\begin{align}\n  v &= \\sin \\theta \\cos \\phi \\, \\sigma_x + \\sin \\theta \\sin \\phi \\, \\sigma_y + \\cos \\theta \\, \\sigma_z, \\\\\n  U_i v U_i^{-1} &= \\sin \\theta \\cos \\phi'_i \\, \\sigma_x + \\sin \\theta \\sin \\phi'_i \\, \\sigma_y + \\cos \\theta \\, \\sigma_z,\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E67.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle v\" display=\"inline\"><mi>v</mi></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E67.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\sin\\theta\\cos\\phi\\,\\sigma_{x}+\\sin\\theta\\sin\\phi\\,\\sigma_{y}+%&#10;\\cos\\theta\\,\\sigma_{z},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>x</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>y</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03b8</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>z</mi></msub></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E68.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle U_{i}vU_{i}^{-1}\" display=\"inline\"><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>\u2062</mo><mi>v</mi><mo>\u2062</mo><msubsup><mi>U</mi><mi>i</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E68.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\sin\\theta\\cos\\phi^{\\prime}_{i}\\,\\sigma_{x}+\\sin\\theta\\sin\\phi^{%&#10;\\prime}_{i}\\,\\sigma_{y}+\\cos\\theta\\,\\sigma_{z},\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><msubsup><mi>\u03d5</mi><mi>i</mi><mo>\u2032</mo></msubsup></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>x</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><msubsup><mi>\u03d5</mi><mi>i</mi><mo>\u2032</mo></msubsup></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>y</mi></msub></mrow></mrow></mrow><mo>+</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03b8</mi></mpadded><mo>\u2062</mo><msub><mi>\u03c3</mi><mi>z</mi></msub></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\nWe have shown how to find suitable rotations $Z''$ that fulfill condition (\\ref{eq:cond-3}). Once these are found, all the left-hand sides of (\\ref{eq:local-independent-system-pairs}) are known unitaries and the system can be solved as before. The last collective rotation ${C}_N$ can be determined from (\\ref{eq:coll-n-3}) as shown in appendix \\ref{sec:up-to-collective}. We have thus shown how to compile the sought unitary $U$ into a sequence of the form:\n\n", "itemtype": "equation", "pos": 46423, "prevtext": "\nand therefore:\n\n", "index": 125, "text": "\\begin{align}\n  \\beta_i = \\phi - \\phi'_i.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E69.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\beta_{i}=\\phi-\\phi^{\\prime}_{i}.\" display=\"inline\"><mrow><mrow><msub><mi>\u03b2</mi><mi>i</mi></msub><mo>=</mo><mrow><mi>\u03d5</mi><mo>-</mo><msubsup><mi>\u03d5</mi><mi>i</mi><mo>\u2032</mo></msubsup></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06819.tex", "nexttext": "\n\n\\bibliography{document}\n\n\n", "itemtype": "equation", "pos": 46937, "prevtext": "\n\nWe have shown how to find suitable rotations $Z''$ that fulfill condition (\\ref{eq:cond-3}). Once these are found, all the left-hand sides of (\\ref{eq:local-independent-system-pairs}) are known unitaries and the system can be solved as before. The last collective rotation ${C}_N$ can be determined from (\\ref{eq:coll-n-3}) as shown in appendix \\ref{sec:up-to-collective}. We have thus shown how to compile the sought unitary $U$ into a sequence of the form:\n\n", "index": 127, "text": "\\begin{equation}\nU = \\begin{cases}\n{C}_N Z_{N-1} Z_{N-2} {C}_{N - 2} \\dotsm {C}_3 Z_2 Z_1 {C}_1 & \\text{for odd $N$,}\\\\\n{C}_N Z_{N-1} {C}_{N-1} \\dotsm {C}_3 Z_2 Z_1 {C}_1 & \\text{for even $N$}.\n\\end{cases}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E70.m1\" class=\"ltx_Math\" alttext=\"U=\\begin{cases}{C}_{N}Z_{N-1}Z_{N-2}{C}_{N-2}\\cdots{C}_{3}Z_{2}Z_{1}{C}_{1}&amp;%&#10;\\text{for odd $N$,}\\\\&#10;{C}_{N}Z_{N-1}{C}_{N-1}\\cdots{C}_{3}Z_{2}Z_{1}{C}_{1}&amp;\\text{for even $N$}.\\end%&#10;{cases}\" display=\"block\"><mrow><mi>U</mi><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mrow><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>2</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>3</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mtd><mtd columnalign=\"left\"><mrow><mtext>for odd\u00a0</mtext><mi>N</mi><mtext>,</mtext></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><msub><mi>C</mi><mi>N</mi></msub><mo>\u2062</mo><msub><mi>Z</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><msub><mi>C</mi><mrow><mi>N</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>C</mi><mn>3</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>Z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>C</mi><mn>1</mn></msub></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mtext>for even\u00a0</mtext><mi>N</mi></mrow><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}]