[{"file": "1601.04249.tex", "nexttext": "\n which has been proved to be valid for any base system [5].\n\\begin{figure}[h]\n\\begin{center}\n\\includegraphics[scale=.65]{CAM}\n\\caption{Figure shows the CAM design for 4-bit addition circuit}\n\\end{center}\n\\label{fig:1}\n\\end{figure}\n\nThis CAM is used to design an adder circuit for multiple numbers in binary number system and proposed in section IV.\n\\section{CVT and XOR Operations of Many Numbers In Any Base System}\n\\textbf{Definition:}\nFor any number system in base $\\beta,$  $XOR$ and $CVT$ of $K$ non-negative integers is defined as follows: (here $K$ integers represented as $X_{1}, X_{2}, X_{3},...,X_{K}$)\n$\n\\begin{array}{lcr}\n      X_{1}=a_{1n},...,a_{11}\\\\\n      X_{2}=a_{2n},...,a_{21}\\\\\n      .\\\\\n      .\\\\\n      .\\\\\n      X_{K}=a_{kn},...,a_{k1}\\\\\n      \\hline\n      \n      XOR(X_{1}, X_{2},...,X_{k})=((a_{1n}+a_{2n}+...+a_{Kn}) \\mod\\\\ \\beta,...,(a_{11}+a_{21}+,...,+a_{K1}) \\mod \\beta)_\\beta=R=(R_{n}, R_{n-1}, ..., R_{1})_{\\beta}$ \n     $ \\end{array}$ \\\\ \n      $     \n      \\begin{array}{lcr}\n     \n      $ and $CVT(X_{1},X_{2},X_{3},...,X_{K})=C=(C_{n},C_{n-1},...,C_{1},0)_{\\beta}$\n     $\\\\$ where $C_{i}=\\lfloor (a_{1i}+a_{2i}+,...,+a_{Ki})/\\beta \\rfloor$\n      and $i=1, 2, 3,...,n.\n\\end{array}$ \\\\\nNote: In general, $C_{i}$ result may not be in base $\\beta$ system but the decimal conversion of $(C_{n},C_{n-1},...,C_{1},0)=(C_{n}\\times \\beta^{n-1}+C_{n-1}\\times \\beta^{n-2}+...+C_{1}\\times \\beta^{1}+0)$ is same as the method from base $\\beta$ to base 10.\n\\begin{theorem}\nThe recurrence relation in equation (1) is also valid for many numbers in any base system.\\\\\nThat is $X_{1}+X_{2}+X_{3}+...+X_{K}=CVT(X_{1}, X_{2}, X_{3},...,X_{K})+XOR(X_{1}, X_{2}, X_{3},...,X_{K})$\n\\end{theorem}\nThe proof of the above theorem can be similarly seen by extending the proof in [5].\n\n\\begin{illustration}\nSuppose in ternary number system (i.e. $\\beta=3)$ $CVT$ and $XOR$ operation of decimal numbers $17, 8, 11, 8, 4, 8$ are as follows:\\\\ \\\\\n$CVT(17, 8, 11, 8, 4, 8)=CVT(122,022, 102,022, 011, 022)\\\\=(\\lfloor 2/3 \\rfloor \\lfloor 9/3 \\rfloor \\lfloor 11/3 \\rfloor 0)=(0330)=(0 \\times 3^{3}+3 \\times 3^{2}+3 \\times 3^{1}+0 \\times 3^{0})=(36)_{10}$ and\\\\ \\\\\n$XOR(17, 8, 11, 8, 4, 8)=XOR(122,022, 102,022, 011, 022)=(202)_{3}=(20)_{10}$.\\\\\nSo we have observed that $17+8+11+8+4+8=CVT(17, 8, 11, 8, 4, 8)+XOR(17, 8, 11, 8, 4, 8)=36+20$. \n\\end{illustration}\n\n\\subsection{Important Corollaries}\nFollowing two important Corollaries i.e. Corollary 1 and Corollary 2 are trivially obtained from the definitions of CVT and XOR operations for any base system and for arbitrary $K$ numbers.\n\n{\\bf Corollary 1.} \nFrom XOR definition, $R_{i}=\\{0,1,2,...,\\beta-1\\}$ and \n$R_{i}=0$ iff $R_{i}$ is a multiple of $\\beta$. So $XOR(X_{1}, X_{2},...,X_K$)=0 iff $R_{i}$ is multiples of $\\beta$ $\\forall i$.  \\\\\n \\\\\n{\\bf Corollary 2.} \nSimilarly from CVT definition, $C_{i}=\\{ 0,1,2...\\frac{k\\times (\\beta -1)}{\\beta}\\}$ and\n $C_{i}=0$ iff $C_{i}<\\beta$. \n So $CVT(X_{1}, X_{2},...,X_{K}$)=0 iff $C_{i}<\\beta $ $\\forall i$.  \n\n\n\\subsection{Important Properties of Multi Numbers CVT and XOR Operations in Binary Number System}\n\\subsubsection{CVT-Property}\n\n\\begin{property}\nFor base $\\beta$ system, if all the $K$ numbers are same then\n\n\\begin{enumerate}\n  \\item[(a)] if $K$ is even, $CVT$ is equal to addition of $K$ numbers i.e.\n   $CVT (X, X,...,{K}$ times)$ = X + X + ...+K$ times= $K \\times X$.\n   \\item[(b)] if $K$ is odd, $CVT$ is equal to addition of  $(K-1)$ numbers i.e.\n   $CVT(X, X,...K$ times)$ = X + X + ...+(K-1)$ times=$ (K-1) \\times X$.\n\\end{enumerate}\n\\begin{illustration}\nFor base $\\beta=2$ and take X=5 (101)\\\\\nif K is even (say K=4) then \\\\\n$CVT(5, 5, 5, 5)=CVT(101, 101, 101, 101)=(2020)_{2}=(20)_{10}=4\\times 5=K\\times X$\\\\\nif K is odd (say K=5) then\\\\\n$CVT(5, 5, 5, 5, 5)=CVT(101, 101, 101, 101, 101)=(2020)_{2}=(20)_{10}=(5-1)\\times 5=(K-1)\\times X$.\n\\end{illustration}\n\\end{property}\n \n\\begin{property}\nFor base $\\beta$ system, if $CVT(X_{1},X_{2},...,X_{n})=P$ and let $K$ is a scalar quantity and is a power of $\\beta$ then\n\\begin{enumerate}\n\\item[(a)] $CVT(K\\times X_{1},K\\times X_{2},...,K\\times X_{n})=K\\times P$ and \n\\item[(b)] $CVT(\\frac{X_{1}}{K},\\frac{X_{2}}{K},...,\\frac{X_{n}}{K} )=\\lfloor\\frac{P}{K+m}\\rfloor$; where  $m=\\frac{\\text{number of odd numbers}}{\\frac{K}{2}}$\n\\end{enumerate}\n\\begin{illustration}\nFor base $\\beta=2$ and let $X_{1}=5 (101), X_{2}=4 (100), X_{3}=6 (110), X_{4}=7 (111)$ and $K=4$. \\\\ \n$CVT(5,4,6,7)=$ $CVT(101, 100, 110, 111)=(2110)_{2}=(22)_{10}=P$ then \\\\ \n$CVT(4\\times 5,4\\times 4,4\\times 6,4\\times 7)=CVT(10100, 10000, 11000, 11100)=(211000)_{2}=(88)_{10}=4\\times 22=K\\times P$ and \\\\\n$CVT(\\frac{5}{4}, \\frac{4}{4}, \\frac{6}{4}, \\frac{7}{4})=CVT(1, 1, 1, 1)=CVT(1, 1, 1, 1)=(20)_{2}=(4)_{10}=\\lfloor\\frac{22}{4+1}\\rfloor=\\lfloor\\frac{P}{K+m}\\rfloor$.\n\\end{illustration}\n\\end{property}\n\n\\begin{property}\nIf $CVT(X_{1}, X_{2},...,X_{n})=P$ and \\\\ $CVT(Y_{1}, Y_{2},...,Y_{n})=Q$ then \\\\\n$CVT(X_{1}, X_{2},...,X_{n},Y_{1}, Y_{2},...,Y_{n})=P+Q$ \n\\begin{illustration}\nFor base $\\beta=2$ and let $X_{1}=5 (101), X_{2}=4 (100), X_{3}=6 (110), X_{4}=7 (111)$ and $Y_{1}=13 (1101), Y_{2}=9 (1001), Y_{3}=9 (1001), Y_{4}=13 (1101)$. \\\\ \n$CVT(5,4,6,7)=$ $CVT(101, 100, 110, 111)=(2110)_{2}=(22)_{10}=P$ and \\\\ \n$CVT(13,9,9,13)=$ $CVT(1101, 1001, 1001, 1101)=(21020)_{2}=(44)_{10}=Q$  then\\\\\n$CVT(5,4,6,7,13,9,9,13)=$ $CVT(0101, 0100, 0110, 0111, 1101, 1001, 1001, 1101)=(23130)_{2}=(66)_{10}=P+Q$.\n\\end{illustration}\n\\end{property}\n \n \n\\begin{property}\nIf $CVT(X,X,...,X)=P$ then $CVT(X^{K}, X^{K},...,X^{K})= P\\times X^{k-1} $.\n\\begin{illustration}\nFor base $\\beta=2$ and let $X=3 (11)$, K=3\n$CVT(3,3,3,3)=$ $CVT(11, 11, 11, 11)=(220)_{2}=(12)_{10}=P$ then\\\\ \n$CVT(3^{3},3^{3},3^{3},3^{3})=$ $CVT(11011, 11011, 11011, 11011)=(220220)_{2}=(108)_{10}=12\\times 3^{3-1}=P\\times X^{K-1}$.\n\\end{illustration}\n\\end{property}\n\n\n\\subsubsection{XOR-Property}\n\\begin{property}\nIf all the $K$ numbers are same then\n \\begin{enumerate}\n\\item[(a)] if $K$ is even, $XOR$ of $K$ numbers  is zero i.e. $XOR (X, X,...K$ times) $= 0$.\n\\item[(b)] if $K$ is odd, $XOR$ of $K$ numbers is equal to a single number i.e. $XOR (X, X,...K$ times) $= X$.\n \\end{enumerate}\n \\begin{illustration}\n For base $\\beta=2$ and take X=5 (101)\\\\\n if K is even (say K=4) then \\\\\n $XOR(5, 5, 5, 5)=XOR(101, 101, 101, 101)=(0)_{2}=0$\\\\\n if K is odd (say K=5) then\\\\\n $XOR(5, 5, 5, 5, 5)=XOR(101, 101, 101, 101, 101)=(101)_{2}=(5)_{10}=X$.\n \\end{illustration}\n\\end{property}\n\n\\begin{property}\nFor base $\\beta$ system, if $XOR(X_{1},X_{2},...,X_{n})=Q$ and let $K$ is a scalar quantity and is a power of $\\beta$ then \n\\begin{enumerate}\n\\item[(a)] $XOR(K\\times X_{1},K\\times X_{2},...,K\\times X_{n})=K\\times Q$ and\n\\item[(b)] $XOR(\\frac{X_{1}}{K},\\frac{X_{2}}{K},...,\\frac{X_{n}}{K} )=\\lfloor\\frac{Q}{K}\\rfloor$.\n\\end{enumerate}\n\\begin{illustration}\nFor base $\\beta=2$ and let $X_{1}=5 (101), X_{2}=4 (100), X_{3}=5 (101), X_{4}=7 (111)$ and $K=4$. \\\\ \n$XOR(5,4,5,7)=$ $XOR(101, 100, 101, 111)=(011)_{2}=(3)_{11}=Q$ then \\\\ \n$XOR(4\\times 5,4\\times 4,4\\times 5,4\\times 7)=XOR(10100, 10000, 10100, 11100)=(01100)_{2}=(12)_{10}=4\\times 3=K\\times Q$ and \\\\\n$XOR(\\frac{5}{4}, \\frac{4}{4}, \\frac{5}{4}, \\frac{7}{4})=XOR(1, 1, 1, 1)=XOR(1, 1, 1, 1)=(0)_{2}=(0)_{10}=\\lfloor\\frac{3}{4}\\rfloor=\\lfloor\\frac{Q}{K}\\rfloor$.\n\\end{illustration}\n\\end{property}\n\n\\begin{property}\nIf $XOR(X_{1}, X_{2},...,X_{n})=P$ and $XOR(Y_{1}, Y_{2},...,Y_{n})=Q$ then \\\\\n$XOR(X_{1}, X_{2},...,X_{n},Y_{1}, Y_{n},...,Y_{n})=P\\oplus Q$ \n\\begin{illustration}\nFor base $\\beta=2$ and let $X_{1}=5 (101), X_{2}=4 (100), X_{3}=5 (101), X_{4}=7 (111)$ and $Y_{1}=13 (1101), Y_{2}=9 (1001), Y_{3}=9 (1001), Y_{4}=10 (1010)$. \\\\ \n$XOR(5,4,5,7)=$ $XOR(101, 100, 101, 111)=(011)_{2}=(3)_{10}=P$ and \\\\ \n$XOR(13,9,9,10)=$ $XOR(1101, 1001, 1001, 1010)=(0111)_{2}=(7)_{10}=Q$  then\\\\\n$XOR(5,4,5,7,13,9,9,10)=$ $XOR(0101, 0100, 0101, 0111, 1101, 1001, 1001, 1010)=(0100)_{2}=(4)_{10}=3\\oplus 7=P\\oplus Q$.\n\\end{illustration}\n\\end{property}\n\n\\begin{property}\nIf $XOR(X,X,...,X)=P$ then $XOR(X^{K}, X^{K},...,X^{K})=P\\times X^{K-1}$.\n\\begin{illustration}\nFor base $\\beta=2$ and let $X=3 (11)$, K=2\n$XOR(3,3,3)=$ $XOR(11, 11, 11)=(11)_{2}=(3)_{10}=P$ then\\\\ \n$XOR(3^{2},3^{2},3^{2})=$ $XOR(1001, 1001, 1001)=(1001)_{2}=(9)_{10}=3\\times 3^{2-1}=P\\times X^{K-1}$.\n\\end{illustration}\n\\end{property}\n\n\\section{Proposed adder circuit for multiple numbers in binary number system}\nThe Figure 2 shows the circuit design for $K(=16)$ $4$-bit numbers using CAM. Where $K-1$ CAMs are required. For each CAM internal circuit design is throughly elaborated in $[14]$ and also shown in Figure 1. Initially in  first level, computation is performed on 8 CAMs for two numbers pairwise $(x_{1}, x_{2}) , (x_{3}, x_{4}),...,(x_{15}, x_{16})$ in parallel. Output from each $8$ CAMs are forwarded to the $4$ second level CAMs and so on. Delay in each level is $4$. So maximum delay is $=4\\times 4=16$ unit.\n\\begin{figure}[h]\n\\begin{center}\n\\includegraphics[scale=.65]{CAM_16}\n\\caption{Circuit design using CAMs for performing addition of sixteen 4-bit numbers in parallel}\n\\end{center}\n\\label{fig:1}\n\\end{figure}\n\n\\section*{Acknowledgment}\nThe authors would like to give anonymous thank to Dr. Sk Sarif Hassan for providing valuable suggestions to work with this domain.\n\n\n\\section{Conclusion}\nHere we have seen how to perform the Multi-Number $CVT$ and $XOR$ Operation in any base system. Some important properties of these operations are highlighted both in any base and binary number system. The implementations of this multi number arithmetic operations in binary system using parallel adder circuit has been proposed. In this context another parallel adder circuit design can be performed on using recurrence relation where lesser number of CAMs are required compare to the circuit design shown in Figure 2.\n\\begin{thebibliography}{1}\n\n\\bibitem{IEEEhowto:Hassan}\nSk.~S. Hassan, A. Ray, and P. Pal Choudhury, \\emph{Integral Value Transformation: A Class of Discrete Dynamical Systems}, Journal of Applied Mathematics and Computing, DOI: 10.1007/s12190-014-0825-y,09, (2014).\n\n\\bibitem{IEEEhowto:Hassan}\nSk. S. Hassan, P. Pal Choudhury, B K Nayak, Avishek Ghosh, Joydeep Banerjee, \\emph{Integral Value Transformations: A Class of Affine Discrete Dynamical Systems and an Application }, Journal of Advanced Research in Applied Mathematics, vol-7, issue-1, pp-62-73, (2015).\n\n\\bibitem{IEEEhowto:Choudhury}\nP. Pal Choudhury, S. Shaoo and B.~K. Nayak, \\emph{Theory of Carry Value Transformation and its Application in Fractal formation}, IEEE International Advance Computing Conference,DOI: 10.1109/IADCC.2009.4809146, (2009). \n\n\\bibitem{IEEEhowto:Choudhury}\nP. Pal Choudhury, Sk.~S. Hassan, S. Shaoo and B.~K. Nayak, \\emph{Act of CVT and EVT in the Formation of Number Theoretic Fractals},International Journal of Computational Cognition (HTTP://WWW.IJCC.US), VOL. 9, NO. 1, (2011).\n\n\\bibitem{IEEEhowto:Pal}\nS. Pal, S. Shaoo and  B.~K. Nayak, \\emph{Properties of Carry Value Transformation},International Journal of Mathematics and Mathematical Sciences\nVolume 2012, Article ID 174372, 10 pages\nhttp://dx.doi.org/10.1155/2012/174372, (2012).\n\n\\bibitem{IEEEhowto:Sahoo}\nS. Sahoo, I. Mohanty, G. Chowdhary and A. Panigrahi, \\emph{2-Variable Boolean Operation-Its Use in Pattern Formation}, arXiv: 1008.2530v1, nlin.CD.\n\n\\bibitem{IEEEhowto:Hassan}\nSk.~S. Hassan, P. Pal Choudhury, S. Das, R. Singh and B. ~K. Nayak, \\emph{Collatz function like Integral Value Transformations}, Alexandria journal of mathematics, Vol. 1, No. 2, Nov. (2010).\n\n\\bibitem{IEEEhowto:Choudhury}\nP. Pal Choudhury, Hassan Sk. S.,Sahoo S. and  B. ~K. Nayak, \\emph{Theory of Rule 6 and its Application to Round Robin Tournament}, arXiv 0906.5450v1, cs.DM, cs.GT, Int. Journal of Computational Cognition, Vol. 8, No. 3, pp. 33-37, Sep. (2010).\n\n\\bibitem{IEEEhowto:Hennessy} J. L. Hennessy and D.A Patterson, \u00e2\u0080\u009cComputer Architecture: A Quantitative Approach\u00e2\u0080\u009d (2nd edition), Morgan Kaufmann, San Francisco, (1996).\n\n\\bibitem{IEEEhowto:Lo} J. C. Lo, A Fast Binary Adder with Conditional Carry Generation, IEEE Transactions on Computers, Vol. 46, No. 2, pp. 248-253, Feb. (1997).\n\n\\bibitem{IEEEhowto:Lynch}T. Lynch, E. E. Swartzlander Jr. A Spanning Tree Carry Lookahead Adder, IEEE Transactions on Computers, Vol. 41, No. 8, pp. 931-939, (1992).\n\n\\bibitem{IEEEhowto:Dobson} J. M. Dobson and G. M. Blair, Fast two\u00e2\u0080\u0099s complement VLSI adder design, Electronics Letters, Vol. 31, No. 20, pp.1721-1722, 28th September (1995).\n\n\\bibitem{IEEEhowto:Toffoli} T. Toffoli, N. Margolis, Cellular Automata Machines, Cambridge, MA, MIT Press (1987).\n\n\\bibitem{IEEEhowto:Choudhury}\nP. Pal Choudhury, S. Shaoo and M. Chakraborty, \\emph{Implementation of Basic Arithmetic Operations using Cellular Automata}, IEEE Computer Society,ISBN:978-0-7695-3513-5,\nhttp://doi.ieeecomputersociety.org/10.1109/ICIT.2008.18 pp: 79-80,Dec. 17, 2008 to Dec. 20, (2008).\n\\end{thebibliography}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "itemtype": "equation", "pos": 10402, "prevtext": "\n\n\n\n\\title{Multi-Number CVT-XOR Arithmetic Operations In Any  Base System And Its Significant  Properties}\n\n\n\n\n\n\\author{\\IEEEauthorblockN{Jayanta Kumar Das}\n\\IEEEauthorblockA{Applied Statistics Unit \\\\ Indian Statistical Institute\\\\\nKolkata-700108, India\\\\\nEmail:dasjayantakumar89@gmail.com}\n\\and\n\\IEEEauthorblockN{Pabitra Pal Choudhury}\n\\IEEEauthorblockA{Applied Statistics Unit \\\\ Indian Statistical Institute\\\\\nKolkata-700108, India\\\\\nEmail:pabitrapalchoudhury@gmail.com}\n\\and\n\\IEEEauthorblockN{Sudhakar Sahoo}\n\\IEEEauthorblockA{Computer Science\\\\ Institute of Mathematics and Applications\\\\ Bhubaneswar-751003, India\\\\\nEmail: sudhakar.sahoo@gmail.com}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\maketitle\n\n\n\\begin{abstract}\nCarry Value Transformation (CVT) is a model of discrete dynamical system which is one special case of Integral Value Transformations (IVTs). Earlier in [5] it has been proved that sum of two non-negative integers is equal to the sum of their $CVT$ and $XOR$ values in any base system. In the present study, this phenomenon is extended to perform $CVT$ and $XOR$ operations for many non-negative integers in any base system. To achieve that both the definition of $CVT$ and $XOR$ are modified over the set of multiple integers instead of two. Also some important properties of these operations have been studied. With the help of cellular automata the adder circuit designed in $[14]$ on using $CVT-XOR$ recurrence formula is used to design a parallel adder circuit for multiple numbers in binary number system.\n\nKeywords- Integral Value Transformations; Carry Value Transformation; Recursion, Adder circuit etc. \n\\end{abstract}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\IEEEpeerreviewmaketitle\n\n\n\n\\section{Introduction}\nIntegral Value Transformations (IVTs) is a class of continuous maps in a discrete space and was introduced $[1, 2, 7]$ in the year 2009.\nA p-adic, k-dimensional, Integral Value Transformation is denoted by $IVT^{p,k}_{j}$ and it is a mapping from $N_{0}^{k} \\longrightarrow N_{0}$. When k=1, $IVT^{p,1}_{j}$ is defined as\\\\\n$\n\\begin{array}[b]{lcr}\n     IVT^{p,1}_{j}(x)=   \n     ( \n          f_{j}(x_{n})f_{j}(x_{n-1})...f_{j}(x_{1}))_{p}=(m)_{10}\n \\end{array}$\n \nwhere $m$ is the decimal conversion from the p-adic number and $x$ is non-negative p-adic integer represented as $x=(x_{n} x_{n-1}...x_{1})_{p}$ and the Rule number denoted by $f_{i}$ is a local mapping defined from $\\{ 0, 1, 2, 3,...,p-1\\}$ to $\\{ 0, 1, 2, 3,...,p-1\\}$. Here $j$ is the decimal equivalent of the p-adic string in the truth table representation of the local map.\nFor example, when $p=3$, $k=1$ and say $x=(14)_{10}=(112)_{3}$ and for the two different Rule numbers $5$ and $16$ shown in TABLE I, the $IVTs$ are calculated as\n$IVT^{3,1}_{5}(14)=(f_{5}(1)f_{5}(1)f_{5}(2))_{3}=(110)_{3}=(12)_{10}$ and \n$IVT^{3,1}_{16}(14)=(f_{16}(1)f_{16}(1)f_{16}(2))_{3}=(221)_{3}=(25)_{10}$ \n\n\\begin{table}[ht]\n\\caption{Truth Table of two 1-variable ternary functions (base 3) functions $f_{5}$ and $f_{16}$}\n\\centering \n\\begin{tabular}{|c|c|c|} \n\\hline\n\\bf Variable & \\multicolumn{2}{|c|}{\\bf Rule} \\\\\n\\hline\n\\bf $x_i$ & $\\bf {f_{5}}$& $\\bf {f_{16}}$\\\\\n\\hline\n0 & 2 & 1 \\\\\n\\hline\n1 & 1 & 2 \\\\\n\\hline\n2 & 0 & 1 \\\\\n\\hline\n\\end{tabular}\n\\label{table:nonlin} \n\\end{table}\n\nLike One dimensional, two dimensional p-adic, Rule $j$ $IVT$ denoted by $IVT_{j}^{p,2}(x,y)$ is defined as $IVT^{p,2}_{j}(x,y)=(f_{j}(x_{n},y_{n})f_{j}(x_{n-1},y_{n-1})...f_{j}(x_{1},y_{1}))_{p}=(m)_{10}$. Similarly, k-dimensional $IVTs$ can be defined. (Sometimes the symbol $\\beta$ is used instead of $p$ as base of the number system)\n\nCarry Value Transformation (CVT) which was initially defined in the year 2008 $[3]$, later developed and elaborated in $[4, 5]$ became a special case of $IVT_{j}^{p,k}(x, y)$ when $p=2$, $k=2$ and $j=8$ along with a $0$ padded in the LSB position of the output binary string. Thus $CVT$ is a two dimensional, Rule $8$, binary $IVT$ with a $0$ padded in it where as $XOR$ is simply a two dimensional Rule $6$ binary $IVT$ as shown in TABLE II. \n\\begin{table}[ht]\n\\caption{Truth Table of two 2-variable Boolean functions $f_{8}$ and $f_{6}$}\n\\centering \n\\begin{tabular}{|c|c|c|} \n\\hline\n\\bf Variable & \\multicolumn{2}{|c|}{\\bf Rule} \\\\\n\\hline\n\\bf $x_i$ $y_{i}$ & $\\bf {f_{8}}$& $\\bf {f_{6}}$\\\\\n\\hline\n0 0 & 0 & 0 \\\\\n\\hline\n0 1 & 0 & 1 \\\\\n\\hline\n1 0 & 0 & 1 \\\\\n\\hline\n1 1 & 1 & 0 \\\\\n\\hline\n\\end{tabular}\n\\label{table:nonlin} \n\\end{table}\n\nCarry Value Transformations were studied in $[3]$ to produce self-similar fractal whose dimension is same as the dimension of the Sierpinski triangle. Further they have shown that $CVT$ can also be used to produce many periodic and chaotic patterns. Also, analytical and algebraic properties of $CVT$ were studied in $[3]$.  Different fractals having dimension in between $1$ and $2$ were studied in $[4]$. Two most important properties of $CVT$ and Modified Carry Value Transformation (MCVT) were studied in $[5]$. Where It has been shown that $(1)$ sum of two non-negative integers are equal to their $CVT$ and $XOR$ values i.e. $a+b=CVT(a,b)+XOR(a,b)$ in any number system and  $(2)$ the number of iterations leading to either $CVT=0$ or $XOR=0$ does not exceed the maximum of the lengths of the two addenda expressed as binary strings i.e. the convergence behaviours of $CVT$ and $MCVT$ were discussed. Some similar kind of transformations such as Extreme Value Transformation (EVT) $[4]$, $2-$ Variable Boolean Operation (2-VBO) $[5]$, Integral Value Transformations (IVTs) $[7]$ are also used to manipulate strings of bits and applicable in pattern formations $[4, 7]$, solving Round Rabin Tournament problem $[8]$, Collatz-like functions $[7]$ and so forth. Previously used adder circuits $[9, 10, 11, 12]$  are combinational in nature and their complexity depends on number of logic gates used and the associated gate delays. In line with this Cellular Automata Machines $[13]$, were studied in $[14]$ for efficient hardware design of some basic arithmetic operations where their complexity centered on number of clock cycles required to finish the computation instead of the gate delays.\n\nThe organization of this paper is as follows: In section II some of the preliminary concepts on $CVT$ and $XOR$ operation of two numbers in binary domain is highlighted (also, thoroughly elaborated in $[3]$). In section III we have discussed the $CVT$ and $XOR$ operations of many numbers in any base system and studied some of its important properties. In section IV a parallel architecture for multi number addition in binary number system has been proposed. In Section V conclusion for this article along with some future research planning have been added.\n\n\\section{Carry Value Transformation}\nThe carry or overflow bits are usually generated at the time of addition between two $n$-bit strings. In the usual addition process, carry value is always a single bit and if generated then it is added column wise with other bits and not necessarily save for further use. But the carry value defined in $[3]$ are the usual carries generated bit wise and stored in their respective places as shown in TABLE III.\n\n\\begin{table}[ht]\n\\caption{Carry generated in the $i^{th}$ column counted from LSB is saved in $(i+1)^{th}$ column.} \n\\centering \n\\resizebox{8cm}{!} {\n\\begin{tabular}{c c c c c c c c} \ncarry value & = & $a_{n} \\wedge b_{n}$& $a_{n-1} \\wedge b_{n-1}$ &$a_{n-2} \\wedge b_{n-2}$&...&$a_{1} \\wedge b_{1}$& 0 \\\\ \na &=  & & $a_{n}$ & $a_{n-1}$&...& &$a_{1}$ \\\\\nb &= & & $b_{n}$ & $b_{n-1}$&...& &$b_{1}$ \\\\\n\\hline\n$a \\oplus b$&=& & $a_{n} \\oplus b_{n}$&$a_{n-1} \\oplus b_{n-1}$ &...& &$a_{1} \\oplus b_{1}$ \\\\\n\\hline \n\\end{tabular}\n}\n\\label{table:nonlin} \n\\end{table}\n  \nThus to find out the carry value we perform the bit wise $XOR$ operation of the operands to get a string of sum-bits (ignoring the carry-in) and simultaneously the bit wise ANDing of the operands to get a string of carry-bits, the latter string is padded with a $0$ on the right to signify that there is no carry-in to the LSB. Thus the corresponding decimal value of the string of carry bits is always an even integer. \nPrecise form of $CVT$ is a mapping defined as $(B_{n}\\times B_{n}) $to$ B_{n} $ where  $B_{n}$ is the set of strings of length $n$ on $B=\\{0,1\\}$ . More specifically, if  $a=(a_{n},a_{n-1},...,a_{1})$ and  $b=(b_{n},b_{n-1},...,b_{1})$ then  $CVT(a,b)=(c_{n},c_{n-1},...,c_{1},0)$ where  $c_{n}=a_{n}\\wedge b_{n}$ is an $n+1$  bit strings, belonging to set of non-negative integers and can be computed bit wise by logical AND operation followed by a $0$ which denotes no carry is generated in the LSB at the time of addition procedure.\\\\\n\n\\begin{illustration}\nSuppose we want to find out the $CVT$ of two non-negative integers say 11 and 14. First of all, we have to find out the binary representation of these numbers . Both are 4-bits numbers. The carry value is calculated as shown in TABLE IV:\n\\begin{table}[ht]\n\\caption{Carry generated in $ith$ column is saved in $(i+1)th$ column for $i=0, 1, 2,3,4$.\n} \n\\centering \n\\begin{tabular}{c c c c c c c} \nCarry& : & 1& 0 &$ 0$& 1& 0 \\\\ \n\\hline\na &: & & 1 & 0 & 1 & 1 \\\\\nb &: & & 1 & 1 & 0 & 1 \\\\\n\\hline\nXOR &: & & 0 & 1 & 1 & 0 \\\\\n\\hline \n\\end{tabular}\n\\label{table:nonlin} \n\\end{table}\n\\end{illustration}\n\nConceptually, in the general addition process the carry or overflow bit from each stage (if any) goes to the next stage so that, in each stage after the first (i.e. the LSB position with no carry-in), actually a 3-bit addition is performed instead of a $2-$bit addition by means of the full adder. Instead of going for this traditional method, what we do is that we perform the bit wise $XOR$ operation of the operands (ignoring the carry-in of each stage from the previous stage) and simultaneously the bit wise ANDing of the operands to get a string of carry-bits, the latter string is padded with a $0$ on the right to signify that there is no carry-in to the LSB (the overflow bit of this ANDing being always $0$ is simply ignored). In our example, bit wise $XOR$ gives $(0110)_{2}=(6)_{10}$  and bit wise ANDing followed by zero-padding gives $(10010)_{2}=(18)_{10}$. Thus   $CVT(1011,1101)_{2}=(10010)_{2}$ and equivalently in decimal notation one can write $CVT(11,13)=18$. Figure 1 shows the circuit diagram of CAM used for performing addition of two 4-bit numbers $[14]$. This CAM is based on a recurrence relation\n\n", "index": 1, "text": "\\begin{equation}\nX+Y=CVT(X, Y)+XOR(X,Y)\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"X+Y=CVT(X,Y)+XOR(X,Y)\" display=\"block\"><mrow><mrow><mi>X</mi><mo>+</mo><mi>Y</mi></mrow><mo>=</mo><mrow><mrow><mi>C</mi><mo>\u2062</mo><mi>V</mi><mo>\u2062</mo><mi>T</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi>X</mi><mo>\u2062</mo><mi>O</mi><mo>\u2062</mo><mi>R</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}]