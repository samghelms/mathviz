[{"file": "1601.05706.tex", "nexttext": "\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{recurse}\n\\caption{Ballot Number recurrence showing that $B(m,j) = B(m-1,j) + B(m+1,j-1)$.}\n\\label{fig:recurse}\n\\end{figure}\n\nBallot numbers are a generalization of the Catalan numbers, the special case for $m = 1$. Ballot numbers have the following generating function~\\cite{Graham}:\n\n\n", "itemtype": "equation", "pos": 41668, "prevtext": "\n\\maketitle\n\n\\begin{abstract}\n  Inspired by the Japanese game Pachinko, we study simple \n  (perfectly ``inelastic'' collisions) \n  dynamics of a unit ball falling amidst point obstacles\n  (\\emph{pins}) in the plane.\n  A classic example is that a checkerboard grid of pins produces the binomial\n  distribution, but what probability distributions result\n  from different pin placements?\n  In the 50-50 model, where the pins form a subset of this grid,\n  not all probability distributions are possible, but\n  surprisingly the uniform distribution is possible for $\\{1,2,4,8,16\\}$\n  possible drop locations.\n  Furthermore, every probability distribution can be approximated arbitrarily\n  closely, and every dyadic probability distribution can be divided by a\n  suitable power of $2$ and then constructed exactly\n  (along with extra ``junk'' outputs).\n  In a more general model, if a ball hits a pin off center, it falls left or\n  right accordingly.  Then we prove a universality result:\n  any distribution of $n$ dyadic probabilities, each specified by $k$ bits,\n  can be constructed using $O(n k^2)$ pins,\n  which is close to the information-theoretic lower bound of $\\Omega(n k)$.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{abstract}\n\n\\begin{center}\n\\sl In memory of our friend Ferran Hurtado. \n\\end{center}\n\n\n\n\\section{Introduction}\n\n\n\n\n\n\n\n\n\n\n\n\\begin{figure}[b]\n  \\centering\n  \\includegraphics[width=0.66\\linewidth]{neil_heeney_closeup_s}\n  \\caption{Close-up of Pachinko machine.  Photo by Neil Heeney, 2012,\n    used with permission.\n    \\url{http://www.flickr.com/photos/heeney/8188927393}}\n  \\label{real pachinko 1}\n  \n  \n  \n  \n  \n  \n  \n  \n\\end{figure}\n\nPachinko \\cite{Wiki,JapanZone} is a popular mechanical gambling game found in\ntens of thousands of arcade parlors throughout Japan.\nThe player fires Pachinko balls (ball bearings) into a vertical,\nnearly two-dimensional area filled with an\narray of horizontal pins, spinners, winning pockets which reward the player\nwith more balls, etc.  See Figures \\ref{real pachinko 1} and \\ref{real pachinko 2}.\nSince their invention in the 1920s until the 1980s,\nballs launched using a mechanical flipper, similar to pinball machines,\nwhile more recent Pachinko machines feature electrically controlled automatic\nball launching and slot-machine elements.  The name ``Pachinko''\n(\\begin{CJK}{UTF8}{goth}\u00e3\u0083\u0091\u00e3\u0083\u0081\u00e3\u0083\u00b3\u00e3\u0082\u00b3\\end{CJK})\ncomes from the Japanese word ``pachi pachi''\n(\\begin{CJK}{UTF8}{goth}\u00e3\u0083\u0091\u00e3\u0083\u0081\u00e3\u0083\u0091\u00e3\u0083\u0081\\end{CJK})\nwhich imitates the sound of (in this case) metal\nballs hitting metal pins.\n\n\\begin{figure}[t]\n  \\centering\n  \\begin{minipage}[t]{0.47\\textwidth}\n    \\centering\n    \\includegraphics[trim=25 0 0 0,clip,width=\\linewidth]{daniel_reed_3_edit.jpg}\n    \\caption[Nishijin mechanical Pachinko machine from the mid-20th century.\n      Photo by Daniel Reed, 2008, used with permission.]\n      {Nishijin mechanical Pachinko machine from the mid-20th century.\n      Photo by Daniel Reed, 2008, used with permission.\\footnotemark \n      }\n    \\label{real pachinko 2}\n  \\end{minipage}\\hfill\n  \\begin{minipage}[t]{0.5\\textwidth}\n    \\centering\n    \\includegraphics[trim=150 300 0 0,clip,width=\\linewidth]{akiyama}\n    \\caption{Jin Akiyama (right) and his mathematical Pachinko device.\n      Photo taken by F. Hurtado at KyotoCGGT in Kyoto, 2007.}\n    \\label{akiyama}\n  \\end{minipage}\n\\end{figure}\n\nIn this paper,\\footnotetext{\\url{http://faculty.ccp.edu/faculty/dreed/Campingart/pachinko/}} we study an idealized geometry and dynamics of a simple form of\nPachinko: a single ball in a vertical plane falling through an arrangement of\npins, modeled as points.\n\nOur study is motivated by a mathematical illustration/toy built by Jin Akiyama,\nexhibited at KyotoCGGT 2007 and written about in 2008 \\cite{Akiyama-Ruiz-2008};\nsee Figure~\\ref{akiyama}.\nThis device features a regular, checkerboard grid of pins, with a reservoir of\nwooden balls above, and a bank of containers below which allow a visual measurement\nof how many balls go where.\nIf we model a ball hitting a pin as having a 50-50 chance of going left or\nright, then the balls produce a binomial distribution,\nwhich we visually recognize as a bell curve.\nA similar illustration is in Eameses' famous Mathematica exhibit at the Boston\nMuseum of Science (since 1961) \\cite{Eames}.\n\nAkiyama's device can be augmented by wooden slats which force balls\nto go to a particular direction (left or right) when hitting certain pins,\ndramatically affecting the resulting distribution of balls\n(as in Figure~\\ref{akiyama}).\nThis type of forced ramp is common in real Pachinko machines as well,\nsimulated by an array of closely spaced pins\n(see Figures \\ref{real pachinko 1} and~\\ref{real pachinko 2}).\n\nThe central problem addressed in this paper is what distributions of balls can\nresult purely from pins.  We consider three models/restrictions on the pins.\nIn the \\emph{50-50 model}, a ball is only allowed to hit a pin dead on, and\nthus fall to the left or right of the pin with equal probability.  In the\n\\emph{general model}, pins can be closely spaced, effectively allowing pins to\nforce the direction of the ball.  In both cases, we imagine the ball only\nfalling, not bouncing off of pins---effectively modeling perfectly ``inelastic\" collisions---and\nmeasure the probability of a ball reaching each column on the bottom\n(\\emph{outputs}).\nBecause the only random element in our Pachinko models is a 50-50 pin, all\noutput probabilities are \\emph{dyadic}, i.e., of the form $i/2^k$ for\nintegers $i$ and~$k$.\nSuch probabilities can be represented finitely in binary, e.g., $0.10010111$. \n\nWhile this work is motivated by modeling Pachinko, the theory developed has \nreal-world application in the design of liquid distribution systems. \nGiven an input stream of liquid, the goal is to develop a network of \npipes to output a specified amount of liquid into many different containers,\nwhere each pipe junction equally distributes liquid between two outgoing children,\nsomething easy to manufacture in practice.\nThe specific case of generating uniform distributions is a passive solution\nto distributing equal amounts of liquid into bottles, \nand we provide uniform distribution networks for some\npractical numbers of outputs.\n\n\\paragraph{Our results.}\n\nIn the general model, we prove a universality result: any distribution of $n$\ndyadic probabilities (summing to 1) can be produced by a polynomial-size\narrangement of pins.  If all the probabilities can be specified in binary by\n$k$ bits (i.e., the probabilities can be written with common denominator\n$2^k$), then we show a constructive upper bound of $O(n k^2)$ pins and an\ninformation-theoretic lower bound of $\\Omega(n k)$.  These results leave a gap\nof $\\Theta(k)$ as an intriguing open problem.\n\nThe 50-50 model proves much more interesting because not all probability\ndistributions are possible.  For example, the only possible two-probability\ndistribution is $\\left\\langle \\frac12,0, \\frac12 \\right\\rangle$.  Nonetheless, we prove\nseveral strong positive results:\n\n\\begin{enumerate}\n\n\\item For every probability distribution $\\langle p_1, p_2, \\dots, p_n \\rangle$,\nand for every $\\epsilon > 0$, there is a 50-50 construction producing an output\nprobability within $\\epsilon$ of each $p_i$, as well as extra outputs with\nprobability less than $\\epsilon$.\n\n\\item For every dyadic probability distribution $\\langle p_1, p_2, \\dots, p_n\\rangle$,\nthere is a constant scale factor $\\alpha = 1/2^j$ and a 50-50 construction\nproducing output probability $\\alpha p_i$ (i.e., a shifted version of $p_i$)\nfor each $i$, as well as additional garbage outputs.\n\n\\item While the uniform distribution is intuitively very difficult to produce\nin the 50-50 model, we show that it is in fact possible for\n$n \\in \\{1,2,4,8,16\\}$ outputs, and conjecture that it is possible for all\n$n = 2^k$.\n\n\\end{enumerate}\n\nBecause not all dyadic probability distributions are possible in the 50-50\nmodel, the first two results are in some sense best possible.  Nonetheless, a\nnatural open question is to characterize exactly which probability\ndistributions are possible in the 50-50 model.  In particular, is every dyadic\nprobability constructible, ignoring all other output probabilities?  We\nconjecture so, but currently only know (by the first result) that every\nprobability can be approximated arbitrarily closely.\n\n\n\n\n\\section{Models}\n\n\n\nIn this section, we define a simple formal model for Pachinko dynamics,\nand then specialize to the 50-50 model and another simple grid model.\nThe environment is a planar arrangement of fixed point obstacles\ncalled \\emph{pins}; and a disk called a \\emph{ball} which\nstarts at coordinate~$(x,\\infty)$ for an input horizontal value~$x$.\nWithout loss of generality, we will only consider Pachinkos with\nballs input at coordinate $x=0$ with unit diameter, \nsince the dynamics of a Pachinko with a non-unit diameter input ball \ncentered somewhere else can be equivalently simulated via a scaling\nand translation. A \\emph{Pachinko} is then the set of pins in the environment \ntogether with the ball's input position.\nGiven a pin $p$, we will notate its horizontal location as $p_x$ and its\nheight as $p_y$. \n\nThe ball falls continuously straight down until obstructed by a pin;\nsee the left of Figure~\\ref{fig:trajectory}.\nIf the bottom half of the ball touches a pin\nwhose $x$ coordinate is (left, right) of the ball center,\nthen the ball rotates (clockwise, counterclockwise) around the pin\nuntil the pin reaches the (leftmost, rightmost) point of the ball, no longer\nobstructing the ball's downward trajectory.\n\n\n\n\nIf the $x$ coordinates match, then the flip of a fair coin\ndetermines the roll direction.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{trajectory}\n\\caption{Trajectory of falling ball in general model. Outlines of falling\nballs are lightly shown, with the path of the ball's center emphasized. Dotted\nlines are shown between ball locations that touch more than one pin and \nand the pins touched.\n[Left] Balls striking a pin to the left or right of center (blue) rotate to the same side, \nwhile centered balls (red) fall to either side with equal probability. \n[Center] Balls that touch more than one pin while falling either \ncontinue rotating around the lower pin,\nor get stuck if the center of the ball lies strictly between two touching pins.\n[Right] A 50-50 Grid Pachinko.}\n\\label{fig:trajectory}\n\\end{figure}\n\nIn any case, the ball's rolling around a pin may at some point\nbe obstructed by another pin or pins. If all obstructing pins \nare either directly below or to one side of the ball center, the ball \nrotates away from the obstructing pins around the obstructing pin \nhorizontally closest to the ball's center. \nAlternatively, if obstructing pins exist on \nboth sides of the ball center, then the ball stops.\nWe call the ball \\emph{stuck} in this case, \ncoming to rest at a \\emph{rest site} $s_i$, the location\nof the bottom of the ball at rest. This condition is illustrated\nin the center of Figure~\\ref{fig:trajectory}.\nThe other possibility for termination is that the ball\nreaches $(x'_i,-\\infty)$ for some output value~$x'_i$. \nWe call the ball \\emph{dropped} in this case, with \n$(x'_i,-\\infty)$ a \\emph{drop site}. \nWe call rest and drop sites collectively as\n\\emph{outputs} to the Pachinko. The number of outputs\nis trivially bounded from above by twice the number of pins.\n\nA \\emph{50-50 Pachinko} is a Pachinko with the property that \nwhenever a ball hits a pin, it hits dead on so that the ball rotates around the pin\nto either side with equal probability.  This model is equivalent to requiring\nthat the pins lie horizontally at integer values away from zero, the initial $x$\ncoordinate of the ball, such that the ball can never hit two pins at the same time.\nBut since decreasing the vertical distance between pins of such a Pachinko while\nmaintaining that the ball only hits one pin at a time will\nnot change the output dynamics, without loss of generality we can compress pins\nto lie on a unit equilateral triangular grid, see the right of Figure~\\ref{fig:trajectory}. \nThis observation motivates the study of Grid Pachinkos in Section~\\ref{sec:grid}.\n\n\n\n\n\\subsection{Pachinko Graph}\n\nIt would be convenient to abstract away the geometry of a Pachinko and \n represent the Pachinko as an ``equivalent\" graph that is easier to analyze.\n\nConsider the augmented directed graph with vertices corresponding to the pins, \nthe ball input, and the outputs of a Pachinko. \nWe store with each vertex with a location: the location\nof the pin for pins, $(0,\\infty)$ for the ball input, $(x',-\\infty)$ for drop sites, \nand the location of the bottom of a stuck ball for rest sites. As mentioned previously,\nthe number of outputs is at most linear in the number of pins, so the number of\nvertices in a Pachinko graph is also at most linear.\nWe add arcs to the directed graph in the following three ways.\n\\begin{enumerate}[(a)]\n\\item We add an arc from pin or input $p$ to pin or \ndrop site $q$ if an input ball can hit or drop to $q$ directly \nafter and not at the same time as hitting $p$, without\ngetting stuck or also hitting another pin. \n\\item If a ball hitting $q$ directly after hitting $p$ gets stuck,\nadd an arc from both $p$ and $q$ to a vertex corresponding to the rest site $s$.\n\\item Lastly, if a ball hits more than one vertex directly after hitting $p$ without\ngetting stuck, add arcs in a chain from $p$ to the highest incident vertex, and from\nthe highest incident vertex to the next highest and so on.\n\\end{enumerate}\n\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{graph}\n\\caption{Examples of Pachinko graphs shown in green. \nInputs and outputs are shown as yellow circles. \n[Left] A Pachinko graph containing rest sites. \n[Center] A Pachinko graph hitting more than one\npin at a time without getting stuck.\n[Right] A Pachinko graph of a 50-50 Grid Pachinko.}\n\\label{fig:graph}\n\\end{figure}\n\nFigure~\\ref{fig:graph} illustrates these cases. \nWe call the resulting augmented directed graph a \\emph{Pachinko graph}. \nFor a Pachinko containing $n$ pins, we will show how to \nconstruct this graph in $O(n\\log n)$ time, but first we will analyze some of the \nproperties of Pachinko graphs.\n\n\\begin{lemma}\n\\label{lem:geom}\nFor every arc in a Pachinko graph, the pin corresponding to the tail \nis strictly higher than the pin or output corresponding to the head \nunless they are at the same location. The horizontal\ndistance traversed by any arc must be less than one ball width.\n\\end{lemma}\n\\begin{proof}\nTo prove the first claim, assume for contradiction there \nexists arc $(p,q)$ with $p_y \\leq q_y$ with $p\\neq q$. \nIf $q$ is not a rest site, an input ball hitting $q$ \ndirectly after hitting $p$ would rotate around the top of $p$\nin the direction of $q$ and then necessarily get stuck between them, a contradiction.\nAlternatively, $q$ is a rest site with $p$ on the circle with bottom most point at $q$.\nBut since $p\\neq q$, that means $p_y > q_y$ a contradiction.\n\nTo prove the second claim, after rotating around any pin a ball drops directly down with the\npin on its side. The ball cannot move horizontally without \ninteracting with a pin, so a ball cannot hit a pin\nmore than a ball width away from the starting pin without hitting another pin first.\n\\end{proof}\n\n\\begin{lemma}\nThe straight-line embedding of a Pachinko graph is acyclic and planar, \nwith out-degree at most two at any vertex.\n\\end{lemma}\n\n\\begin{proof}\nTo prove acyclicity, assume for contradiction that a directed cycle exists. The cycle\ncannot contain outputs as vertices corresponding to drop and rest sites\nhave no children. By Lemma~\\ref{lem:geom}, the parent of every vertex \nthen corresponds to a higher pin, so there can be no highest one, a contradiction. \n\nTo prove planarity, assume for contradiction that two arcs $(a,b)$ and $(c,d)$ \ncross with $a_y>b_y$ and $c_y>d_y$; see Figure~\\ref{fig:cross}. \nWithout loss of generality, assume $a_y\\geq c_y > b_y$, and \n$|a_x-c_x| \\geq 1$ or else a ball from $a$ would hit $c$ before hitting \nor outputting at $b$. \nBy Lemma~\\ref{lem:geom}, $|a_x-b_x| < 1$ and $|c_x-d_x| < 1$, so both\n$b$ and $d$ are horizontally between $a$ and $c$. Since the arcs cross,\n$d$ must be horizontally between $a$ and $b$, and $b$ must be horizontally\nbetween $c$ and $d$.\nThen $b$ cannot be above $d$ or else a ball from $c$ would\nhit or output at $b$ before $d$, and $d$ cannot be above $b$ or else a ball from $a$\nwould hit or output $d$ before $b$, a contradiction.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=3 in]{cross}\n\\caption{Contradicting crossings in a Pachinko graph.}\n\\label{fig:cross}\n\\end{figure}\n\nTo prove every vertex has max out-degree at most two, first note that every \noutput has out-degree zero. Further, arcs can leave pin location $p$\nonly when a ball hitting $p$ hits another pin or outputs directly after rolling\nto the left or the right. Suppose for contradiction that more than two arcs leave $p$,\nso two arcs to pins/outputs $q$ and $r$ exist to one side of $p$. \nSo $q$ and $r$ are reached directly after rolling around $p$ to one side,\nand are reached at the same time.\nThese arcs cannot be constructed by construction method: (a) because $q$\nand $r$ are reached at the same time; (b) because arcs would only be added to\nthe rest site; nor (c) because an arc would only be added to the higher of $q$\nor $r$. So arcs to $q$ and $r$ cannot exist, a contradiction.\n\\end{proof}\n\nSince a Pachinko graph with $n$ pins has a linear number of vertices and \nbounded out-degree, it follows directly that Pachinko graphs have a \nlinear number of edges; so storing a Pachinko graph along with \nvertex locations requires $\\Theta(n)$ space.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{theorem}\n\\label{thm:construct}\nA Pachinko graph can be constructed from a Pachinko with $n$ pins\nin $O(n\\log n)$ time.\n\\end{theorem}\n\nTo prove this Theorem, we will construct the Pachinko graph by inductively constructing \nincreasing subsets of the Pachinko graph, \neach containing only the arcs terminating at one of the $k$ highest pins. \nAt each step, we maintain a Pachinko graph subset, and a \nsorted list of action sites ordered by horizontal position.\n\nFirst we sort the pins by height to schedule which pin to add next, breaking ties\nleft before right. \nNext, we construct the Voronoi diagram~\\cite{de2000computational} of the Pachinko pins, which has linear size. \nEach Voronoi cell $V_i$ contains one pin $p_i$. Consider the highest point $h_i$ in \n$V_i$ also contained in the unit diameter disk centered at $p_i$. If $h_i$ is not on\nthe unit diameter semicircle above and centered at $p_i$, \nthen $p_i$ can never be reached by the input ball since pins in adjacent\nVoronoi cells would block any ball from touching $p_i$. \nAlternatively if $h_i$ is on the semicircle, \nfor each pin store the left and right endpoints $\\ell_i$ and $r_i$ \nof the largest arc of the semicircle completely inside $V_i$ containing $h$. \n\n\\begin{lemma}\nAny ball hitting $p_i$ will have its center on the largest semicircle arc in $V_i$ containing $h_i$. \n\\end{lemma}\n\\begin{proof}\nSuppose for contradiction a ball hitting $p_i$ does not\nhave its center on this arc, and instead hits some point $h'$ on some other disconnected\narc of the semicircle. Then at least one Voronoi edge to some higher pin $p_j$ \nlies between the two disconnected arcs, with $p_i$ between $p_j$ and $h_i$ since $h_i$ is\nat least as high as $h'_i$.  But then $p_j$ is above $h'_i$ blocking any ball from reaching $h'_i$,\na contradiction.\n\\end{proof}\n\nA ball hitting $p_i$ may proceed to roll around it until it reaches $\\ell_i$ or $r_i$, \nat which point it will stop or leave contact with $p_i$. We call the input site together with the set of \n$\\ell_i$ and $r_i$ for each pin \\emph{action sites}. The action sites will serve as \ninfrastructure to construct the arcs between pins, the input site, and the output sites (drop sites\nand rest sites) that form the Pachinko graph. When we construct an arc of the Pachinko graph\nfrom an action site, what we really mean is to construct an arc \nfrom the input site if the action site is the input site, \nor from pin $p_i$ if the action site is $\\ell_i$ or $r_i$. We say that $\\ell_i$ and $r_i$\ncorrespond to pin $p_i$.\n\nWe label each endpoint as either DROP or REST depending on if \na ball reaching the endpoint will continue to move or not.\nEndpoints always lie on the semicircle above and centered on $p_i$\nby definition. If the endpoint does not also intersect a Voronoi edge, than\nit is the endpoint of the semi circle. The ball will then fall away from $p_i$, so we label it DROP. \nOtherwise, the endpoint lies on a Voronoi edge or vertex, and is exactly  a half unit distance\nfrom some subset of pins $Q\\ni p_i$, all at or below $p_i$ or else the pin above would block\na ball from ever reaching the endpoint.\nIf $(\\ell_i,r_i)$ is to the (left, right) of $p_i$ and\nall the pins of $Q$ are below or to the (right, left) of $(\\ell_i,r_i)$, \nthen a ball at the endpoint\nmay continue to move, and we label it DROP. \nAlternatively if $(\\ell_i,r_i)$ is to the (left, right) of $p_i$ and not all the pins of $Q$ \nare below or to the (left, right) of $(\\ell_i,r_i)$, then a ball at the endpoint\nwill stop by definition, so we label it REST. \nLastly, if $(\\ell_i,r_i)$ is above or to the (right, left) of $p_i$, then a ball\nat the endpoint will rotate around $p_i$ to the other endpoint, so we label it DROP.\nThese cases are illustrated in Figure~\\ref{fig:endpoints}.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{endpoints}\n\\caption{Examples of two Pachinkos highlighting the hittable arc for each pin, including their left and\nright output endpoints in different environments. Balls that reach endpoints labeled DROP and REST \nwill continue to move or not respectively.}\n\\label{fig:endpoints}\n\\end{figure}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor the base case, there are no existing pins or action sites to consider, \nand the Pachinko graph subset contains no arcs as desired. \nWe will maintain a list of \\emph{active} action sites.\nSince the ball drops from the input location, we initialize the list \nof active action sites with the ball's input location $(x,\\infty)$ as a DROP action site.\n\nFor the inductive case, we are given the subset of the Pachinko graph containing only\nthe arcs terminating at one of the $k$ highest pins and a horizontally sorted list of active \nsites corresponding to all locations of balls that may leave contact with the $k$ highest pins.\nLet $p_i$ be the $k+1$ highest pin, breaking ties left before right, and let $V_i$ be its Voronoi cell. \nBinary search for the set $A_i$ of all DROP action sites horizontally within half a unit of $p_i$.\nNow update the Pachinko graph for each DROP action site $a\\in A_i$ by\nadding to the Pachinko graph subset an arc from $a$ to $p_i$. To add new active action sites, \nif there is any action site in $A_i$ to the (left,right)\nor above $p_i$, add $(\\ell_i,r_i)$ to the sorted active site list, while removing all DROP \naction sites in $A_i$ from the active site list. \n\n\\begin{lemma}\nThe above procedure constructs the Pachinko graph containing only the arcs \nterminating at one of the $k+1$ highest pins and a horizontally sorted list of active sites\ncorresponding to all locations of ball centers that can leave the $k+1$ highest pins. \n\\end{lemma}\n\n\\begin{proof}\nTo prove the first claim, we need only check that the added arcs are exactly the arcs terminating\nat $p_i$. By construction, all arcs end at $p_i$. Now suppose for contradiction that some arc\nof the Pachinko graph terminating at $p_i$ from pin or the input is not added by the above procedure. \nIf the arc starts from a pin $p_j$, then it is one of the $k$ highest pins by Lemma~\\ref{lem:geom}, \nand either $\\ell_j$ or $r_j$ will be labeled DROP or else a ball hitting $p_j$ would not leave. \nFurther, either $\\ell_j$ or $r_j$ (or the input location) must be within a horizontal half unit \ndistance from $p_i$ by Lemma~\\ref{lem:geom}, with no pin obstructing the path between them.\nBut then $p_i$ would have a corresponding DROP action site above it, and the above procedure\nwould construct the corresponding arc to $p_i$, a contradiction. \n\nTo prove the second claim, all action sites removed by the procedure certainly \nwould not be able to reach any pin below $p_i$. Further, $\\ell_i$ and $r_i$ correspond\nto the only locations a ball could leave $p_i$, proving the claim.\n\\end{proof}\n\nAfter constructing all the arcs of the Pachinko graph terminating at pins, it remains to construct the arcs \nto the outputs. Add a drop site at $(x',-\\infty)$ corresponding to the horizontal position of each active DROP\naction site and an arc from the action site to the drop site. \nIt is possible that multiple REST endpoints coincide.\nIn any case, we construct a single rest site for all\nREST endpoints in the same location, \nwith location half a unit directly below the location, and construct\nan arc from each REST action site at the location to the constructed rest site. \nThe correctness of these constructions follow directly\nfrom the definitions of drop, rest, and action sites.\nAn example of this algorithm applied to a Pachinko is shown\nin Figure~\\ref{fig:algorithm}.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{algorithm}\n\\caption{Example showing the described Pachinko graph construction algorithm for \nan input Pachinko. Blue paths show possible ball paths for any input, \nwhile the red paths show ball paths for the given input. The target pin is circled\nin red, active sites are colored red, and Pachinko graph arcs are shown in green.\n}\n\\label{fig:algorithm}\n\\end{figure}\n\nNow to prove Theorem~\\ref{thm:construct}. \\\\\n\n\\begin{proof}\nConstruct the Pachinko graph using the above procedure. Sorting and construction of the Voronoi diagram\neach takes $O(n\\log n)$ time. The calculating and labeling intersections between circles centered \nat pins and the Voronoi cell containing them is at most linear since the number of edges in the \nVoronoi diagram is linear and a circle can cross a line at most twice, and each can be \ncalculated in constant time. The number of action sites is linear since it is bounded above by\ntwice the number of pins, and binary searching for DROP action sites from the horizontally sorted list\nof active action sites with location near a pin takes $O(\\log n)$\ntime per pin. Further, since each DROP action site is immediately removed after being found, the\ntotal search and maintenance time is $O(n\\log n)$, leading to an $O(n\\log n)$ total construction time. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\end{proof}\n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{theorem}\nThe probability that an input ball hits any pin of a Pachinko or outputs\nat a rest or drop site can be calculated for all pins and outputs in $O(n\\log n)$ time. \n\\end{theorem}\n\\begin{proof}\nTo calculate probabilities, construct the Pachinko graph, and calculate probabilities in the graph \nbreadth first. First we calculate the probability transferred\nalong each Pachinko graph arc. If the edge starts at the input site, \nthe edge carries probability 1. Otherwise, the arc $a$ starts at a pin $p$ (with out-degree\nat most two, possibly one to the left and one to the right) and points to\na vertex $v$ either on the left or right of $p$, and we calculate the probability transferred\nalong the arc by summing probabilities coming from the parents of $p$. \nFor each arc $a'$ terminating at $p$ starting from a vertex $u$ either more than half a unit distance\nhorizontally from $p$ on the same side as $v$ or less than half a unit distance horizontally\nfrom $p$ on the opposite side as $v$, transfer the total probability of $a'$ to $a$. \nThis assignment is correct because any balls falling from $u$ to $p$ falls with its center\non the same side as $v$, so will always output on that side.\nAdditionally, for each arc $a'$ terminating at $p$ starting from a vertex $u$ exactly half a unit \ndistance horizontally from $p$, transfer half the probability of $a'$ to $a$. \nThis assignment is correct because any ball falling from $u$ to $p$ falls centered with $p$\nand will split its probability between its two children. \nThese cases are illustrated in Figure~\\ref{fig:prob}.\nThe probability that a ball hits any pin $p$ is then the sum of the probabilities of all arcs \ninto $p$. All arc probabilities can only contribute to any sum once, \nso all probabilities can be calculated in breadth first order in linear time. Thus\nall probabilities can be be calculated in $O(n)$ time on top of $O(n\\log n)$ time\nneeded to construct the Pachinko graph.\n\n\n\n\n\n\\end{proof}\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{prob}\n\\caption{Three cases for routing probability through a vertex $p$.\n[Left] A vertex $u$ more than half a unit distance\nhorizontally from $p$ on the same side as $v$. \n[Center] A vertex $u$ exactly half a unit \ndistance horizontally from $p$.\n[Right] A vertex $u$ \nless than half a unit distance horizontally from $p$ on the opposite side as $v$.\n}\n\\label{fig:prob}\n\\end{figure}\n \n\\subsection{Grid Pachinkos}\n \\label{sec:grid}\n \nGeneral Pachinko can have complicated behavior, especially when three or more \npins can touch a ball at the same time. Thus in constructing Pachinkos, it will be easier\nto restrict ourselves to more idealized Pachinkos, namely Pachinkos with pin locations\nand ball input location restricted to lie on a unit equilateral triangular grid. \nWithout loss of generality, we let the ball input column be column zero, \nwith columns every half unit numbered increasing to the right and \ndecreasing to the left. We will call row 1 the row containing the highest pin at height $h$, \nwith row $k$ containing pins at height $h-k\\sqrt{3}/2$.  \nRecall that such a setup results in 50-50\nPachinkos, with each pin causing an incident ball to rotate to the left or right with\nequal probability. These pins act normally, so we call them N-pins.\n\nHowever, to allow Grid Pachinkos to simulate more of the behavior of a general Pachinko,\nwe allow the placement of L-pins, R-pins, and S-pins at grid vertices, pins where incident balls must roll\nleft, right, or stop respectively. We can simulate Grid Pachinkos using general\nPachinko dynamics by simulating N-pins, L-pins, R-pins, and S-pins with pin arrangements \ncontained in $\\delta\\times\\delta$ blocks as shown in Figure~\\ref{fig:grid}, \nand increasing the distance between each row and column by $\\delta$. \nSince we can simulate Grid Pachinkos with L-pins, R-pins, and S-pins using general Pachinko \ndynamics, any output distributions we can construct using Grid Pachinkos we can\nalso construct using general Pachinkos with three times the number of pins. A nice\nproperty of Grid Pachinkos is that the probability flow through the Pachinko graph\nis independent of the location of pins, and computable simply from the structure of the\nPachinko graph.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{grid}\n\\caption{Simulating Grid Pachinkos with General Pachinkos. \nEach pin gadget is $\\delta \\leq 1/2$ tall and wide.\nModifying the triangular grid allows space for the gadgets.}\n\\label{fig:grid}\n\\end{figure}\n\n\\section{50-50 Pachinkos}\n\n50-50 Pachinkos are a subset of general Pachinkos, and are more restrictive\nin the possible distributions one can construct. \n\n\\subsection{Invariants on the Distribution}\n\nUnlike General Pachinkos or Grid Pachinkos that\ncan use L-pins and R-pins to move probability arbitrarily to any location, 50-50\nPachinkos must output all probability to drop sites in a ``centered\" manner.\n\n\\begin{lemma}\n\\label{lem:span}\nIf there are $k > 1$ outputs, they span strictly between $k$ and $2k$ columns with no two consecutive columns lacking an output.\n\\end{lemma}\n\\begin{proof}\nThere must be at least $k+1$ columns spanned by the outputs, $k$ for the outputs, and one column necessarily blocked by the lowest hit pin. No two consecutive columns lack an output. Suppose for contradiction two such columns exist for which there exist outputs to the left and right of these columns. Then there must exist hit pins in both columns or else a ball could not travel across them. The lowest such pin in each column cannot be next to each other because of the grid, so one must be above the other. The lower pin will necessarily output in the column of the higher pin, a contradiction.\n\\end{proof}\n\n\\begin{theorem}\n\\label{thm:centered}\nIf every pin of a 50-50 Pachinko is between columns $-t$ and $t$, and $p_i$ is the probability that the ball outputs in column $i$, then $\\sum_i i p_i = 0$.  \n\\end{theorem}\n\n\\begin{proof}\nThe proof is by induction on the number of pins. For 0 pins, it's clearly true. Given an $n$-pin arrangement, remove a bottommost pin to get an arrangement for which, by induction, $\\sum_i i p_i = 0$. Adding a pin at the bottom of column $k$ replaces probability $p_k$ in column $k$ with probability $\\frac{p_k}2$ in each of columns $k-1$ and $k+1$, changing the total by $\\frac{p_k}{2}(k-1) - p_k k + \\frac{p_k}{2}(k+1) = 0$, as desired.\n\\end{proof}\n\nHowever, not every dyadic probability distribution satisfying the above condition is the set of probabilities of a 50-50 Pachinko. For instance, the two output probability distribution $\\langle1/4, 0, 3/4\\rangle$ is not constructible by a 50-50 Pachinko as a consequence of Theorem~\\ref{thm:centered}, but it is constructible by a General or Grid Pachinko, as shown in the left diagram of Figure~\\ref{fig:threefour}. It is still open whether every dyadic probability can be output by a 50-50 Pachinko. \n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{threefour}\n\\caption{[Left] A Grid Pachinko constructing the distribution $\\langle1/4, 0, 3/4\\rangle$. [Right] Constructing output probability $3/4$ with a 50-50 Pachinko.}\n\\label{fig:threefour}\n\\end{figure}\n\n\\subsection{Constructible Probabilities}\n\n\\begin{open}\n  Is every dyadic rational the output probability of some 50-50 Pachinko?\n\\end{open}\n\nTable~\\ref{tab:exhaust} gives all dyadic probabilities\nthat can be output by all possible 50-50 Pachinkos with a small number of rows. \nThis table was constructed by naive exponential exhaustive search. \nThis data suggests that some probabilities require a large number of rows of pins to produce. \nFor example, the probability $3/4$ (0.11 in binary) cannot be produced by a 50-50 Pachinko \nwith fewer than nine rows of pins, but it can be produced by a 50-50 Pachinko with eleven rows; \nsee the right diagram in Figure~\\ref{fig:threefour}.\n\n\\begin{table}\n  \\centering\n  \\tiny\n  \\begin{tabular}{c|p{3in}|p{3in}}\n    $n$ & Computable & Uncomputable \\\\ \\hline\n$1$ & 0, .1, 1. & none \\\\ \\hline\n$2$ & 0, .01, .1, 1. & .11 \\\\ \\hline\n$3$ & 0, .001, .01, .011, .1, .101, 1. & .11, .111 \\\\ \\hline\n$4$ & 0, .0001, .001, .0011, .01, .0101, .011, .0111, .1, .1001, .101, 1.\n    & .1011, .11, .1101, .111, .1111 \\\\ \\hline\n$5$ & 0, .00001, .0001, .00011, .001, .00101, .0011, .00111, .01, .01001, .0101, .01011, .011, .01101, .0111, .01111, .1, .1001, .101, .10101, .1011, 1.\n    & .10001, .10011, .10111, .11, .11001, .1101, .11011, .111, .11101, .1111, .11111 \\\\ \\hline\n$6$ & 0, .000001, .00001, .000011, .0001, .000101, .00011, .000111, .001, .001001, .00101, .001011, .0011, .001101, .00111, .001111, .01, .010001, .01001, .010011, .0101, .010101, .01011, .010111, .011, .011001, .01101, .011011, .0111, .011101, .01111, .011111, .1, .100001, .10001, .100011, .1001, .100101, .10011, .101, .101001, .10101, .101011, .1011, 1.\n    & .100111, .101101, .10111, .101111, .11, .110001, .11001, .110011, .1101, .110101, .11011, .110111, .111, .111001, .11101, .111011, .1111, .111101, .11111, .111111 \\\\ \\hline\n$7$ & 0, .0000001, .000001, .0000011, .00001, .0000101, .000011, .0000111, .0001, .0001001, .000101, .0001011, .00011, .0001101, .000111, .0001111, .001, .0010001, .001001, .0010011, .00101, .0010101, .001011, .0010111, .0011, .0011001, .001101, .0011011, .00111, .0011101, .001111, .0011111, .01, .0100001, .010001, .0100011, .01001, .0100101, .010011, .0100111, .0101, .0101001, .010101, .0101011, .01011, .0101101, .010111, .0101111, .011, .0110001, .011001, .0110011, .01101, .0110101, .011011, .0110111, .0111, .0111001, .011101, .0111011, .01111, .0111101, .011111, .0111111, .1, .1000001, .100001, .1000011, .10001, .1000101, .100011, .1000111, .1001, .1001001, .100101, .10011, .101, .101001, .10101, .1010101, .101011, .1011, .1011001, .101101, .1011011, .10111, .1011101, 1.\n    & .1001011, .1001101, .100111, .1001111, .1010001, .1010011, .1010111, .101111, .1011111, .11, .1100001, .110001, .1100011, .11001, .1100101, .110011, .1100111, .1101, .1101001, .110101, .1101011, .11011, .1101101, .110111, .1101111, .111, .1110001, .111001, .1110011, .11101, .1110101, .111011, .1110111, .1111, .1111001, .111101, .1111011, .11111, .1111101, .111111, .1111111 \\\\ \\hline\n$8$ & 0, .00000001, .0000001, .00000011, .000001, .00000101, .0000011, .00000111, .00001, .00001001, .0000101, .00001011, .000011, .00001101, .0000111, .00001111, .0001, .00010001, .0001001, .00010011, .000101, .00010101, .0001011, .00010111, .00011, .00011001, .0001101, .00011011, .000111, .00011101, .0001111, .00011111, .001, .00100001, .0010001, .00100011, .001001, .00100101, .0010011, .00100111, .00101, .00101001, .0010101, .00101011, .001011, .00101101, .0010111, .00101111, .0011, .00110001, .0011001, .00110011, .001101, .00110101, .0011011, .00110111, .00111, .00111001, .0011101, .00111011, .001111, .00111101, .0011111, .00111111, .01, .01000001, .0100001, .01000011, .010001, .01000101, .0100011, .01000111, .01001, .01001001, .0100101, .01001011, .010011, .01001101, .0100111, .01001111, .0101, .01010001, .0101001, .01010011, .010101, .01010101, .0101011, .01010111, .01011, .01011001, .0101101, .01011011, .010111, .01011101, .0101111, .01011111, .011, .01100001, .0110001, .01100011, .011001, .01100101, .0110011, .01100111, .01101, .01101001, .0110101, .01101011, .011011, .01101101, .0110111, .01101111, .0111, .01110001, .0111001, .01110011, .011101, .01110101, .0111011, .01110111, .01111, .01111001, .0111101, .01111011, .011111, .01111101, .0111111, .01111111, .1, .10000001, .1000001, .10000011, .100001, .10000101, .1000011, .10000111, .10001, .10001001, .1000101, .10001011, .100011, .10001101, .1000111, .10001111, .1001, .10010001, .1001001, .10010011, .100101, .10010101, .1001011, .10010111, .10011, .10011001, .1001101, .10011011, .100111, .10011101, .1001111, .101, .10100001, .101001, .10100101, .1010011, .10101, .10101001, .1010101, .10101011, .101011, .10101101, .1010111, .10101111, .1011, .10110001, .1011001, .10110011, .101101, .10110101, .1011011, .10110111, .10111, .10111001, .1011101, 1.\n    & .10011111, .1010001, .10100011, .10100111, .10111011, .101111, .10111101, .1011111, .10111111, .11, .11000001, .1100001, .11000011, .110001, .11000101, .1100011, .11000111, .11001, .11001001, .1100101, .11001011, .110011, .11001101, .1100111, .11001111, .1101, .11010001, .1101001, .11010011, .110101, .11010101, .1101011, .11010111, .11011, .11011001, .1101101, .11011011, .110111, .11011101, .1101111, .11011111, .111, .11100001, .1110001, .11100011, .111001, .11100101, .1110011, .11100111, .11101, .11101001, .1110101, .11101011, .111011, .11101101, .1110111, .11101111, .1111, .11110001, .1111001, .11110011, .111101, .11110101, .1111011, .11110111, .11111, .11111001, .1111101, .11111011, .111111, .11111101, .1111111, .11111111\n  \\end{tabular}\n  \\caption{Computable and uncomputable numbers using all possible\n    configurations on $n$ rows, $n \\leq 8$.  The list of uncomputable numbers\n    restricts to numbers with at most $n$ bits of precision, because beyond\n    that nothing is computable with just $n$ rows.}\n  \\label{tab:exhaust}\n\\end{table}\n\n\\subsection{Full and Truncated Pachinkos}\n\nWhile not all distributions are constructible, in this and the following sections we analyze some interesting 50-50 Pachinkos. In this section, we consider 50-50 Pachinkos containing pins in all possible locations up to row $k$ (first row with pins is row 1, row number increasing down), which we call the Full $k$-Pachinko. The output probabilities of this Pachinko constitute the $(k+1)$th row of Pascal's triangle divided by $2^k$; see left of Figure~\\ref{fig:pascal}. This fact is readily apparent because the probability at each pin is the sum of the two probabilities above it divided by two.\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{pascal}\n\\caption{A full $k$-Pachinko on left and an $m$-truncated $k$-Pachinko on the right.\nThe $k$-Pachinko outputs binomial coefficients over powers of 2, while the $m$-truncated\n$k$-Pachinko outputs Ballot numbers over powers of 2 down the right side.}\n\\label{fig:pascal}\n\\end{figure}\n\nAnother interesting family of 50-50 Pachinkos arises by removing from a Full $k$-Pachinko all the pins in column $m$, which we call an $m$-truncated $k$-Pachinko; see right of Figure~\\ref{fig:pascal}. Without loss of generality, we will assume $k > m > 0$, the $m$th column to the right of center. A ball may fall into column $m$ only directly after hitting some pin in column $m-1$ in row $m+2j$ for $j\\in\\{0,\\ldots,\\lfloor(k-m)/2\\rfloor\\}$. Let $B(m,j)$ be the number of paths an input ball starting at $(0,1)$ can take to reach pin $(m-1,m+2j)$. Then the probability of a ball falling into column $m$ after hitting pin $(m-1,m+2j)$ is then $B(m,j)/2^{m+2j}$. We observe that every path in the pachinko from $(0,1)$ to $(m-1,m+2j)$ must hit either the pin at $(-1,2)$ or the pin at $(1,2)$, leading to the recurrence $B(m,j) = B(m-1,j) + B(m+1,j-1)$; see Figure~\\ref{fig:recurse}. The numbers that satisfy this recurrence are the Ballot numbers~\\cite{Graham}, with:\n\n\n", "index": 1, "text": "\\begin{equation}\nB(m,j) = \\frac{m}{2j+m}{2j+m\\choose j}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"B(m,j)=\\frac{m}{2j+m}{2j+m\\choose j}.\" display=\"block\"><mrow><mrow><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mfrac><mi>m</mi><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi></mrow><mo>+</mo><mi>m</mi></mrow></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi></mrow><mo>+</mo><mi>m</mi></mrow><mi>j</mi></mfrac><mo>)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05706.tex", "nexttext": " \n\nWe can use the properties of these numbers to prove two useful Lemmas which we use in Section~\\ref{sec:general} to construct Pachinkos that can approximate any probability distribution.\n\n\\begin{lemma}\n\\label{lem:one}\nThe output probability in column $m$ of an $m$-truncated $k$-Pachinko approaches 1 as $k\\rightarrow\\infty$.\n\\end{lemma}\n\\begin{proof}\n\\vspace{-1pc}\n\n", "itemtype": "equation", "pos": -1, "prevtext": "\n\n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{recurse}\n\\caption{Ballot Number recurrence showing that $B(m,j) = B(m-1,j) + B(m+1,j-1)$.}\n\\label{fig:recurse}\n\\end{figure}\n\nBallot numbers are a generalization of the Catalan numbers, the special case for $m = 1$. Ballot numbers have the following generating function~\\cite{Graham}:\n\n\n", "index": 3, "text": "\\begin{equation}\n\\left(\\frac{1-\\sqrt{1-4x}}{2x}\\right)^m = \\sum\\limits_{j=0}^\\infty B(m,j)x^j.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\left(\\frac{1-\\sqrt{1-4x}}{2x}\\right)^{m}=\\sum\\limits_{j=0}^{\\infty}B(m,j)x^{j}.\" display=\"block\"><mrow><mrow><msup><mrow><mo>(</mo><mfrac><mrow><mn>1</mn><mo>-</mo><msqrt><mrow><mn>1</mn><mo>-</mo><mrow><mn>4</mn><mo>\u2062</mo><mi>x</mi></mrow></mrow></msqrt></mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>x</mi></mrow></mfrac><mo>)</mo></mrow><mi>m</mi></msup><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant=\"normal\">\u221e</mi></munderover><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msup><mi>x</mi><mi>j</mi></msup></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05706.tex", "nexttext": "\n\\end{proof}\n\\begin{lemma}\n\\label{lem:exists}\nThere exists a finite Pachinko that outputs a ball in column $m$ with probability greater than $1-\\varepsilon$ for any $\\varepsilon > 0$. \n\\end{lemma}\n\\begin{proof}\nConsider an $m$-truncated $(m+2j)$-Pachinko for $j$ such that $B(m,j+1)/2^{m+2(j+1)}~\\leq~\\varepsilon$, which exists because $B(m,j)$ is always positive and $\\lim_{j \\rightarrow\\infty} B(m,j)/4^j = 0$ (easily derived from Stirling's approximation for factorials~\\cite{abramowitz1966handbook}). Then Lemma~\\ref{lem:one} yields the following lower bound on the output probability in column $m$:\n\n", "itemtype": "equation", "pos": 42566, "prevtext": " \n\nWe can use the properties of these numbers to prove two useful Lemmas which we use in Section~\\ref{sec:general} to construct Pachinkos that can approximate any probability distribution.\n\n\\begin{lemma}\n\\label{lem:one}\nThe output probability in column $m$ of an $m$-truncated $k$-Pachinko approaches 1 as $k\\rightarrow\\infty$.\n\\end{lemma}\n\\begin{proof}\n\\vspace{-1pc}\n\n", "index": 5, "text": "\\begin{equation}\n\\sum\\limits_{j=0}^\\infty \\frac{B(m,j)}{2^{m+2j}} = \\frac{1}{2^m}\\sum\\limits_{j=0}^\\infty B(m,j)\\frac{1}{4^j} = \\frac{1}{2^m}\\left(\\frac{1-\\sqrt{1-4(1/4)}}{2(1/4)}\\right)^m = 1\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\sum\\limits_{j=0}^{\\infty}\\frac{B(m,j)}{2^{m+2j}}=\\frac{1}{2^{m}}\\sum\\limits_{%&#10;j=0}^{\\infty}B(m,j)\\frac{1}{4^{j}}=\\frac{1}{2^{m}}\\left(\\frac{1-\\sqrt{1-4(1/4)%&#10;}}{2(1/4)}\\right)^{m}=1\" display=\"block\"><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant=\"normal\">\u221e</mi></munderover><mfrac><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mn>2</mn><mrow><mi>m</mi><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi></mrow></mrow></msup></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>1</mn><msup><mn>2</mn><mi>m</mi></msup></mfrac><mo>\u2062</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant=\"normal\">\u221e</mi></munderover><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mfrac><mn>1</mn><msup><mn>4</mn><mi>j</mi></msup></mfrac></mrow></mrow></mrow><mo>=</mo><mrow><mfrac><mn>1</mn><msup><mn>2</mn><mi>m</mi></msup></mfrac><mo>\u2062</mo><msup><mrow><mo>(</mo><mfrac><mrow><mn>1</mn><mo>-</mo><msqrt><mrow><mn>1</mn><mo>-</mo><mrow><mn>4</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>/</mo><mn>4</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></msqrt></mrow><mrow><mn>2</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>/</mo><mn>4</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mfrac><mo>)</mo></mrow><mi>m</mi></msup></mrow><mo>=</mo><mn>1</mn></mrow></math>", "type": "latex"}, {"file": "1601.05706.tex", "nexttext": " \n\\end{proof}\n\n\\subsection{3 or Fewer Outputs}\n\nFor a small number of outputs, constructible output probability distributions of 50-50 Pachinkos can be calculated directly. The only possible outputs for 50-50 Pachinkos with one or two outputs are $\\langle1\\rangle$ and $\\langle1/2,0,1/2\\rangle$ respectively. 50-50 Pachinkos with exactly three outputs can output in either four or five columns by Lemma~\\ref{lem:span}. For four columns, pins only exist in two columns, and hit pins ordered by height must alternate between the two columns as shown on the left of Figure~\\ref{fig:few}. Such a Pachinko with $k$ hit pins results in the following distributions or their reversals:\n\n\n", "itemtype": "equation", "pos": -1, "prevtext": "\n\\end{proof}\n\\begin{lemma}\n\\label{lem:exists}\nThere exists a finite Pachinko that outputs a ball in column $m$ with probability greater than $1-\\varepsilon$ for any $\\varepsilon > 0$. \n\\end{lemma}\n\\begin{proof}\nConsider an $m$-truncated $(m+2j)$-Pachinko for $j$ such that $B(m,j+1)/2^{m+2(j+1)}~\\leq~\\varepsilon$, which exists because $B(m,j)$ is always positive and $\\lim_{j \\rightarrow\\infty} B(m,j)/4^j = 0$ (easily derived from Stirling's approximation for factorials~\\cite{abramowitz1966handbook}). Then Lemma~\\ref{lem:one} yields the following lower bound on the output probability in column $m$:\n\n", "index": 7, "text": "\\begin{equation}\n\\sum\\limits_{i = 0}^{j}\\frac{B(m,i)}{2^{m+2i}} = \\sum\\limits_{i = 0}^{\\infty}\\frac{B(m,i)}{2^{m+2i}} - \\sum\\limits_{i = j+1}^{\\infty}\\frac{B(m,i)}{2^{m+2i}} > 1 - \\frac{B(m,j+1)}{2^{m+2(j+1)}}\\geq 1-\\varepsilon.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\sum\\limits_{i=0}^{j}\\frac{B(m,i)}{2^{m+2i}}=\\sum\\limits_{i=0}^{\\infty}\\frac{B%&#10;(m,i)}{2^{m+2i}}-\\sum\\limits_{i=j+1}^{\\infty}\\frac{B(m,i)}{2^{m+2i}}&gt;1-\\frac{B%&#10;(m,j+1)}{2^{m+2(j+1)}}\\geq 1-\\varepsilon.\" display=\"block\"><mrow><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>j</mi></munderover><mfrac><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mn>2</mn><mrow><mi>m</mi><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>i</mi></mrow></mrow></msup></mfrac></mrow><mo>=</mo><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant=\"normal\">\u221e</mi></munderover><mfrac><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mn>2</mn><mrow><mi>m</mi><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>i</mi></mrow></mrow></msup></mfrac></mrow><mo>-</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></mrow><mi mathvariant=\"normal\">\u221e</mi></munderover><mfrac><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mn>2</mn><mrow><mi>m</mi><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>i</mi></mrow></mrow></msup></mfrac></mrow></mrow><mo>&gt;</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mrow><mi>B</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo>,</mo><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mn>2</mn><mrow><mi>m</mi><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></msup></mfrac></mrow><mo>\u2265</mo><mrow><mn>1</mn><mo>-</mo><mi>\u03b5</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05706.tex", "nexttext": "\n\n 50-50 Pachinkos with exactly three outputs in five columns can be represented implicitly by products of linear transformations on a 5-vector encoding the output probability in each column. The ball input is represented by a starting vector chosen from the set\n \n", "itemtype": "equation", "pos": 44299, "prevtext": " \n\\end{proof}\n\n\\subsection{3 or Fewer Outputs}\n\nFor a small number of outputs, constructible output probability distributions of 50-50 Pachinkos can be calculated directly. The only possible outputs for 50-50 Pachinkos with one or two outputs are $\\langle1\\rangle$ and $\\langle1/2,0,1/2\\rangle$ respectively. 50-50 Pachinkos with exactly three outputs can output in either four or five columns by Lemma~\\ref{lem:span}. For four columns, pins only exist in two columns, and hit pins ordered by height must alternate between the two columns as shown on the left of Figure~\\ref{fig:few}. Such a Pachinko with $k$ hit pins results in the following distributions or their reversals:\n\n\n", "index": 9, "text": "\\begin{align}\n\\left\\langle \\sum\\limits_{i=1}^{j+1} 2^{-2i+1},0,2^{-k},\\sum\\limits_{i=1}^j 2^{-2i}\\right\\rangle&\\quad\\textnormal{for }k = 2j+1, \\\\\n\\left\\langle \\sum\\limits_{i=1}^j 2^{-2i+1},2^{-k},0,\\sum\\limits_{i=1}^j 2^{-2i}\\right\\rangle&\\quad\\textnormal{for }k = 2j.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\left\\langle\\sum\\limits_{i=1}^{j+1}2^{-2i+1},0,2^{-k},\\sum\\limits%&#10;_{i=1}^{j}2^{-2i}\\right\\rangle\" display=\"inline\"><mrow><mo>\u27e8</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></munderover></mstyle><msup><mn>2</mn><mrow><mrow><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>i</mi></mrow></mrow><mo>+</mo><mn>1</mn></mrow></msup></mrow><mo>,</mo><mn>0</mn><mo>,</mo><msup><mn>2</mn><mrow><mo>-</mo><mi>k</mi></mrow></msup><mo>,</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover></mstyle><msup><mn>2</mn><mrow><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>i</mi></mrow></mrow></msup></mrow><mo>\u27e9</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\quad\\textnormal{for }k=2j+1,\" display=\"inline\"><mrow><mrow><mrow><mi mathvariant=\"normal\">\u2003</mi><mo>\u2062</mo><mtext>for\u00a0</mtext><mo>\u2062</mo><mi>k</mi></mrow><mo>=</mo><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi></mrow><mo>+</mo><mn>1</mn></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\left\\langle\\sum\\limits_{i=1}^{j}2^{-2i+1},2^{-k},0,\\sum\\limits_{%&#10;i=1}^{j}2^{-2i}\\right\\rangle\" display=\"inline\"><mrow><mo>\u27e8</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover></mstyle><msup><mn>2</mn><mrow><mrow><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>i</mi></mrow></mrow><mo>+</mo><mn>1</mn></mrow></msup></mrow><mo>,</mo><msup><mn>2</mn><mrow><mo>-</mo><mi>k</mi></mrow></msup><mo>,</mo><mn>0</mn><mo>,</mo><mrow><mstyle displaystyle=\"true\"><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover></mstyle><msup><mn>2</mn><mrow><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>i</mi></mrow></mrow></msup></mrow><mo>\u27e9</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\quad\\textnormal{for }k=2j.\" display=\"inline\"><mrow><mrow><mrow><mi mathvariant=\"normal\">\u2003</mi><mo>\u2062</mo><mtext>for\u00a0</mtext><mo>\u2062</mo><mi>k</mi></mrow><mo>=</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>j</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05706.tex", "nexttext": " \n which correspond to a ball starting in column two, three, or four respectively. Then the ball may interact with a sequence of one or more pin arrangements in any of the three patterns shown in the center of Figure~\\ref{fig:few}. \n \n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{few}\n\\caption{[Left] Example of a four column Pachinko with three nonzero outputs. \n[Center] The three pin arrangement patterns for creating five column Pachinkos\nwith three nonzero outputs. \nFor pattern $A$, $(a',b',c',d',e') = (a+b/2+c/4,0,b/2+c/2+d/2,0,c/4+d/2+e)$. \nFor pattern $B$, $(a',b',c',d',e') = (a,b+c/2,c/4+d/2,0,c/4+d/2+e)$. \nFor pattern $C$, $(a',b',c',d',e') = (a+b/2+c/4,0,b/2+c/4,c/2+d,e)$. \n[Right] Example of a five column Pachinko with\nthree nonzero outputs.}\n\\label{fig:few}\n\\end{figure}\n \nThese patterns correspond respectively to the following three linear transformations: \n \n \n", "itemtype": "equation", "pos": -1, "prevtext": "\n\n 50-50 Pachinkos with exactly three outputs in five columns can be represented implicitly by products of linear transformations on a 5-vector encoding the output probability in each column. The ball input is represented by a starting vector chosen from the set\n \n", "index": 11, "text": "\\begin{equation}\n \\mathcal{X} = \\left\\{\\langle 1/2,0,1/2,0,0\\rangle^T, \\langle 0,0,1,0,0\\rangle^T, \\langle 0,0,1/2,0,1/2\\rangle^T\\right\\},\n \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"\\mathcal{X}=\\left\\{\\langle 1/2,0,1/2,0,0\\rangle^{T},\\langle 0,0,1,0,0\\rangle^{%&#10;T},\\langle 0,0,1/2,0,1/2\\rangle^{T}\\right\\},\" display=\"block\"><mrow><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcb3</mi><mo>=</mo><mrow><mo>{</mo><msup><mrow><mo stretchy=\"false\">\u27e8</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow><mo>,</mo><mn>0</mn><mo>,</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo stretchy=\"false\">\u27e9</mo></mrow><mi>T</mi></msup><mo>,</mo><msup><mrow><mo stretchy=\"false\">\u27e8</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo stretchy=\"false\">\u27e9</mo></mrow><mi>T</mi></msup><mo>,</mo><msup><mrow><mo stretchy=\"false\">\u27e8</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow><mo>,</mo><mn>0</mn><mo>,</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow><mo stretchy=\"false\">\u27e9</mo></mrow><mi>T</mi></msup><mo>}</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.05706.tex", "nexttext": "\n \nAssuming that the nonzero probability outputs in columns one and five, the sequence of pins may not end with a pin in column three, or with configuration $B$ or $C$, or else the Pachinko would have four outputs. So the pins must end with an $A$ configuration. Thus, the producible output distributions  are exactly the distributions that can be written in the following form, for a sequence of configurations $T_i \\in \\{A, B, C\\}$ and a ball input vector $x\\in \\mathcal{X}$:\n \n \n", "itemtype": "equation", "pos": 45897, "prevtext": " \n which correspond to a ball starting in column two, three, or four respectively. Then the ball may interact with a sequence of one or more pin arrangements in any of the three patterns shown in the center of Figure~\\ref{fig:few}. \n \n\\begin{figure}[htbp]\n\\centering\n\\includegraphics[width=6.5 in]{few}\n\\caption{[Left] Example of a four column Pachinko with three nonzero outputs. \n[Center] The three pin arrangement patterns for creating five column Pachinkos\nwith three nonzero outputs. \nFor pattern $A$, $(a',b',c',d',e') = (a+b/2+c/4,0,b/2+c/2+d/2,0,c/4+d/2+e)$. \nFor pattern $B$, $(a',b',c',d',e') = (a,b+c/2,c/4+d/2,0,c/4+d/2+e)$. \nFor pattern $C$, $(a',b',c',d',e') = (a+b/2+c/4,0,b/2+c/4,c/2+d,e)$. \n[Right] Example of a five column Pachinko with\nthree nonzero outputs.}\n\\label{fig:few}\n\\end{figure}\n \nThese patterns correspond respectively to the following three linear transformations: \n \n \n", "index": 13, "text": "\\begin{equation}\n \\small\nA = \n \\left(\n \\begin{array}{ccccc}\n 1 & 1/2 & 1/4 & 0 & 0\\\\\n 0 & 0 & 0 & 0 & 0 \\\\\n 0 & 1/2 & 1/2 & 1/2 & 0\\\\\n  0 & 0 & 0 & 0 & 0 \\\\\n  0 & 0 & 1/4 & 1/2 & 1\n\\end{array}\n \\right), B = \n  \\left(\n \\begin{array}{ccccc}\n 1 & 0 & 0 & 0 & 0\\\\\n 0 & 1 & 1/2 & 0 & 0 \\\\\n 0 & 0 & 1/4 & 1/2 & 0\\\\\n  0 & 0 & 0 & 0 & 0 \\\\\n  0 & 0 & 1/4 & 1/2 & 1\n\\end{array}\n \\right), C = \n  \\left(\n \\begin{array}{ccccc}\n 1 & 1/2 & 1/4 & 0 & 0\\\\\n 0 & 0 & 0 & 0 & 0 \\\\\n 0 & 1/2 & 1/4 & 0 & 0\\\\\n  0 & 0 & 1/2 & 1 & 0 \\\\\n 0 & 0 & 0 & 0 & 1\n\\end{array}\n \\right).\n \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"\\small A=\\left(\\begin{array}[]{ccccc}1&amp;1/2&amp;1/4&amp;0&amp;0\\\\&#10;0&amp;0&amp;0&amp;0&amp;0\\\\&#10;0&amp;1/2&amp;1/2&amp;1/2&amp;0\\\\&#10;0&amp;0&amp;0&amp;0&amp;0\\\\&#10;0&amp;0&amp;1/4&amp;1/2&amp;1\\end{array}\\right),B=\\left(\\begin{array}[]{ccccc}1&amp;0&amp;0&amp;0&amp;0\\\\&#10;0&amp;1&amp;1/2&amp;0&amp;0\\\\&#10;0&amp;0&amp;1/4&amp;1/2&amp;0\\\\&#10;0&amp;0&amp;0&amp;0&amp;0\\\\&#10;0&amp;0&amp;1/4&amp;1/2&amp;1\\end{array}\\right),C=\\left(\\begin{array}[]{ccccc}1&amp;1/2&amp;1/4&amp;0&amp;0\\\\&#10;0&amp;0&amp;0&amp;0&amp;0\\\\&#10;0&amp;1/2&amp;1/4&amp;0&amp;0\\\\&#10;0&amp;0&amp;1/2&amp;1&amp;0\\\\&#10;0&amp;0&amp;0&amp;0&amp;1\\end{array}\\right).\" display=\"block\"><mrow><mrow><mrow><mi mathsize=\"90%\">A</mi><mo mathsize=\"90%\" stretchy=\"false\">=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">4</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">4</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo mathsize=\"90%\" stretchy=\"false\">,</mo><mrow><mrow><mi mathsize=\"90%\">B</mi><mo mathsize=\"90%\" stretchy=\"false\">=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">4</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">4</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo mathsize=\"90%\" stretchy=\"false\">,</mo><mrow><mi mathsize=\"90%\">C</mi><mo mathsize=\"90%\" stretchy=\"false\">=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">4</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">4</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mrow><mn mathsize=\"90%\">1</mn><mo mathsize=\"90%\" stretchy=\"false\">/</mo><mn mathsize=\"90%\">2</mn></mrow></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">0</mn></mtd><mtd columnalign=\"center\"><mn mathsize=\"90%\">1</mn></mtd></mtr></mtable><mo>)</mo></mrow></mrow></mrow></mrow><mo mathsize=\"90%\" stretchy=\"false\">.</mo></mrow></math>", "type": "latex"}, {"file": "1601.05706.tex", "nexttext": "\n An example of one such Pachinko is shown on the right of Figure~\\ref{fig:few}.\n\n\\subsection{Uniform Distributions}\n\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=5 in]{uniform}\n\\caption{50-50 Grid Pachinkos that construct uniform distributions for 2, 4, 8, and 16 outputs, two provided for the last.\nPins are at each vertex with out-degree (down-degree) two. The left half of each tracks how probability\nmass travels through the distribution. The probabilities are the numbers shown divided by the number of outputs.}\n\\label{fig:uniform}\n\\end{figure}\n\nUniform distributions are another special class of outputs that one might like to construct under this model, particularly for liquid distribution applications. Figure~\\ref{fig:uniform} shows 50-50 Pachinkos that output uniform distributions of $1/2$, $1/4$, $1/8$, and $1/16$ respectively. Two different 50-50 Pachinkos with a uniform distribution of $1/16$ are given, demonstrating that different distributions of pins can yield the same output. It is still open if all uniform distributions of probabilities of the form $1/2^k$ are constructible by 50-50 Pachinkos.\n\n\\begin{open}\n  Is every uniform distribution of output probabilities of the form $1/2^k$ constructible by a 50-50 Pachinko?\n\\end{open}\n\n\\subsection{Any Probability Distribution, Shifted}\n\nWhile one cannot output every dyadic probability distribution by itself using a 50-50 Pachinko, one can output a multiple of any probability distribution, in addition to some other probabilities. \n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{theorem}\nFor any ordered set of dyadic probabilities $p_1$, $p_2$, \\ldots, $p_n$ there is a positive constant $c$ and a 50-50 Pachinko  for which the probabilities for $n$ of its outputs, in order from left to right, are $cp_1$, $cp_2$, \\ldots, $cp_n$. \n\\end{theorem}\n\n\\begin{proof}\nLet $m$ be the maximum of the numerators of the $p_i$s. We will construct an example with $c = \\frac{3}{2^{2^{m+2n+10}}}$. \n\nFor each $i\\in\\{1,\\ldots,n\\}$, let $cp_i = 3q'_i/r'_i$ in lowest terms.  For each $i\\in\\{1,\\ldots,n\\}$, $q'_i \\le m < 2^{m+2i+4}$, so by doubling numerators and denominators as necessary, let $cp_i = 3q_i/r_i$ where $r_i$ is a power of 2 and $2^{m+2i+4} < q_i \\le 2^{m+2i+5}$. That is, we put the numerators in increasing order and spaced out from each other and from 1.\n\nWe create two long diagonals of Pachinko pins as shown on the left of Figure~\\ref{fig:shift}.\n\n\\begin{figure}[hpbt]\n\\centering\n\\includegraphics[width=6 in]{shift}\n\\caption{Details of a Pachinko to construct a shifted distribution.\n[Left] Top are consisting of two diagonal rows of pins. \n[Right] The vicinity of an output column $P$. }\n\\label{fig:shift}\n\\end{figure}\n\nThe probability that a ball hits the $k$th pin in the first diagonal is $2^{1-k}$, and the probability that a ball hits the $k$th pin in the second diagonal is $k2^{-k}$. \n\nFor each $i$, put three pins in the third diagonal in spots $q_i - 1$, $q_i$, and $q_i + 1$, so the probabilities that balls hit them are $(q_i - 1)2^{-q_i}$, $(2q_i - 1)2^{-1-q_i}$, and $3q_i2^{-2-q_i}$, respectively. Since $q_{i-1} < q_i - 3$ and $q_{i+1} > q_i + 3$, they don't interfere.\n\nFinally, the left output of the last of those three pins, $P$ (which is hit with probability $3q_i2^{-2-q_i}$), goes to a spot where no other output goes, so by alternating between pins in that column and $P$'s column, we can get a probability of the form $3q_i 2^{-2-q_i-t}$ for any $t$. In particular, since $2 + q_i \\le 2^{m+2i+5} + 2 < 2^{m+2n+10}$, we can get $\\frac{3q_i 2^{-2^{m+2n+10}}}{r_i} = cp_i$, as desired.\n\\end{proof}\n\n\\subsection{Approximating Any Probability Distribution}\n\nWhile outputting any single dyadic probability with 50-50 Pachinkos remains open, one can approximate any real probability distribution to arbitrary precision. \n\n\\begin{theorem}\nFor any real probability $p$ and any $\\varepsilon > 0$, there exists a 50-50 Pachinko with a finite number of pins that outputs a probability in $(p - \\varepsilon, p + \\varepsilon)$.\n\\end{theorem}\n\n\\begin{proof}\nLet $m$ and $n$ be integers such that $|\\frac{m}{n} - p| \\le \\frac{\\epsilon}3$. Without loss of generality assume $n > m > 0$.\n\nBy Lemma~\\ref{lem:one}, there exists a finite arrangement of pins that achieves probability at least $1 - \\frac{\\varepsilon}{3\\max(|m|,|m-n|)}$ in column $m$, leaving at most $\\frac{\\varepsilon}{3\\max(|m|,|m-n|)}$ in all other columns combined, and in particular at most $\\frac{\\varepsilon}{3\\max(|m|,|m-n|)}$ between columns $m-n$ and $m$, not inclusive. Remove all pins in column $m-n$ from that arrangement. Doing this does not increase the probability that a ball ends between columns $m-n$ and $m$, exclusive, since it affects only balls that make it to column $m-n$, and decreases the probability that such a ball ends between columns $m-n$ and $m$ to zero. So the ball ends between $m-n$ and $m$, exclusive, with probability at most $\\frac{\\varepsilon}{3\\max(|m|,|m-n|)}$, and otherwise ends in column $m-n$ or $m$. But the first moment is 0, so if $p_i$ is the probability that the ball ends in column $i$, then $\\sum i p_i = 0$, so $|mp_m + (m-n)p_{m-n}| = |\\sum_{i \\in (m-n,m)} ip_i| < \\max(|m|,|m-n|)\\frac{\\varepsilon}{3\\max(|m|,|m-n|)} = \\frac{\\varepsilon}{3}$. Also, the total probability is 1, so $|p_m + p_{m-n} - 1| \\le \\frac{\\varepsilon}{3\\max(|m|,|m-n|)} \\le \\frac{\\varepsilon}{3m}$. By the triangle inequality,  $|mp_m + (m-n)p_{m-n}| = |m(p_m + p_{m-n}) - np_{m-n}| \\ge |m - np_{m-n}| - \\frac{\\varepsilon}{3}$, so $|m - np_{m-n}| \\le \\frac{2 \\varepsilon}{3}$, so $|\\frac{m}{n} - p_{m-n}| \\le \\frac{2\\varepsilon}{3}$, so by the triangle inequality again, $|p - p_{m-n}| \\le \\varepsilon$, as desired.\n\\end{proof}\n\n\\begin{theorem}\nFor any finite ordered set of real probabilities $(p_1,\\ldots,p_n)$ and\nany $\\varepsilon > 0$, there exists a 50-50 Pachinko with a finite\nnumber of pins for which the probabilities for $n$ of its consecutive\noutputs, in order from left to right, are in $(p_i - \\varepsilon, p_i + \\varepsilon)$ for $i\\in \\{1,\\dots,n\\}$ .\n\\end{theorem}\n\\begin{proof}\nNote that the previous\nproof proves the stronger statement that for any real probability $p$,\nany $\\varepsilon > 0$, and sufficiently large $n$, there exists a\n50-50 Pachinko with a finite number of pins that takes probability 1 at\ncolumn $i$ to a probability distribution within statistical distance\\footnote{\nBy \\emph{statistical distance}, we mean the maximum absolute difference between\nrespective probabilities of the corresponding distribution.\n}\n$\\varepsilon$ of probability $p$ at column $i-n$ and probability $1-p$\nat some column $j \\ge i+n\\frac{p}{1-p}$, without using any pins at columns outside the\ninterval $(i-n,j)$. \n\nWe will prove the claim by induction on $n$, essentially by\napplying the above in series many times. \n\nThe base case $n=1$ is the previous theorem. If $n\\geq2$, consider the\ninductive construction of the probability distribution\n$(\\frac{p_1}{1-p_n},\\ldots,\\frac{p_{n-1}}{1-p_n})$ to within\n$\\frac{\\varepsilon}{3}$. It uses finitely many pins, so they all lie\nbetween columns $-n$ and $n$ for some $n$. So, first construct a\ndistribution within statistical distance $\\frac{\\varepsilon}{3}$ of\nprobabilities $1-p_n$ and $p_n$ separated by at least $2n$ columns. Then\napply that inductive construction to the output with probability\n$1-p_n$, giving probabilities $p_1$, \\ldots, $p_{n-1}$ in consecutive\ncolumns, without interfering with the probability of $p_n$ more than $n$\ncolumns away. Finally, apply Lemma~\\ref{lem:one} to take the probability\n$p_n$ to the column just right of $p_{n-1}$, again to within statistical\ndistance of $\\frac{\\varepsilon}{3}$, giving $(p_1,\\ldots,p_n)$ to within\nstatistical distance $\\varepsilon$, as desired. (If $n=2$, the last step\nis the only relevant step.)\n\\end{proof}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{General Pachinkos}\n\\label{sec:general}\n\n\\subsection{Universality}\n\nFor general Pachinkos, any ordered set of dyadic probabilities may be constructed.\n\n\\begin{theorem}\nEvery finite ordered set of dyadic probabilities are exactly the ordered outputs of some Pachinko.\n\\end{theorem}\n\n\\begin{proof}\nWe can trivially construct a Grid Pachinko that outputs any finite ordered set of probabilities. \nConstruct a complete balanced binary tree with each leaf having probability equal to the \nlowest bit in the input set. This tree can be constructed by using N-Pins at junctions and\nL-Pins and R-Pins to move the junctions apart as necessary. Then use L-Pins and R-Pins\nto combine the leaf output bits together to form the required outputs. Since Grid Pachinkos\ncan be simulated by General Pachinkos, the claim holds. Of course this construction requires \nthe use of an exponential number of pins.\n\\end{proof}\n\nThus, the question arises, how many pins does a Pachinko need to output a given dyadic probability distribution? Let $(p_1,p_2,...p_n)$ be the target dyadic probability distribution with each $p_i$ the probability of the ball terminating in column $i$.\nLet $2^k$ be the largest denominator in any $p_i$, so each probability may be represented using $k$ bits. We show that the constructing an arbitrary dyadic distribution requires at least $\\Omega(nk)$ pins, and we give an algorithm that constructs the target distribution using $O(nk^2)$ pins.\n\n\\subsection{Lower Bound on Pins}\n\n\\begin{theorem}\nFor any $n$ and $k$ there exists an (unordered) set of $n$\n$k$-bit dyadic output probabilities requiring $\\Omega(nk - n \\log n)$ Pachinko\npins.\n\\end{theorem}\n\nNote that since each probability is at least $\\frac{1}{2^k}$, there are\nat most $2^k$ nonzero probabilities, so for reasonable parameter choices\nthe first term dominates and gives a lower bound of $\\Omega(nk)$ pins.\n\n\\begin{proof}\nThe number of ordered such probability distributions is\n$\\Omega((\\frac{2^k}{n})^n)$, since there are that many probability\ndistributions in which the first $n-1$ probabilities are chosen\nindependently between $0$ and $\\frac1n$.\n\nSo the number of ordered probability distributions is $\\Omega(2^{nk - n\n  \\log n})$, and the number of unordered probability distributions is\nalso $\\Omega(2^{nk-n\\log n})$, since each unordered probability\ndistribution corresponds to at most $n! = O(2^{n \\log n})$ ordered\nones. \n\nA Pachinko arrangement is completely specified by the planar digraph\ndescribing which pins' outputs are which pins' inputs. Bonichon et al.~\\cite{BGHPS}\nshowed that the number of (unlabeled) planar graphs on $t$ vertices is $O(2^t)$. A\nplanar digraph consists of a planar graph and an orientation for each of\nits $O(t)$ edges, so the number of planar digraphs on $t$ vertices is\nalso $O(2^t)$. So at least $nk - n \\log n$ pins are necessary to even\nconstruct enough planar digraphs to generate all the probability\ndistributions.\n\\end{proof}\n\n\\subsection{Upper Bound on Pins}\nIn this section, we prove an upper bound of $O(nk^2)$ on the same\nproblem as a lower bound was given for in the previous section.\n\nWe define a \\textit{pure stream} to be the Pachinko region for which the\nprobability that the center of the ball passes through that region is $1/2^m$ for any integer $m$.\nAn \\textit{impure stream} is a region that has\n$\\sum_{i=1}^{m}(1/2^{a_i})$ of  probability that the center of the ball\npasses through that region with $(a_1,\\ldots,a_m)$ being a strictly increasing integer sequence.\n\n\\begin{lemma}\n\\label{lem:crossover}\nA pure stream $1/2^m$ and a impure stream $\\sum_{i=1}^{j}(1/2^{a_i})$,\nwith $m<a_1$ and separated by 3 empty columns, can switch columns using $O(a_j-m)$ pins.\n\\end{lemma}\n\\begin{proof}\nWe provide a constructive example in Figure \\ref{fig:newCross}.\nWithout loss of generality, consider that the pure stream is positioned on the left.\nFirst, move the pure stream to the center (two columns to the right) using two R-pins.\nThen, use an N-pin to split the pure stream into two streams of value $1/2^{m+1}$. \nNow, we check if $1/2^{m+1}\\in (a_1,\\ldots,a_j)$. \nIf that is the case, we add two R-pins: one to direct one of the pure streams to the center and the other to merge it with the impure stream to the right.\nOtherwise, use two L-pins at the same position.\nRepeating the splitting process until the pure stream at the center is split into two streams of value $1/2^{a_j}$ ($a_j-m-1$ times). \nNow, use an L-pin and an R-pin as shown in Figure \\ref{fig:newCross}.\n\nWe call this construction a \\textit{crossover gadget}.\nWith this gadget, we can construct an impure stream of value $\\sum_{i=1}^{j}(1/2^{a_i})$ in the left column, and a pure stream of value $1/2^m$ in the right column.\nThe construction uses $2+3(a_j-m)$ pins.\n\\end{proof}\n\n\n\n\\begin{figure}\n\\centering\n\t\\includegraphics[width=6in]{cross2}\n    \\caption{Crossover gadget.}\n    \\label{fig:newCross}\n\\end{figure}\n\n\\begin{lemma}\n\\label{lem:dyadicProbability}\nAny dyadic probability, $\\sum_{i=1}^{j}(1/2^{a_i})$ with $(a_1,\\ldots,a_j)$ strictly increasing, can be constructed with $O(k^2)$ pins from a set of $O(k)$ pure streams, with ordered probabilities from higher to lower and with $O(1)$ distance between neighboring streams, if, for every $a_i$, there is a pure stream with probability $1/2^{a_i}$.\n\\end{lemma}\n\\begin{proof}\nBegin by adjusting the distances between the pure streams, using R-pins and L-pins so that neighboring streams have 3 empty columns between them.\nThis takes $O(k^2)$ pins, since each pure stream can move $O(k)$ units.\nWe define the stream of probability $1/2^{a_j}$ as the \\textit{working stream}. \nWe will bring it to the left using L-pins.\nIf the pure stream immediately to the left of it has probability $1/2^{a_i}$ for some $i$ and the next pure stream to the left has a greater probability, merge the $1/2^{a_i}$ stream with the working stream. \nOtherwise, use a crossover gadget to bring the working stream to the left.\nWhen there are no more pure streams to the left, the working stream will have probability $\\sum_{i=1}^{j}(1/2^{a_i})$.\nEach crossover costs $O(k)$, by Lemma \\ref{lem:crossover}, and the number of crossovers needed is $O(k)$.\nTherefore, the number of required pins is $O(k^2)$.\n\\end{proof}\n\n\\begin{theorem}\n\\label{dyadicDistribution}\nAny dyadic probability distribution $(p_1, p_2, \\ldots, p_n)$ can be\nobtained with $O(nk^2)$ pins, in which $k$ is the maximum number of bits\nused to represent a probability in the desired distribution.\n\\end{theorem}\n\\begin{proof}\nThis is a proof by construction.\nBegin by splitting the initial stream (of probability 1) into $k-1$ streams of probabilities $(1/2^i)_{i=1}^{k-1}$ ordered by decreasing order from left to right followed by two streams of probability $ 1/2^k $.\nThis can be done by successively splitting the rightmost stream with an N-pin, $k$ times.\n\nUsing Lemma \\ref{lem:dyadicProbability}, we can obtain $p_1$ using $O(k^2)$ pins.\nNotice that this construction decreases the number of pure streams and that Lemma \\ref{lem:dyadicProbability} cannot be applied directly to obtain $p_2$, because a term $1/2^m$ of $p_2$ might not have a corresponding pure stream.\nWe then re-split the pure streams even further using the following algorithm.\n\nLet $1/2^p$ be the smallest term of $p_2$ that does not have a corresponding pure stream, and let $1/2^q$ be the smallest pure stream such that $p>q$.\nDivide the stream $1/2^q$ with N-pins in the same way as the initial stream was split, $p-q$ times, so that the resultant rightmost stream will have probability $1/2^p$.\nThis procedure maintains the order of probabilities.\nRepeat until all terms of $p_2$ have corresponding streams.\nThis subroutine uses $O(k)$ pins for each iteration. Overall, $O(k^2)$ pins are used, because $p_2$ has $O(k)$ bits.\nAfter this re-splitting phase, the number of pure streams cannot be greater than $2k$.\nIf it were, there would be more than 2 streams with the same probability, because the smallest probability that can be created is $1/2^k$. One of them would have been created in the re-splitting phase, which causes a contradiction since we only create probabilities that were previously inexistent.\n\nThe subroutine described above allows the construction of $p_2$ with $O(k^2)$ pins, by applying Lemma \\ref{lem:dyadicProbability}.\nAll statements referring to $p_2$ can be generalized to $p_i$, $i>2$.\nWe can then construct all probabilities with a total of $O(nk^2)$ pins.\n\\end{proof}\n\n\n\n\\section{Conclusion}\nIn this paper we have analyzed a rich set of models of perfectly inelastic Pachinko\nwith a single ball as input. A natural open question is to extend these results for Pachinko\nallowing multiple input balls. For Grid Pachinkos, we allow for pins that stop, move or evenly split the forward movement of a ball. Another natural generalization arises by allowing for $(\\alpha,\\beta)$-pins, pins where the ball will either move to the right or left with probability $\\alpha\\beta$ or $(1-\\alpha)\\beta$ respectively and continue moving down or remain at the pin with probability $1-\\beta$. All our Grid Pachinko pins are special cases of this model. Modeling elastic, non-local behavior, where balls may move up and/or more to the left or right, is perhaps the more natural, yet more complex system to analyze. Additionally, our models consider Pachinko in a vertical plane. \nModeling three-dimensional balls interacting with point or line obstacles in the\npresence of gravity may also lead to interesting future work. \n\\section{Acknowledgements}\nThe authors would like to thank Zachary Abel, Greg Aloupis, Nadia Benbernou, Scott Kominers, and Anika Rounds for helpful discussions. \n\n\\bibliography{pachinko}\n\\bibliographystyle{plain}\n\n\n", "itemtype": "equation", "pos": 46945, "prevtext": "\n \nAssuming that the nonzero probability outputs in columns one and five, the sequence of pins may not end with a pin in column three, or with configuration $B$ or $C$, or else the Pachinko would have four outputs. So the pins must end with an $A$ configuration. Thus, the producible output distributions  are exactly the distributions that can be written in the following form, for a sequence of configurations $T_i \\in \\{A, B, C\\}$ and a ball input vector $x\\in \\mathcal{X}$:\n \n \n", "index": 15, "text": "\\begin{equation}\n A\\left(\\prod\\limits_{i = 1}^k  T_i\\right)x.\n \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"A\\left(\\prod\\limits_{i=1}^{k}T_{i}\\right)x.\" display=\"block\"><mrow><mrow><mi>A</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><msub><mi>T</mi><mi>i</mi></msub></mrow><mo>)</mo></mrow><mo>\u2062</mo><mi>x</mi></mrow><mo>.</mo></mrow></math>", "type": "latex"}]