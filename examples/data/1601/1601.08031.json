[{"file": "1601.08031.tex", "nexttext": "\nHere, the ${\\operatorname{coef}}_D$ operator will return a matrix for any monomial,\nfor example, ${\\operatorname{coef}}_D(y)= \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}$. \nFor a polynomial $D({\\boldsymbol x}) \\in {\\mathbb A}[{\\boldsymbol x}]$ over an algebra, its \\index{polynomial over an algebra}\n{\\em coefficient space} is the space spanned by its coefficients. \\index{coefficient space}\n\nFor a matrix~$R$, $R(i,j)$ denotes its entry in the $i$-th row and $j$-th column.\n\n\n\nAs mentioned earlier, a deterministic blackbox PIT is equivalent to constructing a hitting-set.\nA set of points ${\\mathcal{H}} \\in {\\mathbb F}^n$ is called a \\emph{hitting-set}\nfor a class $\\mathcal{C}$ of $n$-variate polynomials if for any nonzero polynomial $P$\nin $\\mathcal{C}$, there exists a point in ${\\mathcal{H}}$ where $P$ evaluates to a nonzero\nvalue. \nAn $f(n)$-time hitting-set would mean that the hitting-set can be generated \nin time $f(n)$ for input size $n$.\n\n\n\n\n\\subsection{Arithmetic Branching Programs}\n\\label{sec:ABP}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn ABP is a directed graph with $q+1$ layers of vertices\n$\\{V_0,V_1, \\dots, V_{q}\\}$ and a start node $u$ \nand an end node $t$\nsuch that the edges are \nonly going from $u$ to $V_0$, $V_{i-1}$ to $V_i$ for any $i \\in [q]$ and\n$V_q$ to $t$. \nThe edges have univariate polynomials as their weights \nand as a convention, the edges going from $u$\nand those coming to $t$ have weights from the field ${\\mathbb F}$.\n\n\nThe ABP is said to compute the polynomial $C({\\boldsymbol x}) = \\sum_{p \\in {\\operatorname{paths}}(u,t)} \\prod_{e \\in p} W(e)$,\nwhere $W(e)$ is the weight of the edge $e$.\n\nThe ABP has width $w$ if ${\\lvert {V_i} \\rvert} \\leq w$ for all $i \\in [\\![q]\\!]$.\nWithout loss of generality we can assume ${\\lvert {V_i} \\rvert} = w$ for each $i \\in [\\![q]\\!]$.\n\n\n\nIt is well-known that the sum over all paths \nin a layered graph can be represented by an iterated matrix multiplication.\nTo see this, let the set of nodes in $V_i$ be $\\{v_{i,j} \\mid j \\in [w]\\}$.\nIt is easy to see that the polynomial computed by the ABP is the same as\n$U^{{\\mathsf T}} (\\prod_{i=1}^{q} D_i ) T $,\nwhere $U,T \\in {\\mathbb F}^{w \\times 1}$ \nand $D_i$ is a $w \\times w$ matrix for $1 \\leq i \\leq q$ such that \n\\begin{eqnarray*}\nU(\\ell) &=& W(u,v_{0,\\ell}) \\text{ for } 1 \\leq \\ell \\leq w\\\\\nD_i(k, \\ell) &=& W(v_{i-1,k},v_{i,\\ell}) \\text{ for } 1 \\leq \\ell,k \\leq w \\text{ and } 1 \\leq i \\leq q\\\\\nT(k) &=& W(v_{q,k},t) \\text{ for } 1 \\leq k \\leq w\n\\end{eqnarray*}\n\n\\subsubsection{Read-once Oblivious ABP} \nAn ABP is called a {\\em read-once oblivious ABP (ROABP)} \\index{read-once oblivious ABP (ROABP)}\nif the edge weights in different layers \nare univariate polynomials in distinct variables.\nFormally, the entries in $D_{i}$ come from ${\\mathbb F}[x_{\\pi(i)}]$\nfor all $i \\in [q]$, where $\\pi$ is a permutation on the set $[q]$.\n\n\nHere, $q$ is the same as $n$, the number of variables.\nThe order $(x_{\\pi(1)}, x_{\\pi(2)}, \\dots, x_{\\pi(n)})$ \nis said to be the variable order of the ROABP.\n\nViewing $D_i({x_{\\pi(i)}}) \\in {\\mathbb F}^{w \\times w}[x_{\\pi(i)}]$ as a polynomial over the matrix algebra,\nwe can write the polynomial computed by an ROABP as \n\n", "itemtype": "equation", "pos": 14394, "prevtext": "\n\\maketitle\n\n\\begin{abstract}\nWe give improved hitting-sets for two special cases of Read-once Oblivious Arithmetic Branching Programs (ROABP).\nFirst is the case of an ROABP with known variable order. \nThe best hitting-set known for this case had cost $(nw)^{O(\\log n)}$ \nwhere $n$ is the number of variables \nand $w$ is the width of the ROABP.\nEven for a constant-width ROABP, nothing better than a quasi-polynomial bound\nwas known.\nWe improve the hitting-set complexity for the known-order case\n to $n^{O(\\log w)}$.\nIn particular, this gives the first polynomial time hitting-set for\nconstant-width ROABP (known-order).\nHowever, our hitting-set works only over those fields whose\ncharacteristic is zero or large enough.\nTo construct the hitting-set, we use the concept of the rank of partial derivative matrix.\nUnlike previous approaches whose basic building block is a monomial map,\nwe use a polynomial map.\n\nThe second case we consider is that of commutative ROABP. \nThe best known hitting-set for this case had cost\n$d^{O(\\log w)}(nw)^{O(\\log \\log w)}$, where $d$ is the individual degree. \nWe improve this hitting-set complexity to \n$(ndw)^{O(\\log \\log w)}$.\nWe get this by achieving rank concentration more efficiently.\n\\end{abstract}\n\n\\section{Introduction}\nThe polynomial identity testing (PIT) problem asks if a given multivariate polynomial\nis identically zero. \nThe input to the problem is given via an arithmetic model computing a polynomial,\nfor example, an arithmetic circuit or an arithmetic branching program. \nThese are arithmetic analogues of boolean circuits and boolean branching programs, respectively. \nThe degree of the given polynomial is assumed to be polynomially bounded.\nUsually, any such circuit or branching program can compute a polynomial with exponentially many monomials\n(exponential in the circuit size).\nThus, one cannot compute the polynomial explicitly. \nHowever, given such an input, it is possible to efficiently evaluate the polynomial at a point in the field.\nThis property enables a randomized polynomial identity test with one-sided error. \nIt is known that evaluating a small-degree nonzero polynomial over a random point gives a nonzero\nvalue with a good probability~\\cite{DL78,Sch80,Zip79}. \nThus, the randomized test is to just evaluate the input polynomial, given as an arithmetic circuit or an arithmetic branching program at a random point. \n\nFinding an efficient deterministic algorithm for PIT has been a major open question in complexity theory.\nThe question is also related to arithmetic circuit lower bounds~\\cite{Agr05, HS80,KI03}. \nThe PIT problem has been studied in two paradigms: (i) blackbox test, where\none can only evaluate the polynomial at a chosen point,\n(ii) whitebox test, where one has access to the input circuit or arithmetic branching program.\nA blackbox test is essentially the same as finding a hitting-set -- a set of points such that any nonzero polynomial\nevaluates to a nonzero value on at least one of the points in the set. \nThis work concerns finding hitting-sets for a special model, called read-once \noblivious arithmetic branching programs (ROABP).\n\nAn \\emph{arithmetic branching program (ABP)} is a directed layered graph, with edges going from a layer \nof vertices to the next layer. \nThe first and the last layers have one vertex each, called the source and the sink. \nEach edge of the graph has a label, which is a simple polynomial, for example a univariate polynomial. \nFor any path $p$, its weight is defined to be the product of labels on all the edges in $p$.\nThe ABP is said to compute a polynomial which is the sum of weights of all the paths from the source\nto the sink.\nABPs are a strong model for computing polynomials. \nIt is known that for any arithmetic circuit with polynomially bounded degree,\none can find an ABP of quasi-polynomial size computing the same polynomial (see for example~\\cite{Koi12}).\nApart from its size, another important parameter for an ABP is its width. \nThe width of an ABP is the maximum number of vertices in any layer of the associated graph.\nEven when the the width is restricted to a constant, the ABP model is quite powerful.\nBen-Or and Cleve~\\cite{BOC92} have shown that width-$3$ ABPs have the same expressive power as arithmetic formulas.\n\n\nAn ABP is called a \\emph{read-once oblivious ABP or ROABP} if every variable occurs in at most one layer of edges in the ABP.\nFor an ROABP, one can assume without loss of generality that any variable occurs in exactly one layer of edges. \nThe order of the variables in consecutive layers is said to be the \\emph{variable order} of the ROABP.\nThe read-once property severely restricts the power of the ABP. \nThere are polynomials known which can be computed by a simple depth-$3$ ($\\Sigma \\Pi \\Sigma$)\n circuit but require an exponential size ROABP~\\cite{KNS15}.\nAlso note that there are polynomials which have a small ROABP in one variable order but require\nexponential size in another variable order.\nNisan~\\cite{Nis91} gave the exact characterization of the polynomials computed by width-$w$ ROABPs\nin a certain variable order. \nIn particular, they gave exponential lower bounds for this model. \nTheir work is actually on non-commutative ABPs but the same results also apply to ROABP.\n\nThe question of whitebox identity testing of ROABPs has been settled by Raz and Shpilka~\\cite{RS05},\nwho gave a polynomial time algorithm for this. \nHowever, though ROABPs are a relatively well-understood model,\nwe still do not have a polynomial time blackbox algorithm.\nThe blackbox question is studied with two variations: one where we know\nthe variable order of the ROABP and the other where we do not know it.\nFor known-order ROABPs, Forbes and Shpilka~\\cite{FS13} gave the first efficient blackbox test\nwith $(ndw)^{O(\\log n)}$ time complexity, where $n$ is the\nnumber of variables, $w$ is the width of the ROABP, and, $d$ is the individual degree bound of each variable.\nFor the unknown-order case, Forbes et al.~\\cite{FSS14} gave an \n$n^{O(d \\log w \\log n)}$-time blackbox test.\nObserve that their complexity is quasi-polynomial only when $d$ is small. \nSubsequently, Agrawal et al.~\\cite{AGKS15} removed the exponential dependence on the individual degree. \nThey gave an $(ndw)^{O(\\log n)}$-time blackbox test for the unknown-order case. \nNote that these results remain quasi-polynomial even in the case of constant width.\nStudying ROABPs has also led to PIT results for other computational models,\nfor example, sub-exponential size hitting-sets for depth-$3$ multilinear circuits \\cite{OSV15}\nand sub-exponential time whitebox test for read-$k$ oblivious ABPs \\cite{AFSSV15}.\nIt is possible that the results and techniques for ROABPs can help solve the PIT problem for more \ngeneral models.\n\nAnother motivation to study ROABPs comes from their\nboolean analogues, called read-once ordered branching programs (ROBP).\nROBPs have been studied extensively, with regard to the $\\RL$ versus $\\L$ question \n(randomized log-space versus log-space).\nThe problem of finding hitting-sets for ROABP can be viewed as an analogue of finding\npseudorandom generators (PRG) for ROBP.\nA pseudorandom generator for a boolean function $f$ is\n an algorithm which can generate a probability distribution \n(with a small sample space) with the property that $f$ cannot distinguish it from the uniform random distribution\n (see \\cite{AB09} for details). \nConstructing an optimal PRG for ROBP, i.e., with $O(\\log n)$ seed length or polynomial size sample space,\nwould imply $\\RL = \\L$.\nThis question has similar results as those for PIT of ROABPs, \n\nthough no connection is known between the two questions. \nThe best known PRG is of seed length $O(\\log^2 n)$ \n($n^{O(\\log n)}$ size sample space),\nwhen variable order is known \\cite{N90,INW94, RR99}.\nOn the other hand, in the unknown-order case, the best known seed length\nis of size $n^{1/2 + o(1)}$ \\cite{IMZ12}.\nFinding an $O(\\log n)$-seed PRG even for constant-width known-order ROBPs has been a challenging open question.\n\n\nOur first result addresses the analogous question in the arithmetic setting. \nWe give the first polynomial time blackbox test for constant-width known-order ROABPs.\nHowever, it works only for zero or large characteristic fields.\nOur idea is inspired from the pseudorandom construction of Impagliazzo, Nisan and Wigderson~\\cite{INW94} for ROBPs. \nWhile their result does not give better PRGs for the constant-width case, we are able to achieve this in\nthe arithmetic setting.\n\n\\begin{theorem*}[Theorem~\\ref{thm:knownROABPhs}]\nLet $\\mathcal{C}$ be the class of $n$-variate, individual degree~$d$ polynomials in ${\\mathbb F}[{\\boldsymbol x}]$\ncomputed by a width-$w$ ROABP in the variable order $(x_1, x_2, \\dots, x_n)$.\nThen there is a $dn^{O(\\log w)}$-time hitting-set for $\\mathcal{C}$,\nwhen ${\\operatorname{char}}({\\mathbb F}) = 0$ or ${\\operatorname{char}}({\\mathbb F}) >ndw^{\\log n }$.\n\\end{theorem*}\n\nOur test actually works for any width. \nIts time complexity is better than the previous results on ROABP, when $w < n$ and is same in the other case.\nOur main technique uses the notion of rank of the partial derivative matrix defined by Nisan~\\cite{Nis91}. \nWe show that for a nonzero bivariate polynomial $f(x_1,x_2)$ computed by a width-$w$ ROABP, \nthe univariate polynomial $f(t^w, t^w+t^{w-1})$ is nonzero. \nOur argument is that any bivariate polynomial which becomes zero on $(t^w, t^w+t^{w-1})$\nhas rank more than $w$, while a polynomial computed by a width-$w$ ROABP has rank $w$ or less.\nThen, we use the map $(x_1,x_2) \\mapsto (t^w, t^w+t^{w-1})$ recursively in $\\log n$ rounds \nto achieve the above mentioned hitting-set.\nOur technique has a crucial difference from previous works on ROABPs\n\\cite{FSS14,FS13,AGKS15}.\nThe basic building block in all the previous techniques is a monomial map,\ni.e., each variable is mapped to a univariate monomial. \nOn the other hand we use a polynomial map.\nOur approach can potentially lead to a polynomial time hitting-set for ROABPs.\nThe goal would be to obtain a univariate $n$-tuple $(p_1(t), \\dots, p_n(t))$,\nsuch that any polynomial which becomes zero on $(p_1(t), \\dots, p_n(t))$ must have rank or evaluation dimension\nhigher than $w$.\nWe conjecture that $(t^r, (t+1)^r, \\dots, (t+n-1)^r)$ is one such tuple,\nwhere $r$ is polynomially large (Conjecture~\\ref{con:polyROABP}).\n\nIt is also possible that our ideas for the arithmetic setting can help\nconstructing an optimal PRG for constant-width ROBP.\n\n\n\nOur second result is for a special case of ROABPs, called commutative ROABPs. \nAn ROABP is commutative if its edge layers can be exchanged without affecting the polynomial computed. \nIn particular, if all paths from the source to the sink are vertex disjoint, then the ROABP is commutative.\nNote that for a commutative ROABP, knowing the variable order is irrelevant. \nCommutative ROABPs have slightly better hitting-sets than the general case, but still no\npolynomial time hitting-set is known. \nThe previously best known hitting-set for them has\ntime complexity $d^{O(\\log w)}(nw)^{O(\\log \\log w)}$ \\cite{FSS14}.\nWe improve this to $(n {d} w)^{O(\\log \\log w)}$.\n\n\\begin{theorem*}[Theorem~\\ref{thm:commROABPhs}]\nThere is an $(n {d} w)^{O(\\log \\log w)}$-time hitting-set for $n$-variate commutative ROABPs\nwith width $w$ and individual degree ${d}$.\n\\end{theorem*}\n\nTo get this result we follow the approach of Forbes et al.~\\cite{FSS14}, which \nuses the notion of rank concentration. \nWe achieve rank concentration more efficiently using the basis isolation technique of Agrawal et al.~\\cite{AGKS15}.\nThe same technique also yields a more efficient concentration in depth-$3$ set-multilinear circuits \n(see Section~\\ref{sec:prelim} for the definition).\nHowever, it is not clear if it gives better hitting-sets for them.\nThe best known hitting-set for them has complexity $n^{O(\\log n)}$ \\cite{ASS13}.\n\n\n\\section{Preliminaries}\n\\label{sec:prelim}\n\n\\subsection{Definitions and Notations}\n\n${\\mathbb N}$~denotes the set of all\nnon-negative integers, i.e., $\\{0,1,2,\\dots \\}$.\n$[n]$~denotes the set $\\{1,2, \\dots, n\\}$.\n$[\\![d]\\!]$~denotes the set $\\{0,1, \\dots, d\\}$. \n${\\boldsymbol x}$ will denote a set of variables, usually the set \n$\\{x_1, x_2, \\dots, x_n\\}$.\nFor a set of $n$ variables ${\\boldsymbol x}$\nand for an exponent ${\\boldsymbol a} = (a_1, a_2, \\dots, a_n) \\in {\\mathbb N}^n$,\n${\\boldsymbol x}^{\\boldsymbol a}$ will denote the monomial $\\prod_{i=1}^n x_i^{a_i}$.\nThe \\emph{support} of a monomial ${\\boldsymbol x}^{\\boldsymbol a}$, denoted by ${\\operatorname{Supp}}({\\boldsymbol a})$, \nis the set of \\index{support of a monomial, ${\\operatorname{Supp}}(\\cdot)$}\nvariables appearing in that monomial, i.e.,\n$ \\{x_i \\mid i \\in [n], a_i > 0\\}$. \nThe \\emph{support size} of a monomial is the cardinality of its support, \ndenoted by ${\\operatorname{supp}}({\\boldsymbol a})$. \nA monomial is said to be $\\ell$-support if its support size is $\\ell$.\nFor a polynomial $P({\\boldsymbol x})$, the coefficient of a monomial ${\\boldsymbol x}^{\\boldsymbol a}$ in $P({\\boldsymbol x})$ \nis denoted by ${\\operatorname{coef}}_P({\\boldsymbol x}^{\\boldsymbol a})$. \\index{coefficient of a monomial, ${\\operatorname{coef}}_P(\\cdot)$}\nIn particular, ${\\operatorname{coef}}_P(1)$ denotes the constant term of the polynomial $P$.\n\nFor a monomial ${\\boldsymbol x}^{\\boldsymbol a}$, $\\sum_i a_i$ is said to be its {\\em degree} and \n$a_i$ is said to be its {\\em degree in variable $x_i$} for each $i$.\nSimilarly for a polynomial $P$, its degree (or degree in $x_i$) is the maximum degree \n(or maximum degree in $x_i$) of any monomial in $P$ with a nonzero coefficient. \n\n\n\n\nWe define the {\\em individual degree} of $P$ to be \n ${\\operatorname{indv-deg}}(P) = \\max_i\\{ \\deg_{x_i}(P)\\}$,\nwhere $\\deg_{x_i}$ denotes degree in $x_i$.\n\n\nTo better understand polynomials computed by ROABPs, we often use \npolynomials over an algebra ${\\mathbb A}$, i.e., polynomials whose coefficients \ncome from ${\\mathbb A}$. \n\n\n\n\n\n\n\n\n\nMatrix algebra is the vector space of matrices equipped with the \nmatrix product.\n${\\mathbb F}^{m \\times n}$ represents the set of all $m \\times n$ matrices over the field ${\\mathbb F}$.\nNote that the algebra of $w \\times w$ matrices, has dimension $w^2$.\n\n\n\n\nWe often view a vector/matrix with polynomial entries,\nas a polynomial with vector/matrix coefficients. \\index{polynomial over matrices}\nFor example,\n\n", "index": 1, "text": "$$ D(x,y)  = \n\\begin{pmatrix} 1+x & y - xy \\\\ x+y & 1 +xy \\end{pmatrix}= \n\\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} 1 + \n\\begin{pmatrix} 1 & 0 \\\\ 1 & 0 \\end{pmatrix} x + \n\\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix} y + \n\\begin{pmatrix} 0 & -1 \\\\ 0 & 1 \\end{pmatrix} xy.\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"D(x,y)=\\begin{pmatrix}1+x&amp;y-xy\\\\&#10;x+y&amp;1+xy\\end{pmatrix}=\\begin{pmatrix}1&amp;0\\\\&#10;0&amp;1\\end{pmatrix}1+\\begin{pmatrix}1&amp;0\\\\&#10;1&amp;0\\end{pmatrix}x+\\begin{pmatrix}0&amp;1\\\\&#10;1&amp;0\\end{pmatrix}y+\\begin{pmatrix}0&amp;-1\\\\&#10;0&amp;1\\end{pmatrix}xy.\" display=\"block\"><mrow><mrow><mrow><mi>D</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mrow><mn>1</mn><mo>+</mo><mi>x</mi></mrow></mtd><mtd columnalign=\"center\"><mrow><mi>y</mi><mo>-</mo><mrow><mi>x</mi><mo>\u2062</mo><mi>y</mi></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"center\"><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow></mtd><mtd columnalign=\"center\"><mrow><mn>1</mn><mo>+</mo><mrow><mi>x</mi><mo>\u2062</mo><mi>y</mi></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow><mo>=</mo><mrow><mrow><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr></mtable><mo>)</mo></mrow><mo>\u2062</mo><mn>1</mn></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr></mtable><mo>)</mo></mrow><mo>\u2062</mo><mi>x</mi></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>1</mn></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr></mtable><mo>)</mo></mrow><mo>\u2062</mo><mi>y</mi></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mrow><mo>-</mo><mn>1</mn></mrow></mtd></mtr><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mn>1</mn></mtd></mtr></mtable><mo>)</mo></mrow><mo>\u2062</mo><mi>x</mi><mo>\u2062</mo><mi>y</mi></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nAn equivalent representation of a width-$w$ ROABP can be \n\n\n\n", "itemtype": "equation", "pos": 17843, "prevtext": "\nHere, the ${\\operatorname{coef}}_D$ operator will return a matrix for any monomial,\nfor example, ${\\operatorname{coef}}_D(y)= \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}$. \nFor a polynomial $D({\\boldsymbol x}) \\in {\\mathbb A}[{\\boldsymbol x}]$ over an algebra, its \\index{polynomial over an algebra}\n{\\em coefficient space} is the space spanned by its coefficients. \\index{coefficient space}\n\nFor a matrix~$R$, $R(i,j)$ denotes its entry in the $i$-th row and $j$-th column.\n\n\n\nAs mentioned earlier, a deterministic blackbox PIT is equivalent to constructing a hitting-set.\nA set of points ${\\mathcal{H}} \\in {\\mathbb F}^n$ is called a \\emph{hitting-set}\nfor a class $\\mathcal{C}$ of $n$-variate polynomials if for any nonzero polynomial $P$\nin $\\mathcal{C}$, there exists a point in ${\\mathcal{H}}$ where $P$ evaluates to a nonzero\nvalue. \nAn $f(n)$-time hitting-set would mean that the hitting-set can be generated \nin time $f(n)$ for input size $n$.\n\n\n\n\n\\subsection{Arithmetic Branching Programs}\n\\label{sec:ABP}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn ABP is a directed graph with $q+1$ layers of vertices\n$\\{V_0,V_1, \\dots, V_{q}\\}$ and a start node $u$ \nand an end node $t$\nsuch that the edges are \nonly going from $u$ to $V_0$, $V_{i-1}$ to $V_i$ for any $i \\in [q]$ and\n$V_q$ to $t$. \nThe edges have univariate polynomials as their weights \nand as a convention, the edges going from $u$\nand those coming to $t$ have weights from the field ${\\mathbb F}$.\n\n\nThe ABP is said to compute the polynomial $C({\\boldsymbol x}) = \\sum_{p \\in {\\operatorname{paths}}(u,t)} \\prod_{e \\in p} W(e)$,\nwhere $W(e)$ is the weight of the edge $e$.\n\nThe ABP has width $w$ if ${\\lvert {V_i} \\rvert} \\leq w$ for all $i \\in [\\![q]\\!]$.\nWithout loss of generality we can assume ${\\lvert {V_i} \\rvert} = w$ for each $i \\in [\\![q]\\!]$.\n\n\n\nIt is well-known that the sum over all paths \nin a layered graph can be represented by an iterated matrix multiplication.\nTo see this, let the set of nodes in $V_i$ be $\\{v_{i,j} \\mid j \\in [w]\\}$.\nIt is easy to see that the polynomial computed by the ABP is the same as\n$U^{{\\mathsf T}} (\\prod_{i=1}^{q} D_i ) T $,\nwhere $U,T \\in {\\mathbb F}^{w \\times 1}$ \nand $D_i$ is a $w \\times w$ matrix for $1 \\leq i \\leq q$ such that \n\\begin{eqnarray*}\nU(\\ell) &=& W(u,v_{0,\\ell}) \\text{ for } 1 \\leq \\ell \\leq w\\\\\nD_i(k, \\ell) &=& W(v_{i-1,k},v_{i,\\ell}) \\text{ for } 1 \\leq \\ell,k \\leq w \\text{ and } 1 \\leq i \\leq q\\\\\nT(k) &=& W(v_{q,k},t) \\text{ for } 1 \\leq k \\leq w\n\\end{eqnarray*}\n\n\\subsubsection{Read-once Oblivious ABP} \nAn ABP is called a {\\em read-once oblivious ABP (ROABP)} \\index{read-once oblivious ABP (ROABP)}\nif the edge weights in different layers \nare univariate polynomials in distinct variables.\nFormally, the entries in $D_{i}$ come from ${\\mathbb F}[x_{\\pi(i)}]$\nfor all $i \\in [q]$, where $\\pi$ is a permutation on the set $[q]$.\n\n\nHere, $q$ is the same as $n$, the number of variables.\nThe order $(x_{\\pi(1)}, x_{\\pi(2)}, \\dots, x_{\\pi(n)})$ \nis said to be the variable order of the ROABP.\n\nViewing $D_i({x_{\\pi(i)}}) \\in {\\mathbb F}^{w \\times w}[x_{\\pi(i)}]$ as a polynomial over the matrix algebra,\nwe can write the polynomial computed by an ROABP as \n\n", "index": 3, "text": "$$C({\\boldsymbol x}) = U^{{\\mathsf T}} \n D_1(x_{\\pi(1)})  D_2(x_{\\pi(2)}) \\cdots D_n(x_{\\pi(n)}) T.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"C({\\boldsymbol{x}})=U^{{\\mathsf{T}}}D_{1}(x_{\\pi(1)})D_{2}(x_{\\pi(2)})\\cdots D%&#10;_{n}(x_{\\pi(n)})T.\" display=\"block\"><mrow><mrow><mrow><mi>C</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc99</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msup><mi>U</mi><mi>\ud835\uddb3</mi></msup><mo>\u2062</mo><msub><mi>D</mi><mn>1</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>\u03c0</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>D</mi><mn>2</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>\u03c0</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>D</mi><mi>n</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>\u03c0</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>T</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\n\nwhere $D_1 \\in {\\mathbb F}^{1 \\times w}[x_{\\pi(1)}]$,\n$D_i \\in {\\mathbb F}^{w \\times w}[x_{\\pi(i)}]$ for $2 \\leq i \\leq n-1$ \nand $D_n \\in {\\mathbb F}^{w \\times 1}[x_{\\pi(n)}]$.\n \n\n\n\\subsubsection{Commutative ROABP}  \n\nAn ROABP $U^{{\\mathsf T}} \\left( \\prod_{i=1}^{q} D_i \\right) T $\nis a commutative ROABP, if all $D_i$s are polynomials over a commutative subalgebra of\nthe matrix algebra. \nFor example, if the coefficients in the polynomials $D_i$s are all diagonal matrices. \nNote that the order of the variables becomes insignificant for a commutative ROABP.\nA polynomial computed by a commutative ROABP can be computed by an ROABP in any variable order.\n\n\\subsubsection{Set-multilinear Circuits}\n\\label{sec:setmulti}\nA depth-$3$ set-multilinear circuit is a circuit of the form\n\n", "itemtype": "equation", "pos": 18005, "prevtext": "\nAn equivalent representation of a width-$w$ ROABP can be \n\n\n\n", "index": 5, "text": "$$C({\\boldsymbol x}) = \n D_1(x_{\\pi(1)})  D_2(x_{\\pi(2)}) \\cdots D_n(x_{\\pi(n)}) ,$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"C({\\boldsymbol{x}})=D_{1}(x_{\\pi(1)})D_{2}(x_{\\pi(2)})\\cdots D_{n}(x_{\\pi(n)}),\" display=\"block\"><mrow><mrow><mrow><mi>C</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc99</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mi>D</mi><mn>1</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>\u03c0</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>D</mi><mn>2</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>\u03c0</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>D</mi><mi>n</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>\u03c0</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nwhere $l_{i,j}$s are linear polynomials and ${\\boldsymbol x}_1, {\\boldsymbol x}_2, \\dots, {\\boldsymbol x}_q$\nform of partition of ${\\boldsymbol x}$.\nIt is known that these circuits are subsumed by ROABPs~\\cite{FSS14}. \nHowever, they are incomparable to commutative ROABPs.\nConsider the corresponding polynomial over a $k$-dimensional algebra\n\n", "itemtype": "equation", "pos": 18874, "prevtext": "\n\nwhere $D_1 \\in {\\mathbb F}^{1 \\times w}[x_{\\pi(1)}]$,\n$D_i \\in {\\mathbb F}^{w \\times w}[x_{\\pi(i)}]$ for $2 \\leq i \\leq n-1$ \nand $D_n \\in {\\mathbb F}^{w \\times 1}[x_{\\pi(n)}]$.\n \n\n\n\\subsubsection{Commutative ROABP}  \n\nAn ROABP $U^{{\\mathsf T}} \\left( \\prod_{i=1}^{q} D_i \\right) T $\nis a commutative ROABP, if all $D_i$s are polynomials over a commutative subalgebra of\nthe matrix algebra. \nFor example, if the coefficients in the polynomials $D_i$s are all diagonal matrices. \nNote that the order of the variables becomes insignificant for a commutative ROABP.\nA polynomial computed by a commutative ROABP can be computed by an ROABP in any variable order.\n\n\\subsubsection{Set-multilinear Circuits}\n\\label{sec:setmulti}\nA depth-$3$ set-multilinear circuit is a circuit of the form\n\n", "index": 7, "text": "$$C({\\boldsymbol x}) = \\sum_{i=1}^k l_{i,1}({\\boldsymbol x}_1) \\; l_{i,2}({\\boldsymbol x}_2) \\cdots \\; l_{i,q}({\\boldsymbol x}_q) ,$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"C({\\boldsymbol{x}})=\\sum_{i=1}^{k}l_{i,1}({\\boldsymbol{x}}_{1})\\;l_{i,2}({%&#10;\\boldsymbol{x}}_{2})\\cdots\\;l_{i,q}({\\boldsymbol{x}}_{q}),\" display=\"block\"><mrow><mrow><mrow><mi>C</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc99</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mrow><msub><mi>l</mi><mrow><mi>i</mi><mo>,</mo><mn>1</mn></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc99</mi><mn>1</mn></msub><mo rspace=\"5.3pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>l</mi><mrow><mi>i</mi><mo>,</mo><mn>2</mn></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc99</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mpadded width=\"+2.8pt\"><mi mathvariant=\"normal\">\u22ef</mi></mpadded><mo>\u2062</mo><msub><mi>l</mi><mrow><mi>i</mi><mo>,</mo><mi>q</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc99</mi><mi>q</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nwhere $D_j = (l_{1,j},  l_{2,j}, \\dots, l_{k,j})$\nand the algebra product is coordinate-wise product.\nIt is easy to see that $C = (1,1, \\dots, 1) \\cdot  D$.\nNote that the polynomials $D_i$s are over a commutative algebra. \nHence, some of our techniques for commutative ROABPs also work for set-multilinear circuits.\n\n\\section{Hitting-set for Known-order ROABP}\n\n\\subsection{Bivariate ROABP} \\index{bivariate ROABP}\nTo construct a hitting-set for ROABPs, we start with the bivariate case.\nRecall that a bivariate ROABP is of the form\n$U^{\\mathsf T} D_1(x_1) D_2(x_2) T $,\nwhere $U,T \\in {\\mathbb F}^{w \\times 1}$, $D_1 \\in {\\mathbb F}^{w\\times w}[x_1]$ and \n$D_2 \\in {\\mathbb F}^{w\\times w}[x_2]$.\nIt is easy to see that \n a bivariate polynomial $f(x_1,x_2)$ computed\nby a width-$w$ ROABP can be written as $f(x_1,x_2) = \\sum_{r=1}^w g_r(x_1)h_r(x_2)$. \n\nTo give a hitting-set for this, we will use the notion of a {partial derivative matrix} defined by\nNisan \\cite{Nis91} in the context of lower bounds.\nLet $f \\in {\\mathbb F}[x_1, x_2]$ have its individual degree bounded by ${d}$.\nThe {\\em partial derivative matrix} $M_f$ for $f$ \\index{partial derivative matrix}\nis a $({d}+1)\\times({d}+1)$ matrix with \n\n", "itemtype": "equation", "pos": 19350, "prevtext": "\nwhere $l_{i,j}$s are linear polynomials and ${\\boldsymbol x}_1, {\\boldsymbol x}_2, \\dots, {\\boldsymbol x}_q$\nform of partition of ${\\boldsymbol x}$.\nIt is known that these circuits are subsumed by ROABPs~\\cite{FSS14}. \nHowever, they are incomparable to commutative ROABPs.\nConsider the corresponding polynomial over a $k$-dimensional algebra\n\n", "index": 9, "text": "$$D({\\boldsymbol x}) = D_1({\\boldsymbol x}_1) D_2({\\boldsymbol x}_2) \\cdots D_q({\\boldsymbol x}_q) ,$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"D({\\boldsymbol{x}})=D_{1}({\\boldsymbol{x}}_{1})D_{2}({\\boldsymbol{x}}_{2})%&#10;\\cdots D_{q}({\\boldsymbol{x}}_{q}),\" display=\"block\"><mrow><mrow><mrow><mi>D</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc99</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mi>D</mi><mn>1</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc99</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>D</mi><mn>2</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc99</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><msub><mi>D</mi><mi>q</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc99</mi><mi>q</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nfor all $i,j \\in { [\\![{d}]\\!] }$.\nIt is known that the rank of $M_f$\nis equal to the smallest possible width of an ROABP computing $f$ \\cite{Nis91}. \n\n\\begin{lemma}[rank $\\leq$ width]\n\\label{lem:rankwidth}\nFor any polynomial $f(x_1,x_2)= \\sum_{r=1}^w g_r(x_1)\nh_r(x_2)$, ${\\operatorname{rank}}(M_f) \\leq w$.\n\\end{lemma}\n\\begin{proof}\nLet us define $f_r = g_r h_r$, for all $r \\in [w]$. \nClearly, $M_f = \\sum_{r=1}^w M_{f_r}$, as $f = \\sum_{r=1}^w f_r$.\nWe will show that ${\\operatorname{rank}}(M_{f_r}) \\leq 1$, for all $r \\in [w]$. \nAs $f_r = g_r(x_1) h_r(x_2)$, its coefficients can be written as a product of \ncoefficients from $g_r$ and $h_r$, i.e.,\n\n", "itemtype": "equation", "pos": 20661, "prevtext": "\nwhere $D_j = (l_{1,j},  l_{2,j}, \\dots, l_{k,j})$\nand the algebra product is coordinate-wise product.\nIt is easy to see that $C = (1,1, \\dots, 1) \\cdot  D$.\nNote that the polynomials $D_i$s are over a commutative algebra. \nHence, some of our techniques for commutative ROABPs also work for set-multilinear circuits.\n\n\\section{Hitting-set for Known-order ROABP}\n\n\\subsection{Bivariate ROABP} \\index{bivariate ROABP}\nTo construct a hitting-set for ROABPs, we start with the bivariate case.\nRecall that a bivariate ROABP is of the form\n$U^{\\mathsf T} D_1(x_1) D_2(x_2) T $,\nwhere $U,T \\in {\\mathbb F}^{w \\times 1}$, $D_1 \\in {\\mathbb F}^{w\\times w}[x_1]$ and \n$D_2 \\in {\\mathbb F}^{w\\times w}[x_2]$.\nIt is easy to see that \n a bivariate polynomial $f(x_1,x_2)$ computed\nby a width-$w$ ROABP can be written as $f(x_1,x_2) = \\sum_{r=1}^w g_r(x_1)h_r(x_2)$. \n\nTo give a hitting-set for this, we will use the notion of a {partial derivative matrix} defined by\nNisan \\cite{Nis91} in the context of lower bounds.\nLet $f \\in {\\mathbb F}[x_1, x_2]$ have its individual degree bounded by ${d}$.\nThe {\\em partial derivative matrix} $M_f$ for $f$ \\index{partial derivative matrix}\nis a $({d}+1)\\times({d}+1)$ matrix with \n\n", "index": 11, "text": "$$M_f(i,j) = {\\operatorname{coef}}_f(x_1^i x_2^j) \\in {\\mathbb F},$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"M_{f}(i,j)={\\operatorname{coef}}_{f}(x_{1}^{i}x_{2}^{j})\\in{\\mathbb{F}},\" display=\"block\"><mrow><mrow><mrow><msub><mi>M</mi><mi>f</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mo>coef</mo><mi>f</mi></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msubsup><mi>x</mi><mn>1</mn><mi>i</mi></msubsup><mo>\u2062</mo><msubsup><mi>x</mi><mn>2</mn><mi>j</mi></msubsup></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mi>\ud835\udd3d</mi></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nNow, it is easy to see that \n", "itemtype": "equation", "pos": 21385, "prevtext": "\nfor all $i,j \\in { [\\![{d}]\\!] }$.\nIt is known that the rank of $M_f$\nis equal to the smallest possible width of an ROABP computing $f$ \\cite{Nis91}. \n\n\\begin{lemma}[rank $\\leq$ width]\n\\label{lem:rankwidth}\nFor any polynomial $f(x_1,x_2)= \\sum_{r=1}^w g_r(x_1)\nh_r(x_2)$, ${\\operatorname{rank}}(M_f) \\leq w$.\n\\end{lemma}\n\\begin{proof}\nLet us define $f_r = g_r h_r$, for all $r \\in [w]$. \nClearly, $M_f = \\sum_{r=1}^w M_{f_r}$, as $f = \\sum_{r=1}^w f_r$.\nWe will show that ${\\operatorname{rank}}(M_{f_r}) \\leq 1$, for all $r \\in [w]$. \nAs $f_r = g_r(x_1) h_r(x_2)$, its coefficients can be written as a product of \ncoefficients from $g_r$ and $h_r$, i.e.,\n\n", "index": 13, "text": "$${\\operatorname{coef}}_{f_r}(x_1^i x_2^j) = {\\operatorname{coef}}_{g_r}(x_1^i) {\\operatorname{coef}}_{h_r}(x_2^j).$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{f_{r}}(x_{1}^{i}x_{2}^{j})={\\operatorname{coef}}_{g_{r}%&#10;}(x_{1}^{i}){\\operatorname{coef}}_{h_{r}}(x_{2}^{j}).\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>f</mi><mi>r</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msubsup><mi>x</mi><mn>1</mn><mi>i</mi></msubsup><mo>\u2062</mo><msubsup><mi>x</mi><mn>2</mn><mi>j</mi></msubsup></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><msub><mo>coef</mo><msub><mi>g</mi><mi>r</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>x</mi><mn>1</mn><mi>i</mi></msubsup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2062</mo><mrow><msub><mo>coef</mo><msub><mi>h</mi><mi>r</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>x</mi><mn>2</mn><mi>j</mi></msubsup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nwhere $u_r,v_r \\in {\\mathbb F}^{d+1}$ with \n\n$u_r = ({\\operatorname{coef}}_{g_r}(x_1^i))_{i=0}^d$\nand $v_r = ({\\operatorname{coef}}_{h_r}(x_2^i))_{i=0}^d$.\n\n\n\nThus, ${\\operatorname{rank}}(M_{f_r}) \\leq 1$ and ${\\operatorname{rank}}(M_f) \\leq w$.\n\\end{proof}\nOne can also show that if ${\\operatorname{rank}}(M_f) =w$ then\nthere exists a width-$w$ ROABP computing $f$.\nWe skip this proof as we will not need it. \nNow, using the above lemma we give a hitting-set\nfor bivariate ROABPs. \n\n\\begin{lemma}\n\\label{lem:bivariatehs}\nLet ${\\operatorname{char}}({\\mathbb F}) =0$, or ${\\operatorname{char}}({\\mathbb F}) >d$.\nLet $f(x_1,x_2)= \\sum_{r=1}^w g_r(x_1) h_r(x_2)$ be a nonzero bivariate polynomial over ${\\mathbb F}$\nwith individual degree $d$. \nThen $f(t^w, t^w+t^{w-1}) \\neq 0$.\n\\end{lemma}\n\\begin{proof}\nLet $f'(t)$ be the polynomial after the substitution, i.e., $f' = f(t^w, t^w+t^{w-1})$.\nAny monomial $x_1^ix_2^j$ will be mapped to the polynomial $t^{wi} (t^w+t^{w-1})^j$,\nunder the mentioned substitution. \nThe highest power of $t$ coming from this polynomial is $t^{w(i+j)}$. \nWe will cluster together all the monomials for which this highest power is the same,\ni.e., $i+j$ is the same. \nThe coefficients corresponding to any such cluster of monomials will\nform a {\\em diagonal} in $M_f$. The set $\\{M_f(i,j) \\mid i +j =k\\}$\nis defined to be the \\emph{$k$-th diagonal} of $M_f$, for all $0 \\leq k \\leq 2d$.\nLet $\\ell$ be the highest number such that $\\ell$-th diagonal has\nat least one nonzero element, i.e.,\n\n", "itemtype": "equation", "pos": 21531, "prevtext": "\nNow, it is easy to see that \n", "index": 15, "text": "$$M_{f_r} = u_r v_r^{{\\mathsf T}},$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"M_{f_{r}}=u_{r}v_{r}^{{\\mathsf{T}}},\" display=\"block\"><mrow><mrow><msub><mi>M</mi><msub><mi>f</mi><mi>r</mi></msub></msub><mo>=</mo><mrow><msub><mi>u</mi><mi>r</mi></msub><mo>\u2062</mo><msubsup><mi>v</mi><mi>r</mi><mi>\ud835\uddb3</mi></msubsup></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nAs ${\\operatorname{rank}}(M_f) \\leq w$ (from Lemma~\\ref{lem:rankwidth}),\nwe claim that the $\\ell$-th diagonal has at most $w$ nonzero elements.\nTo see this, let $\\{(i_1,j_1),(i_2,j_2), \\dots, (i_{w'}, j_{w'})\\}$\nbe the set of indices where the $\\ell$-th\ndiagonal of $M_f$ has nonzero elements, i.e., the set $\\{(i,j) \\mid M_f(i,j) \\neq 0, \\; i+j = \\ell \\}$.\nAs $M_f(i,j) =0$ for any $i+j > \\ell$, it is easy to see that \nthe rows $\\{M_f(i_1), M_f(i_2), \\dots, M_f(i_{w'})\\}$ are linearly independent. \nThus, $w' \\leq {\\operatorname{rank}}(M_f) \\leq w$.\n\nNow, we claim that there exists an $r$ with $w(\\ell-1) < r \\leq w \\ell $\nsuch that ${\\operatorname{coef}}_{f'}(t^r) \\neq 0$. \nTo see this, first observe that the highest power of $t$\nwhich any monomial $x_1^ix_2^j$ with $i+ j < \\ell$ can contribute\nis $t^{w(\\ell-1)}$.\nThus, for any $w(\\ell-1) < r \\leq w \\ell$, the term $t^r$ can come only from\n the monomials $x_1^ix_2^j$ with $i+ j \\geq \\ell$.\n\nWe can ignore the monomials $x_1^ix_2^j$ with $i+j > \\ell$ as ${\\operatorname{coef}}_f(x_1^ix_2^j)=M_f(i,j)=0$, when $i+j > \\ell$. \nNow, for any $i+j =\\ell$, \nthe monomial $x_1^i x_2^j$ goes to \n\n", "itemtype": "equation", "pos": 23082, "prevtext": "\nwhere $u_r,v_r \\in {\\mathbb F}^{d+1}$ with \n\n$u_r = ({\\operatorname{coef}}_{g_r}(x_1^i))_{i=0}^d$\nand $v_r = ({\\operatorname{coef}}_{h_r}(x_2^i))_{i=0}^d$.\n\n\n\nThus, ${\\operatorname{rank}}(M_{f_r}) \\leq 1$ and ${\\operatorname{rank}}(M_f) \\leq w$.\n\\end{proof}\nOne can also show that if ${\\operatorname{rank}}(M_f) =w$ then\nthere exists a width-$w$ ROABP computing $f$.\nWe skip this proof as we will not need it. \nNow, using the above lemma we give a hitting-set\nfor bivariate ROABPs. \n\n\\begin{lemma}\n\\label{lem:bivariatehs}\nLet ${\\operatorname{char}}({\\mathbb F}) =0$, or ${\\operatorname{char}}({\\mathbb F}) >d$.\nLet $f(x_1,x_2)= \\sum_{r=1}^w g_r(x_1) h_r(x_2)$ be a nonzero bivariate polynomial over ${\\mathbb F}$\nwith individual degree $d$. \nThen $f(t^w, t^w+t^{w-1}) \\neq 0$.\n\\end{lemma}\n\\begin{proof}\nLet $f'(t)$ be the polynomial after the substitution, i.e., $f' = f(t^w, t^w+t^{w-1})$.\nAny monomial $x_1^ix_2^j$ will be mapped to the polynomial $t^{wi} (t^w+t^{w-1})^j$,\nunder the mentioned substitution. \nThe highest power of $t$ coming from this polynomial is $t^{w(i+j)}$. \nWe will cluster together all the monomials for which this highest power is the same,\ni.e., $i+j$ is the same. \nThe coefficients corresponding to any such cluster of monomials will\nform a {\\em diagonal} in $M_f$. The set $\\{M_f(i,j) \\mid i +j =k\\}$\nis defined to be the \\emph{$k$-th diagonal} of $M_f$, for all $0 \\leq k \\leq 2d$.\nLet $\\ell$ be the highest number such that $\\ell$-th diagonal has\nat least one nonzero element, i.e.,\n\n", "index": 17, "text": "$$\\ell = \\max \\{i+j \\mid M_f(i,j) \\neq 0\\}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m1\" class=\"ltx_Math\" alttext=\"\\ell=\\max\\{i+j\\mid M_{f}(i,j)\\neq 0\\}.\" display=\"block\"><mrow><mrow><mi mathvariant=\"normal\">\u2113</mi><mo>=</mo><mrow><mi>max</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mi>i</mi><mo>+</mo><mi>j</mi></mrow><mo>\u2223</mo><mrow><mrow><msub><mi>M</mi><mi>f</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2260</mo><mn>0</mn></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nHence, for any $0 \\leq p < w$,  \n\n", "itemtype": "equation", "pos": 24275, "prevtext": "\nAs ${\\operatorname{rank}}(M_f) \\leq w$ (from Lemma~\\ref{lem:rankwidth}),\nwe claim that the $\\ell$-th diagonal has at most $w$ nonzero elements.\nTo see this, let $\\{(i_1,j_1),(i_2,j_2), \\dots, (i_{w'}, j_{w'})\\}$\nbe the set of indices where the $\\ell$-th\ndiagonal of $M_f$ has nonzero elements, i.e., the set $\\{(i,j) \\mid M_f(i,j) \\neq 0, \\; i+j = \\ell \\}$.\nAs $M_f(i,j) =0$ for any $i+j > \\ell$, it is easy to see that \nthe rows $\\{M_f(i_1), M_f(i_2), \\dots, M_f(i_{w'})\\}$ are linearly independent. \nThus, $w' \\leq {\\operatorname{rank}}(M_f) \\leq w$.\n\nNow, we claim that there exists an $r$ with $w(\\ell-1) < r \\leq w \\ell $\nsuch that ${\\operatorname{coef}}_{f'}(t^r) \\neq 0$. \nTo see this, first observe that the highest power of $t$\nwhich any monomial $x_1^ix_2^j$ with $i+ j < \\ell$ can contribute\nis $t^{w(\\ell-1)}$.\nThus, for any $w(\\ell-1) < r \\leq w \\ell$, the term $t^r$ can come only from\n the monomials $x_1^ix_2^j$ with $i+ j \\geq \\ell$.\n\nWe can ignore the monomials $x_1^ix_2^j$ with $i+j > \\ell$ as ${\\operatorname{coef}}_f(x_1^ix_2^j)=M_f(i,j)=0$, when $i+j > \\ell$. \nNow, for any $i+j =\\ell$, \nthe monomial $x_1^i x_2^j$ goes to \n\n", "index": 19, "text": "$$t^{w(\\ell -j)} (t^w+t^{w-1})^j = \\sum_{p=0}^j {j \\choose p} t^{w\\ell -p}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10.m1\" class=\"ltx_Math\" alttext=\"t^{w(\\ell-j)}(t^{w}+t^{w-1})^{j}=\\sum_{p=0}^{j}{j\\choose p}t^{w\\ell-p}.\" display=\"block\"><mrow><mrow><mrow><msup><mi>t</mi><mrow><mi>w</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">\u2113</mi><mo>-</mo><mi>j</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></msup><mo>\u2062</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>t</mi><mi>w</mi></msup><mo>+</mo><msup><mi>t</mi><mrow><mi>w</mi><mo>-</mo><mn>1</mn></mrow></msup></mrow><mo stretchy=\"false\">)</mo></mrow><mi>j</mi></msup></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>p</mi><mo>=</mo><mn>0</mn></mrow><mi>j</mi></munderover><mrow><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mi>j</mi><mi>p</mi></mfrac><mo>)</mo></mrow><mo>\u2062</mo><msup><mi>t</mi><mrow><mrow><mi>w</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo>-</mo><mi>p</mi></mrow></msup></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": " \nWriting this in the matrix form we get \n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nHence, for any $0 \\leq p < w$,  \n\n", "index": 21, "text": "$${\\operatorname{coef}}_{f'}(t^{w \\ell -p}) = \\sum_{a=1}^{w'} M_f(i_a, j_a) {j_a \\choose p}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{f^{\\prime}}(t^{w\\ell-p})=\\sum_{a=1}^{w^{\\prime}}M_{f}(i%&#10;_{a},j_{a}){j_{a}\\choose p}.\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msup><mi>f</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>t</mi><mrow><mrow><mi>w</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo>-</mo><mi>p</mi></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>a</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>w</mi><mo>\u2032</mo></msup></munderover><mrow><msub><mi>M</mi><mi>f</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mi>a</mi></msub><mo>,</mo><msub><mi>j</mi><mi>a</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><msub><mi>j</mi><mi>a</mi></msub><mi>p</mi></mfrac><mo>)</mo></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nwhere $C$ is a $w' \\times w$ matrix with $C(a,b) = {j_a \\choose b-1}$,\nfor all $a \\in [w']$ and $b \\in [w]$.\n\n\n\nIf all the rows of $C$ are linearly independent\nthen clearly, ${\\operatorname{coef}}_{f'}(t^r) \\neq 0$ for some $w(\\ell-1) < r \\leq w \\ell $.\nWe show the linear independence in Claim~\\ref{cla:independentRows}.\n\n\nTo show this linear independence we need to assume that the numbers $\\{j_a\\}_a$\nare all distinct. Hence, we need the field characteristic\nto be zero or strictly greater than $d$,\nas $j_a$ can be as high as $d$ for some $a \\in [w']$.  \n\n\n\\begin{claim}\n\\label{cla:independentRows}\nLet $C$ be a $w \\times w$ matrix with $C(a,b) = {j_a \\choose b-1}$,\nfor all $a \\in [w]$ and $b \\in [w]$, where\n$\\{j_a\\}_a$ are all distinct numbers. Then $C$ has full rank. \n\\end{claim}\n\\begin{proof}\nWe will show that for any nonzero vector $\\alpha := (\\alpha_1, \\alpha_2 \\dots, \\alpha_w) \\in {\\mathbb F}^{w\\times 1}$, \n$C \\alpha \\neq 0$. \nConsider the polynomial $h(y) = \\sum_{b=1}^w \\alpha_b \\frac{y(y-1) \\cdots (y-b+2)}{(b-1)!}$.\nAs $h(y)$ is a nonzero polynomial with degree bounded by $w-1$, it can have at most $w-1$ roots. \nThus, there exists an $a \\in [w]$ such that \n$h(j_a) = \\sum_{b=1}^w \\alpha_b {j_a \\choose b-1} \\neq 0$.\n\\end{proof}\n\n\\end{proof}\nAs mentioned above, the hitting-set proof works only when\nthe field characteristic is zero or greater than $d$. \nWe given an example over a small characteristic field,\nwhich demonstrates that the problem is not with the proof technique,\nbut with the hitting-set itself.\nLet the field characteristic be $2$.\nConsider the polynomial $f(x_1,x_2) = x_2^{2} + x_1^{2} + x_1$.\nClearly, $f$ has a width-$2$ ROABP. \nFor a width-$2$ ROABP, the map in Lemma~\\ref{lem:bivariatehs}\nwould be $(x_1,x_2) \\mapsto (t^2 , t^2+t)$. \nHowever, $f(t^2, t^2+t) =0$ (over ${\\mathbb F}_2$).\nHence, the hitting-set does not work.\n \nNow, we move on to getting a hitting-set for an $n$-variate ROABP.\n\n\n\n\\comment{\nWe further extend Lemma~\\ref{lem:bivariatehs} to show that\nour hitting-set also preserves the coefficient \nspace of any vector polynomial computed by a bivariate ROABP.\nWe elaborate in the following lemma. \n\n\\begin{lemma}[Preserving Independence]\nLet ${\\operatorname{char}}({\\mathbb F}) > d$. \nLet $D_1 \\in {\\mathbb F}^{1 \\times w}[x_1]$ and $D_2 \\in {\\mathbb F}^{w \\times w}[x_2]$\nbe two matrices\nwith entries being degree $d$ univariate polynomials in $x_1$ and $x_2$, respectively. \nLet $G(x_1,x_2) := [g_1 \\; g_2 \\; \\dots \\; g_w] = D_1 D_2$  \nis such that the polynomials $\\{g_i(x_1,x_2)\\}_{i=1}^w$ are all\nlinearly independent. \nThen the polynomials $\\{g'_i\\}_{i=1}^w$\nare also linearly independent, where $g'_i(t) = g_i (t^w, t^w+t^{w+1})$. \n\\end{lemma}\n\\begin{proof}\n\n\\end{proof}\n}\n\n\n\n\n\\subsection{$n$-variate ROABP}\nObserve that the map given in Lemma~\\ref{lem:bivariatehs} works \nirrespective of the degree of the polynomial,\nas long as the field characteristic is large enough. \nWe plan to obtain a hitting-set for general $n$-variate ROABP\nby applying this map recursively. \n\nFor this, we use the standard divide and conquer technique. \nFirst, we make pairs of consecutive variables in the ROABP.\nFor each pair $(x_{2i-1}, x_{2i})$, we apply the map from Lemma~\\ref{lem:bivariatehs},\nusing a new variable $t_i$. \nThus, we go to $n/2$ variables from $n$ variables. \n\n\n\nIn Lemma~\\ref{lem:halving}, we show that after this substitution\nthe polynomial remains nonzero. Moreover, the new polynomial\ncan be computed by a width-$w$ ROABP. \nThus, we can again use the same map on pairs of new variables. \nBy repeating the halving procedure $\\log n$ times we get a univariate\npolynomial.\nIn each round the degree of the polynomial gets multiplied by $w$. \nHence, after $\\log n$ rounds, the degree of the univariate polynomial\nis bounded by $w^{\\log n}$ times the original degree. \n\nWithout loss of generality, let us assume that $n$ is a power of $2$.\n\n\n\n\n\n\\begin{lemma}[Halving the number of variables]\n\\label{lem:halving}\nLet ${\\operatorname{char}}({\\mathbb F})=0$, or ${\\operatorname{char}}({\\mathbb F}) > d$.\nLet $f({\\boldsymbol x})= D_1(x_1)D_2(x_2) \\cdots D_n(x_n)$ be a nonzero polynomial\ncomputed by a width-$w$ and individual degree-$d$ ROABP, where $D_1 \\in {\\mathbb F}^{1 \\times w}[x_1]$,\n$D_n \\in {\\mathbb F}^{w \\times 1}[x_n]$ and $D_i \\in {\\mathbb F}^{w \\times w}[x_i]$\nfor all $2 \\leq i \\leq n-1$. \nLet the map $\\phi \\colon {\\boldsymbol x} \\to {\\mathbb F}[{\\boldsymbol t}]$ be such that\nfor any index $1 \\leq i \\leq n/2$,\n\\begin{eqnarray*}\n\\phi(x_{2i-1}) &=& t_i^w, \\\\  \n\\phi(x_{2i}) &=& t_i^w + t_i^{w-1}. \n\\end{eqnarray*}\nThen $f(\\phi({\\boldsymbol x})) \\neq 0$.\nMoreover, the polynomial $f(\\phi({\\boldsymbol x})) \\in {\\mathbb F}[t_1,t_2, \\dots, t_{n/2}]$ \nis computed by a width-$w$ ROABP in the variable order $(t_1,t_2,\\dots, t_{n/2})$.\n\\end{lemma}\n\\begin{proof}\nLet us apply the map in $n/2$ rounds, i.e., \ndefine a sequence of polynomials $(f= f_0, f_1, \\dots, f_{n/2}=f(\\phi({\\boldsymbol x})))$ \nsuch that the polynomial $f_i$ is obtained by making the replacement\n$(x_{2i-1},x_{2i}) \\mapsto (\\phi(x_{2i-1}), \\phi(x_{2i}))$ in $f_{i-1}$\nfor each $1 \\leq i \\leq n/2$.\nWe will show that for each $1 \\leq i \\leq n/2$, \nif $f_{i-1} \\neq 0$ then $f_i \\neq 0$. \nClearly this proves the first part of the lemma. \n\nNote that $f_{i-1}$ is a polynomial over variables $\\{t_1,\\dots, t_{i-1}, x_{2i-1}, \\dots, x_n\\}$. \nAs $f_{i-1} \\neq 0$, \nthere exists a constant tuple $\\alpha \\in {\\mathbb F}^{n-i-1}$\nsuch that after replacing the variables $(t_1, \\dots, t_{i-1},$ $ x_{2i+1}, \\dots, x_{n})$\nwith $\\alpha$, $f_{i-1}$ remains nonzero.\nAfter this replacement we get a polynomial $f'_{i-1}$ in the variables $(x_{2i-1},x_{2i})$.\nAs $f$ is computed by the ROABP $D_1D_2 \\cdots D_n$,\nthe polynomial $f'_{i-1}$ can be written as $U^{{\\mathsf T}} D_{2i-1}(x_{2i-1}) D_{2i}(x_{2i}) T$\nfor some $U,T \\in {\\mathbb F}^{w \\times 1}$.\nIn other words, $f'_{i-1}$ has a bivariate ROABP of width $w$. \nThus, $f'_{i-1}(\\phi(x_{2i-1}), \\phi(x_{2i}) )$ is nonzero from Lemma~\\ref{lem:bivariatehs}. \nBut, $f'_{i-1}(\\phi(x_{2i-1}), \\phi(x_{2i}) )$\nis nothing but the polynomial obtained after \nreplacing the variables $(t_1, \\dots, t_{i-1}, x_{2i+1}, \\dots, x_{n})$ in $f_i$\nwith $\\alpha$. \nThus, $f_i$ is nonzero. This finishes the proof.\n\nNow, we argue that $f(\\phi({\\boldsymbol x}))$ has a width $w$ ROABP.\nLet $D'_i := D_{2i-1}(t_i^w) D_{2i}(t_i^w + t_i^{w-1})$\nfor all $1 \\leq i \\leq n/2$.\nClearly, $D'_1 D'_2 \\cdots D'_{n/2}$ is an ROABP computing $f(\\phi({\\boldsymbol x}))$ in variable order\n$(t_1,t_2, \\dots, t_{n/2})$,\nas ${D'}_1 \\in {\\mathbb F}^{1 \\times w}[t_1]$,\n${D'}_{n/2} \\in {\\mathbb F}^{w \\times 1}[t_{n/2}]$ and $D'_i \\in {\\mathbb F}^{w \\times w}[t_i]$\nfor all $2 \\leq i \\leq n/2-1$. \n\\end{proof}\n\n\n\n\n\n\n\\comment{\n\\begin{proof}\nWe will prove the lemma by an induction on number of variables. \n\n{\\em Base Case (n=2):} When there are only two variables,\nLemma~\\ref{lem:bivariatehs} proves the statement. \n\n{\\em Induction Hypothesis:} The statement is true for any $(n-2)$-variate ROABP. \n\n{\\em Induction Step:} We will prove the statement for the case of $n$ variables.\nLet $G(x_1,x_2) := [g_1 \\; g_2 \\; \\dots \\; g_w] = D_1D_2$\nand $H(x_3, x_4, \\dots, x_n) := [h_1 \\; h_2 \\; \\dots \\; h_w]^{{\\mathsf T}} = D_3D_4 \\cdots D_n$.\nClearly, $f = GH$.\nWe can assume that the polynomials $\\{g_i\\}_{i=1}^w$ are all linearly\nindependent\\footnote{The polynomials $\\{g_i\\}_i$ are said to be\n linearly independent if there is no nonzero constant vector $(\\alpha_i)_i$ with $\\sum_i \\alpha_i g_i = 0$.}. \nBecause if it is not true then, as we argue below, one can modify the ROABP to \nhave this property. \n\nWithout loss of generality, let $\\{g_1, g_2, \\dots, g_{w'}\\}$\nbe a maximal independent subset of $\\{g_1, g_2,$ $ \\dots, g_{w}\\}$ for some $w' \\leq w$. \nThat is, for any $w' < j\\leq w$,\n$g_j$ is in the linear span of $\\{g_i\\}_{i=1}^{w'}$.  \nThus, there exists a matrix $\\Gamma \\in {\\mathbb F}^{w' \\times w}$\nsuch that\n\n", "itemtype": "equation", "pos": 24522, "prevtext": " \nWriting this in the matrix form we get \n\n", "index": 23, "text": "$$ [{\\operatorname{coef}}_{f'}(t^{w \\ell}) \\; \\cdots \\; {\\operatorname{coef}}_{f'}(t^{w \\ell-w +1}) ]\n= [M_f(i_1,j_1) \\; \\cdots \\; M_f(i_{w'}, j_{w'})] C,\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m1\" class=\"ltx_Math\" alttext=\"[{\\operatorname{coef}}_{f^{\\prime}}(t^{w\\ell})\\;\\cdots\\;{\\operatorname{coef}}_%&#10;{f^{\\prime}}(t^{w\\ell-w+1})]=[M_{f}(i_{1},j_{1})\\;\\cdots\\;M_{f}(i_{w^{\\prime}}%&#10;,j_{w^{\\prime}})]C,\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">[</mo><mrow><mrow><mrow><msub><mo>coef</mo><msup><mi>f</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>t</mi><mrow><mi>w</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow></msup><mo rspace=\"5.3pt\" stretchy=\"false\">)</mo></mrow></mrow><mo>\u2061</mo><mpadded width=\"+2.8pt\"><mi mathvariant=\"normal\">\u22ef</mi></mpadded></mrow><mo>\u2062</mo><mrow><msub><mo>coef</mo><msup><mi>f</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>t</mi><mrow><mrow><mrow><mi>w</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo>-</mo><mi>w</mi></mrow><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">]</mo></mrow><mo>=</mo><mrow><mrow><mo stretchy=\"false\">[</mo><mrow><msub><mi>M</mi><mi>f</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mn>1</mn></msub><mo>,</mo><msub><mi>j</mi><mn>1</mn></msub><mo rspace=\"5.3pt\" stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mpadded width=\"+2.8pt\"><mi mathvariant=\"normal\">\u22ef</mi></mpadded><mo>\u2062</mo><msub><mi>M</mi><mi>f</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>i</mi><msup><mi>w</mi><mo>\u2032</mo></msup></msub><mo>,</mo><msub><mi>j</mi><msup><mi>w</mi><mo>\u2032</mo></msup></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><mi>C</mi></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nConsider the matrix $\\Gamma_1 \\in {\\mathbb F}^{w \\times w'}$ such that\n\n", "itemtype": "equation", "pos": 32647, "prevtext": "\nwhere $C$ is a $w' \\times w$ matrix with $C(a,b) = {j_a \\choose b-1}$,\nfor all $a \\in [w']$ and $b \\in [w]$.\n\n\n\nIf all the rows of $C$ are linearly independent\nthen clearly, ${\\operatorname{coef}}_{f'}(t^r) \\neq 0$ for some $w(\\ell-1) < r \\leq w \\ell $.\nWe show the linear independence in Claim~\\ref{cla:independentRows}.\n\n\nTo show this linear independence we need to assume that the numbers $\\{j_a\\}_a$\nare all distinct. Hence, we need the field characteristic\nto be zero or strictly greater than $d$,\nas $j_a$ can be as high as $d$ for some $a \\in [w']$.  \n\n\n\\begin{claim}\n\\label{cla:independentRows}\nLet $C$ be a $w \\times w$ matrix with $C(a,b) = {j_a \\choose b-1}$,\nfor all $a \\in [w]$ and $b \\in [w]$, where\n$\\{j_a\\}_a$ are all distinct numbers. Then $C$ has full rank. \n\\end{claim}\n\\begin{proof}\nWe will show that for any nonzero vector $\\alpha := (\\alpha_1, \\alpha_2 \\dots, \\alpha_w) \\in {\\mathbb F}^{w\\times 1}$, \n$C \\alpha \\neq 0$. \nConsider the polynomial $h(y) = \\sum_{b=1}^w \\alpha_b \\frac{y(y-1) \\cdots (y-b+2)}{(b-1)!}$.\nAs $h(y)$ is a nonzero polynomial with degree bounded by $w-1$, it can have at most $w-1$ roots. \nThus, there exists an $a \\in [w]$ such that \n$h(j_a) = \\sum_{b=1}^w \\alpha_b {j_a \\choose b-1} \\neq 0$.\n\\end{proof}\n\n\\end{proof}\nAs mentioned above, the hitting-set proof works only when\nthe field characteristic is zero or greater than $d$. \nWe given an example over a small characteristic field,\nwhich demonstrates that the problem is not with the proof technique,\nbut with the hitting-set itself.\nLet the field characteristic be $2$.\nConsider the polynomial $f(x_1,x_2) = x_2^{2} + x_1^{2} + x_1$.\nClearly, $f$ has a width-$2$ ROABP. \nFor a width-$2$ ROABP, the map in Lemma~\\ref{lem:bivariatehs}\nwould be $(x_1,x_2) \\mapsto (t^2 , t^2+t)$. \nHowever, $f(t^2, t^2+t) =0$ (over ${\\mathbb F}_2$).\nHence, the hitting-set does not work.\n \nNow, we move on to getting a hitting-set for an $n$-variate ROABP.\n\n\n\n\\comment{\nWe further extend Lemma~\\ref{lem:bivariatehs} to show that\nour hitting-set also preserves the coefficient \nspace of any vector polynomial computed by a bivariate ROABP.\nWe elaborate in the following lemma. \n\n\\begin{lemma}[Preserving Independence]\nLet ${\\operatorname{char}}({\\mathbb F}) > d$. \nLet $D_1 \\in {\\mathbb F}^{1 \\times w}[x_1]$ and $D_2 \\in {\\mathbb F}^{w \\times w}[x_2]$\nbe two matrices\nwith entries being degree $d$ univariate polynomials in $x_1$ and $x_2$, respectively. \nLet $G(x_1,x_2) := [g_1 \\; g_2 \\; \\dots \\; g_w] = D_1 D_2$  \nis such that the polynomials $\\{g_i(x_1,x_2)\\}_{i=1}^w$ are all\nlinearly independent. \nThen the polynomials $\\{g'_i\\}_{i=1}^w$\nare also linearly independent, where $g'_i(t) = g_i (t^w, t^w+t^{w+1})$. \n\\end{lemma}\n\\begin{proof}\n\n\\end{proof}\n}\n\n\n\n\n\\subsection{$n$-variate ROABP}\nObserve that the map given in Lemma~\\ref{lem:bivariatehs} works \nirrespective of the degree of the polynomial,\nas long as the field characteristic is large enough. \nWe plan to obtain a hitting-set for general $n$-variate ROABP\nby applying this map recursively. \n\nFor this, we use the standard divide and conquer technique. \nFirst, we make pairs of consecutive variables in the ROABP.\nFor each pair $(x_{2i-1}, x_{2i})$, we apply the map from Lemma~\\ref{lem:bivariatehs},\nusing a new variable $t_i$. \nThus, we go to $n/2$ variables from $n$ variables. \n\n\n\nIn Lemma~\\ref{lem:halving}, we show that after this substitution\nthe polynomial remains nonzero. Moreover, the new polynomial\ncan be computed by a width-$w$ ROABP. \nThus, we can again use the same map on pairs of new variables. \nBy repeating the halving procedure $\\log n$ times we get a univariate\npolynomial.\nIn each round the degree of the polynomial gets multiplied by $w$. \nHence, after $\\log n$ rounds, the degree of the univariate polynomial\nis bounded by $w^{\\log n}$ times the original degree. \n\nWithout loss of generality, let us assume that $n$ is a power of $2$.\n\n\n\n\n\n\\begin{lemma}[Halving the number of variables]\n\\label{lem:halving}\nLet ${\\operatorname{char}}({\\mathbb F})=0$, or ${\\operatorname{char}}({\\mathbb F}) > d$.\nLet $f({\\boldsymbol x})= D_1(x_1)D_2(x_2) \\cdots D_n(x_n)$ be a nonzero polynomial\ncomputed by a width-$w$ and individual degree-$d$ ROABP, where $D_1 \\in {\\mathbb F}^{1 \\times w}[x_1]$,\n$D_n \\in {\\mathbb F}^{w \\times 1}[x_n]$ and $D_i \\in {\\mathbb F}^{w \\times w}[x_i]$\nfor all $2 \\leq i \\leq n-1$. \nLet the map $\\phi \\colon {\\boldsymbol x} \\to {\\mathbb F}[{\\boldsymbol t}]$ be such that\nfor any index $1 \\leq i \\leq n/2$,\n\\begin{eqnarray*}\n\\phi(x_{2i-1}) &=& t_i^w, \\\\  \n\\phi(x_{2i}) &=& t_i^w + t_i^{w-1}. \n\\end{eqnarray*}\nThen $f(\\phi({\\boldsymbol x})) \\neq 0$.\nMoreover, the polynomial $f(\\phi({\\boldsymbol x})) \\in {\\mathbb F}[t_1,t_2, \\dots, t_{n/2}]$ \nis computed by a width-$w$ ROABP in the variable order $(t_1,t_2,\\dots, t_{n/2})$.\n\\end{lemma}\n\\begin{proof}\nLet us apply the map in $n/2$ rounds, i.e., \ndefine a sequence of polynomials $(f= f_0, f_1, \\dots, f_{n/2}=f(\\phi({\\boldsymbol x})))$ \nsuch that the polynomial $f_i$ is obtained by making the replacement\n$(x_{2i-1},x_{2i}) \\mapsto (\\phi(x_{2i-1}), \\phi(x_{2i}))$ in $f_{i-1}$\nfor each $1 \\leq i \\leq n/2$.\nWe will show that for each $1 \\leq i \\leq n/2$, \nif $f_{i-1} \\neq 0$ then $f_i \\neq 0$. \nClearly this proves the first part of the lemma. \n\nNote that $f_{i-1}$ is a polynomial over variables $\\{t_1,\\dots, t_{i-1}, x_{2i-1}, \\dots, x_n\\}$. \nAs $f_{i-1} \\neq 0$, \nthere exists a constant tuple $\\alpha \\in {\\mathbb F}^{n-i-1}$\nsuch that after replacing the variables $(t_1, \\dots, t_{i-1},$ $ x_{2i+1}, \\dots, x_{n})$\nwith $\\alpha$, $f_{i-1}$ remains nonzero.\nAfter this replacement we get a polynomial $f'_{i-1}$ in the variables $(x_{2i-1},x_{2i})$.\nAs $f$ is computed by the ROABP $D_1D_2 \\cdots D_n$,\nthe polynomial $f'_{i-1}$ can be written as $U^{{\\mathsf T}} D_{2i-1}(x_{2i-1}) D_{2i}(x_{2i}) T$\nfor some $U,T \\in {\\mathbb F}^{w \\times 1}$.\nIn other words, $f'_{i-1}$ has a bivariate ROABP of width $w$. \nThus, $f'_{i-1}(\\phi(x_{2i-1}), \\phi(x_{2i}) )$ is nonzero from Lemma~\\ref{lem:bivariatehs}. \nBut, $f'_{i-1}(\\phi(x_{2i-1}), \\phi(x_{2i}) )$\nis nothing but the polynomial obtained after \nreplacing the variables $(t_1, \\dots, t_{i-1}, x_{2i+1}, \\dots, x_{n})$ in $f_i$\nwith $\\alpha$. \nThus, $f_i$ is nonzero. This finishes the proof.\n\nNow, we argue that $f(\\phi({\\boldsymbol x}))$ has a width $w$ ROABP.\nLet $D'_i := D_{2i-1}(t_i^w) D_{2i}(t_i^w + t_i^{w-1})$\nfor all $1 \\leq i \\leq n/2$.\nClearly, $D'_1 D'_2 \\cdots D'_{n/2}$ is an ROABP computing $f(\\phi({\\boldsymbol x}))$ in variable order\n$(t_1,t_2, \\dots, t_{n/2})$,\nas ${D'}_1 \\in {\\mathbb F}^{1 \\times w}[t_1]$,\n${D'}_{n/2} \\in {\\mathbb F}^{w \\times 1}[t_{n/2}]$ and $D'_i \\in {\\mathbb F}^{w \\times w}[t_i]$\nfor all $2 \\leq i \\leq n/2-1$. \n\\end{proof}\n\n\n\n\n\n\n\\comment{\n\\begin{proof}\nWe will prove the lemma by an induction on number of variables. \n\n{\\em Base Case (n=2):} When there are only two variables,\nLemma~\\ref{lem:bivariatehs} proves the statement. \n\n{\\em Induction Hypothesis:} The statement is true for any $(n-2)$-variate ROABP. \n\n{\\em Induction Step:} We will prove the statement for the case of $n$ variables.\nLet $G(x_1,x_2) := [g_1 \\; g_2 \\; \\dots \\; g_w] = D_1D_2$\nand $H(x_3, x_4, \\dots, x_n) := [h_1 \\; h_2 \\; \\dots \\; h_w]^{{\\mathsf T}} = D_3D_4 \\cdots D_n$.\nClearly, $f = GH$.\nWe can assume that the polynomials $\\{g_i\\}_{i=1}^w$ are all linearly\nindependent\\footnote{The polynomials $\\{g_i\\}_i$ are said to be\n linearly independent if there is no nonzero constant vector $(\\alpha_i)_i$ with $\\sum_i \\alpha_i g_i = 0$.}. \nBecause if it is not true then, as we argue below, one can modify the ROABP to \nhave this property. \n\nWithout loss of generality, let $\\{g_1, g_2, \\dots, g_{w'}\\}$\nbe a maximal independent subset of $\\{g_1, g_2,$ $ \\dots, g_{w}\\}$ for some $w' \\leq w$. \nThat is, for any $w' < j\\leq w$,\n$g_j$ is in the linear span of $\\{g_i\\}_{i=1}^{w'}$.  \nThus, there exists a matrix $\\Gamma \\in {\\mathbb F}^{w' \\times w}$\nsuch that\n\n", "index": 25, "text": "\\begin{equation}\n\\label{eq:gg'}\nG = [g_1 \\; g_2 \\; \\dots \\; g_{w'}] \\Gamma.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"G=[g_{1}\\;g_{2}\\;\\dots\\;g_{w^{\\prime}}]\\Gamma.\" display=\"block\"><mrow><mrow><mi>G</mi><mo>=</mo><mrow><mrow><mo stretchy=\"false\">[</mo><mrow><mpadded width=\"+2.8pt\"><msub><mi>g</mi><mn>1</mn></msub></mpadded><mo>\u2062</mo><mpadded width=\"+2.8pt\"><msub><mi>g</mi><mn>2</mn></msub></mpadded><mo>\u2062</mo><mpadded width=\"+2.8pt\"><mi mathvariant=\"normal\">\u2026</mi></mpadded><mo>\u2062</mo><msub><mi>g</mi><msup><mi>w</mi><mo>\u2032</mo></msup></msub></mrow><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><mi mathvariant=\"normal\">\u0393</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nIt is easy to see that, \n\n", "itemtype": "equation", "pos": 32809, "prevtext": "\nConsider the matrix $\\Gamma_1 \\in {\\mathbb F}^{w \\times w'}$ such that\n\n", "index": 27, "text": "$$ \\Gamma_1 (i,j) = \\begin{cases} \n\t\t 1 & \\text{if } i = j, \\\\\n\t\t 0 & \\text{otherwise.}\n\\end{cases}$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m1\" class=\"ltx_Math\" alttext=\"\\Gamma_{1}(i,j)=\\begin{cases}1&amp;\\text{if }i=j,\\\\&#10;0&amp;\\text{otherwise.}\\end{cases}\" display=\"block\"><mrow><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mn>1</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>i</mi></mrow><mo>=</mo><mi>j</mi></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>0</mn></mtd><mtd columnalign=\"left\"><mtext>otherwise.</mtext></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nFrom Equations~(\\ref{eq:gg'}) and (\\ref{eq:g'g}), \nwe can write\n\n", "itemtype": "equation", "pos": 32936, "prevtext": "\nIt is easy to see that, \n\n", "index": 29, "text": "\\begin{equation}\n\\label{eq:g'g}\n[g_1 \\; g_2 \\; \\dots \\; g_{w'}] = G \\Gamma_1.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"[g_{1}\\;g_{2}\\;\\dots\\;g_{w^{\\prime}}]=G\\Gamma_{1}.\" display=\"block\"><mrow><mrow><mrow><mo stretchy=\"false\">[</mo><mrow><mpadded width=\"+2.8pt\"><msub><mi>g</mi><mn>1</mn></msub></mpadded><mo>\u2062</mo><mpadded width=\"+2.8pt\"><msub><mi>g</mi><mn>2</mn></msub></mpadded><mo>\u2062</mo><mpadded width=\"+2.8pt\"><mi mathvariant=\"normal\">\u2026</mi></mpadded><mo>\u2062</mo><msub><mi>g</mi><msup><mi>w</mi><mo>\u2032</mo></msup></msub></mrow><mo stretchy=\"false\">]</mo></mrow><mo>=</mo><mrow><mi>G</mi><mo>\u2062</mo><msub><mi mathvariant=\"normal\">\u0393</mi><mn>1</mn></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nLet us define $E_2 = D_2 \\Gamma_1$ and $E_3 = \\Gamma D_3$. \nClearly, the ROABP $D_1E_2E_3D_4 \\cdots D_n$ computes the polynomial\n$f$.\n\nNow, we move on to prove that $f$ remains nonzero under the map $\\phi$.\nLet us redefine $G(x_1,x_2) := [g_1 \\; g_2 \\; \\dots \\; g_{w'}] = D_1E_2$\nand $H(x_3, x_4, \\dots, x_n) := [h_1 \\; h_2 \\; \\dots \\; h_{w'}]^{{\\mathsf T}} = E_3D_4 \\cdots D_n$.\nFirst we apply the map $\\phi$ on the variables $\\{x_i\\}_{i=3}^n$. \nObserve that any $h_i$ is a polynomial computed by \nan $(n-2)$-variate ROABP of width $w$, as $h_i = e_i^{{\\mathsf T}} E_3 D_4 \\cdots D_n$,\nwhere $e_i$ is the $i$-th elementary unit vector.\nHence, by induction hypothesis, any nonzero $h_i$\nwould remain nonzero under the map $\\phi$.\nThus, \n", "itemtype": "equation", "pos": 33093, "prevtext": "\nFrom Equations~(\\ref{eq:gg'}) and (\\ref{eq:g'g}), \nwe can write\n\n", "index": 31, "text": "$$f = GH = G \\Gamma_1 \\Gamma H.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m1\" class=\"ltx_Math\" alttext=\"f=GH=G\\Gamma_{1}\\Gamma H.\" display=\"block\"><mrow><mrow><mi>f</mi><mo>=</mo><mrow><mi>G</mi><mo>\u2062</mo><mi>H</mi></mrow><mo>=</mo><mrow><mi>G</mi><mo>\u2062</mo><msub><mi mathvariant=\"normal\">\u0393</mi><mn>1</mn></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u0393</mi><mo>\u2062</mo><mi>H</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nThis means there exists a monomial ${{\\boldsymbol t}^{\\boldsymbol a}}$ in variables\n$\\{t_i\\}_{i=2}^{n/2}$ such that $ {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a}) \\in {\\mathbb F}^{w' \\times 1}$\nis a nonzero vector.\n\nAs the polynomials $\\{g_i\\}_{i=1}^{w'}$ are linearly independent,\n\n", "itemtype": "equation", "pos": 33863, "prevtext": "\nLet us define $E_2 = D_2 \\Gamma_1$ and $E_3 = \\Gamma D_3$. \nClearly, the ROABP $D_1E_2E_3D_4 \\cdots D_n$ computes the polynomial\n$f$.\n\nNow, we move on to prove that $f$ remains nonzero under the map $\\phi$.\nLet us redefine $G(x_1,x_2) := [g_1 \\; g_2 \\; \\dots \\; g_{w'}] = D_1E_2$\nand $H(x_3, x_4, \\dots, x_n) := [h_1 \\; h_2 \\; \\dots \\; h_{w'}]^{{\\mathsf T}} = E_3D_4 \\cdots D_n$.\nFirst we apply the map $\\phi$ on the variables $\\{x_i\\}_{i=3}^n$. \nObserve that any $h_i$ is a polynomial computed by \nan $(n-2)$-variate ROABP of width $w$, as $h_i = e_i^{{\\mathsf T}} E_3 D_4 \\cdots D_n$,\nwhere $e_i$ is the $i$-th elementary unit vector.\nHence, by induction hypothesis, any nonzero $h_i$\nwould remain nonzero under the map $\\phi$.\nThus, \n", "index": 33, "text": "$$H'(t_2, \\dots, t_{n/2}) := H(\\phi(x_3), \\phi(x_4), \\dots, \\phi(x_n)) \\neq [0 \\; 0\\; \\dots \\; 0 ]^{{\\mathsf T}}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m1\" class=\"ltx_Math\" alttext=\"H^{\\prime}(t_{2},\\dots,t_{n/2}):=H(\\phi(x_{3}),\\phi(x_{4}),\\dots,\\phi(x_{n}))%&#10;\\neq[0\\;0\\;\\dots\\;0]^{{\\mathsf{T}}}.\" display=\"block\"><mrow><mrow><mrow><msup><mi>H</mi><mo>\u2032</mo></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>2</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>t</mi><mrow><mi>n</mi><mo>/</mo><mn>2</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>:=</mo><mrow><mi>H</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>4</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2260</mo><msup><mrow><mo stretchy=\"false\">[</mo><mrow><mpadded width=\"+2.8pt\"><mn>0\u20040</mn></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">\u2026</mi><mo>\u2062</mo><mn>\u20040</mn></mrow><mo stretchy=\"false\">]</mo></mrow><mi>\ud835\uddb3</mi></msup></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nClearly, the polynomial $G {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a}) = D_1 E_2 {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a})$\nis computed by a width-$w$ bivariate ROABP in variables $(x_1,x_2)$.\nThus, it must remain nonzero under the map $\\phi$ by Lemma~\\ref{lem:bivariatehs}.\nThat is,\n\n", "itemtype": "equation", "pos": 34276, "prevtext": "\nThis means there exists a monomial ${{\\boldsymbol t}^{\\boldsymbol a}}$ in variables\n$\\{t_i\\}_{i=2}^{n/2}$ such that $ {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a}) \\in {\\mathbb F}^{w' \\times 1}$\nis a nonzero vector.\n\nAs the polynomials $\\{g_i\\}_{i=1}^{w'}$ are linearly independent,\n\n", "index": 35, "text": "$$G {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a}) \\neq 0.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16.m1\" class=\"ltx_Math\" alttext=\"G{\\operatorname{coef}}_{H^{\\prime}}({\\boldsymbol{t}}^{\\boldsymbol{a}})\\neq 0.\" display=\"block\"><mrow><mrow><mrow><mi>G</mi><mo>\u2062</mo><mrow><msub><mo>coef</mo><msup><mi>H</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc95</mi><mi>\ud835\udc82</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2260</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nThis implies that $f' = G'(t_1) H'(t_2, \\dots, t_{n/2}) \\neq 0$.\nTo see this, consider a monomial $t_1^b$ such that\n\n", "itemtype": "equation", "pos": 34668, "prevtext": "\nClearly, the polynomial $G {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a}) = D_1 E_2 {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a})$\nis computed by a width-$w$ bivariate ROABP in variables $(x_1,x_2)$.\nThus, it must remain nonzero under the map $\\phi$ by Lemma~\\ref{lem:bivariatehs}.\nThat is,\n\n", "index": 37, "text": "$$G'(t_1) {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a}) = G(\\phi(x_1),\\phi(x_2)) {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a}) \\neq 0.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex17.m1\" class=\"ltx_Math\" alttext=\"G^{\\prime}(t_{1}){\\operatorname{coef}}_{H^{\\prime}}({\\boldsymbol{t}}^{%&#10;\\boldsymbol{a}})=G(\\phi(x_{1}),\\phi(x_{2})){\\operatorname{coef}}_{H^{\\prime}}(%&#10;{\\boldsymbol{t}}^{\\boldsymbol{a}})\\neq 0.\" display=\"block\"><mrow><mrow><mrow><msup><mi>G</mi><mo>\u2032</mo></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><msub><mo>coef</mo><msup><mi>H</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc95</mi><mi>\ud835\udc82</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mi>G</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><msub><mo>coef</mo><msup><mi>H</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc95</mi><mi>\ud835\udc82</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2260</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nThis product is nothing but ${\\operatorname{coef}}_{f'}(t_1^b {\\boldsymbol t}^{\\boldsymbol a})$.\n\nNow, we argue that $f'$ has a width $w$ ROABP.\nLet $D'_i := D_{2i-1}(t_i^w) D_{2i}(t_i^w + t_i^{w-1})$\nfor all $1 \\leq i \\leq n/2$.\nClearly, $D'_1 D'_2 \\cdots D'_{n/2}$ is an ROABP computing $f'$ in variable order\n$(t_1,t_2, \\dots, t_{n/2})$,\nas ${D'}_1 \\in {\\mathbb F}^{1 \\times w}[t_1]$,\n${D'}_{n/2} \\in {\\mathbb F}^{w \\times 1}[t_{n/2}]$ and $D'_i \\in {\\mathbb F}^{w \\times w}[t_i]$\nfor all $2 \\leq i \\leq n/2-1$. \n\\end{proof}\n}\n\n\n\n\n\nBy applying the map $\\phi$ in Lemma~\\ref{lem:halving},\nwe reduced an $n$-variate ROABP to an $(n/2)$-variate ROABP,\nwhile preserving the non-zeroness. The resulting ROABP has\nsame width $w$, but the individual degree goes up to become $2dw$, \nwhere $d$ is the original individual degree. \nAs our map $\\phi$ is degree independent, we can apply the same map again\non the variables $\\{t_i\\}_{i=1}^{n/2}$.\nIt is easy to see that when the map $\\phi$ is repeatedly applied\nin this way\n$\\log n$ times, we get a nonzero univariate polynomial of degree $ndw^{\\log n}$.\nNext lemma puts it formally. \nFor ease of notation, we use the variable numbering from $0$ to $n-1$. \nLet $p_0(t) = t^w$ and $p_1(t)=t^w+t^{w-1}$.\n\n\\begin{lemma}\n\\label{lem:recursivehs}\nLet ${\\operatorname{char}}({\\mathbb F})=0$, or ${\\operatorname{char}}({\\mathbb F}) \\geq ndw^{\\log n}$.\nLet $f \\in {\\mathbb F}[{\\boldsymbol x}]$ be a nonzero polynomial, with individual degree $d$, computed by a width-$w$\nROABP in variable order $(x_0,x_1, \\dots, x_{n-1})$.\n\nLet the map $\\phi \\colon \\{x_0 ,x_1, \\dots, x_{n-1}\\} \\to {\\mathbb F}[t]$ be such that\nfor any index $0 \\leq i \\leq n-1$,\n\n", "itemtype": "equation", "pos": 34949, "prevtext": "\nThis implies that $f' = G'(t_1) H'(t_2, \\dots, t_{n/2}) \\neq 0$.\nTo see this, consider a monomial $t_1^b$ such that\n\n", "index": 39, "text": "$${\\operatorname{coef}}_{G'}( t_1^b) {\\operatorname{coef}}_{H'}({\\boldsymbol t}^{\\boldsymbol a})\\neq 0.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{G^{\\prime}}(t_{1}^{b}){\\operatorname{coef}}_{H^{\\prime}%&#10;}({\\boldsymbol{t}}^{\\boldsymbol{a}})\\neq 0.\" display=\"block\"><mrow><mrow><mrow><mrow><msub><mo>coef</mo><msup><mi>G</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>t</mi><mn>1</mn><mi>b</mi></msubsup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2062</mo><mrow><msub><mo>coef</mo><msup><mi>H</mi><mo>\u2032</mo></msup></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc95</mi><mi>\ud835\udc82</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2260</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nwhere $i_{\\log n} \\; i_{\\log n -1} \\; \\cdots \\; i_{1}$ is the binary representation of $i$.\n\nThen $f(\\phi({\\boldsymbol x}))$ is a nonzero univariate polynomial with degree $ndw^{\\log n}$.\n\\end{lemma}\nNote that the map $\\phi$ crucially uses the knowledge of the variable order.\t\nIn the last round when we are going from\ntwo variables to one, the individual degree is $ndw^{\\log n -1}$ and\n Lemma~\\ref{lem:bivariatehs} requires ${\\operatorname{char}}({\\mathbb F})$ to be higher than the individual degree.\nThus, having ${\\operatorname{char}}({\\mathbb F}) \\geq ndw^{\\log n}$ suffices.\nFor a univariate polynomial,\nthe standard hitting-set is to plug-in\ndistinct field values as many as one more than the degree.\nThus, we get the following theorem.\n\n\\begin{theorem}\n\\label{thm:knownROABPhs}\nFor an $n$-variate, individual degree $d$ and width-$w$ ROABP,\nthere is a blackbox PIT with time complexity $O(ndw^{\\log n})$,\nwhen the variable order is known and the \nfield characteristic is zero or at least $ndw^{\\log n}$.\n\\end{theorem}\n\nFrom this, we immediately get the following result for constant-width ROABPs.\nNote that when $w$ is constant, the lower bound on the characteristic also becomes $\\poly(n)$.\n\\begin{corollary}\nThere is a polynomial time blackbox PIT for constant width ROABPs,\nwith known variable order and field characteristic being zero (or polynomially large).\n\\label{cor:constantwidth}\n\\end{corollary}\n\nAs mentioned earlier, our approach can potentially lead to \na polynomial time hitting-set for ROABPs. \nWe make the following conjecture for which we hope to get a proof\non the lines of Lemma~\\ref{lem:bivariatehs}.\n\n\\begin{conjecture}\n\\label{con:polyROABP}\nLet ${\\operatorname{char}}({\\mathbb F})=0$.\nLet $f({\\boldsymbol x}) \\in {\\mathbb F}[{\\boldsymbol x}]$ be an $n$-variate, degree-$d$ polynomial computed by a width-$w$ ROABP.\nThen $f(t^r,(t+1)^{r}, \\dots, (t+n-1)^r) \\neq 0$ for some $r$ bounded by $\\poly(n,w,d)$.\n\\end{conjecture}\n\n\\section{Commutative ROABP} \\index{commutative ROABP}\nIn this section, we give better hitting-sets for commutative ROABPs.\nRecall that an ROABP is commutative if the matrices involved in the matrix product\ncome from a commutative algebra.\nTo elaborate, a commutative ROABP is of the form $U^{\\mathsf T} D_1D_2 \\cdots D_n T$,\nwhere $U,T \\in {\\mathbb F}^{w \\times 1}$ and\n$D_i \\in {\\mathbb F}^{w \\times w}[x_i]$ is a polynomial over a commutative subalgebra of ${\\mathbb F}^{w\\times w}$\nfor each $i$.\nIn simple words, $D_iD_j = D_j D_i$ for any $i,j \\in [n]$.\nAs the order of variables does not matter for a commutative ROABP, we take the standard variable order\n$(x_1,x_2, \\dots,x_n)$.\nHere we work with the polynomial \n$D = D_1D_2 \\cdots D_n$ over the matrix algebra.\nWith an abuse of notation, we say $D_1D_2 \\cdots D_n$ is an ROABP computing a polynomial over \nmatrices.\n\n\nForbes et al.~\\cite{FSS14}\n\ngave a $d^{O(\\log w)}(nw)^{O(\\log \\log w)}$-time hitting-set\nfor width-$w$, $n$-variate commutative ROABPs with individual degree bound $d$. \nNote that when $d$ is small, this time complexity \nis much better than that for general ROABP, i.e., $(ndw)^{O(\\log n)}$ \\cite{AGKS15}.\nHowever when $d$ is $O(n)$, the complexity is comparable to the general case.\n\n\nWe improve the time complexity for the commutative case to $(ndw)^{O(\\log \\log w)}$. \nThis is significantly better than the general case for all values of $d$.\n\nForbes et al.~\\cite{FSS14} constructed the hitting-set using the notion of\nrank-concentration defined by Agrawal et al.~\\cite{ASS13}.\n\\begin{definition}[\\cite{ASS13}]\nA polynomial $D({\\boldsymbol x})$ over an algebra is said to be $\\ell$-concentrated\nif its coefficients of $(<\\ell)$-support monomials span all its coefficients.\n\\end{definition}\n\nNote that for a polynomial in ${\\mathbb F}[{\\boldsymbol x}]$, $\\ell$-concentration simply means that \nit has a monomial of $(<\\ell)$-support with a nonzero coefficient.\nFor a polynomial which has low-support concentration, it is easy to\nconstruct hitting-sets. \nHowever, not every polynomial has a low-support concentration, for example $C({\\boldsymbol x}) = x_1x_2 \\cdots x_n$.\nAgrawal et al.~\\cite{ASS13} observed that concentration can be achieved by a shift of variables,\ne.g., $C({\\boldsymbol x} + \\boldsymbol{1}) = (x_1+1)(x_2+1) \\cdots (x_n+1)$ has $1$-concentration.\nFor a polynomial $C({\\boldsymbol x})$, shift by a tuple ${\\boldsymbol f} = (f_1,f_2, \\dots, f_n)$\nwould mean $C({\\boldsymbol x} +{\\boldsymbol f}) = C(x_1+f_1,x_2+f_2, \\dots, x_n+f_n)$.\nThe first step of Forbes et al.~\\cite{FSS14} is to show that\nfor a given commutative width-$w$ ROABP,\n$O(\\log w)$-concentration  \ncan be achieved by a shift with cost $n d^{O(\\log w)}$.\n\nTheir second step is to show that\nif a given commutative ROABP is $O(\\log w)$-concentrated\nthen there is a hitting-set for it of size $(ndw)^{O(\\log \\log w)}$.\nWe improve the first step by giving a shift \nwith cost $(ndw)^{O(\\log \\log w)}$, which gives us the desired hitting-set.\n\n\n\n\n\nFirst, we elaborate the first step of Forbes, Saptharishi and Shpilka~\\cite{FSS14}.\nTo achieve concentration they use the idea of Agrawal, Saha and Saxena \\cite{ASS13},\ni.e., achieving concentration in small sub-circuits implies concentration in the\nwhole circuit.\nFor the sake of completeness, we rewrite the lemma using the terminology of this paper.\n\n\\begin{lemma}[\\cite{ASS13,FSS14}]\nLet $D({\\boldsymbol x}) = D_1(x_1) D_2(x_2) \\cdots D_n(x_n)$\nbe a product of univariate polynomials \nover a commutative algebra ${\\mathbb A}_k$. Suppose there exists an $\\ell$\nsuch that for any $S \\in [n]$ with ${\\lvert {S} \\rvert}=\\ell$, \nthe polynomial $\\prod_{i \\in S}D_i$ has $\\ell$-concentration.\nThen $D({\\boldsymbol x})$ has $\\ell$-concentration.\n\\label{lem:ellton}\n\\end{lemma}\n\\begin{proof}\nFor any set $S \\subseteq [n]$, let us define a sub-circuit $D_S$ of $D$ as\n$\\prod_{i \\in S} D_i (x_i)$. \nWe will show $\\ell$-concentration in all the sub-circuits $D_S$ \nof $D$, using induction on the size of $S$.\n\n\n{\\em Base Case:} \n$D_S$ is trivially $\\ell$-concentrated if ${\\lvert {S} \\rvert} < \\ell$.\nIn the case of ${\\lvert {S} \\rvert} = \\ell$, $D_S$ is $\\ell$-concentrated\nfrom the hypothesis in the lemma. \n\n{\\em Induction Hypothesis:} $D_S$ has $\\ell$-concentration for any set S with ${\\lvert {S} \\rvert}< j$. \n\n{\\em Induction Step:} We will prove $\\ell$-concentration in $D_S$\n for a set $S$ with ${\\lvert {S} \\rvert}=j$.\nLet $S = \\{x_{i_1}, x_{i_2}, \\dots, x_{i_j}\\}$. Consider a monomial \n${\\boldsymbol x}^{\\boldsymbol a} = x_{i_1}^{a_1} x_{i_2}^{a_2} \\cdots x_{i_j}^{a_j}$ with support from the set $S$.\nWithout loss of generality let us assume $a_1 \\neq 0$.\nNow, let the set $S' = S \\setminus \\{x_{i_1}\\}$\nand let the monomial ${\\boldsymbol x}^{{\\boldsymbol a}'} = {{\\boldsymbol x}^{\\boldsymbol a}}/{x_{i_1}^{a_1}}$.\nAs ${\\lvert {S'} \\rvert} = j-1$, by the inductive hypothesis $D_{S'}$ is $\\ell$-concentrated. \nThus, \n\n", "itemtype": "equation", "pos": 36733, "prevtext": "\nThis product is nothing but ${\\operatorname{coef}}_{f'}(t_1^b {\\boldsymbol t}^{\\boldsymbol a})$.\n\nNow, we argue that $f'$ has a width $w$ ROABP.\nLet $D'_i := D_{2i-1}(t_i^w) D_{2i}(t_i^w + t_i^{w-1})$\nfor all $1 \\leq i \\leq n/2$.\nClearly, $D'_1 D'_2 \\cdots D'_{n/2}$ is an ROABP computing $f'$ in variable order\n$(t_1,t_2, \\dots, t_{n/2})$,\nas ${D'}_1 \\in {\\mathbb F}^{1 \\times w}[t_1]$,\n${D'}_{n/2} \\in {\\mathbb F}^{w \\times 1}[t_{n/2}]$ and $D'_i \\in {\\mathbb F}^{w \\times w}[t_i]$\nfor all $2 \\leq i \\leq n/2-1$. \n\\end{proof}\n}\n\n\n\n\n\nBy applying the map $\\phi$ in Lemma~\\ref{lem:halving},\nwe reduced an $n$-variate ROABP to an $(n/2)$-variate ROABP,\nwhile preserving the non-zeroness. The resulting ROABP has\nsame width $w$, but the individual degree goes up to become $2dw$, \nwhere $d$ is the original individual degree. \nAs our map $\\phi$ is degree independent, we can apply the same map again\non the variables $\\{t_i\\}_{i=1}^{n/2}$.\nIt is easy to see that when the map $\\phi$ is repeatedly applied\nin this way\n$\\log n$ times, we get a nonzero univariate polynomial of degree $ndw^{\\log n}$.\nNext lemma puts it formally. \nFor ease of notation, we use the variable numbering from $0$ to $n-1$. \nLet $p_0(t) = t^w$ and $p_1(t)=t^w+t^{w-1}$.\n\n\\begin{lemma}\n\\label{lem:recursivehs}\nLet ${\\operatorname{char}}({\\mathbb F})=0$, or ${\\operatorname{char}}({\\mathbb F}) \\geq ndw^{\\log n}$.\nLet $f \\in {\\mathbb F}[{\\boldsymbol x}]$ be a nonzero polynomial, with individual degree $d$, computed by a width-$w$\nROABP in variable order $(x_0,x_1, \\dots, x_{n-1})$.\n\nLet the map $\\phi \\colon \\{x_0 ,x_1, \\dots, x_{n-1}\\} \\to {\\mathbb F}[t]$ be such that\nfor any index $0 \\leq i \\leq n-1$,\n\n", "index": 41, "text": "$$ \\phi (x_i) = p_{i_1}( p_{i_2} \\cdots (p_{i_{\\log n}} (t) ) ),$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex19.m1\" class=\"ltx_Math\" alttext=\"\\phi(x_{i})=p_{i_{1}}(p_{i_{2}}\\cdots(p_{i_{\\log n}}(t))),\" display=\"block\"><mrow><mrow><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mi>p</mi><msub><mi>i</mi><mn>1</mn></msub></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>p</mi><msub><mi>i</mi><mn>2</mn></msub></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>p</mi><msub><mi>i</mi><mrow><mi>log</mi><mo>\u2061</mo><mi>n</mi></mrow></msub></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nIt is easy to see that for any monomial ${\\boldsymbol x}^{\\boldsymbol b}$ with its support in $S'$,\n\n", "itemtype": "equation", "pos": 43676, "prevtext": "\nwhere $i_{\\log n} \\; i_{\\log n -1} \\; \\cdots \\; i_{1}$ is the binary representation of $i$.\n\nThen $f(\\phi({\\boldsymbol x}))$ is a nonzero univariate polynomial with degree $ndw^{\\log n}$.\n\\end{lemma}\nNote that the map $\\phi$ crucially uses the knowledge of the variable order.\t\nIn the last round when we are going from\ntwo variables to one, the individual degree is $ndw^{\\log n -1}$ and\n Lemma~\\ref{lem:bivariatehs} requires ${\\operatorname{char}}({\\mathbb F})$ to be higher than the individual degree.\nThus, having ${\\operatorname{char}}({\\mathbb F}) \\geq ndw^{\\log n}$ suffices.\nFor a univariate polynomial,\nthe standard hitting-set is to plug-in\ndistinct field values as many as one more than the degree.\nThus, we get the following theorem.\n\n\\begin{theorem}\n\\label{thm:knownROABPhs}\nFor an $n$-variate, individual degree $d$ and width-$w$ ROABP,\nthere is a blackbox PIT with time complexity $O(ndw^{\\log n})$,\nwhen the variable order is known and the \nfield characteristic is zero or at least $ndw^{\\log n}$.\n\\end{theorem}\n\nFrom this, we immediately get the following result for constant-width ROABPs.\nNote that when $w$ is constant, the lower bound on the characteristic also becomes $\\poly(n)$.\n\\begin{corollary}\nThere is a polynomial time blackbox PIT for constant width ROABPs,\nwith known variable order and field characteristic being zero (or polynomially large).\n\\label{cor:constantwidth}\n\\end{corollary}\n\nAs mentioned earlier, our approach can potentially lead to \na polynomial time hitting-set for ROABPs. \nWe make the following conjecture for which we hope to get a proof\non the lines of Lemma~\\ref{lem:bivariatehs}.\n\n\\begin{conjecture}\n\\label{con:polyROABP}\nLet ${\\operatorname{char}}({\\mathbb F})=0$.\nLet $f({\\boldsymbol x}) \\in {\\mathbb F}[{\\boldsymbol x}]$ be an $n$-variate, degree-$d$ polynomial computed by a width-$w$ ROABP.\nThen $f(t^r,(t+1)^{r}, \\dots, (t+n-1)^r) \\neq 0$ for some $r$ bounded by $\\poly(n,w,d)$.\n\\end{conjecture}\n\n\\section{Commutative ROABP} \\index{commutative ROABP}\nIn this section, we give better hitting-sets for commutative ROABPs.\nRecall that an ROABP is commutative if the matrices involved in the matrix product\ncome from a commutative algebra.\nTo elaborate, a commutative ROABP is of the form $U^{\\mathsf T} D_1D_2 \\cdots D_n T$,\nwhere $U,T \\in {\\mathbb F}^{w \\times 1}$ and\n$D_i \\in {\\mathbb F}^{w \\times w}[x_i]$ is a polynomial over a commutative subalgebra of ${\\mathbb F}^{w\\times w}$\nfor each $i$.\nIn simple words, $D_iD_j = D_j D_i$ for any $i,j \\in [n]$.\nAs the order of variables does not matter for a commutative ROABP, we take the standard variable order\n$(x_1,x_2, \\dots,x_n)$.\nHere we work with the polynomial \n$D = D_1D_2 \\cdots D_n$ over the matrix algebra.\nWith an abuse of notation, we say $D_1D_2 \\cdots D_n$ is an ROABP computing a polynomial over \nmatrices.\n\n\nForbes et al.~\\cite{FSS14}\n\ngave a $d^{O(\\log w)}(nw)^{O(\\log \\log w)}$-time hitting-set\nfor width-$w$, $n$-variate commutative ROABPs with individual degree bound $d$. \nNote that when $d$ is small, this time complexity \nis much better than that for general ROABP, i.e., $(ndw)^{O(\\log n)}$ \\cite{AGKS15}.\nHowever when $d$ is $O(n)$, the complexity is comparable to the general case.\n\n\nWe improve the time complexity for the commutative case to $(ndw)^{O(\\log \\log w)}$. \nThis is significantly better than the general case for all values of $d$.\n\nForbes et al.~\\cite{FSS14} constructed the hitting-set using the notion of\nrank-concentration defined by Agrawal et al.~\\cite{ASS13}.\n\\begin{definition}[\\cite{ASS13}]\nA polynomial $D({\\boldsymbol x})$ over an algebra is said to be $\\ell$-concentrated\nif its coefficients of $(<\\ell)$-support monomials span all its coefficients.\n\\end{definition}\n\nNote that for a polynomial in ${\\mathbb F}[{\\boldsymbol x}]$, $\\ell$-concentration simply means that \nit has a monomial of $(<\\ell)$-support with a nonzero coefficient.\nFor a polynomial which has low-support concentration, it is easy to\nconstruct hitting-sets. \nHowever, not every polynomial has a low-support concentration, for example $C({\\boldsymbol x}) = x_1x_2 \\cdots x_n$.\nAgrawal et al.~\\cite{ASS13} observed that concentration can be achieved by a shift of variables,\ne.g., $C({\\boldsymbol x} + \\boldsymbol{1}) = (x_1+1)(x_2+1) \\cdots (x_n+1)$ has $1$-concentration.\nFor a polynomial $C({\\boldsymbol x})$, shift by a tuple ${\\boldsymbol f} = (f_1,f_2, \\dots, f_n)$\nwould mean $C({\\boldsymbol x} +{\\boldsymbol f}) = C(x_1+f_1,x_2+f_2, \\dots, x_n+f_n)$.\nThe first step of Forbes et al.~\\cite{FSS14} is to show that\nfor a given commutative width-$w$ ROABP,\n$O(\\log w)$-concentration  \ncan be achieved by a shift with cost $n d^{O(\\log w)}$.\n\nTheir second step is to show that\nif a given commutative ROABP is $O(\\log w)$-concentrated\nthen there is a hitting-set for it of size $(ndw)^{O(\\log \\log w)}$.\nWe improve the first step by giving a shift \nwith cost $(ndw)^{O(\\log \\log w)}$, which gives us the desired hitting-set.\n\n\n\n\n\nFirst, we elaborate the first step of Forbes, Saptharishi and Shpilka~\\cite{FSS14}.\nTo achieve concentration they use the idea of Agrawal, Saha and Saxena \\cite{ASS13},\ni.e., achieving concentration in small sub-circuits implies concentration in the\nwhole circuit.\nFor the sake of completeness, we rewrite the lemma using the terminology of this paper.\n\n\\begin{lemma}[\\cite{ASS13,FSS14}]\nLet $D({\\boldsymbol x}) = D_1(x_1) D_2(x_2) \\cdots D_n(x_n)$\nbe a product of univariate polynomials \nover a commutative algebra ${\\mathbb A}_k$. Suppose there exists an $\\ell$\nsuch that for any $S \\in [n]$ with ${\\lvert {S} \\rvert}=\\ell$, \nthe polynomial $\\prod_{i \\in S}D_i$ has $\\ell$-concentration.\nThen $D({\\boldsymbol x})$ has $\\ell$-concentration.\n\\label{lem:ellton}\n\\end{lemma}\n\\begin{proof}\nFor any set $S \\subseteq [n]$, let us define a sub-circuit $D_S$ of $D$ as\n$\\prod_{i \\in S} D_i (x_i)$. \nWe will show $\\ell$-concentration in all the sub-circuits $D_S$ \nof $D$, using induction on the size of $S$.\n\n\n{\\em Base Case:} \n$D_S$ is trivially $\\ell$-concentrated if ${\\lvert {S} \\rvert} < \\ell$.\nIn the case of ${\\lvert {S} \\rvert} = \\ell$, $D_S$ is $\\ell$-concentrated\nfrom the hypothesis in the lemma. \n\n{\\em Induction Hypothesis:} $D_S$ has $\\ell$-concentration for any set S with ${\\lvert {S} \\rvert}< j$. \n\n{\\em Induction Step:} We will prove $\\ell$-concentration in $D_S$\n for a set $S$ with ${\\lvert {S} \\rvert}=j$.\nLet $S = \\{x_{i_1}, x_{i_2}, \\dots, x_{i_j}\\}$. Consider a monomial \n${\\boldsymbol x}^{\\boldsymbol a} = x_{i_1}^{a_1} x_{i_2}^{a_2} \\cdots x_{i_j}^{a_j}$ with support from the set $S$.\nWithout loss of generality let us assume $a_1 \\neq 0$.\nNow, let the set $S' = S \\setminus \\{x_{i_1}\\}$\nand let the monomial ${\\boldsymbol x}^{{\\boldsymbol a}'} = {{\\boldsymbol x}^{\\boldsymbol a}}/{x_{i_1}^{a_1}}$.\nAs ${\\lvert {S'} \\rvert} = j-1$, by the inductive hypothesis $D_{S'}$ is $\\ell$-concentrated. \nThus, \n\n", "index": 43, "text": "\\begin{equation}\n\\label{eq:S'}\n{\\operatorname{coef}}_{D_{S'}}({\\boldsymbol x}^{{\\boldsymbol a}'}) \\in {\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S'}}({\\boldsymbol x}^{\\boldsymbol b}) \\mid {\\operatorname{Supp}}({\\boldsymbol b}) \\subseteq S', \\; {\\operatorname{supp}}({\\boldsymbol b})< \\ell \\}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{S^{\\prime}}}({\\boldsymbol{x}}^{{\\boldsymbol{a}}^{%&#10;\\prime}})\\in{\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S^{\\prime}}}({%&#10;\\boldsymbol{x}}^{\\boldsymbol{b}})\\mid{\\operatorname{Supp}}({\\boldsymbol{b}})%&#10;\\subseteq S^{\\prime},\\;{\\operatorname{supp}}({\\boldsymbol{b}})&lt;\\ell\\}.\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><msup><mi>S</mi><mo>\u2032</mo></msup></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><msup><mi>\ud835\udc82</mi><mo>\u2032</mo></msup></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mrow><mo>span</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mo>coef</mo><msub><mi>D</mi><msup><mi>S</mi><mo>\u2032</mo></msup></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc83</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><mrow><mo>Supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc83</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2286</mo><msup><mi>S</mi><mo>\u2032</mo></msup></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mrow><mo>supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc83</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nThus, by multiplying ${\\operatorname{coef}}_{D_{i_1}} (x_{i_1}^{a_1})$ in (\\ref{eq:S'}), we get\n\n", "itemtype": "equation", "pos": 44090, "prevtext": "\nIt is easy to see that for any monomial ${\\boldsymbol x}^{\\boldsymbol b}$ with its support in $S'$,\n\n", "index": 45, "text": "$${\\operatorname{coef}}_{D_S}({\\boldsymbol x}^{\\boldsymbol b} x_{i_1}^{a_1}) = {\\operatorname{coef}}_{D_{S'}}({\\boldsymbol x}^{\\boldsymbol b}) {\\operatorname{coef}}_{D_{i_1}} (x_{i_1}^{a_1}).$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex20.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{\\boldsymbol{b}}x_{i_{1}}^{a_{1%&#10;}})={\\operatorname{coef}}_{D_{S^{\\prime}}}({\\boldsymbol{x}}^{\\boldsymbol{b}}){%&#10;\\operatorname{coef}}_{D_{i_{1}}}(x_{i_{1}}^{a_{1}}).\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>\ud835\udc99</mi><mi>\ud835\udc83</mi></msup><mo>\u2062</mo><msubsup><mi>x</mi><msub><mi>i</mi><mn>1</mn></msub><msub><mi>a</mi><mn>1</mn></msub></msubsup></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><msup><mi>S</mi><mo>\u2032</mo></msup></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc83</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2062</mo><mrow><msub><mo>coef</mo><msub><mi>D</mi><msub><mi>i</mi><mn>1</mn></msub></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msubsup><mi>x</mi><msub><mi>i</mi><mn>1</mn></msub><msub><mi>a</mi><mn>1</mn></msub></msubsup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nHence,\n\n", "itemtype": "equation", "pos": 44380, "prevtext": "\nThus, by multiplying ${\\operatorname{coef}}_{D_{i_1}} (x_{i_1}^{a_1})$ in (\\ref{eq:S'}), we get\n\n", "index": 47, "text": "$${\\operatorname{coef}}_{D_{S}}({\\boldsymbol x}^{\\boldsymbol a}) \\in {\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S}}({\\boldsymbol x}^{\\boldsymbol b} x_{i_1}^{a_1}) \\mid {\\operatorname{Supp}}({\\boldsymbol b}) \\subseteq S', \\; {\\operatorname{supp}}({\\boldsymbol b})< \\ell \\}. $$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex21.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{\\boldsymbol{a}})\\in{%&#10;\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{%&#10;\\boldsymbol{b}}x_{i_{1}}^{a_{1}})\\mid{\\operatorname{Supp}}({\\boldsymbol{b}})%&#10;\\subseteq S^{\\prime},\\;{\\operatorname{supp}}({\\boldsymbol{b}})&lt;\\ell\\}.\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc82</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mrow><mo>span</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>\ud835\udc99</mi><mi>\ud835\udc83</mi></msup><mo>\u2062</mo><msubsup><mi>x</mi><msub><mi>i</mi><mn>1</mn></msub><msub><mi>a</mi><mn>1</mn></msub></msubsup></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><mrow><mo>Supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc83</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2286</mo><msup><mi>S</mi><mo>\u2032</mo></msup></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mrow><mo>supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc83</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\n\nNow, we claim that for any monomial ${\\boldsymbol x}^{\\boldsymbol b}$ with ${\\operatorname{Supp}}({\\boldsymbol b}) \\subseteq S$ and ${\\operatorname{supp}}({\\boldsymbol b})=\\ell$, \n\n", "itemtype": "equation", "pos": 44669, "prevtext": "\nHence,\n\n", "index": 49, "text": "\\begin{equation}\n{\\operatorname{coef}}_{D_{S}}({\\boldsymbol x}^{\\boldsymbol a}) \\in {\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S}}({\\boldsymbol x}^{\\boldsymbol b}) \\mid {\\operatorname{Supp}}({\\boldsymbol b}) \\subseteq S, \\; {\\operatorname{supp}}({\\boldsymbol b})\\leq \\ell \\}. \n\\label{eq:leqell}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{\\boldsymbol{a}})\\in{%&#10;\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{%&#10;\\boldsymbol{b}})\\mid{\\operatorname{Supp}}({\\boldsymbol{b}})\\subseteq S,\\;{%&#10;\\operatorname{supp}}({\\boldsymbol{b}})\\leq\\ell\\}.\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc82</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mrow><mo>span</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc83</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><mrow><mo>Supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc83</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2286</mo><mi>S</mi></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mrow><mo>supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc83</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2264</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nTo see this, let $T$ be the support of the monomial ${\\boldsymbol x}^{\\boldsymbol b}$.\nAs ${\\lvert {T} \\rvert}= \\ell$, $D_T$ has $\\ell$-concentration. \nThus, \n\n", "itemtype": "equation", "pos": 45166, "prevtext": "\n\nNow, we claim that for any monomial ${\\boldsymbol x}^{\\boldsymbol b}$ with ${\\operatorname{Supp}}({\\boldsymbol b}) \\subseteq S$ and ${\\operatorname{supp}}({\\boldsymbol b})=\\ell$, \n\n", "index": 51, "text": "\\begin{equation}\n{\\operatorname{coef}}_{D_S}({\\boldsymbol x}^{\\boldsymbol b}) \\in {\\operatorname{span}}\\{{\\operatorname{coef}}_{D_S}({\\boldsymbol x}^{\\boldsymbol c}) \\mid {\\operatorname{Supp}}({\\boldsymbol c}) \\subseteq S, \\; {\\operatorname{supp}}({\\boldsymbol c})< \\ell \\}.\n\\label{eq:ellsupp}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{\\boldsymbol{b}})\\in{%&#10;\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{%&#10;\\boldsymbol{c}})\\mid{\\operatorname{Supp}}({\\boldsymbol{c}})\\subseteq S,\\;{%&#10;\\operatorname{supp}}({\\boldsymbol{c}})&lt;\\ell\\}.\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc83</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mrow><mo>span</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc84</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><mrow><mo>Supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc84</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2286</mo><mi>S</mi></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mrow><mo>supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc84</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nFor any monomial ${\\boldsymbol x}^{\\boldsymbol c}$ with support in $T$, one can write\n\n", "itemtype": "equation", "pos": 45634, "prevtext": "\nTo see this, let $T$ be the support of the monomial ${\\boldsymbol x}^{\\boldsymbol b}$.\nAs ${\\lvert {T} \\rvert}= \\ell$, $D_T$ has $\\ell$-concentration. \nThus, \n\n", "index": 53, "text": "\\begin{equation}\n{\\operatorname{coef}}_{D_T}({\\boldsymbol x}^{\\boldsymbol b}) \\in {\\operatorname{span}}\\{{\\operatorname{coef}}_{D_T}({\\boldsymbol x}^{\\boldsymbol c}) \\mid {\\operatorname{Supp}}({\\boldsymbol c}) \\subseteq T, \\; {\\operatorname{supp}}({\\boldsymbol c})< \\ell \\}.\n\\label{eq:Sellsupp}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{T}}({\\boldsymbol{x}}^{\\boldsymbol{b}})\\in{%&#10;\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{T}}({\\boldsymbol{x}}^{%&#10;\\boldsymbol{c}})\\mid{\\operatorname{Supp}}({\\boldsymbol{c}})\\subseteq T,\\;{%&#10;\\operatorname{supp}}({\\boldsymbol{c}})&lt;\\ell\\}.\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>T</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc83</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mrow><mo>span</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>T</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc84</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><mrow><mo>Supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc84</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2286</mo><mi>T</mi></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mrow><mo>supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc84</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nNote that the commutativity of the underlying algebra is crucial for this.\nThus, multiplying (\\ref{eq:Sellsupp}) by $\\left( \\prod_{i \\in S\\setminus T} {\\operatorname{coef}}_{D_i}(1) \\right)$,\nwe get (\\ref{eq:ellsupp}). \n\nBy combining (\\ref{eq:ellsupp}) with (\\ref{eq:leqell}), we get\n\n", "itemtype": "equation", "pos": 46030, "prevtext": "\nFor any monomial ${\\boldsymbol x}^{\\boldsymbol c}$ with support in $T$, one can write\n\n", "index": 55, "text": "$${\\operatorname{coef}}_{D_S}({\\boldsymbol x}^{\\boldsymbol c}) = {\\operatorname{coef}}_{D_T}({\\boldsymbol x}^{\\boldsymbol c}) \\prod_{i \\in S\\setminus T} {\\operatorname{coef}}_{D_i}(1).$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex22.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{\\boldsymbol{c}})={%&#10;\\operatorname{coef}}_{D_{T}}({\\boldsymbol{x}}^{\\boldsymbol{c}})\\prod_{i\\in S%&#10;\\setminus T}{\\operatorname{coef}}_{D_{i}}(1).\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc84</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>T</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc84</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mi>i</mi><mo>\u2208</mo><mrow><mi>S</mi><mo>\u2216</mo><mi>T</mi></mrow></mrow></munder><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>i</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nfor any monomial ${\\boldsymbol x}^{\\boldsymbol a}$ with ${\\operatorname{Supp}}({\\boldsymbol a}) \\subseteq S$.\nThis proves $\\ell$-concentration in $D_S$.\n\nTaking $S= [n]$, we get $\\ell$-concentration in $D$.\n\\end{proof}\n\nNow, the goal is just to achieve $\\ell$-concentration in \nan $\\ell$-variate ROABP (computing a polynomial over the matrix algebra).\nWe would remark here that for an $\\ell$-variate polynomial over a $k$-dimensional algebra,\none can hope to achieve $\\ell$-concentration only when $\\ell \\geq \\log (k+1)$.\nTo see this, consider the polynomial $D({\\boldsymbol x}) = \\prod_{i=1}^{\\ell} (1 + v_i x_i)$ over\na $k$-dimensional algebra such that $k > 2^{\\ell}-1$. \nSuppose the vector $v_i$s are such that all the $2^{\\ell}$ coefficients\nof the polynomial $D$ are linearly independent. \nThere are only $2^\\ell -1$ coefficients of $D$ with $(< \\ell)$-support. \nHence, they cannot span the whole coefficient space of $D$, whatever the shift we use.\n\nAgrawal et al.~\\cite{ASS13} and Forbes et al.~\\cite{FSS14} \nachieve $\\ell$-concentration in \narbitrary $\\ell$-variate polynomials over a $k$-dimension algebra\nfor $\\ell = \\log (k+1)$ by a shift with cost $d^{O(\\ell)}$, where\n$d$ is the individual degree.\nForbes et al.~\\cite{FSS14} use it to give a single shift on $n$ variables\nsuch that it works for any choice of $\\ell$ variables.\nThis has cost $nd^{O(\\ell)}$.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe give a new shift with cost $(n d w)^{O(\\log \\ell)} = (n d w)^{O(\\log \\log w)}$,\nfor a width-$w$, $\\ell$-variate ROABP ($w^2$ is the dimension of the underlying algebra).\nThe cost has $n$ as a parameter because the shift works for any size $\\ell$ subset\nof $n$ variables.\nLike \\cite{ASS13,FSS14}, we use a shift by univariate polynomials in a new variable $t$.\nIn this case, the concentration is considered over the field ${\\mathbb F}(t)$.\nNote that while the shift of \\cite{ASS13,FSS14} works for an arbitrary $\\ell$-variate polynomial,\nour shift works only for $\\ell$-variate ROABPs.\nThe univariate map we use is the basis isolating weight assignment for ROABPs\nfrom Agrawal et al.~\\cite{AGKS15}.\nWe simply use the fact that for any polynomial over a $k$-dimensional algebra,\n shift by a basis isolating map achieves $\\log(k+1)$-concentration~\\cite{GKST15}.\n\n\n\nLet us first recall the definition of a basis isolating weight assignment. \nLet ${M}$ denote the set of all monomials over the variable set ${{\\boldsymbol x}}$\nwith individual degree $\\leq d$.\nAny function ${\\mathrm{w}} \\colon {\\boldsymbol x} \\to {\\mathbb N}$ can be naturally extended to the set of all monomials \nas follows: ${\\mathrm{w}}(\\prod_{i=1}^n x_i^{\\gamma_i}) = \\sum_{i=1}^n \\gamma_i {\\mathrm{w}}(x_i)$, \nfor any $(\\gamma_i)_{i=1}^n \\in {\\mathbb N}^n$.\nNote that if the variable $x_i$ is replaced with $t^{{\\mathrm{w}}(x_i)}$ for each $i$,\nthen any monomial $m$ just becomes $t^{{\\mathrm{w}}(m)}$.\n${\\mathbb A}_k$ denotes a $k$-dimensional algebra.\n\n\\begin{definition}[\\cite{AGKS15}]\nA weight function ${\\mathrm{w}} \\colon {\\boldsymbol x} \\to {\\mathbb N}$ is called a basis isolating\nweight assignment for a polynomial $D({\\boldsymbol x}) \\in {\\mathbb A}_k[{\\boldsymbol x}]$, \nif there exists \na set of monomials $S \\subseteq {M}$ ($k' := {\\lvert {S} \\rvert} \\leq k$)\nwhose coefficients form a basis for the coefficient space of $D({{\\boldsymbol x}})$, \nsuch that \n\\begin{itemize}\n\\item[--] for any $m, m' \\in S$, ${\\mathrm{w}}(m) \\neq {\\mathrm{w}}(m')$ and\n\\item[--] for any monomial $m \\in {M} \\setminus S$, \n\n", "itemtype": "equation", "pos": 46501, "prevtext": "\nNote that the commutativity of the underlying algebra is crucial for this.\nThus, multiplying (\\ref{eq:Sellsupp}) by $\\left( \\prod_{i \\in S\\setminus T} {\\operatorname{coef}}_{D_i}(1) \\right)$,\nwe get (\\ref{eq:ellsupp}). \n\nBy combining (\\ref{eq:ellsupp}) with (\\ref{eq:leqell}), we get\n\n", "index": 57, "text": "$${\\operatorname{coef}}_{D_S}({\\boldsymbol x}^{\\boldsymbol a}) \\in {\\operatorname{span}}\\{{\\operatorname{coef}}_{D_S}({\\boldsymbol x}^{\\boldsymbol c}) \\mid {\\operatorname{Supp}}({\\boldsymbol c}) \\subseteq S, \\; {\\operatorname{supp}}({\\boldsymbol c})< \\ell \\},$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex23.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{\\boldsymbol{a}})\\in{%&#10;\\operatorname{span}}\\{{\\operatorname{coef}}_{D_{S}}({\\boldsymbol{x}}^{%&#10;\\boldsymbol{c}})\\mid{\\operatorname{Supp}}({\\boldsymbol{c}})\\subseteq S,\\;{%&#10;\\operatorname{supp}}({\\boldsymbol{c}})&lt;\\ell\\},\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc82</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mrow><mo>span</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mo>coef</mo><msub><mi>D</mi><mi>S</mi></msub></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc99</mi><mi>\ud835\udc84</mi></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><mrow><mo>Supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc84</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2286</mo><mi>S</mi></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mrow><mo>supp</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc84</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\n\\end{itemize}\n\\end{definition}\n\nGurjar et al.~\\cite[Lemma 5.2]{GKST15} have shown that shifting by \na basis isolating weight assignment achieves concentration.\n\n\\begin{lemma}[Isolation to concentration]\nLet $A({\\boldsymbol x})$ be a polynomial over a $k$-dimensional algebra~${\\mathbb A}_k$.\nLet~${\\mathrm{w}}$ be a basis isolating weight assignment for~$A({\\boldsymbol x})$.\nThen $A({\\boldsymbol x} + t^{\\mathrm{w}})$ is $\\ell$-concentrated, where $\\ell = {\\lceil {\\log(k+1)} \\rceil}$\nand $t^{\\mathrm{w}}$ denotes the $n$-tuple $(t^{{\\mathrm{w}}(x_1)}, t^{{\\mathrm{w}}(x_2)}, \\dots, t^{{\\mathrm{w}}(x_n)})$.\n\\label{lem:lconc}\n\\end{lemma}\n\nWe now recall the construction of a basis isolating weight assignment for\nROABP from \\cite{AGKS15}. Here, we present a slightly modified version of their Lemma~8,\nwhich easily follows from it.\n\n\\begin{lemma}\n\\label{lem:ellweightFunction}\n\nLet ${\\boldsymbol x}$ be a set of $n$ variables.\nLet $D({{\\boldsymbol x}}) = D_1(x_{i_1}) D_2(x_{i_2}) \\dotsm D_{\\ell}(x_{i_{\\ell}})$\nbe an $\\ell$-variate polynomial over a $k$-dimensional algebra ${\\mathbb A}_k$.\nThen we can construct a basis isolating weight assignment \nfor $D({\\boldsymbol x})$ \n with the cost being $(\\poly(k, n, d))^{\\log \\ell}$,\nwhere $d$ is the individual degree.\n\\end{lemma}\n\nThe construction in \\cite[Lemma 8]{AGKS15} \nactually gives a family $\\mathcal{B}$ of $(k n d)^{O(\\log \\ell)}$\n weight assignments such that for any $\\ell$-variate ROABP,\nat least one of them is basis isolating.\nHowever, we are interested in a single map which works for every $\\ell$-variate \nROABP. \n\n\nTo get a single shift for every ROABP, \nwe follow the technique of~\\cite{FSS14,GKST15} and\n take a Lagrange Interpolation of all the $n$-tuples\nin the family $\\{t^{{\\mathrm{w}}}\\}_{{\\mathrm{w}} \\in \\mathcal{B}}$.\n\n\nLet $\\mathcal{F} = \\{{\\boldsymbol f}_1(t), {\\boldsymbol f}_2(t), \\dots, {\\boldsymbol f}_N(t)\\}$ be this family of $n$-tuples,\nwhere ${\\boldsymbol f}_i = \\{f_{i,1}(t), f_{i,2}(t), \\dots,$ $ f_{i,n}(t)\\}$ for each $i$.\n\n\n\n\n\n\nHere, $N = (knd)^{O(\\log \\ell)}$.\nLet their degrees be bounded by $D$, i.e.,\n$D = \\max \\{\\deg(f_{i,j}) \\mid i \\in [N] \\text{ and } j \\in [n]\\}.$\nFrom the construction in~\\cite{AGKS15}, $D= (knd)^{O(\\log \\ell)}$.\nAlso, the family~$\\mathcal{F}$ can be generated in time $(knd)^{O(\\log \\ell)}$.\n\nLet ${\\boldsymbol L}(y, t) \\in {\\mathbb F}[y, t]^n$ be the Lagrange interpolation of~$\\mathcal{F}$.\nThat is, for all $j \\in [n]$,\n", "itemtype": "equation", "pos": 50238, "prevtext": "\nfor any monomial ${\\boldsymbol x}^{\\boldsymbol a}$ with ${\\operatorname{Supp}}({\\boldsymbol a}) \\subseteq S$.\nThis proves $\\ell$-concentration in $D_S$.\n\nTaking $S= [n]$, we get $\\ell$-concentration in $D$.\n\\end{proof}\n\nNow, the goal is just to achieve $\\ell$-concentration in \nan $\\ell$-variate ROABP (computing a polynomial over the matrix algebra).\nWe would remark here that for an $\\ell$-variate polynomial over a $k$-dimensional algebra,\none can hope to achieve $\\ell$-concentration only when $\\ell \\geq \\log (k+1)$.\nTo see this, consider the polynomial $D({\\boldsymbol x}) = \\prod_{i=1}^{\\ell} (1 + v_i x_i)$ over\na $k$-dimensional algebra such that $k > 2^{\\ell}-1$. \nSuppose the vector $v_i$s are such that all the $2^{\\ell}$ coefficients\nof the polynomial $D$ are linearly independent. \nThere are only $2^\\ell -1$ coefficients of $D$ with $(< \\ell)$-support. \nHence, they cannot span the whole coefficient space of $D$, whatever the shift we use.\n\nAgrawal et al.~\\cite{ASS13} and Forbes et al.~\\cite{FSS14} \nachieve $\\ell$-concentration in \narbitrary $\\ell$-variate polynomials over a $k$-dimension algebra\nfor $\\ell = \\log (k+1)$ by a shift with cost $d^{O(\\ell)}$, where\n$d$ is the individual degree.\nForbes et al.~\\cite{FSS14} use it to give a single shift on $n$ variables\nsuch that it works for any choice of $\\ell$ variables.\nThis has cost $nd^{O(\\ell)}$.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe give a new shift with cost $(n d w)^{O(\\log \\ell)} = (n d w)^{O(\\log \\log w)}$,\nfor a width-$w$, $\\ell$-variate ROABP ($w^2$ is the dimension of the underlying algebra).\nThe cost has $n$ as a parameter because the shift works for any size $\\ell$ subset\nof $n$ variables.\nLike \\cite{ASS13,FSS14}, we use a shift by univariate polynomials in a new variable $t$.\nIn this case, the concentration is considered over the field ${\\mathbb F}(t)$.\nNote that while the shift of \\cite{ASS13,FSS14} works for an arbitrary $\\ell$-variate polynomial,\nour shift works only for $\\ell$-variate ROABPs.\nThe univariate map we use is the basis isolating weight assignment for ROABPs\nfrom Agrawal et al.~\\cite{AGKS15}.\nWe simply use the fact that for any polynomial over a $k$-dimensional algebra,\n shift by a basis isolating map achieves $\\log(k+1)$-concentration~\\cite{GKST15}.\n\n\n\nLet us first recall the definition of a basis isolating weight assignment. \nLet ${M}$ denote the set of all monomials over the variable set ${{\\boldsymbol x}}$\nwith individual degree $\\leq d$.\nAny function ${\\mathrm{w}} \\colon {\\boldsymbol x} \\to {\\mathbb N}$ can be naturally extended to the set of all monomials \nas follows: ${\\mathrm{w}}(\\prod_{i=1}^n x_i^{\\gamma_i}) = \\sum_{i=1}^n \\gamma_i {\\mathrm{w}}(x_i)$, \nfor any $(\\gamma_i)_{i=1}^n \\in {\\mathbb N}^n$.\nNote that if the variable $x_i$ is replaced with $t^{{\\mathrm{w}}(x_i)}$ for each $i$,\nthen any monomial $m$ just becomes $t^{{\\mathrm{w}}(m)}$.\n${\\mathbb A}_k$ denotes a $k$-dimensional algebra.\n\n\\begin{definition}[\\cite{AGKS15}]\nA weight function ${\\mathrm{w}} \\colon {\\boldsymbol x} \\to {\\mathbb N}$ is called a basis isolating\nweight assignment for a polynomial $D({\\boldsymbol x}) \\in {\\mathbb A}_k[{\\boldsymbol x}]$, \nif there exists \na set of monomials $S \\subseteq {M}$ ($k' := {\\lvert {S} \\rvert} \\leq k$)\nwhose coefficients form a basis for the coefficient space of $D({{\\boldsymbol x}})$, \nsuch that \n\\begin{itemize}\n\\item[--] for any $m, m' \\in S$, ${\\mathrm{w}}(m) \\neq {\\mathrm{w}}(m')$ and\n\\item[--] for any monomial $m \\in {M} \\setminus S$, \n\n", "index": 59, "text": "$$ {\\operatorname{coef}}_D(m) \\in {\\operatorname{span}} \\{ {\\operatorname{coef}}_D(m') \\mid m' \\in S, \\; {\\mathrm{w}}(m') < {\\mathrm{w}}(m) \\}.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex24.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{coef}}_{D}(m)\\in{\\operatorname{span}}\\{{\\operatorname{coef}}_{D%&#10;}(m^{\\prime})\\mid m^{\\prime}\\in S,\\;{\\mathrm{w}}(m^{\\prime})&lt;{\\mathrm{w}}(m)\\}.\" display=\"block\"><mrow><mrow><mrow><msub><mo>coef</mo><mi>D</mi></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2208</mo><mrow><mo>span</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">{</mo><mrow><msub><mo>coef</mo><mi>D</mi></msub><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>m</mi><mo>\u2032</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2223</mo><mrow><msup><mi>m</mi><mo>\u2032</mo></msup><mo>\u2208</mo><mi>S</mi></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mrow><mi mathvariant=\"normal\">w</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>m</mi><mo>\u2032</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mrow><mi mathvariant=\"normal\">w</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.08031.tex", "nexttext": "\nwhere $\\{ \\alpha_i\\}_{i \\in [N]}$ are distinct field elements\n(we go to a large enough field extension where these many elements exist).\nNote that $L_j |_{y = \\alpha_i} = f_{i,j}$.\nThus, ${\\boldsymbol L} |_{y = \\alpha_i} = {\\boldsymbol f}_i$.\nAlso, $\\deg_y(L_j) = N-1$ and $\\deg_t(L_j) \\leq D$.\nThe following lemma from \\cite[Lemma 5.5]{GKST15} shows that a shift by \nthe interpolation works for every polynomial simultaneously.\n\n\\begin{lemma}\nLet $A({\\boldsymbol x})$ be a polynomial over ${\\mathbb A}_k$ such that\n\n there exists\nan ${{\\boldsymbol f}} \\in \\mathcal{F}$ for which\n$A'({\\boldsymbol x}, t) = A({\\boldsymbol x} + {{\\boldsymbol f}}) \\in {\\mathbb A}_k(t)[{\\boldsymbol x}]$ is $\\ell$-concentrated.\nThen, $A''({\\boldsymbol x}, y, t) = A({\\boldsymbol x} + {\\boldsymbol L}) \\in {\\mathbb A}_k(y,t)[{\\boldsymbol x}]$ is $\\ell$-concentrated.\n\\label{lem:interpolation}\n\\end{lemma}\n\n\\begin{proof}\nLet ${\\operatorname{rank}}_{\\mathbb F}\\{{\\operatorname{coef}}_A({\\boldsymbol x}^{\\boldsymbol a}) \\mid {\\boldsymbol x}^{\\boldsymbol a} \\in {M}\\} = k'$,\nfor some $k' \\le k$,\nand ${M}_{\\ell} = \\{ {\\boldsymbol x}^{\\boldsymbol a} \\in {M} \\mid {\\operatorname{supp}}({\\boldsymbol a}) < \\ell \\}$.\nWe need to show that \n${\\operatorname{rank}}_{{\\mathbb F}(y, t)}\\left\\{\n{\\operatorname{coef}}_{A''}({\\boldsymbol x}^{\\boldsymbol a}) \\mid {\\boldsymbol x}^{\\boldsymbol a} \\in {M}_{\\ell}\n\\right\\} = k'$.\n\nSince $A'({\\boldsymbol x})$ is $\\ell$-concentrated, \nwe have  that ${\\operatorname{rank}}_{{\\mathbb F}(t)}\\left\\{\n{\\operatorname{coef}}_{A'}({\\boldsymbol x}^{\\boldsymbol a}) \\mid {\\boldsymbol x}^{\\boldsymbol a} \\in {M}_{\\ell}\n\\right\\} = k'$.\nRecall that~$A'({\\boldsymbol x})$ is an evaluation of~$A''$ at $y = \\alpha_i$,\ni.e., $A' ({\\boldsymbol x}, t) = A''({\\boldsymbol x}, \\alpha_i, t)$ for some $\\alpha_i$.\nThus, for all ${\\boldsymbol x}^{\\boldsymbol a} \\in {M}$, we have \n${\\operatorname{coef}}_{A'}({\\boldsymbol x}^{\\boldsymbol a}) = {\\operatorname{coef}}_{A''}({\\boldsymbol x}^{\\boldsymbol a})|_{y=\\alpha_i}$.\n\nLet $C \\in {\\mathbb F}[t]^{k \\times {\\lvert {{M}_{\\ell}} \\rvert}}$ be the matrix \nwhose columns are~${\\operatorname{coef}}_{A'}({\\boldsymbol x}^{\\boldsymbol a})$, for ${\\boldsymbol x}^{\\boldsymbol a} \\in {M}_{\\ell}$.\nLet similarly\n$C' \\in {\\mathbb F}[y, t]^{k \\times {\\lvert {{M}_{\\ell}} \\rvert}}$ be the  matrix \nwhose columns are~${\\operatorname{coef}}_{A''}({\\boldsymbol x}^{\\boldsymbol a})$, for ${\\boldsymbol x}^{\\boldsymbol a} \\in {M}_{\\ell}$.\nThen we have $C = C' |_{y = \\alpha_i}$.\n\nAs ${\\operatorname{rank}}_{{\\mathbb F}(t)}(C) = k'$, there is a $k' \\times k'$ submatrix in~$C$, say indexed by~$(R,T)$,  \nsuch that $\\det ({{C}({R},{T})}) \\ne 0$.\nSince $\\det ({{C}({R},{T})})  = \\det({{C'}({R},{T})})|_{y = \\alpha_i}$,\nit follows that $\\det({{C'}({R},{T})}) \\ne 0$. \nHence, \nwe have\n${\\operatorname{rank}}_{{\\mathbb F}(y, t)}(C') = k'$.\nThus, the $(<\\ell)$-support coefficients of $A''$ span its coefficient space.\n\\end{proof}\n\nHence, the Lagrange interpolation gives us a single shift\nwhich works for all $\\ell$-variate ROABPs.\n\n\\begin{lemma}\n\\label{lem:singleshift}\nGiven $n,d,w$ and $\\ell = \\log(w^2+1)$, \nin time $(ndw)^{O(\\log \\ell)}$ one can compute a polynomial tuple\n${\\boldsymbol f}(t) \\in {\\mathbb F}[t]^n$ of degree $(ndw)^{O(\\log \\ell)}$\nsuch that for any $\\ell$-variate polynomial~$A({\\boldsymbol x})\n \\in {\\mathbb F}^{w \\times w}[{\\boldsymbol x}]$\n of individual degree~$d$\nthat can be computed by an ROABP of width~$w$,\nthe polynomial~$A({\\boldsymbol x}+{\\boldsymbol f}(t))$ is $\\ell$-concentrated.\n\\end{lemma}\n\n\\begin{proof}\nNote that the dimension $k$ of the underlying algebra is bounded by $w^2$.\n\n\nAfter shifting the polynomial $A({\\boldsymbol x})$ by~${\\boldsymbol L}(y,t)$ as defined above,\nits coefficients will be polynomials in~$y$ and~$t$, \nwith degree $d'=  dn (ndw)^{O(\\log \\ell)}$.\nConsider the determinant polynomial $\\det({{C'}({R},{T})})$ from the proof of Lemma~\\ref{lem:interpolation}.\n\nAs $k' \\leq k$,\n$\\det({{C'}({R},{T})})$ has degree bounded by $d'' := k d'$.\nSo, when we replace~$y$ by~$t^{d'' +1}$,\nit does not affect the non-zeroness of the determinant,\nand hence, the concentration is preserved.\nThus,\n${\\boldsymbol f} = {\\boldsymbol L}(t^{d'' +1},t)$ is an $n$-tuple of univariate polynomials in~$t$\nthat fulfils the claim of the lemma.\n\\end{proof}\n\nCombining Lemma~\\ref{lem:ellton} and Lemma~\\ref{lem:singleshift} we get the following. \n\n\n\n\\begin{lemma}\nGiven $n,d,w$, one can compute an $n$-tuple ${\\boldsymbol f}(t)$\nwith cost $(ndw)^{O(\\log \\log w)}$ such that\nfor any $n$-variate, individual degree-$d$\n polynomial $D({\\boldsymbol x}) \\in {\\mathbb F}^{w \\times w}[{\\boldsymbol x}]$ computed by a width-$w$ commutative ROABP,\n$D({\\boldsymbol x} + {\\boldsymbol f}(t))$ is $O(\\log w)$-concentrated. \n\\label{lem:ROABPconc}\n\\end{lemma}\n\nNote that if the polynomial $D({\\boldsymbol x}) \\in {\\mathbb F}^{w \\times w}[{\\boldsymbol x}]$\nis $\\ell$-concentrated then the polynomial $C({\\boldsymbol x})= U^{{\\mathsf T}} D T$\nis also $\\ell$-concentrated,\n where $U,T \\in {\\mathbb F}^{w \\times 1}$.\nThis is true because multiplication by $U^{\\mathsf T}$ and $T$ are linear operations.\nRecall that for polynomial $C({\\boldsymbol x}) \\in {\\mathbb F}[{\\boldsymbol x}]$, $O(\\log w)$-concentration means that there is \na monomial with $O(\\log w)$-support which has a nonzero coefficient.\n\nLemma~\\ref{lem:ROABPconc} gives a shift ${\\boldsymbol f}(t)$ of univariate polynomials. \nTo get a constant shift, we substitute $(ndw)^{O(\\log \\log w)}$ distinct values for $t$.\nAs the degree in $t$ is bounded by $(ndw)^{O(\\log \\log w)}$, \nat least for one value of $t$, the non-zeroness of the particular coefficient will be preserved.\n\n\n\n\n\nNow, we move on to the second step of Forbes, Shpilka and Saptharishi \\cite{FSS14}.\nThey give an $(ndw)^{O(\\log \\log w)}$-time hitting-set for an already $O(\\log w)$-concentrated\ncommutative ROABP. \nThey do this by reducing the PIT question to an $O(\\log w)$-variate ROABP \\cite[Lemma 7.6]{FSS14}. \n\n\n\\begin{lemma}[\\cite{FSS14}]\nLet $C({\\boldsymbol x}) \\in {\\mathbb F}[{\\boldsymbol x}]$ be an $n$-variate, individual degree-$d$ polynomial \ncomputed by a width-$w$ ROABP. \nSuppose $C({\\boldsymbol x})$ has an $(\\leq \\ell)$-support monomial with a nonzero coefficient. \nThen, there is a $\\poly(n,w,d)$-time computable $m$-variate \nmap $\\phi \\colon {\\boldsymbol x} \\to {\\mathbb F}[y_1,y_2, \\dots, y_m]$ such that\n$C(\\phi({\\boldsymbol x}))$ is a nonzero polynomial with degree $< d^2n^4$, where\n$m = O(\\ell^2)$.\nMoreover, $C(\\phi({\\boldsymbol x}))$ is computed by a width-$w$, $m$-variate commutative ROABP.\n\\label{lem:fss}\n\\end{lemma}\n\nFrom the results of \\cite{FS13,AGKS15}, we know that an $m$-variate, width-$w$ commutative\nROABP has an $(mdw)^{O(\\log m)}$-time\nhitting-set. \nCombining Lemma~\\ref{lem:ROABPconc} and Lemma~\\ref{lem:fss} with this fact\nand putting $m = O(\\log^2 w)$,\nwe get the following.\n\n\n\n\\begin{theorem}\n\\label{thm:commROABPhs}\nThere is an $(n {d} w)^{O(\\log \\log w)}$-time hitting-set for $n$-variate commutative ROABPs\nwith width $w$ and individual degree ${d}$.\n\\end{theorem}\n\n\\paragraph{Concentration in Set-multilinear Circuits:}\nSimilar to Theorem~\\ref{thm:commROABPhs}, it would be interesting\nto achieve the same time complexity for set-multilinear circuits. \nRecall from Section~\\ref{sec:setmulti} that a polynomial computed by a\ndepth-$3$ set-multilinear circuit can be written as $(1,1, \\dots, 1) \\cdot D$,\nwhere $D = D_1({\\boldsymbol x}_1) D_2({\\boldsymbol x}_2) \\cdots D_q({\\boldsymbol x}_q)$ is a product of linear polynomials\nover a commutative algebra.\nIt is easy to see that the same arguments as for commutative ROABP work here. \nHence, we get the following result analogous to Lemma~\\ref{lem:ROABPconc}.\n\n\\begin{corollary}\nGiven $n,k$, one can compute an $n$-tuple ${\\boldsymbol f}(t)$\nwith cost $(nk)^{O(\\log \\log k)}$ such that\nfor any $n$-variate polynomial $C({\\boldsymbol x})$ computed by a depth-$3$\nset-multilinear circuit with top fan-in $k$,\n$C({\\boldsymbol x} + {\\boldsymbol f}(t))$ is $O(\\log k)$-concentrated. \n\\end{corollary}\n\n\nHowever, it is not clear whether the second step of the hitting-set construction\n can be done for set-multilinear circuits,\ni.e., finding a better hitting-set by assuming that the polynomial is already concentrated\n(Lemma~\\ref{lem:fss}).\n\n\n\\section{Discussion}\nFor our first result (Theorem~\\ref{thm:knownROABPhs}), there are three directions of improvement.\nIdeally, one would like to have all three at once.\n\\begin{enumerate}\n\\item Find a similar hitting-set for the unknown-order case. \nIn fact, we conjecture that the same hitting-set (Lemma~\\ref{lem:recursivehs}) works\nfor the unknown-order case as well.\n\\item Get a hitting-set for all characteristic fields. \nIt is easy to construct examples over small characteristic fields where our hitting-set does not work.\n\\item Reduce the time complexity to polynomial time. \nTo achieve this, it seems one has to do away with the divide and conquer approach.\n\\end{enumerate}\nWe conjecture a polynomial-time hitting-set for the unknown-order case in Conjecture~\\ref{con:polyROABP}.\n\n\nAs mentioned earlier, the ideas here can help in finding a better PRG for ROBPs. \nIn particular, it is a big open question to find an $O(\\log n)$-seed-length PRG for\nconstant-width ROBPs (analogous to Corollary~\\ref{cor:constantwidth}).\n\n\n\n\\bibliographystyle{alpha}\n\\bibliography{specialROABP}\n\n\n\n", "itemtype": "equation", "pos": 52826, "prevtext": "\n\\end{itemize}\n\\end{definition}\n\nGurjar et al.~\\cite[Lemma 5.2]{GKST15} have shown that shifting by \na basis isolating weight assignment achieves concentration.\n\n\\begin{lemma}[Isolation to concentration]\nLet $A({\\boldsymbol x})$ be a polynomial over a $k$-dimensional algebra~${\\mathbb A}_k$.\nLet~${\\mathrm{w}}$ be a basis isolating weight assignment for~$A({\\boldsymbol x})$.\nThen $A({\\boldsymbol x} + t^{\\mathrm{w}})$ is $\\ell$-concentrated, where $\\ell = {\\lceil {\\log(k+1)} \\rceil}$\nand $t^{\\mathrm{w}}$ denotes the $n$-tuple $(t^{{\\mathrm{w}}(x_1)}, t^{{\\mathrm{w}}(x_2)}, \\dots, t^{{\\mathrm{w}}(x_n)})$.\n\\label{lem:lconc}\n\\end{lemma}\n\nWe now recall the construction of a basis isolating weight assignment for\nROABP from \\cite{AGKS15}. Here, we present a slightly modified version of their Lemma~8,\nwhich easily follows from it.\n\n\\begin{lemma}\n\\label{lem:ellweightFunction}\n\nLet ${\\boldsymbol x}$ be a set of $n$ variables.\nLet $D({{\\boldsymbol x}}) = D_1(x_{i_1}) D_2(x_{i_2}) \\dotsm D_{\\ell}(x_{i_{\\ell}})$\nbe an $\\ell$-variate polynomial over a $k$-dimensional algebra ${\\mathbb A}_k$.\nThen we can construct a basis isolating weight assignment \nfor $D({\\boldsymbol x})$ \n with the cost being $(\\poly(k, n, d))^{\\log \\ell}$,\nwhere $d$ is the individual degree.\n\\end{lemma}\n\nThe construction in \\cite[Lemma 8]{AGKS15} \nactually gives a family $\\mathcal{B}$ of $(k n d)^{O(\\log \\ell)}$\n weight assignments such that for any $\\ell$-variate ROABP,\nat least one of them is basis isolating.\nHowever, we are interested in a single map which works for every $\\ell$-variate \nROABP. \n\n\nTo get a single shift for every ROABP, \nwe follow the technique of~\\cite{FSS14,GKST15} and\n take a Lagrange Interpolation of all the $n$-tuples\nin the family $\\{t^{{\\mathrm{w}}}\\}_{{\\mathrm{w}} \\in \\mathcal{B}}$.\n\n\nLet $\\mathcal{F} = \\{{\\boldsymbol f}_1(t), {\\boldsymbol f}_2(t), \\dots, {\\boldsymbol f}_N(t)\\}$ be this family of $n$-tuples,\nwhere ${\\boldsymbol f}_i = \\{f_{i,1}(t), f_{i,2}(t), \\dots,$ $ f_{i,n}(t)\\}$ for each $i$.\n\n\n\n\n\n\nHere, $N = (knd)^{O(\\log \\ell)}$.\nLet their degrees be bounded by $D$, i.e.,\n$D = \\max \\{\\deg(f_{i,j}) \\mid i \\in [N] \\text{ and } j \\in [n]\\}.$\nFrom the construction in~\\cite{AGKS15}, $D= (knd)^{O(\\log \\ell)}$.\nAlso, the family~$\\mathcal{F}$ can be generated in time $(knd)^{O(\\log \\ell)}$.\n\nLet ${\\boldsymbol L}(y, t) \\in {\\mathbb F}[y, t]^n$ be the Lagrange interpolation of~$\\mathcal{F}$.\nThat is, for all $j \\in [n]$,\n", "index": 61, "text": "\n\\[\nL_j  = \\sum_{i \\in [N]} f_{i, j}(t) \\prod_{\\substack{{i' \\in [N]}\\\\ \n{i' \\ne i}}} \\frac{y-\\alpha_{i'}}{\\alpha_{i}-\\alpha_{i'}} \\, ,\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex25.m1\" class=\"ltx_Math\" alttext=\"L_{j}=\\sum_{i\\in[N]}f_{i,j}(t)\\prod_{\\begin{subarray}{c}{i^{\\prime}\\in[N]}\\\\&#10;{i^{\\prime}\\neq i}\\end{subarray}}\\frac{y-\\alpha_{i^{\\prime}}}{\\alpha_{i}-%&#10;\\alpha_{i^{\\prime}}}\\,,\" display=\"block\"><mrow><mrow><msub><mi>L</mi><mi>j</mi></msub><mo>=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mi>N</mi><mo stretchy=\"false\">]</mo></mrow></mrow></munder><mrow><msub><mi>f</mi><mrow><mi>i</mi><mo>,</mo><mi>j</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mtable class=\"ltx_align_c\" rowspacing=\"0.0pt\"><mtr><mtd><mrow><msup><mi>i</mi><mo>\u2032</mo></msup><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mi>N</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mtd></mtr><mtr><mtd><mrow><msup><mi>i</mi><mo>\u2032</mo></msup><mo>\u2260</mo><mi>i</mi></mrow></mtd></mtr></mtable></munder><mpadded width=\"+1.7pt\"><mfrac><mrow><mi>y</mi><mo>-</mo><msub><mi>\u03b1</mi><msup><mi>i</mi><mo>\u2032</mo></msup></msub></mrow><mrow><msub><mi>\u03b1</mi><mi>i</mi></msub><mo>-</mo><msub><mi>\u03b1</mi><msup><mi>i</mi><mo>\u2032</mo></msup></msub></mrow></mfrac></mpadded></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}]