[{"file": "1601.02697.tex", "nexttext": "\n\\noindent\nWhere $\\varphi(v) = \\varphi^{\\prime}(v)$ for every $v \\in V(G)$.\n\n\n\\begin{claimxxx}\nTree layout $T$ and along side with the bijective mapping $\\varphi$ is a solution for Min Tree Length problem of $G$.\n\\end{claimxxx}\nAssume there exist Tree layout $\\widetilde{T}$ and bijective mapping $\\widetilde{\\varphi}$ such that $LA(\\widetilde{T},\\widetilde{\\varphi}, G) < LA(T,\\varphi, G)$. Hence one can construct a tree layout $\\widetilde{T}^{\\prime}$ and bijective mapping $\\widetilde{\\varphi}^{\\prime}$ for $G^{\\prime}$ by subdividing the edge incident to leaf node $\\widetilde{\\varphi}(v)$ and introducing internal node $w$ which is directly connected\nto leaf node $\\widetilde{\\varphi}^{\\prime}(u)$. Therefore:\n\n", "itemtype": "equation", "pos": 11706, "prevtext": "\n\n\\spacing{\\normalsize}{0.98}\n\n\\setcounter{page}{1}     \n                         \n                         \n\\setcounter{tocdepth}{1} \n                         \n\\ifTR\n  \\pagenumbering{roman} \n\\else\n\\fi\n\\title{Average Delay of Routing Trees}\n\n\n\\author{ Saber Mirzaei \\\\\n       Boston University  \\\\\n        \\ifTR Boston, Massachusetts \\\\\n        \\href{mailto:smirzaei@bu.edu}{smirzaei{@}bu.edu}\n        \\else \\fi\n}\n\n   \\date{\\today}\n\n\\maketitle\n  \\ifTR\n     \\thispagestyle{empty} \n                           \n  \\else\n  \\fi\n\n\\vspace{-.3in}\n  \\begin{abstract}\n  The general communication tree embedding problem is the problem of mapping a set of communicating terminals,\nrepresented by a graph $G$, into the set\nof vertices of some physical network represented by a tree $T$.\nIn the case where\nthe vertices of G are mapped into the leaves of the host tree $T$ \nthe underlying tree is called a \\emph{routing tree}\nand\nif the internal vertices of $T$ are forced to have degree $3$, \nthe host tree is known as \\emph{layout tree}.\n\n\nDifferent optimization problems have been studied in the class of\ncommunication tree problems such as well-known minimum edge \\emph{dilation}\nand minimum edge \\emph{congestion} problems.\nIn this report we study the less investigate measure \\emph{i.e.}\n\\emph{tree length}, which is a representative for\naverage edge dilation (communication delay) measure and also for average\nedge congestion measure. \nWe show that finding a routing tree $T$ for an arbitrary graph $G$ with\nminimum tree length is an NP-Hard problem.\n  \\end{abstract}\n\n\\ifTR\n    \\newpage\n    \\tableofcontents\n    \\newpage\n    \\pagenumbering{arabic}\n\\else\n    \\vspace{-.2in}\n\\fi\n\n\\section{Definitions and Introductory Points}\n\\label{sect:def-not}\n  Consider a group of terminals communicating via a finite network $G=(V, E)$,\nwhere the set of vertices (finite set $V$) and edges (finite set $E$), respectively represent the\ncollection of terminals and their direct communication paths.\nWe show $|V|$ by $n$ and $|E|$ as $m$.\n\n\\noindent\nThe general communication tree embedding problem is the problem of mapping the set of terminals\ninto the set of vertices of some physical network represented by a tree $T$.\nAccordingly, the two vertices $v, u \\in V(G)$ that are directly connected via $e \\in E(G)$,\nare connected indirectly via some path $P_T(v,u)$ in $T$.\nIn the case where the vertices of $G$ are mapped to the leaves of the host tree,\nthe underlying tree is called a \\emph{routing tree}.\nIn this report we mostly focus on the case where the internal vertices of the\nhost tree have degree $3$ (known as \\emph{tree layout} problem).\nWe denote the sets of leaf nodes and internal nodes of tree $T$ respectively by $V_L(T)$ and $V_I(T)$.\n\\footnote{We try to use the term node in case of trees as opposed to the term vertex, which we use for general graphs.}\n\nFor a graph $G$ and a communication tree $T$ for $G$, there are different measures defined in literature.\nIn following we define the two measures that we are intrusted in this report.\nFor a comprehensive list of measures, an interested reader can refer to~\\cite{i2001layout}.\n\n\\begin{definition}{Edge Dilation}\nConsider a graph $G$ and a communication tree $T$ and a bijection $\\varphi$ from vertices of $G$ to leaf nodes of $T$. The \\emph{dilation} $\\lambda(uv,T,\\varphi,G)$ of an edge ${\\{ {u,v} \\}} \\in E(G)$\nis the distance between $\\varphi(u)$ and $\\varphi(v)$ in $T$.\n\\end{definition}\n\\noindent\nWe represent the distance of two vertices ${\\{ {u,v} \\}}$ in a graph $G$ with $d_G(u,v)$\n\n\n\\begin{definition}{Edge Congestion}\nGive a graph $G$ and a communication tree $T$ and and a bijective mapping $\\varphi: V(G) \\rightarrow V_L(T)$ . The \\emph{congestion} $\\delta(xv,T,\\varphi,G)$ and of an edge ${\\{ {x,y} \\}} \\in E(T)$\nis the the number of edges in ${\\{ {u,v} \\}} \\in E(G)$ that in $T$, the path $P_T(\\varphi(v),\\varphi(u))$ traverse trough ${\\{ {x,y} \\}}$.\n\\end{definition}\n\nBased on the definition of the communication tree for a graph $G$, removal of every edge ${\\{ {x,y} \\}} \\in E(T)$\npartitions the set of vertices of $G$ into two component. Hence every edge of tree corresponds to a cut in\n$G$. Therefore the congestion of ${\\{ {x,y} \\}} \\in E(T)$ is the size of the cut it corresponds to.\n\n\\noindent\nSeveral optimization problems can be defined based on these two measures.\n\\emph{Minimum tree layout dilation} is the problem of finding a tree layout\nfor a given graph $G$ such that the maximum edge dilation is minimized,\nwhere the maximum is taken over all edge of $G$.\nIn~\\cite{monien1985complexity} it is shown that the problem of finding a tree layout with minimum dilation is NP-hard, when the layout tree is rooted.\n\n\\noindent\nSimilarly, given a graph $G$, in \\emph{minimum tree layout congestion} problem the goal is to find\na tree layout $T$, such that the maximum edge congestion is minimized.\nIn~\\cite{seymour1994call} Seymour and Thomas show that the minimum tree layout congestion problem is polynomially solvable\nfor the case of planer graphs, and is NP-hard when considering general graphs.\nIn this report we study the \\emph{minimum tree layout length} problem (shortly called Min Tree Length), formally defined as it follows.\n\n\n\\begin{definition}{Minimum tree layout length}\nConsider the finite undirected graph $G=(V,E)$. The minimum tree layout length problem is the problem of\nfinding layout tree $T$ and a bijective mapping $\\varphi: V(G) \\rightarrow V_L(T)$ such that $L(T,\\varphi,G) = \\sum_{{\\{ {u,v} \\}} \\in E(G)} \\lambda(uv,T,\\varphi,G)$ is minimized.\n\\end{definition}\n\n\\noindent\nIt is not hard to see that $\\sum_{{\\{ {u,v} \\}} \\in E(G)} \\lambda(uv,T,\\varphi,G) = \\sum_{{\\{ {x,y} \\}} \\in E(T)} \\delta(xv,T,\\varphi,G)$. Hence, in the rest of\nthis report we may use them interchangeably.\n\n\nAccordingly, in the communication graph embedding problems,\nthe dilation of an edge ${\\{ {u,v} \\}} \\in E(G)$\nabstractly represent the communication delay between vertices $u$ and $v$.\nSimilarly the congestion of an edge $e \\in E(T)$ is a representative for the\ntraffic on the physical link $e$. Hence tree length measure corresponds to the\naverage delay between the vertices of $G$ and also to the average edge congestion of the host tree.\n\n\n\\section{Minimum Length of Tree Layout}\n\\label{sect:Tree-Lenght}\n  In the special case of tree layout problem, the underlying host graph is a tree $T$ where the\ndegree of every node is either 1 or 3 and the vertices of $G$ are being mapped to\nleaves of $T$.\nIn this section we study minimum tree layout length. We show that Min Tree Length problem\nis NP-hard for multi-graphs\\footnote{By multi-graph we refer to finite graphs with possibility of parallel edges and no loop.},\nand later on we show the problem stays NP-hard when restricted to the class of simple graphs.\n\n\n\n\\subsection{Min Tree Length of Complete Graphs}\n\\label{sec:complete-graph-optimal-layout}\n\\input{complete-graph-optimal-layout}\n\n\n\n\\subsection{Min Tree Length of Multi-Graphs}\n\\label{sec:multi-graph-optimal-layout}\n\\input{multi-graph-optimal-layout}\n\n\n\n\\subsection{Min Tree Length of Simple Graphs}\n\\label{sec:simple-graph-optimal-layout}\n\\input{simple-graph-optimal-layout}\n\n\n\\section{Layout Tree Problem in Relation with Graph Reassembling}\n\\label{sect:reassembling}\n  In this section we study the relation between tree layout problem and \\emph{graph reassembling} problem as defined in~\\cite{kfoury2015efficient}.\nGraph reassembling problem plays a key role in the efficiency of main programs in earlier work on a domain-specific language (DSL) for the design of flow networks~\\cite{BestKfoury:dsl11,Kfoury:sblp11,kfoury2013different}.\n\nConsider a simple graph graph $G = (V,E)$ (not necessarily connected), partitioned into the set of $|V|$ one-vertex components\nby cutting every edge into into two halves. Reassembling of the graph $G$ corresponds to the problem of finding\nthe sequence of edge reconnections $\\Theta$ that minimizes two measures that depend on the edge-boundary degrees of assembled components\nin the intermediate steps of reassembling $G$. The first step of $\\Theta$ initiates with the set of one-vertex components, and\nthe final step results in the initial graph $G$.\nThe optimization goal of the graph reassembling can be either minimizing the maximum edge-boundary degree encountered during the\nreassembling process, which is called the $\\alpha$-measure of the reassembling, or the sum of all edge-boundary\ndegrees, denoted by $\\beta$-measure. \n\n\\noindent\nThe reassembling sequence $\\Theta$ for graph $G$ correspond to a unique binary tree ${\\cal B}$ (called \\emph{binary reassembling tree}), where\nthe set of leaf nodes is bijectively related to the set of one-vertex components and the root node correspond to the reassembled graph $G$.\nEvery internal node $w \\in V_I({\\cal B})$, as the root of the a subtree ${\\cal B}_w$, correspond to the vertex induced sub-graph of $G$ comprising\nthe set of vertices represented by leaf nodes of ${\\cal B}_w$.\n\n\\noindent\nHence, the $\\alpha$-optimal reassembling problem for graph $G$ is the problem of finding\na \\emph{rooted} binary tree ${\\cal B}$ and a bijective mapping from vertices of $G$ to leaf node of ${\\cal B}$,\nsuch that the maximum edge congestion of ${\\cal B}$ is minimized.\nSimilarly the $\\beta$-optimal reassembling problem is the problem of finding\na \\emph{rooted} binary tree ${\\cal B}$ and a bijective mapping from vertices of $G$ to leaf node of ${\\cal B}$,\nwhere tree length of ${\\cal B}$ is minimized. It is easy to see that all the result for the minimum tree layout congestion problem\ncan be directly inferred for the case where the underlying tree is rooted. On the other hand\nthe same statement can not immediately be inferred for minimum tree layout length problem.\nTherefore in this section we study the Min Tree Length problem where the host graph is a rooted\nbinary tree (Min Rooted Tree Length problem for short).\n\\begin{lemma}\n\\label{lemma:min-tree-length-degree-1}\nMin Tree Length problem is NP-hard for the class of graphs ${\\cal G}_{\\nabla=1}$ where for every member $G \\in {\\cal G}_{\\nabla=1}$, $G$ is connected and exists $v \\in V(G)$ of degree $1$ (\\emph{i.e.} ${\\cal G}_{\\nabla=1}$ is a the class of graphs with min degree $\\nabla=1$).\n\n\\end{lemma}\n\\begin{proof}\n One dimidiate result of the methods that are used in proofs of theorems~\\ref{thr:multi-graph-tree-length-np-hard} and~\\ref{thr:simple-graph-tree-length-np-hard} is that the Min Tree Length\n problem stays NP-hard even for the class of \\emph{congested graphs}. A graph $G$ with minimum vertex degree $\\nabla$\n is congested if for every tree layout $T$ for $G$ it is the case $\\sigma(e,T,_,G) \\ge \\nabla$ for every edge $e \\in E(T)$.\n \\footnote{The graphs that are used in both proof are clearly congested graphs.}\n\n\\noindent\nConsider congested graph $G$ with min degree $\\nabla$. if $\\nabla = 1$ we are done, otherwise\nlet $v \\in V(G)$ be a vertex with degree $\\nabla$ and $G^{\\prime}$ be\nthe graph constructed by augmenting $G$ with a new vertex $u$ and edge ${\\{ {u,v} \\}}$.\nAlso let tree layout $T^{\\prime}$ and mapping $\\varphi^{\\prime}$  be a solution for\nMin Tree Length problem of $G^{\\prime}$ where ${\\{ {\\varphi^{\\prime}(v), w} \\}}$ is edge incident to leaf node $\\varphi^{\\prime}(v)$ (with congestion $\\nabla$). Is not hard to verify that it must be the case that ${\\{ {\\varphi^{\\prime}(u), w} \\}} \\in E_E(T^{\\prime})$.\n\n\\noindent\nLet $T$ be a layout tree for $G$, obtained from $T^{\\prime}$ after removing vertices $\\varphi^{\\prime}(u)$ and $w$ (and their incident edges)\nand introducing edge ${\\{ {\\varphi^{\\prime}(v), w^{\\prime}} \\}}$. Where $w^{\\prime}$ is the third neighbor of $w$ in $T^{\\prime}$.\nHence the following equality holds.\n\n", "index": 1, "text": "\\begin{align*}\nLA(T^{\\prime},\\varphi^{\\prime}, G^{\\prime}) = LA(T,\\varphi, G) + 2\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle LA(T^{\\prime},\\varphi^{\\prime},G^{\\prime})=LA(T,\\varphi,G)+2\" display=\"inline\"><mrow><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>T</mi><mo>\u2032</mo></msup><mo>,</mo><msup><mi>\u03c6</mi><mo>\u2032</mo></msup><mo>,</mo><msup><mi>G</mi><mo>\u2032</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo>,</mo><mi>\u03c6</mi><mo>,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow></mrow></math>", "type": "latex"}, {"file": "1601.02697.tex", "nexttext": "\n\\noindent\nWhich contradicts the assumption that $T^{\\prime}$ and $\\varphi^{\\prime}$  are a solution for\nMin Tree Length problem of $G^{\\prime}$.\n\\end{proof}\n\\noindent\nUsing the result of lemma~\\ref{lemma:min-tree-length-degree-1} it can be shown that Min Rooted Tree Length is NP-hard\nfor the class of non necessary connected graphs. Later on we extend the this result to the class of connected graphs.\n\n\n\n\\begin{theorem}\n\\label{lemma:disjoint-component-min-rooted-tree-length}\nConsider the finite undirected graph $G$ (non necessarily connected). The problem of finding a bijective mapping from\nthe vertices of $G$ so some rooted binary tree $T$ with minimum length is not polynomially solvable unless P=NP.\n\\end{theorem}\n\\begin{proof}\nWe proof this theorem using the NP-hardness of Min Tree Length problem for the class of ${\\cal G}_{\\nabla=1}$.\nHence given a graph $G \\in {\\cal G}_{\\nabla=1}$, we obtain a disconnected graph $\\overline{G} = G \\uplus G_0$ where $G_0 = ({\\{ {v} \\}}, {\\{ {} \\}})$ is a one-vertex\ngraph.\nAssume rooted binary tree $\\overline{T}$ and bijective mapping $\\overline{\\varphi}$ are the solution\nfor the Min Rooted Tree Length problem of the augmented graph $\\overline{G}$.\n\\begin{claimxxx}\n\\label{claim:disjoint-component-min-rooted-tree-length}\n\\begin{enumerate}[label=(\\Roman*)]\n  \\item $w_1 = \\overline{\\varphi} (v)$ is directly connected to the root node $r$ of $\\overline{T}$, and\n  \\item let $w_2$ be the second direct neighbor of the root of $\\overline{T}$. Node $w_2$ subdivides an edge (or equivalently, is connected to two edges) with congestion $1$. Figure~\\ref{fig:disjoint-rooted-tree-length-degree-1} depicts the claimed structure of $\\overline{T}$.\n\\end{enumerate}\n\n\n\\begin{figure}[h]\n        \\centering\n        \\includegraphics[scale=.7]\n        {disjoint-rooted-tree-length-degree-1.pdf}\n        \\caption{The structure of rooted tree layout for augmented graph $\\overline{G}$.}\n        \\label{fig:disjoint-rooted-tree-length-degree-1}\n\\end{figure}\n\n\n\\noindent\n\\end{claimxxx}\n\\paragraph{Proof of I.}\nAssume the opposite holds. Therefore $w_1 = \\overline{\\varphi} (v)$ is directly connected to an internal node of $w^{\\prime} \\in V_I( \\overline{T})$, where $w^{\\prime}$ is incident to two edge $e_1, e_2 \\in E(\\overline{T})$ such that $\\sigma(e_1, \\overline{T}, \\overline{\\varphi}, G) = \\sigma(e_2, \\overline{T}, \\overline{\\varphi}, G) > 0$. We construct an alternative rooted tree layout $\\overline{T}^{\\prime}$ from $\\overline{T}$ as described in following.\nWe remove edge ${\\{ {w_1, w^{\\prime}} \\}}$ and $w^{\\prime}$ and introducing an new edge, replacing $e_1$ and $e_2$. Also we introduce a new root node $r^{\\prime}$ and connect it to $w_1$ and $r$. Based on the construction process of $\\overline{T}^{\\prime}$, it is the case that $LA(\\overline{T}, \\overline{G}) - LA(\\overline{T}^{\\prime}, \\overline{G}) = \\sigma(e_2, \\overline{T}, \\overline{\\varphi}, \\overline{G}) > 0$, which contradicts the assumption of optimality of $\\overline{T}$.\n\\paragraph{Proof of II.}\nClearly exists edge $e \\in E(\\overline{T})$ such that $\\sigma(e, \\overline{T}, \\overline{\\varphi}, \\overline{G}) = 1$.\nHence assuming that $w_2$ subdivides an edge with congestion greater that $1$, similar to the approach in the proof of II, one can obtain an alternative rooted tree layout\n$\\overline{T}^{\\prime}$ with the contradictory property $LA(\\overline{T}^{\\prime}, \\overline{G}) < LA(\\overline{T}, \\overline{G})$.\n\n\n\\begin{claimxxx}\nGraph $G \\in {\\cal G}_{\\nabla=1}$ has tree length less than $k$, iff the augmented graph $\\overline{G}$\nhas a rooted tree layout with tree length less than $k+1$.\nMore specifically given an rooted tree layout $\\overline{T}$ and bijective mapping $\\overline{\\varphi}$ for augmented tree $\\overline{G}$ (with the structure presented in claim~\\ref{claim:disjoint-component-min-rooted-tree-length} and figure~\\ref{fig:disjoint-rooted-tree-length-degree-1}),\nremoving nodes $r$, $w_1$ and $w_2$ and joining the two edges of congestion $1$ incident to $w_2$,\nobtains an optimal tree layout $T$ and mapping $\\varphi$ for graph $G$ (where $\\varphi(u) = \\overline{\\varphi}(u)$ for every $u \\in V(G)$).\n\\end{claimxxx}\n\\paragraph{Proof.}\nIt is easy to see that $LA(\\overline{T}, \\overline{G}) = LA(T, G) + 1$.\nNow Assume there exist a tree layout $T^{\\prime}$ and bijective mapping $\\varphi^{\\prime}$ for $G$\nsuch that $LA(T^{\\prime},\\varphi^{\\prime}, G) < LA(T,\\varphi, G)$. On the other hand for every tree layout $T^{\\prime}$ for $G$, exists $e \\in E(T^{\\prime})$ where\n$\\sigma(e, T^{\\prime},_, G) = 1$. From $T^{\\prime}$ (and $\\varphi^{\\prime}$), an alternative rooted tree layout $\\overline{T}^{\\prime}$ (and bijective mapping $\\overline{\\varphi}^{\\prime}$) can be obtained by introducing three new nodes,\nnode $r$ designated as the root of $\\overline{T}^{\\prime}$, leaf node $w_1$, directly connected to $r$ (where $\\overline{\\varphi}^{\\prime}(w_1) = v$)\nand internal node $w_2$ directly connected to $r$ which subdivides edge $e$.\nIt can be verified that $LA(\\overline{T}^{\\prime},\\overline{\\varphi}^{\\prime}, \\overline{G}) = LA(T^{\\prime}, \\varphi^{\\prime}, G) + 1$.\nHence the following contradictory result concludes the proof of this theorem:\n\n", "itemtype": "equation", "pos": 12517, "prevtext": "\n\\noindent\nWhere $\\varphi(v) = \\varphi^{\\prime}(v)$ for every $v \\in V(G)$.\n\n\n\\begin{claimxxx}\nTree layout $T$ and along side with the bijective mapping $\\varphi$ is a solution for Min Tree Length problem of $G$.\n\\end{claimxxx}\nAssume there exist Tree layout $\\widetilde{T}$ and bijective mapping $\\widetilde{\\varphi}$ such that $LA(\\widetilde{T},\\widetilde{\\varphi}, G) < LA(T,\\varphi, G)$. Hence one can construct a tree layout $\\widetilde{T}^{\\prime}$ and bijective mapping $\\widetilde{\\varphi}^{\\prime}$ for $G^{\\prime}$ by subdividing the edge incident to leaf node $\\widetilde{\\varphi}(v)$ and introducing internal node $w$ which is directly connected\nto leaf node $\\widetilde{\\varphi}^{\\prime}(u)$. Therefore:\n\n", "index": 3, "text": "\\begin{align*}\nLA(\\widetilde{T}^{\\prime},\\widetilde{\\varphi}^{\\prime}, G^{\\prime}) = LA(\\widetilde{T},\\widetilde{\\varphi}, G) + 2 < LA(T^{\\prime},\\varphi^{\\prime}, G^{\\prime})\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle LA(\\widetilde{T}^{\\prime},\\widetilde{\\varphi}^{\\prime},G^{\\prime%&#10;})=LA(\\widetilde{T},\\widetilde{\\varphi},G)+2&lt;LA(T^{\\prime},\\varphi^{\\prime},G^%&#10;{\\prime})\" display=\"inline\"><mrow><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>T</mi><mo>~</mo></mover><mo>\u2032</mo></msup><mo>,</mo><msup><mover accent=\"true\"><mi>\u03c6</mi><mo>~</mo></mover><mo>\u2032</mo></msup><mo>,</mo><msup><mi>G</mi><mo>\u2032</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>T</mi><mo>~</mo></mover><mo>,</mo><mover accent=\"true\"><mi>\u03c6</mi><mo>~</mo></mover><mo>,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mn>2</mn></mrow><mo>&lt;</mo><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>T</mi><mo>\u2032</mo></msup><mo>,</mo><msup><mi>\u03c6</mi><mo>\u2032</mo></msup><mo>,</mo><msup><mi>G</mi><mo>\u2032</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.02697.tex", "nexttext": "\n\\end{proof}\n\n\n\n\\section{Tree Length of Routing Trees}\n\\label{sect:routing-trees}\n  In the previous sections we focused on the problem of embedding vertices of an input graph $G$\ninto leaf nodes of a host tree $T$, where the degree of every internal node of $T$ is $3$, known as\ntree layout problem.\nIn this section we extend some results to the general routing tree problems.\nIn this problem the vertices of the source graph $G$ are being embedded into the\nleaf nodes of some communication tree $T$ with fixed maximum degree $\\Delta$.\n\n\n\\begin{definition}{Minimum Routing Tree Length}\nGiven graph $G$ and integer $\\Delta$, Minimum Routing Tree Length problem (Min Routing Length for short)\nis the problem of finding tree $T$ with maximum degree $\\Delta$ and a bijective mapping $\\varphi:V(G)\\rightarrow V_L(T)$,\nsuch that $LA(T,\\varphi,G)$ is minimized.\n\\end{definition}\n\n\n\\noindent\nProof of our final result on Min Routing Length problem is built on some intermediate result as presented in what follows.\n\n\n\\begin{definition}{Fixed Size $k$-Clique Cover} Consider graph $G=(V,E)$ and $k$ positive integers $n_1, \\ldots, n_k$\nwhere $\\sum_{1 \\le i \\le k}{n_i} = n$. Fixed Size $k$-Clique Cover problem is the problem of partitioning $V$ into\n$k$ disjoint subsets  $V_1, \\ldots, V_k$ s.t. $G(V_i)$ is a clique of size $n_i$, for $1 \\le i \\le k$.\n\\end{definition}\n\n\n\\begin{lemma}\n\\label{lemma:fixed-k-clique-cover}\nFixed Size $k$-Clique Cover is NP-complete.\n\\end{lemma}\n\\begin{proof}\nSimilar to the proof of NP-completeness of Fixed Size $k$-Clique Cover problem as a variation of graph $k$-colorability problem.\n\\end{proof}\n\n\n\\begin{definition}{Equal Size $k$-Clique Cover} Given graph $G=(V,E)$ where $|V| = k\\times l$ for some $l \\in \\mathbb{N}$, Equal Size $k$-Clique Cover problem is the problem of partitioning $V$ into\n$k$ disjoint subsets  $V_1, \\ldots, V_k$ s.t. $G(V_i)$ is a clique of size $\\dfrac{n}{k}$, for $1 \\le i \\le k$ .\n\\end{definition}\n\\begin{lemma}\n\\label{lemma:equal-k-clique-cover}\nEqual Size $k$-Clique Cover problem is NP-complete.\n\\end{lemma}\n\\begin{proof}\nSimilar to the proof of NP-completeness of Equal Size $k$-Clique Cover problem.\n\\end{proof}\n\n\n\\noindent\nConsider the class of graphs where for every graph $G$ in this class, $\\exists l \\in \\mathbb{N}$ such that $|V(G)| = k\\times (k-1)^{l}$.\nEqual Size $k$-Clique Cover problem stays NP-complete for this class. Concisely in what follows,\na polynomial reduction from Equal Size $k$-Clique Cover problem for general graphs is presented.\nGiven graph $G=(V,E)$ where $|V| = k\\times n^{\\prime}$ for $n^{\\prime} \\in \\mathbb{N}$, one can obtain graph $G^{\\prime}$ by augmenting\n$G$ with $k$ complete components $C_1,\\ldots,C_k$ of size $(k-1)^l - n^{\\prime}$, where $l$ is the smallest integer such that $(k-1)^{l} \\ge n^{\\prime}$. Also in $G^{\\prime}$ every newly introduces vertex $v \\in V(C_1) \\uplus \\ldots \\uplus V(C_k)$ is connected to\nevery vertex $u \\in V(G)$. It is not hard to check that $|V(G^{\\prime})| = k\\times (k-1)^{l}$ and more importantly\n$G$ is a positive instance of Equal Size $k$-Clique Cover problem iff $G^{\\prime}$ is a positive instance of Equal Size $k$-Clique Cover problem.\n\n\\noindent\nIn the rest of this section we only consider graph of order $|V(G)| = k\\times (k-1)^{l}$. Obviously all the harness results\nfor this class immediately extend to the class of general sized graphs.\n\n\n\n\n\n\\begin{theorem}\n\\label{thr:multi-graph-routing-length-np-hard}\nGiven multi-graph $G$ and integer $\\Delta$, the problem of finding a routing tree $T$\nand bijective mapping $\\varphi: V(G) \\rightarrow V_L(T)$ with minimum tree length is NP-hard.\n\\end{theorem}\n\\begin{proof}\nSimilar to the proof of theorem~\\ref{thr:multi-graph-tree-length-np-hard}, it can be shown that the\nEqual Size $k$-Clique Cover problem is not harder than Minimum Routing Tree Length problem.\n\n\\noindent\nHence, consider graph $G$ as the input of the Equal Size $k$-Clique Cover problem where \n$|V(G)| = k\\times (k-1)^{l}$ for some $l \\in \\mathbb{N}$.\nLet $G^{\\prime}$ be the multi-graph obtained from $G$ by introducing $M = m\\times(2n-2)$ parallel edges\nbetween every two vertices $u, v \\in V(G)$.\nTherefore $G^{\\prime} = G \\uplus \\widetilde{G}$, where complete multi-graph $\\widetilde{G}$,\nis a vertex induced subgraph of $G^{\\prime}$.\nUsing similar reasoning as in the proof of theorem~\\ref{thr:multi-graph-tree-length-np-hard},\n$\\widetilde{G}$ dictates the structure of optimal routing tree for $G^{\\prime}$.\nIn other words, the problem of finding optimal routing tree $T$ and mapping $\\varphi$ for $G^{\\prime}$\nreduces to the problem of finding mapping $\\varphi$ from vertices of original graph $G$\nto the leaf nodes of a fixed-structure tree $T$ such that $LA(T, \\varphi, G)$ is minimized.\nBased on corollary~\\ref{coral:opt-tree-layout-complete-graph} $T \\in \\mathfrak{T}(k, k)$.\n\n\\noindent\nRemoving the only central node of $T \\in \\mathfrak{T}(k, k)$ partitions $T$\ninto $k$ subtrees $\\mathcal{T}_1, \\mathcal{T}_2, \\ldots, \\mathcal{T}_k \\in \\mathfrak{T}(k, k)$ of the same order and $(k-1)^l$\nleaf nodes.\nAs explained with more details in the proof of theorem~\\ref{thr:multi-graph-tree-length-np-hard},\nit can be inferred that $G$ is a positive instance of the Equal Size $k$-Clique Cover problem (in other words\nvertices of $G$ can be partitioned into $k$ equal sized complete sub-graphs $G_1,G_2,\\ldots,G_k$)\niff given routing tree $T$ and mapping $\\varphi$ as the solution for Min Routing Length problem (with $\\Delta = k$),\n$\\varphi$ maps vertices of $G_i$ to leaf nodes of $\\mathcal{T}_i$ for $1 \\le i \\le k$.\n\n\\end{proof}\n\n\n\\Hide\n{\\footnotesize\n\\printbibliography\n}\n\n\n{\\footnotesize \n\\bibliographystyle{plainurl} \n   \n\\bibliography{allbibs}\n}\n\n\\ifTR\n\n\\else\n\\fi\n\n\n", "itemtype": "equation", "pos": 17903, "prevtext": "\n\\noindent\nWhich contradicts the assumption that $T^{\\prime}$ and $\\varphi^{\\prime}$  are a solution for\nMin Tree Length problem of $G^{\\prime}$.\n\\end{proof}\n\\noindent\nUsing the result of lemma~\\ref{lemma:min-tree-length-degree-1} it can be shown that Min Rooted Tree Length is NP-hard\nfor the class of non necessary connected graphs. Later on we extend the this result to the class of connected graphs.\n\n\n\n\\begin{theorem}\n\\label{lemma:disjoint-component-min-rooted-tree-length}\nConsider the finite undirected graph $G$ (non necessarily connected). The problem of finding a bijective mapping from\nthe vertices of $G$ so some rooted binary tree $T$ with minimum length is not polynomially solvable unless P=NP.\n\\end{theorem}\n\\begin{proof}\nWe proof this theorem using the NP-hardness of Min Tree Length problem for the class of ${\\cal G}_{\\nabla=1}$.\nHence given a graph $G \\in {\\cal G}_{\\nabla=1}$, we obtain a disconnected graph $\\overline{G} = G \\uplus G_0$ where $G_0 = ({\\{ {v} \\}}, {\\{ {} \\}})$ is a one-vertex\ngraph.\nAssume rooted binary tree $\\overline{T}$ and bijective mapping $\\overline{\\varphi}$ are the solution\nfor the Min Rooted Tree Length problem of the augmented graph $\\overline{G}$.\n\\begin{claimxxx}\n\\label{claim:disjoint-component-min-rooted-tree-length}\n\\begin{enumerate}[label=(\\Roman*)]\n  \\item $w_1 = \\overline{\\varphi} (v)$ is directly connected to the root node $r$ of $\\overline{T}$, and\n  \\item let $w_2$ be the second direct neighbor of the root of $\\overline{T}$. Node $w_2$ subdivides an edge (or equivalently, is connected to two edges) with congestion $1$. Figure~\\ref{fig:disjoint-rooted-tree-length-degree-1} depicts the claimed structure of $\\overline{T}$.\n\\end{enumerate}\n\n\n\\begin{figure}[h]\n        \\centering\n        \\includegraphics[scale=.7]\n        {disjoint-rooted-tree-length-degree-1.pdf}\n        \\caption{The structure of rooted tree layout for augmented graph $\\overline{G}$.}\n        \\label{fig:disjoint-rooted-tree-length-degree-1}\n\\end{figure}\n\n\n\\noindent\n\\end{claimxxx}\n\\paragraph{Proof of I.}\nAssume the opposite holds. Therefore $w_1 = \\overline{\\varphi} (v)$ is directly connected to an internal node of $w^{\\prime} \\in V_I( \\overline{T})$, where $w^{\\prime}$ is incident to two edge $e_1, e_2 \\in E(\\overline{T})$ such that $\\sigma(e_1, \\overline{T}, \\overline{\\varphi}, G) = \\sigma(e_2, \\overline{T}, \\overline{\\varphi}, G) > 0$. We construct an alternative rooted tree layout $\\overline{T}^{\\prime}$ from $\\overline{T}$ as described in following.\nWe remove edge ${\\{ {w_1, w^{\\prime}} \\}}$ and $w^{\\prime}$ and introducing an new edge, replacing $e_1$ and $e_2$. Also we introduce a new root node $r^{\\prime}$ and connect it to $w_1$ and $r$. Based on the construction process of $\\overline{T}^{\\prime}$, it is the case that $LA(\\overline{T}, \\overline{G}) - LA(\\overline{T}^{\\prime}, \\overline{G}) = \\sigma(e_2, \\overline{T}, \\overline{\\varphi}, \\overline{G}) > 0$, which contradicts the assumption of optimality of $\\overline{T}$.\n\\paragraph{Proof of II.}\nClearly exists edge $e \\in E(\\overline{T})$ such that $\\sigma(e, \\overline{T}, \\overline{\\varphi}, \\overline{G}) = 1$.\nHence assuming that $w_2$ subdivides an edge with congestion greater that $1$, similar to the approach in the proof of II, one can obtain an alternative rooted tree layout\n$\\overline{T}^{\\prime}$ with the contradictory property $LA(\\overline{T}^{\\prime}, \\overline{G}) < LA(\\overline{T}, \\overline{G})$.\n\n\n\\begin{claimxxx}\nGraph $G \\in {\\cal G}_{\\nabla=1}$ has tree length less than $k$, iff the augmented graph $\\overline{G}$\nhas a rooted tree layout with tree length less than $k+1$.\nMore specifically given an rooted tree layout $\\overline{T}$ and bijective mapping $\\overline{\\varphi}$ for augmented tree $\\overline{G}$ (with the structure presented in claim~\\ref{claim:disjoint-component-min-rooted-tree-length} and figure~\\ref{fig:disjoint-rooted-tree-length-degree-1}),\nremoving nodes $r$, $w_1$ and $w_2$ and joining the two edges of congestion $1$ incident to $w_2$,\nobtains an optimal tree layout $T$ and mapping $\\varphi$ for graph $G$ (where $\\varphi(u) = \\overline{\\varphi}(u)$ for every $u \\in V(G)$).\n\\end{claimxxx}\n\\paragraph{Proof.}\nIt is easy to see that $LA(\\overline{T}, \\overline{G}) = LA(T, G) + 1$.\nNow Assume there exist a tree layout $T^{\\prime}$ and bijective mapping $\\varphi^{\\prime}$ for $G$\nsuch that $LA(T^{\\prime},\\varphi^{\\prime}, G) < LA(T,\\varphi, G)$. On the other hand for every tree layout $T^{\\prime}$ for $G$, exists $e \\in E(T^{\\prime})$ where\n$\\sigma(e, T^{\\prime},_, G) = 1$. From $T^{\\prime}$ (and $\\varphi^{\\prime}$), an alternative rooted tree layout $\\overline{T}^{\\prime}$ (and bijective mapping $\\overline{\\varphi}^{\\prime}$) can be obtained by introducing three new nodes,\nnode $r$ designated as the root of $\\overline{T}^{\\prime}$, leaf node $w_1$, directly connected to $r$ (where $\\overline{\\varphi}^{\\prime}(w_1) = v$)\nand internal node $w_2$ directly connected to $r$ which subdivides edge $e$.\nIt can be verified that $LA(\\overline{T}^{\\prime},\\overline{\\varphi}^{\\prime}, \\overline{G}) = LA(T^{\\prime}, \\varphi^{\\prime}, G) + 1$.\nHence the following contradictory result concludes the proof of this theorem:\n\n", "index": 5, "text": "\\begin{align*}\nLA(\\overline{T}^{\\prime},\\overline{\\varphi}^{\\prime}, \\overline{G}) < LA(T,\\varphi, G) + 1 = LA(\\overline{T}, \\overline{\\varphi}, \\overline{G})\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle LA(\\overline{T}^{\\prime},\\overline{\\varphi}^{\\prime},\\overline{G%&#10;})&lt;LA(T,\\varphi,G)+1=LA(\\overline{T},\\overline{\\varphi},\\overline{G})\" display=\"inline\"><mrow><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>T</mi><mo>\u00af</mo></mover><mo>\u2032</mo></msup><mo>,</mo><msup><mover accent=\"true\"><mi>\u03c6</mi><mo>\u00af</mo></mover><mo>\u2032</mo></msup><mo>,</mo><mover accent=\"true\"><mi>G</mi><mo>\u00af</mo></mover><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mrow><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>T</mi><mo>,</mo><mi>\u03c6</mi><mo>,</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mrow><mi>L</mi><mo>\u2062</mo><mi>A</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>T</mi><mo>\u00af</mo></mover><mo>,</mo><mover accent=\"true\"><mi>\u03c6</mi><mo>\u00af</mo></mover><mo>,</mo><mover accent=\"true\"><mi>G</mi><mo>\u00af</mo></mover><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}]