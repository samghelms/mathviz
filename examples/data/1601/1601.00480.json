[{"file": "1601.00480.tex", "nexttext": "~\n   ~{displaymath}~\n   ~{equation}~\n   ~{eqnarray}~\n   ~{eqnarray*}~\n\\end{quote}\nAs of version 3.00 you can activate this by the package option\n~[displaymath]~.  You can keep existing explicit ~{linenomath}~\nwrappers without harm.  \n\nThis will probably not work with AMSmath.\n\nOther solutions to make {\\texttt{\\itshape lineno.sty}}.sty work with display math are either\nugly or less stable.  The ugly possibility is to precede every display\nmath with an empty line, or better with\n\\begin{quote}\n  ~{\\par\\nobreak\\noindent}~\n\\end{quote}\nbut this gains you nothing compared to using the ~{linenomath}~\nenvironment, since you still have to modify your document.\n\n\\end{linenumbers*}\n\n\n\\subsection{\\texttt{\\itshape rlineno}}\n\n\\begin{runninglinenumbers}\nIt is currently not possible to put a ~\\linelabel~ into math mode.\nThis should not impose problems with inline math, since you can attach\nthe label just outside the math shift, like\\linelabel{rll1} \n\\begin{quote}\n  ~... \\linelabel{~<label>~}$x=f(y)$ ...~\n\\end{quote}\nbut to refer to a line in display math, you cannot label it directly. \n\\end{runninglinenumbers}\n\n\\begin{pagewiselinenumbers}\nThe extension \\texttt{\\itshape rlineno} offers a solution,\nallowing to refer to a line number with an offset.  \n\nThis extension is now available with plain {\\texttt{\\itshape lineno.sty}}.sty v3.00.\n\nYou put the ~\\linelabel~ at the end of the preceeding line, and refer\nto that number, plus 1 or, in case of multiline displays, by any other\noffset.\\linelabel{rll2}\n\\begin{quote}\n  ~...\\linelabel{~<label>~}~ \\\\\n  ~\n", "itemtype": "equation", "pos": -1, "prevtext": "\n\\begin{runninglinenumbers}\n\\setlength\\linenumbersep{1cm}\n\\maketitle\n\\thispagestyle{empty}\n\\resetlinenumber\n\\tableofcontents\n\\clearpage\n\\setcounter{page}{1}\n\\pagewiselinenumbers\n\n\\section{When to use {\\texttt{\\itshape lineno.sty}}.sty}\n\nThe primary use of {\\texttt{\\itshape lineno.sty}}.sty is to get line numbers in your LaTeX\ndocument.  {\\texttt{\\itshape lineno.sty}}.sty directly supports line numbers in various\nmodes, and if you have any wishes that are not directly supported,\nchances are good that {\\texttt{\\itshape lineno.sty}}.sty can be adapted to do it.  And if it\nturns out to be difficult with {\\texttt{\\itshape lineno.sty}}.sty, then it will be even more\ndifficult without.\n\nThere is one class of cases however, where {\\texttt{\\itshape lineno.sty}}.sty is not the most\nappropriate tool.  When your text already comes in lines, like source\nlistings, tables, poetry,  then {\\texttt{\\itshape lineno.sty}}.sty will propably do the job,\nbut other tools could do it much more efficiently.\n\n{\\texttt{\\itshape lineno.sty}}.sty can only number lines in the main text.  Lines in any kind\nof boxes cannot be numbered.  But see section \\ref{sec:ilineno} below.\n\n{\\texttt{\\itshape lineno.sty}}.sty is especially useful when the text is broken into lines by\n\\TeX\\ itself.  In this case, the task to attach line numbers is not\neasy, and a tool like {\\texttt{\\itshape lineno.sty}}.sty has good chances to break when used\ntogether with other packages.\n\nOn the other hand, {\\texttt{\\itshape lineno.sty}}.sty proved to be quite stable, and I did\nnot get any reports of complete failure yet.\n\nWith {\\texttt{\\itshape lineno.sty}}.sty, you can refer to the line numbers via \\LaTeX s\n~\\ref~ and ~\\pageref~ macros.\n\nThere are other applications, not directly related to line numbering.\nWhenever you want to attach something to your text, after a paragraph\nwas broken into lines, across pagebreaks, lineno may do the job.\n\n\\begin{bframe}\n  Say, you need a frame around some text, but the text should be able\n  to break across pages, {\\texttt{\\itshape lineno.sty}}.sty can be used to draw rules on both\n  margins, which can be completed at the top and bottom by some\n  special environment, see section\\,\\,\\ref{sec:bframe}.\n\\end{bframe}\n\nThere may be cases, where other packages do a better job, e.g.,\n\\url{CTAN:macros/latex/contrib/supported/numline}.\n\n\n\\section{Where to get {\\texttt{\\itshape lineno.sty}}.sty}\n\n{\\texttt{\\itshape lineno.sty}}.sty is available on the \\emph{Comprehensive TeX Archive\n  Network} (CTAN), e.g, \\url{ftp:// ftp.tex.ac.uk/ tex-archive/\n  macros/ latex/ contrib/ supported/ lineno/ lineno.sty}.\n\nThe home of {\\texttt{\\itshape lineno.sty}}.sty is \\url{http:// www.nevis.columbia.edu/\n  ~stephan/ tex/ #lineno}.  Here you can get the latest version.\n\n\\end{runninglinenumbers}\n\n\\section{How to use {\\texttt{\\itshape lineno.sty}}.sty}\n\nAs any other \\LaTeXe\\ package, you need to load it with\n\\begin{quote}\n   ~\\usepackage[~<options>~]{lineno}~\n\\end{quote}\n\n\\subsection{Package options}\n\nThe available <options> are:\n\\begin{description}\n\n\\item[\\texttt{[left]}:]  Put the line numbers into the left margin\n  (default). \n\n\\item[\\texttt{[right]}:]  Put the line numbers into the right margin.\n\n\\item[\\texttt{[switch]}:]  Put the line numbers into the outer margin\n  (left on even numbered pager, right on odd numbered pages).\n\n\\item[\\texttt{[switch*]}:]  Put the line numbers into the inner\n  margin.\n  \n\\item[\\texttt{[pagewise]}:] Number the lines from 1 on each page.\n\n\\item[\\texttt{[running]}:]  Continuously number the lines (default).\n  \n\\item[\\texttt{[modulo]}:] Print line numbers only if they are\n  multiples of five.\n\n\\item[\\texttt{[mathlines]}:]  When using the ~{linenomath}~\n  environment for display math, put line numbers also on the lines of\n  the display.\n\n\\item[\\texttt{[displaymath]}:]  Automatically wrap the standard LaTeX\n  display math environments in ~{linenomath}~.\n\n  \\begin{itshape}\n    Change from v2 to v3:  ~[mathlines]~ was called ~[displaymath]~\n    before, and ~[displaymath]~ was ~\\usepacke{mlineno}~.\n  \\end{itshape}\n  \n\\end{description}\nAll effects of these option can also be obtained by calling certain\nmacros later in the document, except for ~[displaymath]~.\n\n\\subsection{How to turn on line numbering}\n\nThe line numbering is not activated by default.  If you want line\nnumbers, you have to turn it on.  The simplest way is to say\n\\begin{quote}\n    ~\\linenumbers~\n\\end{quote}\nThis will turn on line numbers within the current group, according to\nthe currently selected mode.  If you do it right at the beginning, the\nwhole document will be numbered.\n\n~\\linenumbers~ takes effect only when a paragraph is finished.  This\nis important if you use ~\\linenumbers~ for a single paragraph only.\nThis will \\emph{not} work:\n\\begin{quote}\\obeylines\n   ~\\begingroup~\\\\%\n   ~\\linenumbers~\n     Text of your paragraph.\n   ~\\endgroup~\n\\end{quote}\nbecause the ~\\endgroup~ terminates the effect of ~\\linenumbers~ before\nthe paragraph is finished.  The solution is to insert an empty line,\nor an explicit ~\\par~ before the ~\\endgroup~.\n\nThe prefered solution is to use an enviroment:\n\\begin{quote}\\obeylines\n   ~\\begin{linenumbers}~ \n     Text of your paragraph. \n   ~\\end{linenumbers}~\n\\end{quote}\n~\\end{linenumbers}~ terminates the paragraph for you.  It will also\nmake sure that the next paragraph is not indented, if there is no\nempty line in between.\n\nThis form will not finish any preceeding paragraph.  If you do not\nleave an empty line before ~\\begin{linenumbers}~, the previous\n  paragraph may also get line numbers (this is not true after a list\n  environment).\n\nA quite esoteric form to number a single paragraph is:\n\\begin{quote}\\obeylines\n     Text of your paragraph.\n     ~{\\linenumbers\\par}~\n\\end{quote}\nHere, the ~\\linenumbers~ is turned on in a group that just executes\nthe ~\\par~ to terminate the previous paragraph.  Only this paragraph\nwill have line numbers. (~\\par~ is exactly equivalent to an empty\nline).\n\n\n\\subsection{How to turn off line numbering}\n\nYou do not usualy turn of line numbering explicitly, but rather\nrestrict line numbering to a group or an environment.  However, you\ncan turn it off with the command\n\\begin{quote}\n   ~\\nolinenumbers~\n\\end{quote}\nThis macro can also be used as an environment.  The same restrictions\napply as for ~\\linenumbers~.\n\n\n\\section{Numbering modes}\n\nAttaching line numbers after \\TeX\\ has broken the paragraph into lines\nis already quite a difficult job for \\TeX.  Why?  Because \\TeX\\ does\nnot normally give you any control after line breaking.  {\\texttt{\\itshape lineno.sty}}.sty\ndoes it by pretending that the current page ends after each and every\nline.  This keeps \\TeX\\ quite busy, but works.\n\nOften, you want the line numbers to depend on the page they finally end\nup.  E.g., you want the numbers to start with~ ~1 one each new page,\nor you want them to appear on the outer margins in twoside mode.  This\nis an almost impossible demand, but {\\texttt{\\itshape lineno.sty}}.sty can do it, at some\ncost, in terms of computing time, memory, and disk space.  {\\texttt{\\itshape lineno.sty}}.sty\nneeds to write a note into the auxiliary file for each line in the\nnumbered part of the text, and \\TeX\\ keeps some memory for each page,\nand all that takes some computation time to figure out on which page\nthe line was in the last \\LaTeX\\ run.\n\nThus, there are two basic numbering modes\n\\begin{enumerate}\n  \n\\item \\emph{Running} line numbers.  The numbers run continuously along\n  the document, without considering page breaks.  \n  \n  The line numbers can be reset, or preset at any point in the\n  document (except within a paragraph).  Margin switching (or any\n  other dependence on the page breaks) is not possible.\n  \n\\item \\emph{Pagewise} line numbers.  The lines on each page are\n  numbered from one.  Automatic margin switching is possible.\n\n  \\emph{Running} mode can be simulated in pagewise mode, to get\n  automatic margin switching with continuous line numbers, but without\n  the ability to reset/preset the line numbers anywhere in the\n  document.  \n  \n  Any feature that depends on the page breaks must use this mode.\n\n\\end{enumerate}\n\n\\begin{runninglinenumbers*}\n\n\\subsection{\\emph{Running} line numbers}\n\nThis is the default mode of operation.  The lines of your text are\nnumbered continuously across page breaks.  \n\nYou cannot get automatic margin switching in this mode, because at the\ntime when the line numbers are attached, it is not yet decided on\nwhich page the line will end up.  However, you can simulate continuous\nline numbers in \\emph{pagewise} mode (see below), where margin\nswitching becomes possible.\n\nYou get this mode by\n\\begin{itemize}\\raggedright\n\\item \\emph{not} specifying any of the package options\n  ~[switch,pagewise]~,\n\\item specifying the package option ~[running]~,\n\\item give the command ~\\setrunninglinenumbers~ in the document, or\n\\item turn on line numbering with ~\\runninglinenumbers~ or\n  ~\\begin{runninglinenumbers}~. \n\\end{itemize}\n\n\\subsubsection{Reseting or setting the line number}\n\nYou can reset the line number with\n\\begin{quote}\n  ~\\resetlinenumber[~<number>~]~\n\\end{quote}\nwhere the default is to reset the line number to one.\n\nAlternatively, you can give the line number in an optional argument to\nany command that turns on the line numbering in this mode:\n\\begin{quote}\\obeylines\n  ~\\linenumbers[~<number>~]~ \n  ~\\runninglinenumbers[~<number>~]~ \n  ~\\begin{linenumbers}[~<number>~]~\n  ~\\begin{runninglinenumbers}[~<number>~]~\n\\end{quote}\nor reset the line number to 1 with any of the following:\n\\begin{quote}\\obeylines\n  ~\\linenumbers*~ \n  ~\\runninglinenumbers*~ \n  ~\\begin{linenumbers*}~\n  ~\\begin{linenumbers}*~\n  ~\\begin{runninglinenumbers*}~\n  ~\\begin{runninglinenumbers}*~\n\\end{quote}\nThis section of the manual is enclosed in\n\\begin{quote}\\obeylines\n  ~\\begin{runninglinenumbers*}~\n  ~\\end{runninglinenumbers*}~\n\\end{quote}\n\\end{runninglinenumbers*}\n\n\n\\begin{pagewiselinenumbers}\n\n\\subsection{\\emph{Pagewise} line numbers}\n\nBasically, this mode prints line numbers starting with 1 on top of\neach page, counting only lines where this mode is active.  If you\nturn on this mode in the middle of a page, the numbers start with 1\nat that point.\n\nThe \\emph{pagewise} mode of operation is quite a bit more work for\n\\TeX.  When the line numbers are printed, \\TeX\\ does not know on which\npage the current line will go.  To get \\emph{pagewise} mode working,\n\\LaTeX\\ has to remember on which page the line went in a previous run.\nThis information is written into the ~.aux~ file, and like a table of\ncontents, you will not see the numbers until you run \\LaTeX\\ at least\ntwice on the document.  Sometimes the information in the ~.aux~ file\nbecomes invalid in a way that causes {\\texttt{\\itshape lineno.sty}}.sty to hang.  In such a\ncase you'll have to delete all ~.aux~ files of the document to get it\ngoing again.\n\nYou get this mode by\n\\begin{itemize}\\raggedright\n\\item specifying the package option\n  ~[pagewise]~, but not ~[running]~,\n\\item give the command ~\\setpagewiselinenumbers~ in the document, or\n\\item turn on line numbering with ~\\pagewiselinenumbers~ or\n  ~\\begin{pagewiselinenumbers}~. \n\\end{itemize}\n\nYou cannot reset or preset the line numbers in \\emph{pagewise} mode.\nThis mode uses a different counter than \\emph{running} mode.  You can\nswitch between the mode, and the \\emph{running} numbers will continue\nwhere they left of, unless you reset the counter.\n\n\\subsubsection{Margin switching}\n\nAs a side effect of all the business to find out on which page the lines\nend up, margin switching becomes possible.  It is now possible to\nprint the line number differently on odd and even pages.  The command\n\\begin{quote}\n  ~\\switchlinenumbers~\n\\end{quote}\nwill cause the line numbers to be printed on the outer margins, on the\nright side for odd pages, and on the left side for even numbered\npages.  If you add a star, the numbers go on the inner margins\n\\begin{quote}\n  ~\\switchlinenumbers*~\n\\end{quote}\nYou can achieve the same effect by specifying the package\noption ~[switch]~ or ~[switch*]~ together with ~[pagewise]~. \n\nMargin switching is independent of any ~[twoside]~ option of the\ndocument class.\n\n\\subsubsection{\\emph{Running} mode with margin switching}\n\nMargin switching is not possible in \\emph{running} mode, but you can\nabuse the pagewise mode to produce continuous line numbers.  This mode\nis activated with the command\n\\begin{quote}\n  ~\\runningpagewiselinenumbers~\n\\end{quote}\nIt is not possible to reset the line number counter for this mode, the\nlines will be numbered starting from one at the beginning of the\ndocument, and continue.  You can switch back to real pagewise mode with\n\\begin{quote}\n  ~\\realpagewiselinenumbers~\n\\end{quote}\nbut when you resume \\emph{running-pagewise}, the numbers will not\ncontinue where they left off, but jump by the number of lines that\nwere numbered \\emph{real-pagewise}.\n\nThe package options ~[switch]~ and ~[switch*]~ will turn on\n\\emph{running pagewise} mode with margin switching, unless you also\nspecify ~[pagewise]~.\n\nFinally, if you give these options together with ~[running]~, like\n\\begin{quote}\n  ~\\usepackage[switch,pagewise,running]{lineno}~\n\\end{quote}\nthe mode is set to plain \\emph{running} line numbers, but later in\nyour document, if you say ~\\pagewiselinenumbers~, the setings of the\n~[switch]~ and ~[pagewise]~ options will take effect.\n\n\\subsubsection{Page numbers}\n\nAny pages that contain \\emph{pagewise} numbered lines must have a\ndifferent page number.  This may cause trouble with titlepages or\nsimmilar fudging with the page number counter in the document.  (I am\ntalking about ~\\c@page~ or ~\\count 0~ here, not ~\\thepage~).\n\nIf you get strange errors, like \\emph{``the use of} ~\\nextLN~\n\\emph{does not match its definition''}, you should first delete all\n~.aux~ files, and rerun \\LaTeX\\ several times.  If the error does not\nreappear, fine, else check your page numbers, including those that are\nnot printed.  You may use \\emph{running} line numbers on your\ntitlepages, since the page boundaries are predefined, usually.\n\n\\end{pagewiselinenumbers}\n\n\\begin{linenumbers*}\n\n\\subsection{Margin selection}\n\nIn any mode you can select a fixed margin on which the numbers shall\nbe printed.  You can either give a package option ~[left]~ or\n~[right]~, or change the margin within the document with\n\\begin{quote}\\obeylines\n  ~\\leftlinenumbers~\n\\rightlinenumbers\n  ~\\rightlinenumbers~\n\\end{quote}\n\\rightlinenumbers\nNeither of these commands actually turns on line numbering.  The\nmargin setting is changed for the currently selected mode\n\\emph{running} or \\emph{pagewise}.  If you want to set the margin for\nboth modes, append a star\n\\begin{quote}\\obeylines\n  ~\\leftlinenumbers*~\n  ~\\rightlinenumbers*~\n\\end{quote}\nThe default is ~\\leftlinenumbers*~.\n\n\\end{linenumbers*}\n\n\n\\subsection{Summary of mode selection commands}\n\nThe following commands change the major line numbering mode.\n\\begin{description}\\itemsep=0pt\\parskip=0pt\n\\item [|\\setrunninglinenumbers]\n\\item [|\\setpagewiselinenumbers] \\leavevmode\\\\\n  set the current mode, without activating or deactivating line\n  numbering. \n\\item [|\\runninglinenumbers\\texttt{*[{<number>]}}]\n\\item [|\\pagewiselinenumbers] \\leavevmode\\\\\n  set the current mode and activate line numbering, optionally reset\n  (~*~), or set the line number for \\emph{running} mode. \n\\end{description}\nThe following commands do not change the major mode, but modify the\nthe behaviour of \\emph{pagewise} mode\n\\begin{description}\\itemsep=0pt\\parskip=0pt\n\\item [|\\realpagewiselinenumbers]\n\\item [|\\runningpagewiselinenumbers] \\leavevmode\\\\\n  select if \\emph{pagewise} mode should number continuously, or really\n  pagewise.\n\\end{description}\n\n\n\\subsection{Summary of margin selection commands}\n\nThe following command select into which margin the numbers should be\nprinted \n\\begin{description}\\itemsep=0pt\\parskip=0pt\n\\item [|\\leftlinenumbers\\texttt*]\n\\item [|\\rightlinenumbers\\texttt*] \\leavevmode\\\\\n  put the line numbers in the left/right margin in both modes.\n\\item [|\\leftlinenumbers]\n\\item [|\\rightlinenumbers] \\leavevmode\\\\\n  put the line number into the left/right margin in the currently\n  selected mode.\n\\item [|\\switchlinenumbers] \\leavevmode\\\\\n  put the line numbers into the outer margin, when using\n  \\emph{pagewise} mode.\n\\item [|\\switchlinenumbers\\texttt*] \\leavevmode\\\\\n  put the line numbers into the inner margin, when using\n  \\emph{pagewise} mode.\n\\end{description}\n\n\\begin{linenumbers*}\n\\modulolinenumbers[2]\n\n\\subsection{Numbering only one in five lines}\n\nYou can ask lineno to print the line numbers only if they devide by\n<n>, by saying\n\\begin{quote}\n  ~\\modulolinenumbers[~<n>~]~\n\\end{quote}\nIf you omit the optional argument, it will be every fifth line, or\nwhatever you used last (the current value of the counter\n~linenumbermodulo~).  You get the same effect by giving the package\noption ~[modulo]~.\n\nIf you set <n> to 1, the modulo value is not changed, but modulo\nnumbering is turned off.  \n\nChanging the counter ~linenumbermodulo~ does not turn on modulo\nnumbering, it just changes the modulo, if it is turned on without the\noptional argument.\n\nThis section of the manual is enclosed in\n\\begin{quote}\n  ~\\begin{linenumbers*}~ \\\\ \n  ~\\modulolinenumbers[2]~\n\n  ~\\end{linenumbers*}~\n\\end{quote}\n\n\\end{linenumbers*}\n\n\\begin{pagewiselinenumbers}\n\\switchlinenumbers\n\n\\subsection{How the line numbers look like}\n\nThis section of the manual is enclosed in\n\\begin{quote}\n ~\\begin{pagewiselinenumbers}~ \\\\\n ~\\switchlinenumbers~\n\n ~\\end{pagewiselinenumbers}~\n\\end{quote}\nBy default, the line numbers are set in\n\\begin{quote}\n  ~\\normalfont\\tiny\\sffamily~\n\\end{quote}\nright justified to 10\\,pt left of the nominal left edge of the text.\nIf the number is to appear on the right margin, it is right justified\nto 20\\,pt right of the nominal right edge of the text.\n\nYou can easily change that, of course.  The font is defined by the\nmacro\n\\begin{quote}\n  ~{\\normalfont\\small\\bfseries}~\n\\end{quote}\nYou can redefine it to make the numbers appear in a differnt font\n(with ~\\renewcommand~).  I'll say right here in this manual\n\\begin{quote}\n  ~\\renewcommand\\linenumberfont{\\normalfont\\bfseries\\small}~\n\\end{quote}\nThe distance on the left margin can be changed with\n\\begin{quote}\n  ~\\setlength\\linenumbersep{~<distance>~}~\n\\end{quote}\nThe distance on the right margin is ~\\linenumbersep~ plus\n~\\linenumberwidth~, both are set to 10\\,pt by default.\nLet's do right here\n\\setlength\\linenumberwidth{1cm}\n\\begin{quote}\n  ~\\setlength\\linenumbersep{1cm}~\n\\end{quote}\nI put the command at the end of the paragraph, but it effects the\nwhole paragraph, because that is where everything happens: at the end\nof the paragraphs.\n\nThe line numbers are printed as arabic numerals, as defined in the\nmacro\n\\begin{quote}\n  ~\\thelinenumber~\n\\end{quote}\nfor the \\LaTeX\\ counter ~{linenumber}~.  You can redefine that, as\nfor any other \\LaTeX\\ counter.  E.g.,\n\\begin{quote}\n  ~\\renewcommand\\thelinenumber{\\roman{linenumber}}~\n\\end{quote}\n(For heavy duty line numbering, you should use \\LaTeX s internal\nformat, e.g., ~\\@roman\\c@linenumber~.)\n\n\\subsubsection{Deeper customization}\n\nThe line number is attached to the line by the macro\n\\begin{quote}\n  ~\\makeLineNumber~\n\\end{quote}\nwhich is expanded inside a zero width ~\\hbox~ alligned to the\norigin of the current line (left edge, baselines alligned).  You can\ndo anything in this macro.  Let's assume you do not want line numbers\nat all, but just attach something else to each line of text: this is\nthe macro to modify.  You can refer to the line number by the macro\n~\\LineNumber~, which prints the current value of the counter\n~{linenumber}~, or nothing if \\emph{modulo} mode is active, and the\nnumber does not divide by ~{linenumbermodulo}~.  You should not modify\nthis macro when using any form of \\emph{pagewise} mode.  At the end of\nthis paragraph I put the following\n\\begin{runninglinenumbers}\n   {\\hss$\\rightarrow$\\ \\rlap{\\hskip\\textwidth\\ $\\leftarrow$}}\n\\end{runninglinenumbers}\n\\begin{quote}\n  ~\\begin{runninglinenumbers}~\\\\\n  ~\\renewcommand\\makeLineNumber~\\\\\n  ~ {\\hss$\\rightarrow$\\ \\rlap{\\hskip\\textwidth\\ $\\leftarrow$}}~\\\\\n  ~\\end{runninglinenumbers}~\n\\end{quote}\n\nRedefining ~{}~ cuts deep into the linenumber mode\nsetting.  If you still want to use the basic modes \\emph{running} and\n\\emph{pagewise} you should go one level up and modify one of the\nfollowing macros, which are called by (or assigned to)\n~{}~ depending on the current mode, and with the counter\n~{linenumber}~ allready adjusted for the current page when using\n\\emph{pagewise} mode.\n\\begin{quote}\\obeylines\n  ~\\makeLineNumberRunning~\n  ~\\makeLineNumberOdd~\n  ~\\makeLineNumberEven~\n\\end{quote}\nThe first is used in \\emph{running} mode, the other two in\n\\emph{pagewise} mode.  If you modify those, you cut into the\nmargin selection mechanism as advertised above.  You will have to call\na mode selection command after changing these macros, to make them take\neffect (at least for ~\\makeLineNumberRunning~).  \n\nYou can go up one more step.  The margin selection commands redefine\nthe above macros by making them equivalent (~\\let~) to one of the\nfollowing macros\n\\begin{quote}\\obeylines\n  ~\\makeLineNumberLeft~\n  ~\\makeLineNumberRight~\n\\end{quote}\nYou may redefine these, and afterwards issue a margin selection\ncommand followed by a mode selection command.  The default definitions\nare\n\\begin{quote}\n  ~\\def\\makeLineNumberLeft~\\\\\n  ~  {\\hss{\\normalfont\\bfseries\\small}\\LineNumber\\hskip\\linenumbersep}~\n\\end{quote}\nand\n\\begin{quote}\n  ~\\def\\makeLineNumberRight~\\\\\n  ~  {{\\normalfont\\bfseries\\small}\\hskip\\linenumbersep\\hskip\\textwidth~\\\\\n  ~    \\hbox to\\linenumberwidth{\\hss\\LineNumber}\\hss}~\n\\end{quote}\nWhatever you do, use ~\\LineNumber~ to print the digits.  This ensures\nthat the modulo mode setting is acknowledged.  If you want to\ncustomize that as well, this is the macro to change.  ~\\LineNumber~\neventually refers to ~{\\roman{linenumber}}~, which is the place to customize\nthe numerals themselves.  At the end of this paragraph I said\n\\renewcommand\\LineNumber{\\ifodd\\value{linenumber} {\\roman{linenumber}})\\fi}\n\\begin{quote}\n   ~\\renewcommand\\LineNumber~\\\\\n   ~   {\\ifodd\\value{linenumber} {\\roman{linenumber}})\\fi}~\n\\end{quote}\nLine number references are not affected by ~\\LineNumber~, but you\nshould keep track of ~{\\roman{linenumber}}~.  Look at the following\nreference\n\\begin{quote}\n  The setion title of the next section is on page \\pageref{ll1}, line\n  \\ref{ll1}.\n\\end{quote}\nThere is a mismatch in the definition of ~{\\roman{linenumber}}~, from the\npoint of the refered line to the reference here.\n\\end{pagewiselinenumbers}\n\n\\begin{pagewiselinenumbers}\n\n\\section[Line number references]\n        {Line number references\\linelabel{ll1}}\n\n{\\texttt{\\itshape lineno.sty}}.sty allows to refer to a line number with ~\\ref{~<label>~}~.\nThe label is set by ~\\linelabel{~<label>~}~, anywhere in a paragraph\nthat gets line numbers.  If you put a ~\\linelabel~ somewhere else, the\nline number it refers to is pretty meaningless, but no error message\nis issued.  (This section begins on line \\ref{ll1}, page\n\\pageref{ll1} and ends on line \\ref{ll2}, page \\pageref{ll2}.)\n\nReferences work both in \\emph{running} and \\emph{pagewise} modes.\nHowever, you have to be very careful when using both \\emph{real\n  pagewise} mode and \\emph{running pagewise} mode: The mode setting\nmust be the same during reference as during labeling.\n\nThe restrictions on placing a ~\\linelabel~ are the same as for a\n~\\marginpar~.  (In fact, they are implemented as fake ~\\marginpar~s.)\nE.g., the linelabel on the section header of this chapter could not be\nplaced in the straight forward way, because it would cause an error in\nthe table of contents.  (It should be disabled during \\emph{toc}\nprocessing.)  Instead, I typed\n\\begin{quote}\n  ~\\section[Line number references]~\\\\\n  ~        {Line number references\\linelabel{ll1}}~\n\\end{quote}\nThis works fine, with the standard \\LaTeX\\ ~{article}~ document\nstyle.  If more generic markup is required, you should avoid things\nlike this (you should avoid {\\texttt{\\itshape lineno.sty}}.sty altogether, in that case).\n\n~\\linelabel~ does not work in display math.  (Why,  you do not use\nequation numbers?)\n\nThe ~\\linelabel~ command starts a new paragraph if it is issued after\nan empty line.  It will properly ignore further whitespace before the\nfirst word of text. Thus you can easily get a label to the first line\nof a paragraph.  \n\nFurthermore, ~\\linelabel~ uses \\LaTeX s standart tricks to avoid\nunnecessary spaces if you place is between two words with spaces\naround, but you should not do that anyway, if you want to make sure\nthat the label applies to a certain word in the text.  You should\nattach the line label to the word in question without intervening\nspaces, either before of after the word.  If you leave spaces both\nbefore and after the ~\\linelabel~ command, the current implemenation\nattaches the line label to the following word (by ignoring the\ntrailing space).\n\nSpecial care should be taken at the end of a paragraph.  You better\nput the line label without intervening spaces behind the period, like\nthis \n\\begin{quote}\n  ~This is the end of this section.\n  ~\\linelabel{ll2}~\n\\end{quote}\nThis is the end of this section.\n\\linelabel{ll2}\n\n\\end{pagewiselinenumbers}\n\n\\begin{linenumbers*}\n\n\n\\section{Known incompatibilities}\n\nThis section will expand whenever somebody discovers problems when\nusing {\\texttt{\\itshape lineno.sty}}.sty together with other \\LaTeX\\ packages.\n\n\\subsection{\\texttt{wrapfig.sty}}\n\n{\\texttt{\\itshape lineno.sty}}.sty used to have problems with \\texttt{wrapfig.sty}, but this\nis solved but {\\texttt{\\itshape lineno.sty}}.sty, version 2.05.\n\n\n\\section{Extension packages}\n\nThe extension packages were abolished with version v3.00 of\n{\\texttt{\\itshape lineno.sty}}.sty.  One package, ~itemrule.sty~, was dropped, the others\nwere put directly into the the main {\\texttt{\\itshape lineno.sty}}.sty package file.\n\n\\subsection{Display math, \\texttt{\\itshape mlineno}}\n\n{\\texttt{\\itshape lineno.sty}}.sty does not work well with display math.  The parts of a\nparagraph preceeding a display math will not get line numbers.  The\nreason is that the paragraph is not finished, but the part above the\ndisplay is broken into lines anyway.\n\nLet me demonstrate the effect.  This paragraph contains a\n~{displaymath}~ environment.  The part before the Formula does not get\nline numbers.  Here comes the Formula\n\\begin{displaymath}\n    \\mathrm{6\\,H_2O + 6\\,CO_2 \\ \\rightarrow\\  C_6H_{12}O_6 + 6\\,O_2}\n\\end{displaymath}\nwhich makes the line numbers disappear.  The trailing part of the\nparagraph does get line numbers.  \n\nThere are several means to solve the problem, but none of them is\nfully satisfactory.  {\\texttt{\\itshape lineno.sty}}.sty defines a ~{linenomath}~ environment,\nwhich can be wrapped around a display math to make the line numbering\nwork.  This will work with any kind of display math, even if you use\nexplicit ~$$~ pairs.  There is a ~*~-form ~{linenomath*}~ which also\nnumbers the lines of the display itself, as good as it can.  Here\ncomes an example use of ~{linenomath*}~\n\\begin{linenomath*}\n\\begin{eqnarray*}\n  b_1 &=& a_{11}x_1 + a_{12}x_2 \\\\\n  b_2 &=& a_{21}x_1 + a_{22}x_2   \n\\end{eqnarray*}\n\\end{linenomath*}\nwrapping an ~{egnarray*}~ like this\n\\begin{quote}\n  ~\\begin{linenomath*}~\\\\\n  ~  \\begin{eqnarray*}~\\\\\n  ~    b_1 &=& a_{11}x_1 + a_{12}x_2 \\\\~\\\\\n  ~    b_2 &=& a_{21}x_1 + a_{22}x_2~\\\\   \n  ~  \\end{eqnarray*}~\\\\\n  ~\\end{linenomath*}~\n\\end{quote}\nSpecifying the package option ~[mathlines]~, causes the\n~{linenomath}~ environment to switch its function with its *-form.\nThis allows you to later decide if you want the numbers on the formulas\nor not, without putting in stars everywhere (as long as you have been\nconsistent).\n\nThe ~{linenomath}~ wrapper does nothing if line numbering is not\nactivated.  You do not need to remove them if you decide to omit the\nline numbering later (although you still have to load {\\texttt{\\itshape lineno.sty}}.sty).\n\nThe \\texttt{\\itshape mlineno} extension redefines the standard \\LaTeX\\ \ndisplay math environments to wrap themselves automatically into\n~{linenomath}~:\n\\begin{quote}\\obeylines\n   \n", "index": 1, "text": "\\[~ ~\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"~{}~{}\" display=\"block\"><mi/></math>", "type": "latex"}, {"file": "1601.00480.tex", "nexttext": "~ \\\\\n  ~... the formula in line \\lineref[+1]{~<label>~}~ \n\\end{quote}\nThe offset calculation is different for pagewise or running line\nnumbers, and you will have to make sure the right method is used. \n\\end{pagewiselinenumbers}\n\nThe macro ~\\lineref[~<offset>~]{~<label>~}~ uses the method of the\ncurrently selected mode (line numbering need not be activated).  To\nspecify the mode explicitly, use ~\\linerefr~ or ~\\linerefp~ for\nrunning or pagewise mode respectively.\n\nFor example, the manual sets a ~\\linelabel{rll1}~ at the end of the\nline preceeding the single line quote environment at\nline\\,\\linerefr[+1]{rll1} in the first paragraph of this chapter, and\nrefered to it via\n\\begin{quote}\n  ~\\linerefr[+1]{rll1}~\n\\end{quote}\nand another one preceeding the quote environment in the second\nparagraph of this chapter, with the central line\nnumbered\\,\\linerefp[+3]{rll2}, which I just refered to via\n\\begin{quote}\n  ~\\linerefp[+3]{rll2}~\n\\end{quote}\n\\begin{runninglinenumbers}\nIf the correct mode is selected (e.g., ~\\setrunninglinenumbers~),\nyou can use ~\\lineref[+1]{rll1}~ to refer to\nline\\,\\lineref[+1]{rll1}.\n\\end{runninglinenumbers}\n\n\n\\subsection{\\texttt{\\itshape numquote}}\n\nThis extension defines two environments, each of them with a *-form or\nalternatively an optional argument.\n\\begin{quote}\\obeylines\n  ~\\begin{numquote}~\n  ~\\end{numquote}~\n\\end{quote}\nis like ~{quote}~,\n\\begin{quote}\\obeylines\n  ~\\begin{numquotation}~\n  ~\\end{numquotation}~\n\\end{quote}\nis like ~{quotation}~, but with the lines numbered.  Numbering\nrestarts with 1 each time it is used, except you use the *-form, or\nspecify the line number to start with in an optional argument.\n\\begin{numquote}\nThe line numbers set to the left of the text, indented by the same\namount as the quote or quotation.  This works as expected even if the\nquote appears in a nested list. \n\\end{numquote}\nTo customize the distance from the text or the shape of the\nnumbers, you can modify the macros ~\\quotelinenumbersep~ and\n~\\quotelinenumberfont~ respectively.\n\nAs of version 3.00, this is available directly with {\\texttt{\\itshape lineno.sty}}.sty.\n\n\\clearpage\n\n\\subsection{\\texttt{\\itshape ilineno}}\n\\label{sec:ilineno}\n\n\\begin{center}\n\\noindent\\fbox{\\parbox{0.8\\textwidth}{\n  \\internallinenumbers \\resetlinenumber[13]\n  Sometimes you need line numbers within a |\\parbox\\ or figure.  This\n  extension can do that, if the text is simple enough.  It works by\n  drawing a ladder of numbers next to the paragraph, each number\n  vertically separated by |\\baselineskip\\ from the other.  This\n  obviously dose not work nicely with anything but straight text.\n  Extra high lines (like this: $\\displaystyle x=\\frac AB$) will\n  disturb the alignment.  The power of {\\texttt{\\itshape lineno.sty}}.sty is not necessary to\n  achieve this, but you may need both in one document with a somewhat\n  coherent interface, and some of the necessary infrastructure from\n  {\\texttt{\\itshape lineno.sty}}.sty is actually useful.\n}}\\end{center}\n\n\nThe preceding paragraph was set like this:\n\\begin{quote}\n  ~\\begin{center}\\fbox{\\parbox{0.8\\textwidth}{~ \\\\\n    ~\\internallinenumbers~ \\\\\n    ~\\resetlinenumber[13]~ \\\\\n    ~ ~ Sometimes you need \\dots \\\\\n  ~}}\\end{center}~\n\\end{quote}\n\n\\subsection{\\texttt{\\itshape itemrule.sty}}\n\nSomebody asked me if he can get a rule next to an itemized item, from\nthe bullet downwards.  This style did that.  It was unstable and of\nlittle interest, so it is gone from the {\\texttt{\\itshape lineno.sty}}.sty distribution.\n\n\\subsection{\\texttt{\\itshape bframe}}\n\\label{sec:bframe}\n\n\\setlength\\bframesep{10pt}\n\\begin{bframe}\n{\\texttt{\\itshape lineno.sty}}.sty can be used for unexpected purposes.  The environment \n\\begin{quote}\\obeylines\n  ~\\begin{bframe}~\n  ~\\end{bframe}~\n\\end{quote}\ndraws boxes around some text, even across page breaks.  At a page\nbreak, the box is open (it is difficult to fix that).  There are two\nparameters:\n\\begin{description}\\itemsep=0pt\\parskip=0pt\n\\item [|\\bframesep] \\leavevmode\\\\\n  defines the separation of the box from the text.\n\\item [|\\bframerule] \\leavevmode\\\\\n  defines the thickness of the lines around the text.\n\\end{description}\n\nIt works by asking {\\texttt{\\itshape lineno.sty}}.sty to draw small rules left and right to\nthe lines.  The total height of the rules is ~\\baselineskip~ plus\n~\\bframesep~. This leaves some extra space for extra high lines.\n\nThe current version is very preliminary.  In a future version there\nmay be a possibility to move the vertical lines inwards for indented\ntext.  The box may optionally be closed at page breaks.  It will not\nlikely be possible to have a colored background in the box, at least\nnot with a graphics driver that cannot put a background behind\nexisting foreground (Postscript cannot, I've been told).  Tell me how\nto make a gray background, like block dots on transparent, and I can\ndo shaded boxes.\n\n\\end{bframe}\n\n\\section{How to print the documented source}\n\n\\begin{bframe}\n{\\texttt{\\itshape lineno.sty}}.sty is written in three programming languages: \\TeX, sh,\nand awk.\n\nThe file can be loaded as a \\LaTeXe\\ package as it is.  However, if\nyou feed it into a Unix shell, like\n\\begin{quote}\n   ~csh>  source ./lineno.sty~\n\\end{quote}\nit will produce the files ~lineno.tex~ and ~lineno.dvi~, which is the\ndocumented source of {\\texttt{\\itshape lineno.sty}}.sty.  If you want to learn how it works,\nor you need to adapt {\\texttt{\\itshape lineno.sty}}.sty for some special requirements, you\nshould read that document.\n\\end{bframe}\n\n\n", "itemtype": "equation", "pos": -1, "prevtext": "~\n   ~{displaymath}~\n   ~{equation}~\n   ~{eqnarray}~\n   ~{eqnarray*}~\n\\end{quote}\nAs of version 3.00 you can activate this by the package option\n~[displaymath]~.  You can keep existing explicit ~{linenomath}~\nwrappers without harm.  \n\nThis will probably not work with AMSmath.\n\nOther solutions to make {\\texttt{\\itshape lineno.sty}}.sty work with display math are either\nugly or less stable.  The ugly possibility is to precede every display\nmath with an empty line, or better with\n\\begin{quote}\n  ~{\\par\\nobreak\\noindent}~\n\\end{quote}\nbut this gains you nothing compared to using the ~{linenomath}~\nenvironment, since you still have to modify your document.\n\n\\end{linenumbers*}\n\n\n\\subsection{\\texttt{\\itshape rlineno}}\n\n\\begin{runninglinenumbers}\nIt is currently not possible to put a ~\\linelabel~ into math mode.\nThis should not impose problems with inline math, since you can attach\nthe label just outside the math shift, like\\linelabel{rll1} \n\\begin{quote}\n  ~... \\linelabel{~<label>~}$x=f(y)$ ...~\n\\end{quote}\nbut to refer to a line in display math, you cannot label it directly. \n\\end{runninglinenumbers}\n\n\\begin{pagewiselinenumbers}\nThe extension \\texttt{\\itshape rlineno} offers a solution,\nallowing to refer to a line number with an offset.  \n\nThis extension is now available with plain {\\texttt{\\itshape lineno.sty}}.sty v3.00.\n\nYou put the ~\\linelabel~ at the end of the preceeding line, and refer\nto that number, plus 1 or, in case of multiline displays, by any other\noffset.\\linelabel{rll2}\n\\begin{quote}\n  ~...\\linelabel{~<label>~}~ \\\\\n  ~\n", "index": 3, "text": "\\begin{equation}~ \\\\\n  ~     y=f'(x)~ \\\\\n  ~\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"~{}\\\\&#10;~{}y=f^{\\prime}(x)~{}\\\\&#10;~{}\" display=\"block\"><mrow><mpadded lspace=\"6.6pt\" width=\"+6.6pt\"><mi>y</mi></mpadded><mo>=</mo><mrow><msup><mi>f</mi><mo>\u2032</mo></msup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo rspace=\"9.1pt\" stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}]