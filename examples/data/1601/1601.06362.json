[{"file": "1601.06362.tex", "nexttext": "\nThe MBR point is defined by\n\n", "itemtype": "equation", "pos": 3079, "prevtext": "\n\\sloppy\n\n\\title{Progress on High-rate MSR Codes: Enabling Arbitrary Number of Helper Nodes}\n\n\n \\author{\n\\IEEEauthorblockN{Ankit Singh Rawat}\n\\IEEEauthorblockA{CS Department\\\\\n     Carnegie Mellon University\\\\\n     Pittsburgh, PA 15213\\\\\n     Email:~asrawat@andrew.cmu.edu.}\n\\and\n\\IEEEauthorblockN{O. Ozan Koyluoglu}\n   \\IEEEauthorblockA{Department of ECE\\\\\n     The University of Arizona\\\\\n     Tucson, AZ 85721\\\\\n     Email:~ozan@email.arizona.edu.}\n\\and\n\\IEEEauthorblockN{Sriram Vishwanath}\n   \\IEEEauthorblockA{Department of ECE\\\\\n     The University of Texas at Austin\\\\\n     Austin, TX 78712\\\\\n     Email:~sriram@austin.utexas.edu.}\n }\n\n\n\\interdisplaylinepenalty=2500 \n\n\\allowdisplaybreaks\n\n\\maketitle\n\n\n\n\n\n\n\n\n\n\n\\begin{abstract}\nThis paper presents a construction for high-rate MDS codes that enable bandwidth-efficient repair of a single node. Such MDS codes are also referred to as the minimum storage regenerating (MSR) codes in the distributed storage literature. The construction presented in this paper generates MSR codes for all possible number of helper nodes $d$ as $d$ is a design parameter in the construction. Furthermore, the obtained MSR codes have polynomial sub-packetization (a.k.a. node size) $\\alpha$. The construction is built on the recent code proposed by Sasidharan et al.~\\cite{SAK15}, which works only for $d = n-1$, i.e., where all the remaining nodes serve as the helper nodes for the bandwidth-efficient repair of a single node. The results of this paper broaden the set of parameters\nwhere the constructions of MSR codes were known earlier.\n\\end{abstract}\n\n\\begin{IEEEkeywords}\nCodes for distributed storage, regenerating codes, minimum storage regenerating (MSR) codes, sub-packetization.\n\\end{IEEEkeywords}\n\n\n\n\n\n\n\n\n\n\\section{Introduction}\n\nConsider a distributed storage system with $n$ storage nodes which stores a file of size ${\\cal M}$ symbols over a finite field. The distributed storage system (DSS) is referred to be an $(n, k)$-DSS if it has {\\em `any $k$ out of $n$' property}, i.e., the content of any $k$ out of $n$ storage nodes is sufficient to reconstruct the entire file. In \\cite{dimakis}, Dimakis et al. explore the issue of node repair in an $(n, k)$-DSS. In particular, they study $(n, k)$-DSS which allow for the repair of a single failed node by contacting $d$ out of $n-1$ remaining storage nodes and downloading $\\beta$ symbols from each of these $d$ helper nodes. Assuming that each node in the system stores $\\alpha$ symbols (over the finite field), Dimakis et al. obtain a trade-off between the node size $\\alpha$ and repair bandwidth $\\gamma = d\\beta$, the amount of data downloaded during the repair process. The codes that attain this trade-off are referred to as {\\em regenerating codes}. The two extreme points of this trade-off correspond to the minimum possible storage and the minimum possible repair-bandwidth for an $(n, k)$-DSS. These two points are termed as {\\em minimum storage regenerating (MSR)} point and {\\em minimum bandwidth regenerating (MBR)} point, respectively. The MSR point corresponds to\n\n", "index": 1, "text": "\\begin{align}\n\\left(\\alpha_{\\rm MSR}, \\beta_{\\rm MSR}\\right) &= \\left(\\frac{{\\cal M}}{k}, \\frac{d}{d - k + 1}\\frac{{\\cal M}}{k}\\right). \\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\left(\\alpha_{\\rm MSR},\\beta_{\\rm MSR}\\right)\" display=\"inline\"><mrow><mo>(</mo><msub><mi>\u03b1</mi><mi>MSR</mi></msub><mo>,</mo><msub><mi>\u03b2</mi><mi>MSR</mi></msub><mo>)</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\left(\\frac{{\\cal M}}{k},\\frac{d}{d-k+1}\\frac{{\\cal M}}{k}\\right).\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mo>(</mo><mstyle displaystyle=\"true\"><mfrac><mi class=\"ltx_font_mathcaligraphic\">\u2133</mi><mi>k</mi></mfrac></mstyle><mo>,</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mi>d</mi><mrow><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow></mfrac></mstyle><mo>\u2062</mo><mstyle displaystyle=\"true\"><mfrac><mi class=\"ltx_font_mathcaligraphic\">\u2133</mi><mi>k</mi></mfrac></mstyle></mrow><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nThe codes achieving the MSR and the MBR points are referred to as {\\em minimum storage regenerating (MSR) codes} and {\\em minimum bandwidth regenerating (MBR) codes}, respectively. Note that the MSR codes are also maximum-distance separable (MDS) codes~\\cite{MacSlo}.\n\nIn \\cite{dimakis}, Dimakis et al. also show the existence of the codes that achieve every point on the $\\alpha$ vs. $d\\beta$ trade-off for all possible system parameters $n, k, d$ to ensure {\\em functional repair}. Under the functional repair, the content of the repaired node may differ from that of the failed node. However, the repaired node does ensure the `any $k$ out of $n$' property of the system. Sometimes, due to various system level requirements, it is desirable to construct regenerating codes that ensure {\\em exact repair} of the failed node, i.e., the content of the repaired node is the same as the content of the failed node. In \\cite{RSK11}, Rashmi et al. settle the problem of designing exact repairable MBR codes ({\\em exact-MBR codes})  as they propose an explicit construction of such codes for all possible system parameters $n, k$ and $d$. \n\nOn the other hand, the problem of constructing the exact-MSR codes has not been fully understood yet. The exact-MSR codes with $k < 3$ and $k \\leq \\frac{n}{2}$ are presented in \\cite{WuDim09} and \\cite{SRKR_itw10, SuhRam_isit10}, respectively. In \\cite{RSK11}, Rashmi et al. present explicit constructions for exact-MSR codes with $2k - 2 \\leq d \\leq  n - 1$. In general, all of these constructions correspond to exact-MSR codes of low rate with $\\frac{k}{n} \\leq \\frac{1}{2} + \\frac{1}{2n}$. In \\cite{CJMRS13}, Cadambe et al. show the existence of high-rate exact MSR codes when node size $\\alpha$ (also referred to as {\\em sub-packetization level}) approaches to infinity. Towards constructing high-rate exact-MSR codes with finite sub-packetization level, Papailiopoulos et al. utilize Hadamard matrices to construct exact-MSR codes with $n - k = 2$ and $d = n -1$ in \\cite{PapDimCad_hadamard}. Using permutation-matrices exact-MSR codes for all $(n, k)$ pairs with $d = n - 1$ which only ensure repair bandwidth-efficient repair of systematic nodes are presented in \\cite{cadambe2011optimal} and \\cite{zigzag13}. In \\cite{zigzag_allerton11}, Wang et al. generalize these constructions to enable repair of all nodes with $d = n-1$ helper nodes. However, we note that the sub-packetization level $\\alpha$ of the constructions presented in \\cite{zigzag13, zigzag_allerton11, PapDimCad_hadamard, cadambe2011optimal} is exponential in $k$. \n\nRecently, Sasidharan et al. have presented a construction of a constant  (high) rate MSR codes with polynomial sub-packetization in \\cite{SAK15}. This construction enables repair of all the nodes in the system and works for $d = n-1$, i.e., all the remaining $n-1$ nodes has to be contacted to repair a single failed node. The construction with polynomial sub-packetization and enabling repair of only systematic nodes are also presented in \\cite{WTB12, Cadambe_poly}. As for the converse results, Goparaju~et al. establish a lower bound on the sub-packetization level of an MSR code with given $n$ and $k$ in \\cite{GTC14}.\n\n\nIn this paper, we present a construction for exact-MSR codes that allow for any given number of helper nodes, i.e., $k \\leq d \\leq n -1$.  In addition to working for an arbitrary (but fixed) $d$, our construction possesses the desirable properties of having polynomial sub-packetization level for a constant rate and enabling repair-bandwidth efficient repair of all the nodes in the system. We obtain this construction by suitably modifying the construction of Sasidharan et al.~\\cite{SAK15}. The rest of the paper is organized as follows. We introduce the notation and necessary background in Section~\\ref{sec:prelims}. In Section~\\ref{sec:MSR_construction}, we present our code construction. In Section~\\ref{sec:repair}, we describe the node repair process for the proposed code construction. We establish the MDS property (a.k.a. `any k out of n' property) for the construction in Section~\\ref{sec:MDSprop}. We conclude the paper in Section~\\ref{sec:conclusion}.\n\n\\section{Preliminaries}\n\\label{sec:prelims}\n\nLet $\\mathbbm{1}_{\\{\\cdot\\}}$ denote the standard indicator function which takes the value $1$ if the condition stated in $\\{\\cdot\\}$ is true and takes the value $0$ otherwise. For two $n\\alpha$-length vectors ${\\bf x}$ and ${\\bf y}$, we defined the Hamming distance between them as follows. \n\n", "itemtype": "equation", "pos": 3265, "prevtext": "\nThe MBR point is defined by\n\n", "index": 3, "text": "\\begin{align}\n\\left(\\alpha_{\\rm MBR}, \\beta_{\\rm MBR}\\right) &= \\left(\\frac{2d}{2d - k + 1}\\frac{{\\cal M}}{k}, \\frac{2}{(2d - k + 1)}\\frac{{\\cal M}}{k}\\right). \\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\left(\\alpha_{\\rm MBR},\\beta_{\\rm MBR}\\right)\" display=\"inline\"><mrow><mo>(</mo><msub><mi>\u03b1</mi><mi>MBR</mi></msub><mo>,</mo><msub><mi>\u03b2</mi><mi>MBR</mi></msub><mo>)</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\left(\\frac{2d}{2d-k+1}\\frac{{\\cal M}}{k},\\frac{2}{(2d-k+1)}%&#10;\\frac{{\\cal M}}{k}\\right).\" display=\"inline\"><mrow><mrow><mi/><mo>=</mo><mrow><mo>(</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mrow><mn>2</mn><mo>\u2062</mo><mi>d</mi></mrow><mrow><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>d</mi></mrow><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow></mfrac></mstyle><mo>\u2062</mo><mstyle displaystyle=\"true\"><mfrac><mi class=\"ltx_font_mathcaligraphic\">\u2133</mi><mi>k</mi></mfrac></mstyle></mrow><mo>,</mo><mrow><mstyle displaystyle=\"true\"><mfrac><mn>2</mn><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mn>2</mn><mo>\u2062</mo><mi>d</mi></mrow><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle><mo>\u2062</mo><mstyle displaystyle=\"true\"><mfrac><mi class=\"ltx_font_mathcaligraphic\">\u2133</mi><mi>k</mi></mfrac></mstyle></mrow><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere for $i \\in [n]$, we have ${\\bf x}_i = (x_{(i-1)\\alpha + 1},\\ldots,x_{i\\alpha})$ and ${\\bf y}_i = (y_{(i-1)\\alpha + 1},\\ldots,y_{i\\alpha})$. We say that a set of vectors ${\\cal C} \\subseteq {\\mathbb{{F}}}^{n\\alpha}_{Q}$ is an $(n, M, d_{\\min}, \\alpha)_Q$ vector code if we have $|{\\cal C}| = M$ and $d_{\\min} = \\min_{{\\bf x}, {\\bf y} \\in {\\cal C}}d_{\\rm H}({\\bf x}, {\\bf y})$.  Given a codeword ${\\bf c} = (c_1, c_2,\\ldots, c_{n\\alpha}) \\in {\\cal C}$, we use ${\\bf c}_i = (c_{(i - 1)\\alpha + 1}, c_{(i - 1)\\alpha + 2},\\ldots, c_{i\\alpha})$ to denote the $i$-th vector (code) symbol in the codeword. When the code ${\\cal C}$ spans a linear subspace of dimension $\\log_Q{M}$, we call ${\\cal C}$ to be a linear vector code and refer to it as an $[n, \\log_Q{M}, d_{\\min}, \\alpha]_{Q}$ vector code. Note that an $[n, k\\alpha, d_{\\min}, \\alpha]_Q$ vector code can be defined by a parity-check matrix\n\n", "itemtype": "equation", "pos": 7956, "prevtext": "\nThe codes achieving the MSR and the MBR points are referred to as {\\em minimum storage regenerating (MSR) codes} and {\\em minimum bandwidth regenerating (MBR) codes}, respectively. Note that the MSR codes are also maximum-distance separable (MDS) codes~\\cite{MacSlo}.\n\nIn \\cite{dimakis}, Dimakis et al. also show the existence of the codes that achieve every point on the $\\alpha$ vs. $d\\beta$ trade-off for all possible system parameters $n, k, d$ to ensure {\\em functional repair}. Under the functional repair, the content of the repaired node may differ from that of the failed node. However, the repaired node does ensure the `any $k$ out of $n$' property of the system. Sometimes, due to various system level requirements, it is desirable to construct regenerating codes that ensure {\\em exact repair} of the failed node, i.e., the content of the repaired node is the same as the content of the failed node. In \\cite{RSK11}, Rashmi et al. settle the problem of designing exact repairable MBR codes ({\\em exact-MBR codes})  as they propose an explicit construction of such codes for all possible system parameters $n, k$ and $d$. \n\nOn the other hand, the problem of constructing the exact-MSR codes has not been fully understood yet. The exact-MSR codes with $k < 3$ and $k \\leq \\frac{n}{2}$ are presented in \\cite{WuDim09} and \\cite{SRKR_itw10, SuhRam_isit10}, respectively. In \\cite{RSK11}, Rashmi et al. present explicit constructions for exact-MSR codes with $2k - 2 \\leq d \\leq  n - 1$. In general, all of these constructions correspond to exact-MSR codes of low rate with $\\frac{k}{n} \\leq \\frac{1}{2} + \\frac{1}{2n}$. In \\cite{CJMRS13}, Cadambe et al. show the existence of high-rate exact MSR codes when node size $\\alpha$ (also referred to as {\\em sub-packetization level}) approaches to infinity. Towards constructing high-rate exact-MSR codes with finite sub-packetization level, Papailiopoulos et al. utilize Hadamard matrices to construct exact-MSR codes with $n - k = 2$ and $d = n -1$ in \\cite{PapDimCad_hadamard}. Using permutation-matrices exact-MSR codes for all $(n, k)$ pairs with $d = n - 1$ which only ensure repair bandwidth-efficient repair of systematic nodes are presented in \\cite{cadambe2011optimal} and \\cite{zigzag13}. In \\cite{zigzag_allerton11}, Wang et al. generalize these constructions to enable repair of all nodes with $d = n-1$ helper nodes. However, we note that the sub-packetization level $\\alpha$ of the constructions presented in \\cite{zigzag13, zigzag_allerton11, PapDimCad_hadamard, cadambe2011optimal} is exponential in $k$. \n\nRecently, Sasidharan et al. have presented a construction of a constant  (high) rate MSR codes with polynomial sub-packetization in \\cite{SAK15}. This construction enables repair of all the nodes in the system and works for $d = n-1$, i.e., all the remaining $n-1$ nodes has to be contacted to repair a single failed node. The construction with polynomial sub-packetization and enabling repair of only systematic nodes are also presented in \\cite{WTB12, Cadambe_poly}. As for the converse results, Goparaju~et al. establish a lower bound on the sub-packetization level of an MSR code with given $n$ and $k$ in \\cite{GTC14}.\n\n\nIn this paper, we present a construction for exact-MSR codes that allow for any given number of helper nodes, i.e., $k \\leq d \\leq n -1$.  In addition to working for an arbitrary (but fixed) $d$, our construction possesses the desirable properties of having polynomial sub-packetization level for a constant rate and enabling repair-bandwidth efficient repair of all the nodes in the system. We obtain this construction by suitably modifying the construction of Sasidharan et al.~\\cite{SAK15}. The rest of the paper is organized as follows. We introduce the notation and necessary background in Section~\\ref{sec:prelims}. In Section~\\ref{sec:MSR_construction}, we present our code construction. In Section~\\ref{sec:repair}, we describe the node repair process for the proposed code construction. We establish the MDS property (a.k.a. `any k out of n' property) for the construction in Section~\\ref{sec:MDSprop}. We conclude the paper in Section~\\ref{sec:conclusion}.\n\n\\section{Preliminaries}\n\\label{sec:prelims}\n\nLet $\\mathbbm{1}_{\\{\\cdot\\}}$ denote the standard indicator function which takes the value $1$ if the condition stated in $\\{\\cdot\\}$ is true and takes the value $0$ otherwise. For two $n\\alpha$-length vectors ${\\bf x}$ and ${\\bf y}$, we defined the Hamming distance between them as follows. \n\n", "index": 5, "text": "$$d_{\\rm H}({\\bf x}, {\\bf y}) = \\sum_{i = 1}^{n}\\mathbbm{1}_{\\{{\\bf x}_i \\neq {\\bf y}_i \\}},$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"d_{\\rm H}({\\bf x},{\\bf y})=\\sum_{i=1}^{n}\\mathbbm{1}_{\\{{\\bf x}_{i}\\neq{\\bf y}%&#10;_{i}\\}},\" display=\"block\"><mrow><mrow><mrow><msub><mi>d</mi><mi mathvariant=\"normal\">H</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc31</mi><mo>,</mo><mi>\ud835\udc32</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mn>\ud835\udfd9</mn><mrow><mo stretchy=\"false\">{</mo><msub><mi>\ud835\udc31</mi><mi>i</mi></msub><mo>\u2260</mo><msub><mi>\ud835\udc32</mi><mi>i</mi></msub><mo stretchy=\"false\">}</mo></mrow></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere each $H_{i, j}$ is an $\\alpha \\times \\alpha$ matrix with its entries belonging to ${\\mathbb{{F}}}_Q$. For a set ${\\cal S} = \\{i_1, i_2,\\ldots, i_{|{\\cal S}|}\\} \\subseteq [n]$, we define the $(n - k)\\alpha \\times |{\\cal S}|\\alpha$ matrix ${\\bf H}(:,{\\cal S})$ as follows. \n\n", "itemtype": "equation", "pos": 8950, "prevtext": "\nwhere for $i \\in [n]$, we have ${\\bf x}_i = (x_{(i-1)\\alpha + 1},\\ldots,x_{i\\alpha})$ and ${\\bf y}_i = (y_{(i-1)\\alpha + 1},\\ldots,y_{i\\alpha})$. We say that a set of vectors ${\\cal C} \\subseteq {\\mathbb{{F}}}^{n\\alpha}_{Q}$ is an $(n, M, d_{\\min}, \\alpha)_Q$ vector code if we have $|{\\cal C}| = M$ and $d_{\\min} = \\min_{{\\bf x}, {\\bf y} \\in {\\cal C}}d_{\\rm H}({\\bf x}, {\\bf y})$.  Given a codeword ${\\bf c} = (c_1, c_2,\\ldots, c_{n\\alpha}) \\in {\\cal C}$, we use ${\\bf c}_i = (c_{(i - 1)\\alpha + 1}, c_{(i - 1)\\alpha + 2},\\ldots, c_{i\\alpha})$ to denote the $i$-th vector (code) symbol in the codeword. When the code ${\\cal C}$ spans a linear subspace of dimension $\\log_Q{M}$, we call ${\\cal C}$ to be a linear vector code and refer to it as an $[n, \\log_Q{M}, d_{\\min}, \\alpha]_{Q}$ vector code. Note that an $[n, k\\alpha, d_{\\min}, \\alpha]_Q$ vector code can be defined by a parity-check matrix\n\n", "index": 7, "text": "$$\n{\\bf H} = \\left( \\begin{array}{cccc}\nH_{1,1} & H_{1, 2} & \\cdots & H_{1,n}\\\\\nH_{2,1} & H_{2, 2} & \\cdots & H_{2,n}\\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nH_{n-k,1} & H_{n-k, 2} & \\cdots & H_{n-k,n}\\\\\n\\end{array} \\right) \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha},\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"{\\bf H}=\\left(\\begin{array}[]{cccc}H_{1,1}&amp;H_{1,2}&amp;\\cdots&amp;H_{1,n}\\\\&#10;H_{2,1}&amp;H_{2,2}&amp;\\cdots&amp;H_{2,n}\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;H_{n-k,1}&amp;H_{n-k,2}&amp;\\cdots&amp;H_{n-k,n}\\\\&#10;\\end{array}\\right)\\in{\\mathbb{{F}}}_{Q}^{(n-k)\\alpha\\times n\\alpha},\" display=\"block\"><mrow><mrow><mi>\ud835\udc07</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>1</mn><mo>,</mo><mi>n</mi></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>2</mn><mo>,</mo><mi>n</mi></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo>,</mo><mi>n</mi></mrow></msub></mtd></mtr></mtable><mo>)</mo></mrow><mo>\u2208</mo><msubsup><mi>\ud835\udd3d</mi><mi>Q</mi><mrow><mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mi>\u03b1</mi></mrow><mo>\u00d7</mo><mi>n</mi></mrow><mo>\u2062</mo><mi>\u03b1</mi></mrow></msubsup></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nNote that the matrix ${\\bf H}(:, {\\cal S})$ comprises those coefficients in the linear constraints defined by the parity-check matrix ${\\bf H}$ that are associated with the vector code symbols indexed by the set ${\\cal S}$.\n\n\\section{Code Construction}\n\\label{sec:MSR_construction}\n\nIn what follows, we use $\\Sigma$ to represent a linear combination whose coefficients are not specified explicitly. For example, for $a_1, a_2,\\ldots, a_r \\in {\\mbox{\\bb F}}_Q$, $\\sum_{i = 1}^ra_i$ denotes a linear combination of these $r$ elements where unspecified coefficients of the linear combination belong to ${\\mbox{\\bb F}}_Q$. For an integer $q > 0$, we use $[q]$ and $[0:q-1]$ to denote the sets $\\{1, 2,\\ldots, q\\}$ and $\\{0, 1,\\ldots, q-1\\}$, respectively.\n\nAssume that $n = (t - 1)(d - k + 1) + s$, for $t > 1$ and $0 \\leq s \\leq d-k$. We take \n\n", "itemtype": "equation", "pos": 9507, "prevtext": "\nwhere each $H_{i, j}$ is an $\\alpha \\times \\alpha$ matrix with its entries belonging to ${\\mathbb{{F}}}_Q$. For a set ${\\cal S} = \\{i_1, i_2,\\ldots, i_{|{\\cal S}|}\\} \\subseteq [n]$, we define the $(n - k)\\alpha \\times |{\\cal S}|\\alpha$ matrix ${\\bf H}(:,{\\cal S})$ as follows. \n\n", "index": 9, "text": "$$\n{\\bf H}(:,{\\cal S}) = \\left( \\begin{array}{cccc}\nH_{1, i_1} & H_{1, i_2} & \\cdots & H_{1, i_{|{\\cal S}|}}\\\\\nH_{2, i_1} & H_{2, i_2} & \\cdots & H_{2, i_{|{\\cal S}|}}\\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nH_{n - k, i_1} & H_{n - k, i_2} & \\cdots & H_{n- k, i_{|{\\cal S}|}}\n\\end{array} \\right).\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"{\\bf H}(:,{\\cal S})=\\left(\\begin{array}[]{cccc}H_{1,i_{1}}&amp;H_{1,i_{2}}&amp;\\cdots&amp;%&#10;H_{1,i_{|{\\cal S}|}}\\\\&#10;H_{2,i_{1}}&amp;H_{2,i_{2}}&amp;\\cdots&amp;H_{2,i_{|{\\cal S}|}}\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;H_{n-k,i_{1}}&amp;H_{n-k,i_{2}}&amp;\\cdots&amp;H_{n-k,i_{|{\\cal S}|}}\\end{array}\\right).\" display=\"block\"><mrow><mrow><mrow><mi>\ud835\udc07</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mo>:</mo><mo>,</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>1</mn><mo>,</mo><msub><mi>i</mi><mn>1</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>1</mn><mo>,</mo><msub><mi>i</mi><mn>2</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>1</mn><mo>,</mo><msub><mi>i</mi><mrow><mo stretchy=\"false\">|</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">|</mo></mrow></msub></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>2</mn><mo>,</mo><msub><mi>i</mi><mn>1</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>2</mn><mo>,</mo><msub><mi>i</mi><mn>2</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mn>2</mn><mo>,</mo><msub><mi>i</mi><mrow><mo stretchy=\"false\">|</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">|</mo></mrow></msub></mrow></msub></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo>,</mo><msub><mi>i</mi><mn>1</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo>,</mo><msub><mi>i</mi><mn>2</mn></msub></mrow></msub></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mi>H</mi><mrow><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow><mo>,</mo><msub><mi>i</mi><mrow><mo stretchy=\"false\">|</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">|</mo></mrow></msub></mrow></msub></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\n\nNote that we use $q$ to denote $d - k + 1$. Moreover, as compared to \\cite{SAK15}, we describe the construction for the wider range of parameters which corresponds to $s >  0$. Therefore, for $s>0$, we have $\\alpha = (d - k + 1)^t = q^t$. For these values of parameters, at the MSR point, a node repair step involves downloading \n", "itemtype": "equation", "pos": 10647, "prevtext": "\nNote that the matrix ${\\bf H}(:, {\\cal S})$ comprises those coefficients in the linear constraints defined by the parity-check matrix ${\\bf H}$ that are associated with the vector code symbols indexed by the set ${\\cal S}$.\n\n\\section{Code Construction}\n\\label{sec:MSR_construction}\n\nIn what follows, we use $\\Sigma$ to represent a linear combination whose coefficients are not specified explicitly. For example, for $a_1, a_2,\\ldots, a_r \\in {\\mbox{\\bb F}}_Q$, $\\sum_{i = 1}^ra_i$ denotes a linear combination of these $r$ elements where unspecified coefficients of the linear combination belong to ${\\mbox{\\bb F}}_Q$. For an integer $q > 0$, we use $[q]$ and $[0:q-1]$ to denote the sets $\\{1, 2,\\ldots, q\\}$ and $\\{0, 1,\\ldots, q-1\\}$, respectively.\n\nAssume that $n = (t - 1)(d - k + 1) + s$, for $t > 1$ and $0 \\leq s \\leq d-k$. We take \n\n", "index": 11, "text": "\\begin{align}\n\\alpha = \\begin{cases} (d - k + 1)^{t-1} = q^{t-1} & \\mbox{if } s = 0  \\\\\n(d - k + 1)^t = q^t & \\mbox{otherwise}.\n\\end{cases}\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\alpha=\\begin{cases}(d-k+1)^{t-1}=q^{t-1}&amp;\\mbox{if }s=0\\\\&#10;(d-k+1)^{t}=q^{t}&amp;\\mbox{otherwise}.\\end{cases}\" display=\"inline\"><mrow><mi>\u03b1</mi><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>q</mi><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msup></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>s</mi></mrow><mo>=</mo><mn>0</mn></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mi>t</mi></msup><mo>=</mo><msup><mi>q</mi><mi>t</mi></msup></mrow></mtd><mtd columnalign=\"left\"><mrow><mtext>otherwise</mtext><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": " symbols from each of the $d$ contacted nodes. Let $n = (t-1)q + s$ nodes be indexed by tuples \n\n", "itemtype": "equation", "pos": -1, "prevtext": "\n\nNote that we use $q$ to denote $d - k + 1$. Moreover, as compared to \\cite{SAK15}, we describe the construction for the wider range of parameters which corresponds to $s >  0$. Therefore, for $s>0$, we have $\\alpha = (d - k + 1)^t = q^t$. For these values of parameters, at the MSR point, a node repair step involves downloading \n", "index": 13, "text": "$$\\beta = \\frac{\\alpha}{d - k + 1} = (d - k + 1)^{t-1} =q^{t-1}$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"\\beta=\\frac{\\alpha}{d-k+1}=(d-k+1)^{t-1}=q^{t-1}\" display=\"block\"><mrow><mi>\u03b2</mi><mo>=</mo><mfrac><mi>\u03b1</mi><mrow><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow></mfrac><mo>=</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>q</mi><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msup></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nNote that each node in the system stores $\\alpha = q^t$ code symbols. Let  $\\{c((x_1, x_2,\\ldots, x_t); (i, \\theta)) \\}_{(x_1,\\ldots, x_t) \\in [0:q-1]^t}$ represent the $q^t$ code symbols stored on the $(i, \\theta)$-th node. In order to specify the MSR code ${\\cal C}$, we specify $(n-k)\\alpha = (n-k)q^t$ linear constraints over ${\\mbox{\\bb F}}_Q$ that each codeword in ${\\cal C}$ has to satisfy. We partition these $(n-k)\\alpha$ constraints into two types of constraints which we refer to as ${\\rm Type~I}$ and ${\\rm Type~II}$ constraints, respectively.\n\n\\textbf{{\\rm Type~I} constraints:} For each $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, we have $n - d$ constraints of the following form.\n\n", "itemtype": "equation", "pos": 11290, "prevtext": " symbols from each of the $d$ contacted nodes. Let $n = (t-1)q + s$ nodes be indexed by tuples \n\n", "index": 15, "text": "\\begin{align}\n\\label{eq:node_set}\n\\mathcal{N} &= \\left\\{(i, \\theta):~(i, \\theta) \\in [t-1]\\times [0:q-1]\\right\\}~\\cup \\nonumber \\\\\n&~~~~~\\left\\{(t, \\theta):~\\theta \\in [0:s-1]\\right\\}.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\mathcal{N}\" display=\"inline\"><mi class=\"ltx_font_mathcaligraphic\">\ud835\udca9</mi></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle=\\left\\{(i,\\theta):~{}(i,\\theta)\\in[t-1]\\times[0:q-1]\\right\\}~{}\\cup\" display=\"inline\"><mrow><mo>=</mo><mrow><mo>{</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo rspace=\"5.8pt\">:</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mi>t</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><mo>\u00d7</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><mo rspace=\"5.8pt\">}</mo></mrow><mo>\u222a</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle~{}~{}~{}~{}~{}\\left\\{(t,\\theta):~{}\\theta\\in[0:s-1]\\right\\}.\" display=\"inline\"><mrow><mi mathvariant=\"normal\">\u00a0</mi><mo mathvariant=\"italic\" separator=\"true\">\u2003\u2005</mo><mrow><mo>{</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo rspace=\"5.8pt\">:</mo><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>s</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><mo>}</mo></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nThe coefficients of these constraints are chosen in such a way that the following holds for each $(x_1, x_2,\\ldots, x_t) \\in [0:q-1]^t$. Given any subset of $d$ code symbols out of $n$ code symbols  $\\{c((x_1, x_2,\\ldots, x_t);(i,\\theta)\\}_{(i, \\theta)) \\in \\mathcal{N}}$, the remaining  $n-d$ code symbols can be recovered using these ${\\rm Type~I}$ constraints.\n\n\\textbf{{\\rm Type~II} constraints:} We now described the remaining $(n - k)\\alpha - (n - d)\\alpha = (d - k)\\alpha = (d - k)q^{t}$ constraints satisfied by the codewords. For every $(x_1, x_2,\\ldots, x_t) \\in [0:q-1]^t$ and $\\Delta \\in [1:q-1]$, we have\n\n", "itemtype": "equation", "pos": 12174, "prevtext": "\nNote that each node in the system stores $\\alpha = q^t$ code symbols. Let  $\\{c((x_1, x_2,\\ldots, x_t); (i, \\theta)) \\}_{(x_1,\\ldots, x_t) \\in [0:q-1]^t}$ represent the $q^t$ code symbols stored on the $(i, \\theta)$-th node. In order to specify the MSR code ${\\cal C}$, we specify $(n-k)\\alpha = (n-k)q^t$ linear constraints over ${\\mbox{\\bb F}}_Q$ that each codeword in ${\\cal C}$ has to satisfy. We partition these $(n-k)\\alpha$ constraints into two types of constraints which we refer to as ${\\rm Type~I}$ and ${\\rm Type~II}$ constraints, respectively.\n\n\\textbf{{\\rm Type~I} constraints:} For each $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, we have $n - d$ constraints of the following form.\n\n", "index": 17, "text": "\\begin{align}\n\\label{eq:type1}\n&\\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_t); (1, \\theta)) +  \\nonumber \\\\\n&\\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_t); (2, \\theta))  + \\cdots + \\nonumber \\\\\n&\\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_t); (t-1, \\theta)) + \\nonumber \\\\\n&\\sum_{\\theta \\in [0:s-1]}c((x_1,\\ldots, x_t); (t, \\theta))   = 0.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{t});(1,\\theta))+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{t});(2,\\theta))+\\cdots+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{t});(t-1,\\theta))+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:s-1]}c((x_{1},\\ldots,x_{t});(t,\\theta))=0.\" display=\"inline\"><mrow><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>s</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nHere, the computation $x_i  - \\Delta$, for $i \\in [t]$, is performed modulo $q$. Furthermore, the underlined code symbols $c((x_1, x_2,\\ldots, x_t - \\Delta); (t, x_t))$ correspond to $0$ for $x_t \\geq s$ as there is no node which is indexed by the tuple $(t, x_t)$ with $x_t \\geq s$.\n\n\\begin{remark}\n\\label{rem:diff1}\nOne key difference from the construction in \\cite{SAK15} is that for each tuple $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, we generate $n - d$ {\\rm Type~I} constraints. In \\cite{SAK15}, only $1$ such constraint was generated as the case of $d  = n - 1$ was considered. The coefficients of these constraints need to be carefully chosen to ensure the requirements specified after \\eqref{eq:type1}. We address this issue in Remark~\\ref{rem:diff2}.\n\\end{remark}\n\n\\section{Recovering a failed node}\n\\label{sec:repair}\n\nAssume that the node indexed by the tuple $(i, \\theta_0)$ fails. We now describe the repair process of the failed node. The repair process can be viewed to have two stages. In the first stage, we use the {\\rm Type~I} constraints to recover $\\beta = \\frac{\\alpha}{d - k + 1} = q^{t - 1}$ out of $\\alpha = q^t$ code symbols that are lost due to the node failure. Towards this, from each of the $d$ contacted nodes, we download the code symbols indexed by the tuples $\\{(x_1,\\ldots,x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t)\\}$, where $(x_1,\\ldots,x_{i-1}, x_{i+1},\\ldots, x_t)$ span over all values in  $[0:q-1]^{t-1}$ from each of the $d$ contacted nodes. These symbols along with the {\\rm Type~I} constraints (cf.~\\eqref{eq:type1}) allow us to recover the symbols \n\n", "itemtype": "equation", "pos": 13140, "prevtext": "\nThe coefficients of these constraints are chosen in such a way that the following holds for each $(x_1, x_2,\\ldots, x_t) \\in [0:q-1]^t$. Given any subset of $d$ code symbols out of $n$ code symbols  $\\{c((x_1, x_2,\\ldots, x_t);(i,\\theta)\\}_{(i, \\theta)) \\in \\mathcal{N}}$, the remaining  $n-d$ code symbols can be recovered using these ${\\rm Type~I}$ constraints.\n\n\\textbf{{\\rm Type~II} constraints:} We now described the remaining $(n - k)\\alpha - (n - d)\\alpha = (d - k)\\alpha = (d - k)q^{t}$ constraints satisfied by the codewords. For every $(x_1, x_2,\\ldots, x_t) \\in [0:q-1]^t$ and $\\Delta \\in [1:q-1]$, we have\n\n", "index": 19, "text": "\\begin{align}\n\\label{eq:type2}\n&c((x_1 - \\Delta, x_2,\\ldots, x_t); (1, x_1)) + \\nonumber \\\\\n&c((x_1, x_2 - \\Delta,\\ldots, x_t); (2, x_2)) + \\cdots + \\nonumber \\\\\n&c((x_1,\\ldots, x_{t-1} - \\Delta, x_t); (t-1, x_{t-1})) + \\nonumber \\\\\n&\\underline{c((x_1, x_2,\\ldots, x_t - \\Delta); (t, x_t))} +  \\nonumber \\\\\n&\\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_t); (1, \\theta)) + \\nonumber \\\\\n& \\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_t); (2, \\theta)) + \\cdots + \\nonumber \\\\\n&\\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_t); (t-1, \\theta)) + \\nonumber \\\\\n& \\sum_{\\theta \\in [0:s-1]}c((x_1,\\ldots, x_t); (t, \\theta))  = 0.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1}-\\Delta,x_{2},\\ldots,x_{t});(1,x_{1}))+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>,</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},x_{2}-\\Delta,\\ldots,x_{t});(2,x_{2}))+\\cdots+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mrow><msub><mi>x</mi><mn>2</mn></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo>,</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},\\ldots,x_{t-1}-\\Delta,x_{t});(t-1,x_{t-1}))+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><msub><mi>x</mi><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo>,</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\underline{c((x_{1},x_{2},\\ldots,x_{t}-\\Delta);(t,x_{t}))}+\" display=\"inline\"><mrow><munder accentunder=\"true\"><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u00af</mo></munder><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{t});(1,\\theta))+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{t});(2,\\theta))+\\cdots+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex17.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{t});(t-1,\\theta))+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:s-1]}c((x_{1},\\ldots,x_{t});(t,\\theta))=0.\" display=\"inline\"><mrow><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>s</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nfor every $(x_1,\\ldots,x_{i-1}, x_{i+1},\\ldots, x_t) \\in [0:q-1]^{t-1}$ and $(i,\\theta) \\in \\mathcal{N}$. \n\nIt is clear from \\eqref{eq:stage1} that after the first stage we have access to $\\beta = q^{t-1}$ code symbols stored on the failed node as well as the $\\beta$ symbols stored on the remaining $n-1$ nodes. In the second stage, we employ the {\\rm Type~II} constraints (cf.~\\eqref{eq:type2}) to recover the remaining $(d- k)\\beta = (q-1)q^{t-1}$ symbols stored on the failed node, i.e., the node indexed by the tuple $(i, \\theta_0)$. Recall that for a tuple $(x_1,\\ldots, x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t) \\in [0:q-1]^t$ and a non-zero integer $\\Delta \\in [q-1]$, the corresponding {\\rm Type~II} constraint is as follows:\n\n", "itemtype": "equation", "pos": 15349, "prevtext": "\nHere, the computation $x_i  - \\Delta$, for $i \\in [t]$, is performed modulo $q$. Furthermore, the underlined code symbols $c((x_1, x_2,\\ldots, x_t - \\Delta); (t, x_t))$ correspond to $0$ for $x_t \\geq s$ as there is no node which is indexed by the tuple $(t, x_t)$ with $x_t \\geq s$.\n\n\\begin{remark}\n\\label{rem:diff1}\nOne key difference from the construction in \\cite{SAK15} is that for each tuple $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, we generate $n - d$ {\\rm Type~I} constraints. In \\cite{SAK15}, only $1$ such constraint was generated as the case of $d  = n - 1$ was considered. The coefficients of these constraints need to be carefully chosen to ensure the requirements specified after \\eqref{eq:type1}. We address this issue in Remark~\\ref{rem:diff2}.\n\\end{remark}\n\n\\section{Recovering a failed node}\n\\label{sec:repair}\n\nAssume that the node indexed by the tuple $(i, \\theta_0)$ fails. We now describe the repair process of the failed node. The repair process can be viewed to have two stages. In the first stage, we use the {\\rm Type~I} constraints to recover $\\beta = \\frac{\\alpha}{d - k + 1} = q^{t - 1}$ out of $\\alpha = q^t$ code symbols that are lost due to the node failure. Towards this, from each of the $d$ contacted nodes, we download the code symbols indexed by the tuples $\\{(x_1,\\ldots,x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t)\\}$, where $(x_1,\\ldots,x_{i-1}, x_{i+1},\\ldots, x_t)$ span over all values in  $[0:q-1]^{t-1}$ from each of the $d$ contacted nodes. These symbols along with the {\\rm Type~I} constraints (cf.~\\eqref{eq:type1}) allow us to recover the symbols \n\n", "index": 21, "text": "\\begin{align}\n\\label{eq:stage1}\nc((x_1,\\ldots,x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t);(i,\\theta)),\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},\\ldots,x_{i-1},\\theta_{0},x_{i+1},\\ldots,x_{t});(i,%&#10;\\theta)),\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nNote that except the underlined code symbol we know every other code symbol involved in \\eqref{eq:stage2} (cf.~\\eqref{eq:stage1}). Therefore, using the constraints in \\eqref{eq:stage2}, we can complete the second stage of the repair process which recovers the remaining $(q-1)q^{t-1}$ code symbols from the failed node.\n\n\\section{MDS property of the code}\n\\label{sec:MDSprop}\n\nIn this section, we prove that it is possible to obtain the codes from the construction described in Section~\\ref{sec:MSR_construction} that are maximum-distance separable (MDS). In particular, we argue that if the coding coefficients in the construction are selected from a finite field of large enough size, then there exists a choice for coding coefficients which lead to the obtained code being an MDS code. (We note that the argument presented in this section follows very closely to the argument used in \\cite{SAK15}.)\n\nRecall that for \na code ${\\cal C}$ defined in Section~\\ref{sec:MSR_construction}, we can represent a codeword in the code ${\\cal C}$ by an $n\\alpha$-length vector in ${\\mathbb{{F}}}_Q^{n\\alpha}$. In particular, let ${\\bf c} = ({\\bf c}_1, {\\bf c}_2,\\ldots, {\\bf c}_n)$ be a generic codeword from the code ${\\cal C}$. Here, for each $j \\in [n]$, ${\\bf c}_j \\in {\\mathbb{{F}}}_Q^{\\alpha}$ represent the code symbols stored on the $i$-th node in the system. Assuming that the node indexed by the tuple $(i, \\theta)$ represents the $\\left((i - 1)q + \\theta + 1\\right)$-th node in the system, we have ${\\bf c}_{(i - 1)q + \\theta + 1} = \\{c((x_1, x_2,\\ldots, x_t); (i, \\theta)) \\}_{(x_1,\\ldots, x_t) \\in [0:q-1]^t}$.\n\nLet ${\\bf H} \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha}$ be the parity check matrix of the code ${\\cal C}$ defined by the {\\rm Type~I} and {\\rm Type~II} linear constraints presented in \\eqref{eq:type1} and \\eqref{eq:type2}, respectively. Note that it follows from the code construction that the parity check matrix ${\\bf H}$ has the following structure. \n\n", "itemtype": "equation", "pos": 16193, "prevtext": "\nfor every $(x_1,\\ldots,x_{i-1}, x_{i+1},\\ldots, x_t) \\in [0:q-1]^{t-1}$ and $(i,\\theta) \\in \\mathcal{N}$. \n\nIt is clear from \\eqref{eq:stage1} that after the first stage we have access to $\\beta = q^{t-1}$ code symbols stored on the failed node as well as the $\\beta$ symbols stored on the remaining $n-1$ nodes. In the second stage, we employ the {\\rm Type~II} constraints (cf.~\\eqref{eq:type2}) to recover the remaining $(d- k)\\beta = (q-1)q^{t-1}$ symbols stored on the failed node, i.e., the node indexed by the tuple $(i, \\theta_0)$. Recall that for a tuple $(x_1,\\ldots, x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t) \\in [0:q-1]^t$ and a non-zero integer $\\Delta \\in [q-1]$, the corresponding {\\rm Type~II} constraint is as follows:\n\n", "index": 23, "text": "\\begin{align}\n\\label{eq:stage2}\n&c((x_1 - \\Delta,\\ldots,x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t); (1, x_1))+ \\cdots + \\nonumber \\\\\n&c((x_1,\\ldots, x_{i-1} - \\Delta, \\theta_0, x_{i+1},\\ldots x_t); (i-1, x_{i-1})) + \\nonumber \\\\\n& \\underline{c((x_1,\\ldots, x_{i-1}, \\theta_0 - \\Delta, x_{i+1},\\ldots, x_t); (i, \\theta_0))} + \\nonumber \\\\\n&c((x_1,\\ldots, x_{i-1},\\theta_0, x_{i+1} - \\Delta,\\ldots, x_t); (i+1, x_{i+1})) + \\cdots + \\nonumber \\\\\n&c((x_1,\\ldots, x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t -\\Delta); (t, x_t)) + \\nonumber \\\\\n& \\Big( \\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t); (1, \\theta)) + \\nonumber \\\\\n&\\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t); (2, \\theta))  +\\cdots +  \\nonumber \\\\\n&\\sum_{\\theta \\in [0:q-1]}c((x_1,\\ldots, x_{i-1}, \\theta_0, x_{i+1},\\ldots, x_t); (t, \\theta)) \\Big)= 0.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1}-\\Delta,\\ldots,x_{i-1},\\theta_{0},x_{i+1},\\ldots,x_{t});%&#10;(1,x_{1}))+\\cdots+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>,</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex19.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},\\ldots,x_{i-1}-\\Delta,\\theta_{0},x_{i+1},\\ldots x_{t});%&#10;(i-1,x_{i-1}))+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mrow><mi mathvariant=\"normal\">\u2026</mi><mo>\u2062</mo><msub><mi>x</mi><mi>t</mi></msub></mrow><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex20.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\underline{c((x_{1},\\ldots,x_{i-1},\\theta_{0}-\\Delta,x_{i+1},%&#10;\\ldots,x_{t});(i,\\theta_{0}))}+\" display=\"inline\"><mrow><munder accentunder=\"true\"><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><mrow><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u00af</mo></munder><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex21.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},\\ldots,x_{i-1},\\theta_{0},x_{i+1}-\\Delta,\\ldots,x_{t});%&#10;(i+1,x_{i+1}))+\\cdots+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex22.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},\\ldots,x_{i-1},\\theta_{0},x_{i+1},\\ldots,x_{t}-\\Delta);%&#10;(t,x_{t}))+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex23.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\Big{(}\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{i-1},\\theta_{0},%&#10;x_{i+1},\\ldots,x_{t});(1,\\theta))+\" display=\"inline\"><mrow><mo maxsize=\"160%\" minsize=\"160%\">(</mo><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mi>c</mi><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex24.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{i-1},\\theta_{0},x_{i+1}%&#10;,\\ldots,x_{t});(2,\\theta))+\\cdots+\" display=\"inline\"><mrow><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>+</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\sum_{\\theta\\in[0:q-1]}c((x_{1},\\ldots,x_{i-1},\\theta_{0},x_{i+1}%&#10;,\\ldots,x_{t});(t,\\theta))\\Big{)}=0.\" display=\"inline\"><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03b8</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo>:</mo><mi>q</mi><mo>-</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mrow></munder></mstyle><mi>c</mi><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>,</mo><msub><mi>\u03b8</mi><mn>0</mn></msub><mo>,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>,</mo><mi>\u03b8</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow><mo maxsize=\"160%\" minsize=\"160%\">)</mo><mo>=</mo><mn>0</mn><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nHere, ${\\bf H}^{\\rm I}$ is an $(n - d)\\alpha \\times n\\alpha$ matrix over ${\\mathbb{{F}}}_Q$ which is defined by the $(n - d)\\alpha = (n - d)q^t$ ${\\rm Type~I}$ constraints (cf.~\\eqref{eq:type1}). On the other hand, the $(d - k)\\alpha = (d - k)q^t$ ${\\rm Type~II}$ constraints (cf.~\\eqref{eq:type2}) constitute the $(d - k)\\alpha \\times n\\alpha$ matrix ${\\bf H}^{\\rm II}$ over ${\\mathbb{{F}}}_Q$. We now focus on the structure of the two matrices ${\\bf H}^{\\rm I}$ and ${\\bf H}^{\\rm II}$. Note that \n\n", "itemtype": "equation", "pos": 19055, "prevtext": "\nNote that except the underlined code symbol we know every other code symbol involved in \\eqref{eq:stage2} (cf.~\\eqref{eq:stage1}). Therefore, using the constraints in \\eqref{eq:stage2}, we can complete the second stage of the repair process which recovers the remaining $(q-1)q^{t-1}$ code symbols from the failed node.\n\n\\section{MDS property of the code}\n\\label{sec:MDSprop}\n\nIn this section, we prove that it is possible to obtain the codes from the construction described in Section~\\ref{sec:MSR_construction} that are maximum-distance separable (MDS). In particular, we argue that if the coding coefficients in the construction are selected from a finite field of large enough size, then there exists a choice for coding coefficients which lead to the obtained code being an MDS code. (We note that the argument presented in this section follows very closely to the argument used in \\cite{SAK15}.)\n\nRecall that for \na code ${\\cal C}$ defined in Section~\\ref{sec:MSR_construction}, we can represent a codeword in the code ${\\cal C}$ by an $n\\alpha$-length vector in ${\\mathbb{{F}}}_Q^{n\\alpha}$. In particular, let ${\\bf c} = ({\\bf c}_1, {\\bf c}_2,\\ldots, {\\bf c}_n)$ be a generic codeword from the code ${\\cal C}$. Here, for each $j \\in [n]$, ${\\bf c}_j \\in {\\mathbb{{F}}}_Q^{\\alpha}$ represent the code symbols stored on the $i$-th node in the system. Assuming that the node indexed by the tuple $(i, \\theta)$ represents the $\\left((i - 1)q + \\theta + 1\\right)$-th node in the system, we have ${\\bf c}_{(i - 1)q + \\theta + 1} = \\{c((x_1, x_2,\\ldots, x_t); (i, \\theta)) \\}_{(x_1,\\ldots, x_t) \\in [0:q-1]^t}$.\n\nLet ${\\bf H} \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha}$ be the parity check matrix of the code ${\\cal C}$ defined by the {\\rm Type~I} and {\\rm Type~II} linear constraints presented in \\eqref{eq:type1} and \\eqref{eq:type2}, respectively. Note that it follows from the code construction that the parity check matrix ${\\bf H}$ has the following structure. \n\n", "index": 25, "text": "\\begin{align}\n{\\bf H} = \\left(\\begin{array}{c}\n{\\bf H}^{\\rm I} \\\\ \\hline\n{\\bf H}^{\\rm II} \\end{array} \\right).\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf H}=\\left(\\begin{array}[]{c}{\\bf H}^{\\rm I}\\\\&#10;\\hline{\\bf H}^{\\rm II}\\end{array}\\right).\" display=\"inline\"><mrow><mrow><mi>\ud835\udc07</mi><mo>=</mo><mrow><mo>(</mo><mtable rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msup><mi>\ud835\udc07</mi><mi mathvariant=\"normal\">I</mi></msup></mtd></mtr><mtr><mtd class=\"ltx_border_t\" columnalign=\"center\"><msup><mi>\ud835\udc07</mi><mi>II</mi></msup></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere, for $i \\in [n - d]$, the matrix $H^{\\rm I}_i \\in {\\mathbb{{F}}}_Q^{\\alpha \\times n\\alpha}$ is obtained by taking one of the $n - d$ ${\\rm Type~I}$ constraints associated with each of the $q^t$ values for the tuple $(x_1, x_2,\\ldots, x_t) \\in [0: q-1]^t$ (cf.~\\eqref{eq:type1}).  Similarly, we have \n\n", "itemtype": "equation", "pos": 19677, "prevtext": "\nHere, ${\\bf H}^{\\rm I}$ is an $(n - d)\\alpha \\times n\\alpha$ matrix over ${\\mathbb{{F}}}_Q$ which is defined by the $(n - d)\\alpha = (n - d)q^t$ ${\\rm Type~I}$ constraints (cf.~\\eqref{eq:type1}). On the other hand, the $(d - k)\\alpha = (d - k)q^t$ ${\\rm Type~II}$ constraints (cf.~\\eqref{eq:type2}) constitute the $(d - k)\\alpha \\times n\\alpha$ matrix ${\\bf H}^{\\rm II}$ over ${\\mathbb{{F}}}_Q$. We now focus on the structure of the two matrices ${\\bf H}^{\\rm I}$ and ${\\bf H}^{\\rm II}$. Note that \n\n", "index": 27, "text": "\\begin{align}\n{\\bf H}^{\\rm I}  = \\left(\\begin{array}{c}\nH^{\\rm I}_1 \\\\\nH^{\\rm I}_2 \\\\\n\\vdots \\\\\nH^{\\rm I}_{n - d}\n\\end{array}\\right)\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf H}^{\\rm I}=\\left(\\begin{array}[]{c}H^{\\rm I}_{1}\\\\&#10;H^{\\rm I}_{2}\\\\&#10;\\vdots\\\\&#10;H^{\\rm I}_{n-d}\\end{array}\\right)\" display=\"inline\"><mrow><msup><mi>\ud835\udc07</mi><mi mathvariant=\"normal\">I</mi></msup><mo>=</mo><mrow><mo>(</mo><mtable rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msubsup><mi>H</mi><mn>1</mn><mi mathvariant=\"normal\">I</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>H</mi><mn>2</mn><mi mathvariant=\"normal\">I</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>H</mi><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow><mi mathvariant=\"normal\">I</mi></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere, for $i \\in [d - k]$, the matrix $H^{\\rm II}_i \\in {\\mathbb{{F}}}_Q^{\\alpha \\times n\\alpha}$ is defined by one of the $d - k$ ${\\rm~Type~II}$ constraints corresponding to each of the $q^t$ values for the tuple $(x_1, x_2,\\ldots, x_t) \\in [0: q-1]^t$ (cf.~\\eqref{eq:type2}). Recall that for a tuple $(x_1, x_2,\\ldots, x_t) \\in [0: q-1]^t$, the $d - k$ ${\\rm~Type~II}$ constraints corresponding to the tuple are associated with the $d - k$ values of the parameter $\\Delta \\in [1:q-1]$ (cf.~\\eqref{eq:type2}). Exploring the structure of the parity check matrix further, we note that for every $i \\in [n - d]$, the $\\alpha \\times n\\alpha$ matrix $H^{\\rm I}_i$ is a block matrix consisting of $n$ blocks where each blocks is an $\\alpha \\times \\alpha$ diagonal matrix over ${\\mathbb{{F}}}_Q$. In particular, let's denote it as \n\n", "itemtype": "equation", "pos": 20128, "prevtext": "\nwhere, for $i \\in [n - d]$, the matrix $H^{\\rm I}_i \\in {\\mathbb{{F}}}_Q^{\\alpha \\times n\\alpha}$ is obtained by taking one of the $n - d$ ${\\rm Type~I}$ constraints associated with each of the $q^t$ values for the tuple $(x_1, x_2,\\ldots, x_t) \\in [0: q-1]^t$ (cf.~\\eqref{eq:type1}).  Similarly, we have \n\n", "index": 29, "text": "\\begin{align}\n{\\bf H}^{\\rm II}  = \\left(\\begin{array}{c}\nH^{\\rm II}_1 \\\\\nH^{\\rm II}_2 \\\\\n\\vdots \\\\\nH^{\\rm II}_{d - k}\n\\end{array}\\right),\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf H}^{\\rm II}=\\left(\\begin{array}[]{c}H^{\\rm II}_{1}\\\\&#10;H^{\\rm II}_{2}\\\\&#10;\\vdots\\\\&#10;H^{\\rm II}_{d-k}\\end{array}\\right),\" display=\"inline\"><mrow><mrow><msup><mi>\ud835\udc07</mi><mi>II</mi></msup><mo>=</mo><mrow><mo>(</mo><mtable rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msubsup><mi>H</mi><mn>1</mn><mi>II</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>H</mi><mn>2</mn><mi>II</mi></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>H</mi><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mi>II</mi></msubsup></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere $J^{\\rm I}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$ is a diagonal matrix with all of its diagonal entries being non-zero. On the other hand, for $i \\in [d - k]$, the $\\alpha \\times n\\alpha$ matrix $H^{\\rm II}_i$ is also a block matrix which can be written in the following form. \n", "itemtype": "equation", "pos": 21106, "prevtext": "\nwhere, for $i \\in [d - k]$, the matrix $H^{\\rm II}_i \\in {\\mathbb{{F}}}_Q^{\\alpha \\times n\\alpha}$ is defined by one of the $d - k$ ${\\rm~Type~II}$ constraints corresponding to each of the $q^t$ values for the tuple $(x_1, x_2,\\ldots, x_t) \\in [0: q-1]^t$ (cf.~\\eqref{eq:type2}). Recall that for a tuple $(x_1, x_2,\\ldots, x_t) \\in [0: q-1]^t$, the $d - k$ ${\\rm~Type~II}$ constraints corresponding to the tuple are associated with the $d - k$ values of the parameter $\\Delta \\in [1:q-1]$ (cf.~\\eqref{eq:type2}). Exploring the structure of the parity check matrix further, we note that for every $i \\in [n - d]$, the $\\alpha \\times n\\alpha$ matrix $H^{\\rm I}_i$ is a block matrix consisting of $n$ blocks where each blocks is an $\\alpha \\times \\alpha$ diagonal matrix over ${\\mathbb{{F}}}_Q$. In particular, let's denote it as \n\n", "index": 31, "text": "\\begin{align}\nH^{\\rm I}_i = \\left( \\begin{array}{c|c|c|c}J^{\\rm I}_i(1) & J^{\\rm I}_i(2)& \\ldots & J^{\\rm I}_i(n) \\end{array} \\right),\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E10.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle H^{\\rm I}_{i}=\\left(\\begin{array}[]{c|c|c|c}J^{\\rm I}_{i}(1)&amp;J^{%&#10;\\rm I}_{i}(2)&amp;\\ldots&amp;J^{\\rm I}_{i}(n)\\end{array}\\right),\" display=\"inline\"><mrow><mrow><msubsup><mi>H</mi><mi>i</mi><mi mathvariant=\"normal\">I</mi></msubsup><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\"><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mi>i</mi><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mi>i</mi><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>J</mi><mi>i</mi><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere $H^{\\rm II}_i(j) = J^{\\rm II}_i(j) + E^{\\rm II}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$. In this sum, the matrix $J^{\\rm II}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$ is a diagonal matrix with all of its diagonal entries being non-zero. On the other hand, the second matrix in the sum $E^{\\rm II}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$ has at most $1$ non-zero element in each of its row. In particular, for every $i \\in [d-k]$, the block matrix\n\n", "itemtype": "equation", "pos": 21547, "prevtext": "\nwhere $J^{\\rm I}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$ is a diagonal matrix with all of its diagonal entries being non-zero. On the other hand, for $i \\in [d - k]$, the $\\alpha \\times n\\alpha$ matrix $H^{\\rm II}_i$ is also a block matrix which can be written in the following form. \n", "index": 33, "text": "\\begin{align}\nH^{\\rm II}_i =  \\left( \\begin{array}{c|c|c|c}H^{\\rm II}_i(1) & H^{\\rm II}_i(2)& \\ldots & H^{\\rm II}_i(n) \\end{array} \\right),\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle H^{\\rm II}_{i}=\\left(\\begin{array}[]{c|c|c|c}H^{\\rm II}_{i}(1)&amp;H%&#10;^{\\rm II}_{i}(2)&amp;\\ldots&amp;H^{\\rm II}_{i}(n)\\end{array}\\right),\" display=\"inline\"><mrow><mrow><msubsup><mi>H</mi><mi>i</mi><mi>II</mi></msubsup><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\"><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>H</mi><mi>i</mi><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>H</mi><mi>i</mi><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>H</mi><mi>i</mi><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nhas exactly $t$ non-zero elements in each of its row. Here, we note that the matrix $E^{\\rm II}_i$ contains coefficients of the following part of those $\\alpha = q^t$ {\\rm Type~II} constraints which correspond to a fixed value of the parameter $\\Delta \\in [d - k]$ (cf.~\\eqref{eq:type2}). \n\n", "itemtype": "equation", "pos": 22180, "prevtext": "\nwhere $H^{\\rm II}_i(j) = J^{\\rm II}_i(j) + E^{\\rm II}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$. In this sum, the matrix $J^{\\rm II}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$ is a diagonal matrix with all of its diagonal entries being non-zero. On the other hand, the second matrix in the sum $E^{\\rm II}_i(j) \\in {\\mathbb{{F}}}_Q^{\\alpha \\times \\alpha}$ has at most $1$ non-zero element in each of its row. In particular, for every $i \\in [d-k]$, the block matrix\n\n", "index": 35, "text": "\\begin{align}\n\\left( \\begin{array}{c|c|c|c}E^{\\rm II}_i(1) & E^{\\rm II}_i(2)& \\ldots & E^{\\rm II}_i(n) \\end{array} \\right)\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\left(\\begin{array}[]{c|c|c|c}E^{\\rm II}_{i}(1)&amp;E^{\\rm II}_{i}(2)%&#10;&amp;\\ldots&amp;E^{\\rm II}_{i}(n)\\end{array}\\right)\" display=\"inline\"><mrow><mo>(</mo><mtable columnspacing=\"5pt\"><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mi>i</mi><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mi>i</mi><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>E</mi><mi>i</mi><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nWith all the components of the parity check matrix defined, we can represent the parity check matrix ${\\bf H}$ as sum of two $(n - k)\\alpha \\times n\\alpha$ matrix as follows. \n\n", "itemtype": "equation", "pos": 22605, "prevtext": "\nhas exactly $t$ non-zero elements in each of its row. Here, we note that the matrix $E^{\\rm II}_i$ contains coefficients of the following part of those $\\alpha = q^t$ {\\rm Type~II} constraints which correspond to a fixed value of the parameter $\\Delta \\in [d - k]$ (cf.~\\eqref{eq:type2}). \n\n", "index": 37, "text": "\\begin{align}\n\\label{eq:type2_Epart}\n&c((x_1 - \\Delta, x_2,\\ldots, x_t); (1, x_1)) + \\cdots + \\nonumber \\\\\n&c((x_1,\\ldots, x_{t-1} - \\Delta, x_t); (t-1, x_{t-1})) + \\nonumber \\\\ \n&c((x_1, x_2,\\ldots, x_t - \\Delta); (t, x_t)).\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex25.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1}-\\Delta,x_{2},\\ldots,x_{t});(1,x_{1}))+\\cdots+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>,</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi mathvariant=\"normal\">\u22ef</mi><mo>+</mo></mrow></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex26.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},\\ldots,x_{t-1}-\\Delta,x_{t});(t-1,x_{t-1}))+\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><msub><mi>x</mi><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo>,</mo><msub><mi>x</mi><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E13.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle c((x_{1},x_{2},\\ldots,x_{t}-\\Delta);(t,x_{t})).\" display=\"inline\"><mrow><mrow><mi>c</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>,</mo><mi mathvariant=\"normal\">\u2026</mi><mo>,</mo><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>-</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>;</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>,</mo><msub><mi>x</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nHere ${\\bf J} \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha}$ and ${\\bf E} \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha}$ denote the following matrices.\n\n\n", "itemtype": "equation", "pos": 23019, "prevtext": "\nWith all the components of the parity check matrix defined, we can represent the parity check matrix ${\\bf H}$ as sum of two $(n - k)\\alpha \\times n\\alpha$ matrix as follows. \n\n", "index": 39, "text": "\\begin{align}\n\\label{eq:HJE}\n{\\bf H} =  \\left(\\begin{array}{c}\n{\\bf H}^{\\rm I} \\\\ \\hline\n{\\bf H}^{\\rm II} \\end{array} \\right) =  {\\bf J} + {\\bf E}.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E14.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf H}=\\left(\\begin{array}[]{c}{\\bf H}^{\\rm I}\\\\&#10;\\hline{\\bf H}^{\\rm II}\\end{array}\\right)={\\bf J}+{\\bf E}.\" display=\"inline\"><mrow><mrow><mi>\ud835\udc07</mi><mo>=</mo><mrow><mo>(</mo><mtable rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><msup><mi>\ud835\udc07</mi><mi mathvariant=\"normal\">I</mi></msup></mtd></mtr><mtr><mtd class=\"ltx_border_t\" columnalign=\"center\"><msup><mi>\ud835\udc07</mi><mi>II</mi></msup></mtd></mtr></mtable><mo>)</mo></mrow><mo>=</mo><mrow><mi>\ud835\udc09</mi><mo>+</mo><mi>\ud835\udc04</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nNote that, we use $\\mathbf{0}_{\\alpha}$ to represent the $\\alpha \\times \\alpha$ all zero matrix. We now specify the non-zero entries in both the matrices ${\\bf J}$ and ${\\bf E}$. Let $H_{MDS}$ be an $(n-k) \\times n$ Cauchy matrix, \n\n\n", "itemtype": "equation", "pos": 23344, "prevtext": "\nHere ${\\bf J} \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha}$ and ${\\bf E} \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha}$ denote the following matrices.\n\n\n", "index": 41, "text": "\\begin{align}\n\\label{eq:Jdef}\n{\\bf J} = \\left(\\begin{array}{c|c|c|c}\nJ^{\\rm I}_1(1) & J^{\\rm I}_1(2)& \\cdots& J^{\\rm I}_1(n) \\\\\nJ^{\\rm I}_2(1) & J^{\\rm I}_2(2)&  \\cdots & J^{\\rm I}_2(n) \\\\\n\\vdots & \\vdots &  \\ddots & \\vdots \\\\\nJ^{\\rm I}_{n - d}(1) & J^{\\rm I}_{n - d}(2)& \\cdots & J^{\\rm I}_{n - d}(n) \\\\\n\\hline\nJ^{\\rm II}_1(1) & J^{\\rm II}_1(2)&  \\cdots & J^{\\rm II}_1(n) \\\\\nJ^{\\rm II}_2(1) & J^{\\rm II}_2(2)&  \\cdots & J^{\\rm II}_2(n) \\\\\n\\vdots & \\vdots &  \\ddots & \\vdots \\\\\nJ^{\\rm II}_{d - k}(1) & J^{\\rm II}_{d - k}(2)& \\cdots & J^{\\rm II}_{d - k}(n) \\\\\n\\end{array} \\right), \\\\% \\in {\\mathbb{{F}}}_Q^{(n - k)\\alpha \\times n\\alpha}. \\\\\n{\\bf E} = \\left(\\begin{array}{c|c|c|c}\n\\mathbf{0}_{\\alpha} & \\mathbf{0}_{\\alpha} &\\cdots& \\mathbf{0}_{\\alpha} \\\\\n\\mathbf{0}_{\\alpha} & \\mathbf{0}_{\\alpha} & \\cdots & \\mathbf{0}_{\\alpha} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n\\mathbf{0}_{\\alpha} & \\mathbf{0}_{\\alpha} & \\cdots & \\mathbf{0}_{\\alpha} \\\\\n\\hline\nE^{\\rm II}_1(1) & E^{\\rm II}_1(2)&   \\cdots & E^{\\rm II}_1(n) \\\\\nE^{\\rm II}_2(1) & E^{\\rm II}_2(2)&  \\cdots & E^{\\rm II}_2(n) \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nE^{\\rm II}_{d - k}(1) & E^{\\rm II}_{d - k}(2) &  \\cdots & E^{\\rm II}_{d - k}(n) \\\\\n\\end{array} \\right).\\label{eq:Edef} \n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E15.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf J}=\\left(\\begin{array}[]{c|c|c|c}J^{\\rm I}_{1}(1)&amp;J^{\\rm I}_%&#10;{1}(2)&amp;\\cdots&amp;J^{\\rm I}_{1}(n)\\\\&#10;J^{\\rm I}_{2}(1)&amp;J^{\\rm I}_{2}(2)&amp;\\cdots&amp;J^{\\rm I}_{2}(n)\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;J^{\\rm I}_{n-d}(1)&amp;J^{\\rm I}_{n-d}(2)&amp;\\cdots&amp;J^{\\rm I}_{n-d}(n)\\\\&#10;\\hline J^{\\rm II}_{1}(1)&amp;J^{\\rm II}_{1}(2)&amp;\\cdots&amp;J^{\\rm II}_{1}(n)\\\\&#10;J^{\\rm II}_{2}(1)&amp;J^{\\rm II}_{2}(2)&amp;\\cdots&amp;J^{\\rm II}_{2}(n)\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;J^{\\rm II}_{d-k}(1)&amp;J^{\\rm II}_{d-k}(2)&amp;\\cdots&amp;J^{\\rm II}_{d-k}(n)\\\\&#10;\\end{array}\\right),\" display=\"inline\"><mrow><mrow><mi>\ud835\udc09</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>1</mn><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>1</mn><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>1</mn><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>2</mn><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>2</mn><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>2</mn><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>J</mi><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow><mi mathvariant=\"normal\">I</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr><mtr><mtd class=\"ltx_border_r ltx_border_t\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>1</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r ltx_border_t\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>1</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r ltx_border_t\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_t\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>1</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>2</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>2</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>J</mi><mn>2</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>J</mi><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>J</mi><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E16.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf E}=\\left(\\begin{array}[]{c|c|c|c}\\mathbf{0}_{\\alpha}&amp;\\mathbf%&#10;{0}_{\\alpha}&amp;\\cdots&amp;\\mathbf{0}_{\\alpha}\\\\&#10;\\mathbf{0}_{\\alpha}&amp;\\mathbf{0}_{\\alpha}&amp;\\cdots&amp;\\mathbf{0}_{\\alpha}\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;\\mathbf{0}_{\\alpha}&amp;\\mathbf{0}_{\\alpha}&amp;\\cdots&amp;\\mathbf{0}_{\\alpha}\\\\&#10;\\hline E^{\\rm II}_{1}(1)&amp;E^{\\rm II}_{1}(2)&amp;\\cdots&amp;E^{\\rm II}_{1}(n)\\\\&#10;E^{\\rm II}_{2}(1)&amp;E^{\\rm II}_{2}(2)&amp;\\cdots&amp;E^{\\rm II}_{2}(n)\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;E^{\\rm II}_{d-k}(1)&amp;E^{\\rm II}_{d-k}(2)&amp;\\cdots&amp;E^{\\rm II}_{d-k}(n)\\\\&#10;\\end{array}\\right).\" display=\"inline\"><mrow><mrow><mi>\ud835\udc04</mi><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><msub><mn/><mi>\u03b1</mi></msub></mtd></mtr><mtr><mtd class=\"ltx_border_r ltx_border_t\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mn>1</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r ltx_border_t\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mn>1</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r ltx_border_t\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd class=\"ltx_border_t\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mn>1</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mn>2</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mn>2</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>E</mi><mn>2</mn><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mrow><msubsup><mi>E</mi><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd class=\"ltx_border_r\" columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mrow><msubsup><mi>E</mi><mrow><mi>d</mi><mo>-</mo><mi>k</mi></mrow><mi>II</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere $\\{a_1, a_2,\\ldots, a_{n - k}, b_1, b_2,\\ldots, b_n \\}$ are $2n - k$ distinct elements from the field ${\\mathbb{{F}}}_Q$. Assuming that $\\mathbf{I}_{\\alpha}$ denotes the $\\alpha \\times \\alpha$ identity matrix, we define the matrix ${\\bf J}$ (cf.~\\eqref{eq:Jdef}) as follows. \n\n", "itemtype": "equation", "pos": 24824, "prevtext": "\nNote that, we use $\\mathbf{0}_{\\alpha}$ to represent the $\\alpha \\times \\alpha$ all zero matrix. We now specify the non-zero entries in both the matrices ${\\bf J}$ and ${\\bf E}$. Let $H_{MDS}$ be an $(n-k) \\times n$ Cauchy matrix, \n\n\n", "index": 43, "text": "\\begin{align}\nH_{MDS} = \\left( \\begin{array}{cccc} \n\\frac{1}{a_1 - b_1}&\\frac{1}{a_1 - b_2}&\\cdots& \\frac{1}{a_1 - b_n} \\\\\n\\frac{1}{a_2 - b_1}&\\frac{1}{a_2 - b_2}&\\cdots& \\frac{1}{a_2 - b_n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n\\frac{1}{a_{n - k} - b_1} & \\frac{1}{a_{n-k} - b_2} &\\cdots& \\frac{1}{a_{n - k} - b_n} \\end{array} \\right), \n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E17.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle H_{MDS}=\\left(\\begin{array}[]{cccc}\\frac{1}{a_{1}-b_{1}}&amp;\\frac{1%&#10;}{a_{1}-b_{2}}&amp;\\cdots&amp;\\frac{1}{a_{1}-b_{n}}\\\\&#10;\\frac{1}{a_{2}-b_{1}}&amp;\\frac{1}{a_{2}-b_{2}}&amp;\\cdots&amp;\\frac{1}{a_{2}-b_{n}}\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;\\frac{1}{a_{n-k}-b_{1}}&amp;\\frac{1}{a_{n-k}-b_{2}}&amp;\\cdots&amp;\\frac{1}{a_{n-k}-b_{n}}%&#10;\\end{array}\\right),\" display=\"inline\"><mrow><mrow><msub><mi>H</mi><mrow><mi>M</mi><mo>\u2062</mo><mi>D</mi><mo>\u2062</mo><mi>S</mi></mrow></msub><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>-</mo><msub><mi>b</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>-</mo><msub><mi>b</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>-</mo><msub><mi>b</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>-</mo><msub><mi>b</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>-</mo><msub><mi>b</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>-</mo><msub><mi>b</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow></msub><mo>-</mo><msub><mi>b</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow></msub><mo>-</mo><msub><mi>b</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow></msub><mo>-</mo><msub><mi>b</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere $\\otimes$ denotes the Kronecker product between two matrices. As for non-zero elements in the matrix ${\\bf E}$, we set all of its non-zero elements to be an indeterminate $\\rho \\in {\\mathbb{{F}}}^{\\ast}_Q$. In order to make it more clear, we denote the obtained matrix as ${\\bf E}^{\\rho}$ and accordingly the parity-check matrix defined in \\eqref{eq:HJE} becomes\n\n", "itemtype": "equation", "pos": 25458, "prevtext": "\nwhere $\\{a_1, a_2,\\ldots, a_{n - k}, b_1, b_2,\\ldots, b_n \\}$ are $2n - k$ distinct elements from the field ${\\mathbb{{F}}}_Q$. Assuming that $\\mathbf{I}_{\\alpha}$ denotes the $\\alpha \\times \\alpha$ identity matrix, we define the matrix ${\\bf J}$ (cf.~\\eqref{eq:Jdef}) as follows. \n\n", "index": 45, "text": "\\begin{align}\n{\\bf J} = H_{MDS} \\otimes \\mathbf{I}_{\\alpha},\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E18.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf J}=H_{MDS}\\otimes\\mathbf{I}_{\\alpha},\" display=\"inline\"><mrow><mrow><mi>\ud835\udc09</mi><mo>=</mo><mrow><msub><mi>H</mi><mrow><mi>M</mi><mo>\u2062</mo><mi>D</mi><mo>\u2062</mo><mi>S</mi></mrow></msub><mo>\u2297</mo><msub><mi>\ud835\udc08</mi><mi>\u03b1</mi></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": " \nNext, we show that for large enough $Q$, there exists a choice for $\\rho$ which makes the code defined by the parity check matrix ${\\bf H}$ an MDS code. However, before showing this, we argue that our choice of the matrix ${\\bf J}$ meets the requirement for the ${\\rm Type~I}$ constraints. This requirement states that for every $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, given any subset of $d$ code symbols out of $n$ code symbols  $\\{c((x_1, x_2,\\ldots, x_t);(i,\\theta))\\}_{(i, \\theta) \\in \\mathcal{N}}$, the remaining  $n-d$ code symbols can be recovered using the corresponding ${\\rm Type~I}$ constraints (cf.~\\eqref{eq:type1}). This requirement indeed holds as for a tuple $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, the coefficients associated with its ${\\rm Type~I}$ constraints are the elements of the following $(n - d) \\times n$ sub-matrix of $H_{MDS}$. \n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nwhere $\\otimes$ denotes the Kronecker product between two matrices. As for non-zero elements in the matrix ${\\bf E}$, we set all of its non-zero elements to be an indeterminate $\\rho \\in {\\mathbb{{F}}}^{\\ast}_Q$. In order to make it more clear, we denote the obtained matrix as ${\\bf E}^{\\rho}$ and accordingly the parity-check matrix defined in \\eqref{eq:HJE} becomes\n\n", "index": 47, "text": "\\begin{align}\n\\label{eq:HJM1}\n{\\bf H} = {\\bf J} + {\\bf E}^{\\rho} = H_{MDS}\\otimes {\\bf I}_{\\alpha} + {\\bf E}^{\\rho}.\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E19.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle{\\bf H}={\\bf J}+{\\bf E}^{\\rho}=H_{MDS}\\otimes{\\bf I}_{\\alpha}+{%&#10;\\bf E}^{\\rho}.\" display=\"inline\"><mrow><mrow><mi>\ud835\udc07</mi><mo>=</mo><mrow><mi>\ud835\udc09</mi><mo>+</mo><msup><mi>\ud835\udc04</mi><mi>\u03c1</mi></msup></mrow><mo>=</mo><mrow><mrow><msub><mi>H</mi><mrow><mi>M</mi><mo>\u2062</mo><mi>D</mi><mo>\u2062</mo><mi>S</mi></mrow></msub><mo>\u2297</mo><msub><mi>\ud835\udc08</mi><mi>\u03b1</mi></msub></mrow><mo>+</mo><msup><mi>\ud835\udc04</mi><mi>\u03c1</mi></msup></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nSince any $(n - d) \\times (n-d)$ sub-matrix of $H^{\\rm I}_{MDS}$ is full-rank, given any subset of $d$ code symbols out of $n$ code symbols  $\\{c((x_1, x_2,\\ldots, x_t);(i,\\theta))\\}_{(i, \\theta) \\in \\mathcal{N}}$, the remaining  $n-d$ code symbols can indeed be recovered.\n\n\\begin{remark}\n\\label{rem:diff2}\nNote that each tuple $(x_1,\\ldots, x_t) \\in [0:q-1]^t$ has only $1$ associated {\\rm Type~I} constraint in \\cite{SAK15}. Therefore the requirement on  $H^{\\rm I}_{MDS}$ reduces to having all of its elements non-zero. On the other hand for $d \\neq n - 1$ case, we have an additional requirement that any $(n - d) \\times (n-d)$ sub-matrix of $H^{\\rm I}_{MDS}$ is full-rank.\n\\end{remark}\n\nIn order to show that for a suitable choice for the value of the indeterminate $\\rho$ the code ${\\cal C}$ defined by the matrix ${\\bf H}$ gives an MDS code, we utilize the following standard result.\n\n\\begin{proposition}\n\\label{prop:mds}\nLet ${\\cal C} \\in {\\mathbb{{F}}}_{Q^{n\\alpha}}$ be a linear vector code (over ${\\mathbb{{F}}}_Q$) defined by the block parity check matrix ${\\bf H} \\in {\\mathbb{{F}}}^{(n - k)\\alpha \\times n\\alpha}_Q$. The code ${\\cal C}$ is an MDS code iff for every ${\\cal S} \\subset [n]$ such that $|{\\cal S}| = n - k$, the $(n - k)\\alpha \\times (n - k)\\alpha$ sub-matrix ${\\bf H}(:, {\\cal S})$ associated with the vector symbols indexed by the set ${\\cal S}$ is full rank.\n\\end{proposition} \n\n\\begin{theorem}\n\\label{thm:mds}\nLet ${\\mathbb{{F}}}_Q$ be a finite field of large enough size. Then, there exists a choice for the indeterminate $\\rho$ such that the $[n, k\\alpha, d_{\\min}, \\alpha]_Q$ vector code defined by the matrix ${\\bf H} = H_{MDS}\\otimes {\\bf I}_{\\alpha} + {\\bf E}^{\\rho}$ (cf.~\\eqref{eq:HJM1}) is an MDS vector code, i.e., $d_{\\min} = n - k + 1$.\n\\end{theorem}\n\n\\begin{proof}\nLet ${\\cal S} \\subseteq [n]$ be a set such that $|{\\cal S}| = n - k$. We consider the determinant of the matrix ${\\bf H}(:, {\\cal S})$. Note that $\\det({\\bf H}(:,{\\cal S}))$ is a polynomial of the indeterminate $\\rho$. Let's denote the polynomial by $f_{{\\cal S}}(\\rho)$. We have, \n\n", "itemtype": "equation", "pos": 26879, "prevtext": " \nNext, we show that for large enough $Q$, there exists a choice for $\\rho$ which makes the code defined by the parity check matrix ${\\bf H}$ an MDS code. However, before showing this, we argue that our choice of the matrix ${\\bf J}$ meets the requirement for the ${\\rm Type~I}$ constraints. This requirement states that for every $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, given any subset of $d$ code symbols out of $n$ code symbols  $\\{c((x_1, x_2,\\ldots, x_t);(i,\\theta))\\}_{(i, \\theta) \\in \\mathcal{N}}$, the remaining  $n-d$ code symbols can be recovered using the corresponding ${\\rm Type~I}$ constraints (cf.~\\eqref{eq:type1}). This requirement indeed holds as for a tuple $(x_1,\\ldots, x_t) \\in [0:q-1]^t$, the coefficients associated with its ${\\rm Type~I}$ constraints are the elements of the following $(n - d) \\times n$ sub-matrix of $H_{MDS}$. \n\n", "index": 49, "text": "\\begin{align}\n\nH^{\\rm I}_{MDS} = \\left( \\begin{array}{cccc} \n\\frac{1}{a_{1} - b_1}&\\frac{1}{a_{1} - b_2}&\\cdots& \\frac{1}{a_{1} - b_n} \\\\\n\\frac{1}{a_{2} - b_1}&\\frac{1}{a_{2} - b_2}&\\cdots& \\frac{1}{a_{2} - b_n} \\\\\n\\vdots & \\vdots &\\ddots& \\vdots \\\\\n\\frac{1}{a_{{n - d}} - b_1} &\\frac{1}{a_{{n-d}} - b_2}&\\cdots& \\frac{1}{a_{{n - d}} - b_n} \\end{array} \\right). \\nonumber \n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex27.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\par&#10; H^{\\rm I}_{MDS}=\\left(\\begin{array}[]{cccc}\\frac{1}{a_{1}-b%&#10;_{1}}&amp;\\frac{1}{a_{1}-b_{2}}&amp;\\cdots&amp;\\frac{1}{a_{1}-b_{n}}\\\\&#10;\\frac{1}{a_{2}-b_{1}}&amp;\\frac{1}{a_{2}-b_{2}}&amp;\\cdots&amp;\\frac{1}{a_{2}-b_{n}}\\\\&#10;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\&#10;\\frac{1}{a_{{n-d}}-b_{1}}&amp;\\frac{1}{a_{{n-d}}-b_{2}}&amp;\\cdots&amp;\\frac{1}{a_{{n-d}}-%&#10;b_{n}}\\end{array}\\right).\" display=\"inline\"><mrow><mrow><msubsup><mi>H</mi><mrow><mi>M</mi><mo>\u2062</mo><mi>D</mi><mo>\u2062</mo><mi>S</mi></mrow><mi mathvariant=\"normal\">I</mi></msubsup><mo>=</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>-</mo><msub><mi>b</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>-</mo><msub><mi>b</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>-</mo><msub><mi>b</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>-</mo><msub><mi>b</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>-</mo><msub><mi>b</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>-</mo><msub><mi>b</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22f1</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow></msub><mo>-</mo><msub><mi>b</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow></msub><mo>-</mo><msub><mi>b</mi><mn>2</mn></msub></mrow></mfrac></mstyle></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ef</mi></mtd><mtd columnalign=\"center\"><mstyle displaystyle=\"true\"><mfrac><mn>1</mn><mrow><msub><mi>a</mi><mrow><mi>n</mi><mo>-</mo><mi>d</mi></mrow></msub><mo>-</mo><msub><mi>b</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nwhere the last inequality follows as ${\\bf J} = H_{MDS}\\otimes {\\bf I}_{\\alpha}$ is a parity check matrix of an MDS vector code. This establishes that $f_{{\\cal S}}(\\rho)$ is a non-trivial (not identically zero) polynomial of $\\rho$. Now consider the polynomial\n\n", "itemtype": "equation", "pos": 29356, "prevtext": "\nSince any $(n - d) \\times (n-d)$ sub-matrix of $H^{\\rm I}_{MDS}$ is full-rank, given any subset of $d$ code symbols out of $n$ code symbols  $\\{c((x_1, x_2,\\ldots, x_t);(i,\\theta))\\}_{(i, \\theta) \\in \\mathcal{N}}$, the remaining  $n-d$ code symbols can indeed be recovered.\n\n\\begin{remark}\n\\label{rem:diff2}\nNote that each tuple $(x_1,\\ldots, x_t) \\in [0:q-1]^t$ has only $1$ associated {\\rm Type~I} constraint in \\cite{SAK15}. Therefore the requirement on  $H^{\\rm I}_{MDS}$ reduces to having all of its elements non-zero. On the other hand for $d \\neq n - 1$ case, we have an additional requirement that any $(n - d) \\times (n-d)$ sub-matrix of $H^{\\rm I}_{MDS}$ is full-rank.\n\\end{remark}\n\nIn order to show that for a suitable choice for the value of the indeterminate $\\rho$ the code ${\\cal C}$ defined by the matrix ${\\bf H}$ gives an MDS code, we utilize the following standard result.\n\n\\begin{proposition}\n\\label{prop:mds}\nLet ${\\cal C} \\in {\\mathbb{{F}}}_{Q^{n\\alpha}}$ be a linear vector code (over ${\\mathbb{{F}}}_Q$) defined by the block parity check matrix ${\\bf H} \\in {\\mathbb{{F}}}^{(n - k)\\alpha \\times n\\alpha}_Q$. The code ${\\cal C}$ is an MDS code iff for every ${\\cal S} \\subset [n]$ such that $|{\\cal S}| = n - k$, the $(n - k)\\alpha \\times (n - k)\\alpha$ sub-matrix ${\\bf H}(:, {\\cal S})$ associated with the vector symbols indexed by the set ${\\cal S}$ is full rank.\n\\end{proposition} \n\n\\begin{theorem}\n\\label{thm:mds}\nLet ${\\mathbb{{F}}}_Q$ be a finite field of large enough size. Then, there exists a choice for the indeterminate $\\rho$ such that the $[n, k\\alpha, d_{\\min}, \\alpha]_Q$ vector code defined by the matrix ${\\bf H} = H_{MDS}\\otimes {\\bf I}_{\\alpha} + {\\bf E}^{\\rho}$ (cf.~\\eqref{eq:HJM1}) is an MDS vector code, i.e., $d_{\\min} = n - k + 1$.\n\\end{theorem}\n\n\\begin{proof}\nLet ${\\cal S} \\subseteq [n]$ be a set such that $|{\\cal S}| = n - k$. We consider the determinant of the matrix ${\\bf H}(:, {\\cal S})$. Note that $\\det({\\bf H}(:,{\\cal S}))$ is a polynomial of the indeterminate $\\rho$. Let's denote the polynomial by $f_{{\\cal S}}(\\rho)$. We have, \n\n", "index": 51, "text": "\\begin{align}\nf_{{\\cal S}}(\\rho = 0) = \\det({\\bf J}(:,{\\cal S}) + {\\bf E}^{\\rho = 0}(:,{\\cal S})) = \\det({\\bf J}(:, {\\cal S})) \\neq 0, \\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex28.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle f_{{\\cal S}}(\\rho=0)=\\det({\\bf J}(:,{\\cal S})+{\\bf E}^{\\rho=0}(:%&#10;,{\\cal S}))=\\det({\\bf J}(:,{\\cal S}))\\neq 0,\" display=\"inline\"><mrow><msub><mi>f</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi></msub><mrow><mo stretchy=\"false\">(</mo><mi>\u03c1</mi><mo>=</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mo movablelimits=\"false\">det</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc09</mi><mrow><mo stretchy=\"false\">(</mo><mo>:</mo><mo>,</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><msup><mi>\ud835\udc04</mi><mrow><mi>\u03c1</mi><mo>=</mo><mn>0</mn></mrow></msup><mrow><mo stretchy=\"false\">(</mo><mo>:</mo><mo>,</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mo movablelimits=\"false\">det</mo><mrow><mo stretchy=\"false\">(</mo><mi>\ud835\udc09</mi><mrow><mo stretchy=\"false\">(</mo><mo>:</mo><mo>,</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2260</mo><mn>0</mn><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.06362.tex", "nexttext": "\nHere, $h(\\rho)$ is a non-trivial polynomial in $\\rho$ as it is a product of non-trivial polynomials $\\big\\{f_{{\\cal S}}(\\rho)\\big\\}_{{\\cal S}}$. Furthermore, the degree of $h(\\rho)$ is bounded by ${n \\choose n - k}(n - k)\\alpha$. Therefore, for $Q$ large enough, there exists a value of $\\rho$, say $\\rho^{\\ast}$ such that $h(\\rho^{\\ast}) \\neq 0$. Combining this with Proposition~\\ref{prop:mds}, we obtain that the vector code defined by the parity check matrix ${\\bf H} = {\\bf J} + {\\bf E}^{\\rho^{\\ast}}$ is an MDS vector code.\n\\end{proof}\n\n\n\\section{Conclusion}\n\\label{sec:conclusion}\nFor a given rate, we present a construction for MSR codes that allows for bandwidth-efficient repair of a single node failure with arbitrary (but fixed) number of helper nodes $d$. In addition, for the constant rate, the code has a polynomial sub-packetization (a.k.a. node size) $\\alpha$. However, in the present form the construction suffers from a large field size $Q$. Note that the requirement on the field size emerges from the requirement that the code should be an MDS code (cf.~Section~\\ref{sec:MDSprop}). It is an important question to resolve if the code construction with similar system parameters $n, k, d$ and polynomial sub-packetization can be achieved for a smaller field size. In particular, the lower bound on the field size for an MSR code is investigated in \\cite{CM15_ITW}, and the results presented here form an upper bound.\n\n\n\\bibliographystyle{unsrt}\n\\bibliography{MSR_poly}\n\n\n\n", "itemtype": "equation", "pos": 29775, "prevtext": "\nwhere the last inequality follows as ${\\bf J} = H_{MDS}\\otimes {\\bf I}_{\\alpha}$ is a parity check matrix of an MDS vector code. This establishes that $f_{{\\cal S}}(\\rho)$ is a non-trivial (not identically zero) polynomial of $\\rho$. Now consider the polynomial\n\n", "index": 53, "text": "\\begin{align}\nh(\\rho) = \\prod_{{\\cal S} \\subseteq [n]:~|{\\cal S}| = n-k}\\det(H(:,{\\cal S})) = \\prod_{{\\cal S} \\subseteq [n]:~|{\\cal S}| = n-k}f_{{\\cal S}}(\\rho). \\nonumber\n\\end{align}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex29.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle h(\\rho)=\\prod_{{\\cal S}\\subseteq[n]:~{}|{\\cal S}|=n-k}\\det(H(:,{%&#10;\\cal S}))=\\prod_{{\\cal S}\\subseteq[n]:~{}|{\\cal S}|=n-k}f_{{\\cal S}}(\\rho).\" display=\"inline\"><mrow><mrow><mrow><mi>h</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03c1</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo>\u2286</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo rspace=\"5.8pt\">:</mo><mrow><mrow><mo stretchy=\"false\">|</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">|</mo></mrow><mo>=</mo><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow></mrow></mrow></munder></mstyle><mrow><mo movablelimits=\"false\">det</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>H</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mo>:</mo><mo>,</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mstyle displaystyle=\"true\"><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u220f</mo><mrow><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo>\u2286</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo rspace=\"5.8pt\">:</mo><mrow><mrow><mo stretchy=\"false\">|</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">|</mo></mrow><mo>=</mo><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow></mrow></mrow></munder></mstyle><mrow><msub><mi>f</mi><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03c1</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}]