[{"file": "1601.01912.tex", "nexttext": "\n\\end{theorem}\n\\begin{remark}\n  Note that for small and for large values of $\\min\\left\\{{{\\tau},T}\\right\\}$, one can\n  do slightly better. It is straightforward to generalize the broadcast\n  algorithm of \\cite{clementi09} to complete single message broadcast\n  in time $O\\left(n^2/k\\log n\\right)$ in $1$-interval $k$-connected\n  radio networks against a $1$-oblivious adversary. Using the result\n  from \\cite{dualgraph}, we also know that for a sufficiently large\n  constant $c$ and $T\\geq cn\\log^2n$, single-message broadcast can be\n  solved in $O(n\\log^2n)$ rounds even for ${\\tau}=0$. Our upper bound\n  therefore beats previous results for\n  $\\min\\left\\{{{\\tau},T}\\right\\}=\\omega(\\log^4 n)$ and $T=O(n\\log^2 n)$.\n\\end{remark}\n\nIn addition to the upper bound of Theorem \\ref{thm:upperbound}, we\nalso prove a lower bound which essentially shows that even for very\nlarge values of $T$, some relaxation on the standard adaptive\nadversaries is necessary in order to get an upper bound which improves\nwith $T$. For ${\\tau}=1$, we show that at least for small $k$, the\ngeneralized upper bound of \\cite{clementi09} is essentially\noptimal. The lower bound can be seen as a generalization of the simple\n$\\Omega(n^2/\\log n)$ lower bound for $k=1$ and $T=1$ proven in\n\\cite{clementi09}.\n\n\\begin{theorem}\\label{thm:lowerbound}\n  For every constant ${\\varepsilon}>0$ and every $T\\leq (n/k)^{1-{\\varepsilon}}$, the\n  expected time to solve single-message broadcast in $T$-interval\n  $k$-connected radio networks against a $1$-oblivious adversary is at\n  least\n \n", "itemtype": "equation", "pos": 9401, "prevtext": "\n\n\\maketitle              \n\n\\thispagestyle{empty}\n\n\n\\begin{abstract}\n  We study the single-message broadcast problem in dynamic radio\n  networks. We show that the time complexity of the problem depends on\n  the amount of stability and connectivity of the dynamic network\n  topology and on the adaptiveness of the adversary providing the\n  dynamic topology. More formally, we model communication using the\n  standard graph-based radio network model. To model the dynamic\n  network, we use a generalization of the synchronous dynamic\n  graph model introduced in [Kuhn et al., STOC 2010]. For integer\n  parameters $T\\geq 1$ and $k\\geq 1$, we call a dynamic graph\n  $T$-interval $k$-connected if for every interval of $T$ consecutive\n  rounds, there exists a $k$-vertex-connected stable\n  subgraph. Further, for an integer parameter $\\tau\\geq 0$, we say that\n  the adversary providing the dynamic network is $\\tau$-oblivious if for\n  constructing the graph of some round $t$, the adversary has access\n  to all the randomness (and states) of the algorithm up to round\n  $t-\\tau$.\n\n  As our main result, we show that for any $T\\geq 1$, any $k\\geq 1$,\n  and any $\\tau\\geq 1$, for a $\\tau$-oblivious adversary, there is a\n  distributed algorithm to broadcast a single message in time\n  $O\\big(\\big(1+\\frac{n}{k\\cdot\\min\\left\\{{\\tau,T}\\right\\}}\\big)\\cdot n\\log^3\n  n\\big)$. We further show that even for large interval\n  $k$-connectivity, efficient broadcast is not possible for the usual\n  adaptive adversaries. For a $1$-oblivious adversary, we show that\n  even for any $T\\leq (n/k)^{1-{\\varepsilon}}$ (for any constant ${\\varepsilon}>0$) and for\n  any $k\\geq 1$, global broadcast in $T$-interval $k$-connected\n  networks requires at least $\\Omega(n^2/(k^2\\log n))$ time. Further,\n  for a $0$-oblivious adversary, broadcast cannot be solved in\n  $T$-interval $k$-connected networks as long as $T<n-k$.\n\\end{abstract}\n\\vspace{.5cm}\n\n\n\n\n\n\\section{Introduction}\n\\label{sec:intro}\n\nBy now, a rich theory on algorithms for large-scale wireless networks\nexists and we have a rather precise understanding of the complexity of\nmany basic computation and communication tasks for a variety of\nwireless network models. While many wireless communication models and\nmodeling assumptions have been studied, to a large part, the\nconsidered models all share one basic property. Most of the existing\nwork is based on static networks and on communication models where\nwireless signal reception is modeled in a completely deterministic\nway. For example, in the classic radio network model, a wireless\nnetwork is modeled as a graph and a node in the graph can receive a\nmessage transmitted by some neighbor if and only if no other neighbor\ntransmits at the same time, e.g., \\cite{bgi1,moscibroda05}. In the\nSINR (or physical) model, nodes have fixed coordinates in some\ngeometric space and a transmitted signal can be successfully received\nif and only if the signal-to-noise-and-interference ratio at the\nreceiver is above a certain fixed threshold, e.g.,\n\\cite{gupta:2000,moscibroda06}.\n\nThe situation in actual networks however is quite different and\nwireless signal reception might behave in a rather unpredictable\nway. There can be multiple sources for interference which cannot be\ncontrolled by a distributed algorithm and signal propagation depends\non various properties of the environment. As a result, we often obtain\nwireless communication links with unreliable behavior\n\\cite{kim06,newport:2007,ramachandran07,srinivasan08,yarvis02}. In\naddition, wireless devices might be mobile leading to a potentially\ncompletely dynamic network topology.\n\nAs a consequence, in recent years, researchers in the wireless\nalgorithms community have also started to consider radio network\nmodels which exhibit nondeterministic behavior and sometimes general\ndynamic topologies, e.g.,\n\\cite{structuringDG,clementi09,clementi12,fernandezanta12,dualgraph,obliviousDG}.\nIn the present paper, we continue this line of research and study the\nglobal broadcast problem in dynamic radio networks for a range of\nmodeling assumptions. Note that in ordinary, static radio networks,\nalbeit appearingly simple, global broadcast is one of the best studied\nproblems in the area, (see, e.g.,\n\\cite{bgi2,bgi1,chlamtac:1985,jurdzinski14,newport-hitting} and many\nothers). We model a dynamic network by applying the dynamic network\nmodel introduced in \\cite{kuhn_stoc10}. Time is divided into\nsynchronous rounds and a wireless network is modeled as a dynamic\ngraph with a fixed set of $n$ nodes and a set of edges which can\nchange from round to round. For two parameters $T\\geq 1$ and\n$k\\geq 1$, a dynamic graph is called \\emph{$T$-interval $k$-connected}\nif for any interval of $T$ consecutive rounds, the set of edges which\nare present throughout these $T$ rounds induces a graph with vertex\nconnectivity at least $k$ (in \\cite{kuhn_stoc10}, the model was only\nintroduced for $k=1$). We refer to \\cite{kuhn:2011:survey} for a more\nthorough discussion of the model of \\cite{kuhn_stoc10} and of several\nearlier related dynamic network models (e.g.,\n\\cite{avin08,baumann09,clementi09,odell05}).\n\nCommunication is modeled by using the standard\nradio network model. In each round, each node can either transmit a message or\nlisten. A listening node successfully receives a message transmitted\nby a neighbor in the current graph if and only if no other neighbor\ntransmits in the same round. We assume that nodes cannot detect\ncollisions, i.e., whether $0$ or more than $1$ neighbors transmit is\nindistinguishable for a listening node. Note that the described\ndynamic network model does not only allow to model topology changes\ndue to arbitrary node mobility. It also allows to model unreliable\nlinks where the presence/availability can change for various reasons.\n\nWe assume that the dynamic graph is provided by a worst-case\nadversary. As we study randomized distributed protocols, we need to\nspecify to what extent the adversary can adapt to the random decisions\nof the nodes when determining the sequence of network topologies. For\nthe adaptiveness of the adversary, we use a more fine-grained\nclassification than what is usually done. For an integer parameter\n${\\tau}\\geq 0$, we say that the adversary is ${\\tau}$-oblivious if for\ndetermining the graph in round $r$, the adversary knows the randomness\nof all nodes of all the rounds up to round $r-{\\tau}$. Typically, only\nthe extreme cases are studied. An adversary which does not have access\nto the random decisions of the algorithm (i.e., ${\\tau}=\\infty$) is\ncalled an \\emph{oblivious} adversary, whereas an adversary which has\naccess to the randomness of the algorithm is called an \\emph{adaptive}\nadversary. If the adversary even has access to the randomness of the\ncurrent round (${\\tau}=0$), it is called \\emph{strongly adaptive},\notherwise (${\\tau}=1$), it is called \\emph{weakly adaptive}. For more\nprecise formal definitions of the modeling assumptions, we refer to\n\\cref{sec:model}.\n\nIn our paper, we consider the problem of broadcasting a single message\nfrom a source node to all the nodes of a dynamic network. The most\nrelevant previous work in the context of the present work appeared in\n\\cite{clementi09,obliviousDG,dualgraph}. In \\cite{clementi09}, it is\nshown that in $1$-interval $1$-connected networks (i.e., the graph is\nconnected in every round)\\footnote{In \\cite{clementi09}, the\n  connectivity condition on the dynamic network is phrased differently\n  and slightly more general.}, the complexity of global broadcast for\na $1$-oblivious adversary is $\\Theta(n^2/\\log n)$. In \\cite{dualgraph}\nand \\cite{obliviousDG}, $\\infty$-interval $1$-connected graphs are\nconsidered (i.e., there is a stable connected subgraph which is\npresent throughout the whole execution). In \\cite{dualgraph}, it is\nshown that even for a $0$-oblivious adversary, it is possible to solve\nbroadcast in $O(n\\log^2 n)$ rounds and it is shown that $\\Omega(n)$\nrounds are necessary even if the stable connected subgraph has\ndiameter $2$. In \\cite{obliviousDG}, it is shown that when only\nassuming an $\\infty$-oblivious adversary, the running time can be\nimproved to $O((D+\\log n)\\log n)$, where $D$ is the diameter of the\nstable connected subgraph. Note that in this case, the algorithm in\n\\cite{obliviousDG} achieves essentially the same time complexity as is\npossible in static graphs of diameter $D$\n\\cite{bgi1,kushilevitz1998omega,newport-hitting}. In \\cite{obliviousDG}, it is also\nshown that for a $1$-oblivious adversary, $\\Omega(n/\\log n)$ rounds\nare necessary even for $D=2$.\n\n\n\\subsection{Contributions}\n\\label{sec:contributions}\n\nIn the following, we state the results of the paper. For formal\ndetails regarding problem statement and modeling not specified in the\nintroduction, we refer to Section \\ref{sec:model}. Our main result is\na randomized broadcast algorithm for the described dynamic radio\nnetwork model. The algorithm (and also partly its analysis) is based\non a combination of the techniques used in \\cite{clementi09} and\n\\cite{dualgraph}. We prove the following main theorem.\n\n\\begin{theorem}\\label{thm:upperbound}\n  Let $T\\geq 1$, ${\\tau}\\geq 1$, and $k\\geq 1$ be positive integer\n  parameters. Assume that the adversary is ${\\tau}$-oblivious. Then, in\n  a dynamic $T$-interval $k$-connected $n$-node radio network, with\n  high probability, single message broadcast can be solved in time\n \n", "index": 1, "text": "\\[\n  O\\left(\\left(1+\\frac{n}{k\\cdot \\min\\left\\{{{\\tau},T}\\right\\}}\\right)\\cdot n\\log^3 n\\right).\n  \\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"O\\left(\\left(1+\\frac{n}{k\\cdot\\min\\left\\{{{\\tau},T}\\right\\}}\\right)\\cdot n\\log%&#10;^{3}n\\right).\" display=\"block\"><mrow><mrow><mi>O</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><mrow><mrow><mo>(</mo><mrow><mn>1</mn><mo>+</mo><mfrac><mi>n</mi><mrow><mi>k</mi><mo>\u22c5</mo><mrow><mi>min</mi><mo>\u2061</mo><mrow><mo>{</mo><mi>\u03c4</mi><mo>,</mo><mi>T</mi><mo>}</mo></mrow></mrow></mrow></mfrac></mrow><mo>)</mo></mrow><mo>\u22c5</mo><mi>n</mi></mrow><mo>\u2062</mo><mrow><msup><mi>log</mi><mn>3</mn></msup><mo>\u2061</mo><mi>n</mi></mrow></mrow><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n\\end{theorem}\n\nIn addition, we show that unless the interval connectivity is very\nlarge, single-message broadcast cannot be solved in the presence of a\nstrongly adaptive ($0$-oblivious) adversary.\n\n\\begin{theorem}\\label{thm:impossibility}\n  For any $k\\geq 1$ and any $T<n-k$, it is not possible to solve\n  single-message broadcast in $T$-interval $k$-connected radio\n  networks against a $0$-oblivious adversary.\n\\end{theorem}\n\nThe discussion of the above result appears in\nSection \\ref{sec:impossibility}.  We note that the above theorem is\ntight in the following sense. As soon as $T\\geq n-k$, global broadcast\ncan be solved (with potentially exponential time complexity) and as\nsoon as $T = cn\\log^2n$ for a sufficiently large constant $c$, we know\nfrom \\cite{dualgraph} that it can even be solved in time\n$O(n\\log^2 n)$. All results, as well as a comparison with previous\nwork are summarized in \\Cref{tab:results}.\n\n\\begin{table}[t]\n\\centering\n  \\begin{tabular}{ | c | c | c | c | c |}\n    \\hline\n    interval conn. & vertex conn. & adversary & complexity \\\\ \\hline \\hline\n    $T=1$ & $k=1$ & ${\\tau}=1$ & $\\Theta\\left(n^2/\\log n\\right)$ \\cite{clementi09} \\\\\n    \\hline\n\n    $T=\\infty$ & $k=1$ & ${\\tau}=0$ & $O\\left(n\\log^2n\\right)$ / $\\Omega(n)$, D=2\\cite{dualgraph} \\\\\n    \\hline\n\n    $T=\\infty$ & $k=1$ & ${\\tau}=\\infty$ & $O\\left((D+\\log n) \\cdot \\log n\\right)$\\cite{obliviousDG} \\\\\n    \\hline\n\n    $T=\\infty$ & $k=1$ & ${\\tau}=1$ & $\\Omega(n/\\log n)$, D=2 \\cite{obliviousDG}\\\\\n    \\hline\n    \n        \n    \\boldmath$T\\geq1$ & \\boldmath$k\\geq1$ &\n    \\boldmath${\\tau}\\geq1$ &\n    {\\boldmath$O\\left(\\left(1+\\frac{n}{k\\cdot\n            \\min\\left\\{{{\\tau},T}\\right\\}}\\right)\\cdot n\\log^3 n\\right)$} \\\\\n    \\hline\n    \\boldmath$T \\leq (n/k)^{1-{\\varepsilon}}$ & \\boldmath$k \\geq 1$ & \n    \\boldmath${\\tau}=1$ & {\\boldmath$\\Omega\\left(n^2/(k^2\\log n)\\right)$} \\\\\n    \\hline\n    \\boldmath$T < n-k$ & \\boldmath$k \\geq 1$ &\n    \\boldmath${\\tau}=0$ & \\textit{\\textbf{impossible}}\\\\\n    \\hline\n\n  \\end{tabular}\n  \\caption{An overview over the existing bounds on global broadcast in\n    the dynamic radio network model. The results marked in bold are\n    the results of the present paper. For the $T=\\infty$ results, $D$\n    refers to the diameter of the stable subgraph.}\n  \\label{tab:results}\n\\end{table}\n\n\\begin{remark} In \\cite{kuhn_stoc10}, interval connectivity was\nintroduced (in particular) to study the problem of broadcasting\nmultiple messages in a dynamic network in a standard message passing\nmodel. It is shown that interval connectivity $T$ allows to\nessentially speed up multi-message broadcast by a factor of $T$. We\nfind it interesting that when considering a radio network model,\ninterval connectivity seems to provide a similar speed-up, even for\nbroadcasting a single message. Something similar also holds for graphs\nwith large vertex connectivity. In \\cite{CGK-PODC14,CGK}, it is shown\nthat even on static graphs, vertex connectivity $k$ allows to speed up\nmulti message broadcast by essentially a factor $k$. Here, we show\nthat a similar speed up can be obtained in radio networks even for\nbroadcasting a single message.\n\\end{remark}\n\n\n\n\n\n\n\n\n\\section{Model and Problem Definition}\n\\label{sec:model}\n\n{\\smallskip\\noindent\\textbf{{Dynamic Network}: }}\nAs described in Section \\ref{sec:intro}, we adapt the synchronous\ndynamic network model of \\cite{kuhn_stoc10} to model dynamic\nnetworks.\\footnote{Similar dynamic network models have also been used\n  before \\cite{kuhn_stoc10}, for example in\n  \\cite{avin08,clementi09,odell05}.  For additional references and a\n  thorough discussion, we refer to \\cite{kuhn:2011:survey}.} Time is\ndivided into rounds such that for all $r\\geq 1$, round $r$ starts at\ntime $r-1$ and ends at time $r$. A dynamic network is given by a\nsequence of undirected graphs $\\langle G_1, G_2, \\dots\\rangle$, where\n$G_r=(V,E_r)$ is a static graph representing the network topology in\nround $r$. The node set $V$ is a set of $n$ nodes corresponding to the\nwireless devices in the network and the edge set $E_r$ is the set of\nactive communication links in round $r$. A dynamic graph\n$\\langle G_1,G_2,\\dots\\rangle$ is called \\textit{$T$-interval\n  $k$-connected} for integer parameters $T\\geq 1$ and $k\\geq 1$ if and\nonly if for all $r\\geq 1$, the graph\n", "itemtype": "equation", "pos": 11052, "prevtext": "\n\\end{theorem}\n\\begin{remark}\n  Note that for small and for large values of $\\min\\left\\{{{\\tau},T}\\right\\}$, one can\n  do slightly better. It is straightforward to generalize the broadcast\n  algorithm of \\cite{clementi09} to complete single message broadcast\n  in time $O\\left(n^2/k\\log n\\right)$ in $1$-interval $k$-connected\n  radio networks against a $1$-oblivious adversary. Using the result\n  from \\cite{dualgraph}, we also know that for a sufficiently large\n  constant $c$ and $T\\geq cn\\log^2n$, single-message broadcast can be\n  solved in $O(n\\log^2n)$ rounds even for ${\\tau}=0$. Our upper bound\n  therefore beats previous results for\n  $\\min\\left\\{{{\\tau},T}\\right\\}=\\omega(\\log^4 n)$ and $T=O(n\\log^2 n)$.\n\\end{remark}\n\nIn addition to the upper bound of Theorem \\ref{thm:upperbound}, we\nalso prove a lower bound which essentially shows that even for very\nlarge values of $T$, some relaxation on the standard adaptive\nadversaries is necessary in order to get an upper bound which improves\nwith $T$. For ${\\tau}=1$, we show that at least for small $k$, the\ngeneralized upper bound of \\cite{clementi09} is essentially\noptimal. The lower bound can be seen as a generalization of the simple\n$\\Omega(n^2/\\log n)$ lower bound for $k=1$ and $T=1$ proven in\n\\cite{clementi09}.\n\n\\begin{theorem}\\label{thm:lowerbound}\n  For every constant ${\\varepsilon}>0$ and every $T\\leq (n/k)^{1-{\\varepsilon}}$, the\n  expected time to solve single-message broadcast in $T$-interval\n  $k$-connected radio networks against a $1$-oblivious adversary is at\n  least\n \n", "index": 3, "text": "\\[\n  \\Omega\\left(\\frac{n^2}{k^2\\log n}\\right).\n  \\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\Omega\\left(\\frac{n^{2}}{k^{2}\\log n}\\right).\" display=\"block\"><mrow><mrow><mi mathvariant=\"normal\">\u03a9</mi><mo>\u2062</mo><mrow><mo>(</mo><mfrac><msup><mi>n</mi><mn>2</mn></msup><mrow><msup><mi>k</mi><mn>2</mn></msup><mo>\u2062</mo><mrow><mi>log</mi><mo>\u2061</mo><mi>n</mi></mrow></mrow></mfrac><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nis a graph with vertex connectivity at least $k$.\n\t\n{\\smallskip\\noindent\\textbf{{Communication Model}: }}\nAn $n$-node distributed algorithm $\\mathcal{A}$ is defined by $n$\nrandomized processes which are assigned to the nodes of the dynamic\ngraph by an adversary.  For simplicity we use the term \\textit{node\n  $u$} to also refer to the process which is assigned to node $u$. In\neach round, each node decides either to transmit a message or to\nlisten to the wireless channel. The behavior of the wireless channel\nis modeled by using the standard radio network model first used in\n\\cite{bgi1,chlamtac:1985}. When node $u$ decides to transmit in round\n$r$, its message reaches all of its neighbours in $G_r$.  A node $v$\nwhich listens in round $r$ receives a message transmitted by a\nneighbor $u$ if and only if $u$ is the only neighbor of $v$ in $G_r$\nwhich is transmitting in round $r$. If no message reaches $v$ (no\nneighbor is transmitting), $v$ receives silence, indicated by\n$\\bot$. If two or more messages reach $v$, $v$ also receives $\\bot$,\ni.e., $v$ cannot distinguish $2$ or more transmitting neighbors from\nsilence.\n\n\n\n\n\n\n\n\n\n\n\t\n{\\smallskip\\noindent\\textbf{{Adversary}: }}\nWe assume that the network changes under the control of an\nadversary. For any round $r$ the adversary has to determine $G_r$\nbased on the knowledge it has. For an integer $\\tau \\geq 0$, we call\nan adversary \\textit{$\\tau$-oblivious} if for any $r\\geq 1$, the\nadversary constructs $G_r$ based on the knowledge of: (1) the algorithm\ndescription, (2) the network topologies of rounds $1,\\dots,r-1$, and\n(3) the nodes' random choices of the first $r-\\tau$ rounds.\n\n{\\smallskip\\noindent\\textbf{{Global Broadcast}: }}\nA distributed algorithm solving the global broadcast problem needs to\ndisseminate a single message $\\mathcal{M}$ from a distinguished source\nnode to all the processes in the network. We assume that in a\ndistributed broadcast algorithm, non-source nodes are activated (and\ncan start to actively transmit) when they first receive the broadcast\nmessage $\\mathcal{M}$. Nodes that do not yet know $\\mathcal{M}$ remain\nsilent.\n\n{\\smallskip\\noindent\\textbf{{Mathematical Notation}: }}\nFor two integers $a\\leq b$, $[a,b]$ denotes the set of all integers\nbetween $a$ and $b$ (including $a$ and $b$). Further, for an integer\n$a\\geq 1$, we use $[a]$ as a short form to denote $[a]:=[1,a]$. We say\nthat a probability event happens with high probability (w.h.p.) if it\nhappens with probability at least $1-1/n^c$, where $n$ is the number\nof nodes and $c>0$ is a constant which can be chosen arbitrarily large\nby adjusting other constants.\n\n\n\n\n\n\n\n\n\n\\section{Upper Bound}\n\\label{sec:algorithm}\n\n\\subsection{Randomized Broadcasting Algorithm}\nWe now describe our randomized algorithm which solves broadcast in a\n$T$-interval $k$-connected radio network against a\n${\\tau}$-oblivious adversary. As stated in\n\\Cref{sec:contributions}, the algorithm has a time complexity of\n$O\\left(\\left(1+n/(k{\\psi})\\right)\\cdot n\\log^3n\\right)$ with high\nprobability where ${\\psi}:=\\min\\left\\{{{\\tau},T,n/2k}\\right\\}$. In light of the\ncomment following Theorem \\ref{thm:upperbound} in\n\\Cref{sec:contributions}, throughout \\Cref{sec:algorithm}, we assume\nthat ${\\psi}=\\Omega(\\log^3 n)$ as otherwise, one can achieve a\nstronger upper bound by just using an adapted version of\n\\cite{clementi09}. \n\nIn the first round, the source node transmits the message to its\nneighbors. Because we assume that each graph is $k$-vertex connected,\nafter one round, at least $k+1$ nodes know the message. From there on,\nour randomized algorithm works in \\textit{phases}. To simplify\nnotation, in the following, we ignore the first round and assume that\nat time $0$, the algorithm starts with at least $k+1$ nodes which know\nthe broadcast message $\\mathcal{M}$. The phases of the algorithm are\ndefined as follows.\n\n\\begin{definition}[Phase]\\label{de:phase}\n  The $j^{th}$ time interval of ${\\psi}$ consecutive rounds is called\n  phase $j$, where $j$ is a positive integer. Hence, phase $j$ starts\n  at time $(j-1){\\psi}$ and ends at time $j{\\psi}$ and it consists of\n  rounds $(j-1){\\psi}+1,\\dots,j{\\psi}$.\n\\end{definition} \n\nLet $t_v$ denote the round in which $\\mathcal{M}$ is received by node\n$v$ for the first time. In each round $t$ the set $V$ is partitioned\ninto following three subsets. The \\textit{previously informed nodes}\n$I(t)$ are the nodes that have received $\\mathcal{M}$ in some phase\nbefore the current phase.\n\n\n\n\nNote that in the first phase, $I(t)$ consists of at least $k+1$\ninformed nodes. The nodes that have received $\\mathcal{M}$ for the first\ntime in the current phase in some round before time $t$ are called\n\\textit{newly informed nodes}, and they are denoted by $N(t)$.\n\n\n\nFinally, the set of \\textit{uninformed nodes} at time $t$ is denoted\nby $U(t):=V \\setminus \\left\\{{I(t) \\cup N(t)}\\right\\}$.\n\nThe algorithm can be seen as a combination of two existing protocols\nwhich appeared in \\cite{clementi09} and \\cite{dualgraph}. The protocol\nof \\cite{clementi09} is a very basic one where all informed nodes\nalways try to transmit the message independently with the same uniform\nprobability. In the \\emph{harmonic broadcast} protocol of\n\\cite{dualgraph}, informed nodes use harmonically decaying\nprobabilities to forward the message. In each phase of our algorithm,\nin the first $\\left\\lceil {{\\psi}/2} \\right\\rceil$ rounds, a variant of the protocol of\n\\cite{clementi09} is applied and in the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$\nrounds, the idea of the protocol of \\cite{dualgraph} is applied. In\nthe following, the algorithm is described in detail.\n\n{\\smallskip\\noindent\\textbf{{First half of a phase}: }} In the first $\\left\\lceil {{\\psi}/2} \\right\\rceil$\nrounds of a phase, all informed nodes, i.e., all $ v \\in \\{I(t) \\cup\nN(t)\\}$, transmit the message with probability $1/n$. \n\n{\\smallskip\\noindent\\textbf{{Second half of a phase}: }}\nThe nodes in $U(t)\\cup I(t)$ remain silent throughout the second half\nof a phase.  However, in each round $t$, any node $v \\in N(t)$\ntransmits the message with probability $p_v(t)$, given by\n\t\t\n\n", "itemtype": "equation", "pos": 15392, "prevtext": "\n\\end{theorem}\n\nIn addition, we show that unless the interval connectivity is very\nlarge, single-message broadcast cannot be solved in the presence of a\nstrongly adaptive ($0$-oblivious) adversary.\n\n\\begin{theorem}\\label{thm:impossibility}\n  For any $k\\geq 1$ and any $T<n-k$, it is not possible to solve\n  single-message broadcast in $T$-interval $k$-connected radio\n  networks against a $0$-oblivious adversary.\n\\end{theorem}\n\nThe discussion of the above result appears in\nSection \\ref{sec:impossibility}.  We note that the above theorem is\ntight in the following sense. As soon as $T\\geq n-k$, global broadcast\ncan be solved (with potentially exponential time complexity) and as\nsoon as $T = cn\\log^2n$ for a sufficiently large constant $c$, we know\nfrom \\cite{dualgraph} that it can even be solved in time\n$O(n\\log^2 n)$. All results, as well as a comparison with previous\nwork are summarized in \\Cref{tab:results}.\n\n\\begin{table}[t]\n\\centering\n  \\begin{tabular}{ | c | c | c | c | c |}\n    \\hline\n    interval conn. & vertex conn. & adversary & complexity \\\\ \\hline \\hline\n    $T=1$ & $k=1$ & ${\\tau}=1$ & $\\Theta\\left(n^2/\\log n\\right)$ \\cite{clementi09} \\\\\n    \\hline\n\n    $T=\\infty$ & $k=1$ & ${\\tau}=0$ & $O\\left(n\\log^2n\\right)$ / $\\Omega(n)$, D=2\\cite{dualgraph} \\\\\n    \\hline\n\n    $T=\\infty$ & $k=1$ & ${\\tau}=\\infty$ & $O\\left((D+\\log n) \\cdot \\log n\\right)$\\cite{obliviousDG} \\\\\n    \\hline\n\n    $T=\\infty$ & $k=1$ & ${\\tau}=1$ & $\\Omega(n/\\log n)$, D=2 \\cite{obliviousDG}\\\\\n    \\hline\n    \n        \n    \\boldmath$T\\geq1$ & \\boldmath$k\\geq1$ &\n    \\boldmath${\\tau}\\geq1$ &\n    {\\boldmath$O\\left(\\left(1+\\frac{n}{k\\cdot\n            \\min\\left\\{{{\\tau},T}\\right\\}}\\right)\\cdot n\\log^3 n\\right)$} \\\\\n    \\hline\n    \\boldmath$T \\leq (n/k)^{1-{\\varepsilon}}$ & \\boldmath$k \\geq 1$ & \n    \\boldmath${\\tau}=1$ & {\\boldmath$\\Omega\\left(n^2/(k^2\\log n)\\right)$} \\\\\n    \\hline\n    \\boldmath$T < n-k$ & \\boldmath$k \\geq 1$ &\n    \\boldmath${\\tau}=0$ & \\textit{\\textbf{impossible}}\\\\\n    \\hline\n\n  \\end{tabular}\n  \\caption{An overview over the existing bounds on global broadcast in\n    the dynamic radio network model. The results marked in bold are\n    the results of the present paper. For the $T=\\infty$ results, $D$\n    refers to the diameter of the stable subgraph.}\n  \\label{tab:results}\n\\end{table}\n\n\\begin{remark} In \\cite{kuhn_stoc10}, interval connectivity was\nintroduced (in particular) to study the problem of broadcasting\nmultiple messages in a dynamic network in a standard message passing\nmodel. It is shown that interval connectivity $T$ allows to\nessentially speed up multi-message broadcast by a factor of $T$. We\nfind it interesting that when considering a radio network model,\ninterval connectivity seems to provide a similar speed-up, even for\nbroadcasting a single message. Something similar also holds for graphs\nwith large vertex connectivity. In \\cite{CGK-PODC14,CGK}, it is shown\nthat even on static graphs, vertex connectivity $k$ allows to speed up\nmulti message broadcast by essentially a factor $k$. Here, we show\nthat a similar speed up can be obtained in radio networks even for\nbroadcasting a single message.\n\\end{remark}\n\n\n\n\n\n\n\n\n\\section{Model and Problem Definition}\n\\label{sec:model}\n\n{\\smallskip\\noindent\\textbf{{Dynamic Network}: }}\nAs described in Section \\ref{sec:intro}, we adapt the synchronous\ndynamic network model of \\cite{kuhn_stoc10} to model dynamic\nnetworks.\\footnote{Similar dynamic network models have also been used\n  before \\cite{kuhn_stoc10}, for example in\n  \\cite{avin08,clementi09,odell05}.  For additional references and a\n  thorough discussion, we refer to \\cite{kuhn:2011:survey}.} Time is\ndivided into rounds such that for all $r\\geq 1$, round $r$ starts at\ntime $r-1$ and ends at time $r$. A dynamic network is given by a\nsequence of undirected graphs $\\langle G_1, G_2, \\dots\\rangle$, where\n$G_r=(V,E_r)$ is a static graph representing the network topology in\nround $r$. The node set $V$ is a set of $n$ nodes corresponding to the\nwireless devices in the network and the edge set $E_r$ is the set of\nactive communication links in round $r$. A dynamic graph\n$\\langle G_1,G_2,\\dots\\rangle$ is called \\textit{$T$-interval\n  $k$-connected} for integer parameters $T\\geq 1$ and $k\\geq 1$ if and\nonly if for all $r\\geq 1$, the graph\n", "index": 5, "text": "\n\\[\n\\bar{G}_{r,T} = (V,\\bar{E}_{r,T}), \\qquad \n\\bar{E}_{r,T} := \\bigcap_{r'=r}^{r+T-1} E_{r'}\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\bar{G}_{r,T}=(V,\\bar{E}_{r,T}),\\qquad\\bar{E}_{r,T}:=\\bigcap_{r^{\\prime}=r}^{r%&#10;+T-1}E_{r^{\\prime}}\" display=\"block\"><mrow><mrow><msub><mover accent=\"true\"><mi>G</mi><mo stretchy=\"false\">\u00af</mo></mover><mrow><mi>r</mi><mo>,</mo><mi>T</mi></mrow></msub><mo>=</mo><mrow><mo stretchy=\"false\">(</mo><mi>V</mi><mo>,</mo><msub><mover accent=\"true\"><mi>E</mi><mo stretchy=\"false\">\u00af</mo></mover><mrow><mi>r</mi><mo>,</mo><mi>T</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo rspace=\"22.5pt\">,</mo><mrow><msub><mover accent=\"true\"><mi>E</mi><mo stretchy=\"false\">\u00af</mo></mover><mrow><mi>r</mi><mo>,</mo><mi>T</mi></mrow></msub><mo>:=</mo><mrow><munderover><mo largeop=\"true\" mathsize=\"160%\" movablelimits=\"false\" stretchy=\"false\" symmetric=\"true\">\u22c2</mo><mrow><msup><mi>r</mi><mo>\u2032</mo></msup><mo>=</mo><mi>r</mi></mrow><mrow><mrow><mi>r</mi><mo>+</mo><mi>T</mi></mrow><mo>-</mo><mn>1</mn></mrow></munderover><msub><mi>E</mi><msup><mi>r</mi><mo>\u2032</mo></msup></msub></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nwhere \n", "itemtype": "equation", "pos": 21601, "prevtext": "\nis a graph with vertex connectivity at least $k$.\n\t\n{\\smallskip\\noindent\\textbf{{Communication Model}: }}\nAn $n$-node distributed algorithm $\\mathcal{A}$ is defined by $n$\nrandomized processes which are assigned to the nodes of the dynamic\ngraph by an adversary.  For simplicity we use the term \\textit{node\n  $u$} to also refer to the process which is assigned to node $u$. In\neach round, each node decides either to transmit a message or to\nlisten to the wireless channel. The behavior of the wireless channel\nis modeled by using the standard radio network model first used in\n\\cite{bgi1,chlamtac:1985}. When node $u$ decides to transmit in round\n$r$, its message reaches all of its neighbours in $G_r$.  A node $v$\nwhich listens in round $r$ receives a message transmitted by a\nneighbor $u$ if and only if $u$ is the only neighbor of $v$ in $G_r$\nwhich is transmitting in round $r$. If no message reaches $v$ (no\nneighbor is transmitting), $v$ receives silence, indicated by\n$\\bot$. If two or more messages reach $v$, $v$ also receives $\\bot$,\ni.e., $v$ cannot distinguish $2$ or more transmitting neighbors from\nsilence.\n\n\n\n\n\n\n\n\n\n\n\t\n{\\smallskip\\noindent\\textbf{{Adversary}: }}\nWe assume that the network changes under the control of an\nadversary. For any round $r$ the adversary has to determine $G_r$\nbased on the knowledge it has. For an integer $\\tau \\geq 0$, we call\nan adversary \\textit{$\\tau$-oblivious} if for any $r\\geq 1$, the\nadversary constructs $G_r$ based on the knowledge of: (1) the algorithm\ndescription, (2) the network topologies of rounds $1,\\dots,r-1$, and\n(3) the nodes' random choices of the first $r-\\tau$ rounds.\n\n{\\smallskip\\noindent\\textbf{{Global Broadcast}: }}\nA distributed algorithm solving the global broadcast problem needs to\ndisseminate a single message $\\mathcal{M}$ from a distinguished source\nnode to all the processes in the network. We assume that in a\ndistributed broadcast algorithm, non-source nodes are activated (and\ncan start to actively transmit) when they first receive the broadcast\nmessage $\\mathcal{M}$. Nodes that do not yet know $\\mathcal{M}$ remain\nsilent.\n\n{\\smallskip\\noindent\\textbf{{Mathematical Notation}: }}\nFor two integers $a\\leq b$, $[a,b]$ denotes the set of all integers\nbetween $a$ and $b$ (including $a$ and $b$). Further, for an integer\n$a\\geq 1$, we use $[a]$ as a short form to denote $[a]:=[1,a]$. We say\nthat a probability event happens with high probability (w.h.p.) if it\nhappens with probability at least $1-1/n^c$, where $n$ is the number\nof nodes and $c>0$ is a constant which can be chosen arbitrarily large\nby adjusting other constants.\n\n\n\n\n\n\n\n\n\n\\section{Upper Bound}\n\\label{sec:algorithm}\n\n\\subsection{Randomized Broadcasting Algorithm}\nWe now describe our randomized algorithm which solves broadcast in a\n$T$-interval $k$-connected radio network against a\n${\\tau}$-oblivious adversary. As stated in\n\\Cref{sec:contributions}, the algorithm has a time complexity of\n$O\\left(\\left(1+n/(k{\\psi})\\right)\\cdot n\\log^3n\\right)$ with high\nprobability where ${\\psi}:=\\min\\left\\{{{\\tau},T,n/2k}\\right\\}$. In light of the\ncomment following Theorem \\ref{thm:upperbound} in\n\\Cref{sec:contributions}, throughout \\Cref{sec:algorithm}, we assume\nthat ${\\psi}=\\Omega(\\log^3 n)$ as otherwise, one can achieve a\nstronger upper bound by just using an adapted version of\n\\cite{clementi09}. \n\nIn the first round, the source node transmits the message to its\nneighbors. Because we assume that each graph is $k$-vertex connected,\nafter one round, at least $k+1$ nodes know the message. From there on,\nour randomized algorithm works in \\textit{phases}. To simplify\nnotation, in the following, we ignore the first round and assume that\nat time $0$, the algorithm starts with at least $k+1$ nodes which know\nthe broadcast message $\\mathcal{M}$. The phases of the algorithm are\ndefined as follows.\n\n\\begin{definition}[Phase]\\label{de:phase}\n  The $j^{th}$ time interval of ${\\psi}$ consecutive rounds is called\n  phase $j$, where $j$ is a positive integer. Hence, phase $j$ starts\n  at time $(j-1){\\psi}$ and ends at time $j{\\psi}$ and it consists of\n  rounds $(j-1){\\psi}+1,\\dots,j{\\psi}$.\n\\end{definition} \n\nLet $t_v$ denote the round in which $\\mathcal{M}$ is received by node\n$v$ for the first time. In each round $t$ the set $V$ is partitioned\ninto following three subsets. The \\textit{previously informed nodes}\n$I(t)$ are the nodes that have received $\\mathcal{M}$ in some phase\nbefore the current phase.\n\n\n\n\nNote that in the first phase, $I(t)$ consists of at least $k+1$\ninformed nodes. The nodes that have received $\\mathcal{M}$ for the first\ntime in the current phase in some round before time $t$ are called\n\\textit{newly informed nodes}, and they are denoted by $N(t)$.\n\n\n\nFinally, the set of \\textit{uninformed nodes} at time $t$ is denoted\nby $U(t):=V \\setminus \\left\\{{I(t) \\cup N(t)}\\right\\}$.\n\nThe algorithm can be seen as a combination of two existing protocols\nwhich appeared in \\cite{clementi09} and \\cite{dualgraph}. The protocol\nof \\cite{clementi09} is a very basic one where all informed nodes\nalways try to transmit the message independently with the same uniform\nprobability. In the \\emph{harmonic broadcast} protocol of\n\\cite{dualgraph}, informed nodes use harmonically decaying\nprobabilities to forward the message. In each phase of our algorithm,\nin the first $\\left\\lceil {{\\psi}/2} \\right\\rceil$ rounds, a variant of the protocol of\n\\cite{clementi09} is applied and in the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$\nrounds, the idea of the protocol of \\cite{dualgraph} is applied. In\nthe following, the algorithm is described in detail.\n\n{\\smallskip\\noindent\\textbf{{First half of a phase}: }} In the first $\\left\\lceil {{\\psi}/2} \\right\\rceil$\nrounds of a phase, all informed nodes, i.e., all $ v \\in \\{I(t) \\cup\nN(t)\\}$, transmit the message with probability $1/n$. \n\n{\\smallskip\\noindent\\textbf{{Second half of a phase}: }}\nThe nodes in $U(t)\\cup I(t)$ remain silent throughout the second half\nof a phase.  However, in each round $t$, any node $v \\in N(t)$\ntransmits the message with probability $p_v(t)$, given by\n\t\t\n\n", "index": 7, "text": "\\begin{equation}\\label{eq:harmonicalg}\n  \\forall t > \\left\\lfloor { \\frac{t}{{\\psi}}} \\right\\rfloor \\cdot {\\psi}\n  +\\left\\lceil {\\frac{{\\psi}}{2}} \\right\\rceil\\ :\\ \\forall v \\in N(t)\\, :\\,\n  p_v(t) := \\frac{1}{1+ \\left\\lfloor {\\frac{t-\\hat{t}_v-1}{\\mathcal{T}}} \\right\\rfloor},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"\\forall t&gt;\\left\\lfloor{\\frac{t}{{\\psi}}}\\right\\rfloor\\cdot{\\psi}+\\left\\lceil{%&#10;\\frac{{\\psi}}{2}}\\right\\rceil\\ :\\ \\forall v\\in N(t)\\,:\\,p_{v}(t):=\\frac{1}{1+%&#10;\\left\\lfloor{\\frac{t-\\hat{t}_{v}-1}{\\mathcal{T}}}\\right\\rfloor},\" display=\"block\"><mrow><mrow><mrow><mrow><mo>\u2200</mo><mi>t</mi></mrow><mo>&gt;</mo><mrow><mrow><mrow><mo>\u230a</mo><mfrac><mi>t</mi><mi>\u03c8</mi></mfrac><mo>\u230b</mo></mrow><mo>\u22c5</mo><mi>\u03c8</mi></mrow><mo>+</mo><mrow><mo>\u2308</mo><mfrac><mi>\u03c8</mi><mn>2</mn></mfrac><mo rspace=\"7.5pt\">\u2309</mo></mrow></mrow></mrow><mo rspace=\"7.5pt\">:</mo><mrow><mrow><mo>\u2200</mo><mi>v</mi></mrow><mo>\u2208</mo><mrow><mi>N</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo rspace=\"4.2pt\" stretchy=\"false\">)</mo></mrow></mrow></mrow><mo rspace=\"4.2pt\">:</mo><mrow><mrow><msub><mi>p</mi><mi>v</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>:=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mrow><mo>\u230a</mo><mfrac><mrow><mi>t</mi><mo>-</mo><msub><mover accent=\"true\"><mi>t</mi><mo stretchy=\"false\">^</mo></mover><mi>v</mi></msub><mo>-</mo><mn>1</mn></mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaf</mi></mfrac><mo>\u230b</mo></mrow></mrow></mfrac></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nand $\\mathcal{T}$ will be fixed in Lemma~\\ref{le:isolated}. \n\nThus, in the second half of a phase, only nodes participate which for\nthe first time receive $\\mathcal{M}$ in the current phase. Each node\n$v$ which gets newly informed in the phase executes the following\nprotocol. As soon as $v$ knows $\\mathcal{M}$ and as soon as the second\nhalf of the phase has started, $v$ starts transmitting $\\mathcal{M}$\nto its neighbors.  For the first $\\mathcal{T}$ rounds, $v$ transmits\nthe $\\mathcal{M}$ with probability 1, for the next $\\mathcal{T}$\nrounds $v$ transmits $\\mathcal{M}$ with probability $1/2$, and the\nprobability for the next time intervals of $\\mathcal{T}$ rounds\nbecomes $1/3$,$1/4$, etc.\n\n\\subsection{Analysis}\n\nRecall that by the definitiuon of ${\\psi}$, we have $k{\\psi}\\leq n/2$,\n${\\psi}\\leq T$, and ${\\psi} \\leq {\\tau}$. The $T$-interval\n$k$-connectivity of the dynamic network guarantees the existence of a\nstable spanning subgraph with vertex connectivity of at least $k$\nthroughout the whole duration of every phase. We call this reliable\nspanning subgraph the \\textit{backbone} of the phase. Note that we may\nhave different backbones in different phases. Let $P(t)$ denote the\nsum of transmitting probabilities of all the nodes in round $t$, i.e.,\n$P(t):=\\sum_{v\\in V} p_v(t)$. For the analysis of our algorithm, we\nsay that round $t$ is \\textit{busy} if $P(t) \\geq 1$ and otherwise we\nsay that round $t$ is \\textit{free}.\n\n\n\n\nIf the node $v$ is the only node transmitting in a round, we say that\nnode $v$ gets \\textit{isolated} in that round.\n\nFor any phase $j$, let $\\theta_0 :=j{\\psi} - \\left\\lfloor {{\\psi}/2} \\right\\rfloor$,\ni.e., $\\theta_0$ is the time when the second half of the phase\nstarts. For $i>0$, we define $\\theta_i>\\theta_{i-1}$ to be the first\ntime such that in the time interval $[\\theta_{i-1},\\theta_i]$ (i.e.,\nin rounds $\\theta_{i-1}+1,\\dots,\\theta_i$) the number of busy rounds\nequals the number of free rounds (see Figure \\ref{fig:thetas}).\n\n\\begin{figure}[t]\n\\centering\n\\includegraphics[scale=0.9]{thetas}\n\\caption{Time intervals $[\\theta_{i-1},\\theta_i]$ with equal number of\n  free and busy rounds where $i >1$.}\n\\label{fig:thetas}\n\\end{figure}\n\nWe further define $m\\geq 0$ such that $\\theta_m$ is the last such time\ndefined for a given phase. The case $m=0$ implies that throughout the\nsecond half of the phase, the number of busy rounds is always larger\nthan the number of free rounds.\n\n\n\n\nWe use the following lemma adapted from Lemma 13 of \\cite{dualgraph}.\n\\begin{lemma}\\label{le:isolated}\\cite{dualgraph}\n  Consider a node $v$. Let $t > \\hat{t}_v$ be such that at least half\n  of the rounds $\\hat{t}_v+1,\\dots,t$ are free.  If\n  $\\mathcal{T} \\geq \\left\\lceil {12\\ln(n/\\epsilon)} \\right\\rceil$ for some $\\epsilon>0$,\n  then with probability larger than $1-\\epsilon/n$ there exists a\n  round $t'\\in \\left\\{{\\hat{t}_v+1,\\dots,t}\\right\\}$ such that $v$ is isolated in\n  round $t'$.\n\\end{lemma}\n\n\\begin{lemma}\\label{le:isolatedintheta}\n  For all phases, in each time interval\n  $\\left[\\theta_{i-1},\\theta_i\\right]$, where $i \\in [m]$, if round\n  $\\theta_{i-1}+1$ is busy then any node $v$ with\n  $\\hat{t}_v \\in \\left\\{{\\theta_{i-1},\\dots.\\theta_i-1}\\right\\}$ gets isolated in some\n  round $t'\\in \\left\\{{\\hat{t}_v+1,\\dots,\\theta_i}\\right\\}$ with high probability.\n\\end{lemma}\n\\begin{proof}\n  Let $\\bar{t}$ denote the first round that the number of free rounds\n  equals the number of busy rounds starting from round\n  $\\hat{t}_v+1$. For the sake of contradiction, assume that\n  $\\bar{t} > \\theta_i$, that is, the number of free rounds is less\n  than the number of busy rounds in $\\left\\{{\\hat{t}_v+1,\\dots,\\theta_i}\\right\\}$\n  and we also know that the number of busy rounds is greater than the\n  number of free rounds in $\\left\\{{\\theta_{i-1}+1,\\dots,\\hat{t}_v}\\right\\}$\n  (because of minimality of $\\theta_i$ and the fact that round\n  $\\theta_{i-1}+1$ is busy). It follows that the number of busy rounds\n  is greater than the number of free rounds in\n  $\\left\\{{\\theta_{i-1}+1,\\dots,\\theta_i}\\right\\}$ contradicting our assumption\n  on the equality of free and busy rounds in\n  $\\left\\{{\\theta_{i-1}+1,\\dots,\\theta_i}\\right\\}$. Therefore,\n  $\\bar{t} \\leq \\theta_i$ and according to Lemma~\\ref{le:isolated} the\n  claim holds.\n\\end{proof}\n\nAs one can see in Figure \\ref{fig:uninfcomp}, at the beginning of each\nphase, the uninformed nodes in the backbone form one or several\nconnected subgraphs which we call the \\textit{uninformed connected\n  components}.  For each uninformed connected component there must\nexist some edge in the backbone (within a phase) connecting an\ninformed node to a node in that component. Note that because the\nadversary is ${\\tau}$-oblivious and thus also oblivious to the\nlast ${\\psi}\\leq {\\tau}$ rounds, the adversary has to determine the\ndynamic graph throughout a phase before the phase starts. The backbone\ngraph of a phase can therefore not change depending on the randomness\nof the algorithm during the phase.\n\n\\begin{definition}[Available Components and Available Nodes]\\label{de:availablenodes}\n  At the end of the first $\\left\\lceil {{\\psi}/2} \\right\\rceil$ rounds of each phase, any\n  uninformed connected component that includes at least one newly\n  informed node is called an available component. All the nodes in an\n  available component are called available nodes.\n\\end{definition}\n\n\\begin{figure}[t]\n\\centering\n\\includegraphics{uninfcomp}\n\\caption{Backbone of a phase. Available components are identified by thick circles.}\n\\label{fig:uninfcomp}\n\\end{figure}\n\n\\begin{lemma}\\label{le:broadcastproceed}\n  Consider an arbitrary phase and an arbitrary $i\\geq 1$. If at the\n  beginning of round\n  $\\theta_i$ of the phase there exists at least one uninformed\n  available node, then w.h.p.\\ at least one available node gets informed in\n  round $\\theta_i$.\n\\end{lemma}\n\\begin{proof} We will show that for every $i\\geq 1$, w.h.p., if there\n  is some node available $u$ with $\\hat{t}_u = \\theta_{i-1}$ and at\n  the beginning of round $\\theta_i$, there is at least one uninformed\n  available node, then at least one available node $v$ gets informed\n  in round $\\theta_i$. The claim of the lemma then follows by\n  induction on $i$. If there are no available nodes, there is nothing\n  to prove. If there are available nodes, there is at least one node\n  $u$ which gets newly informed in the first half of the phase and we\n  therefore have $\\hat{t}_u=\\theta_0$. Using the above claim, it then\n  w.h.p.\\ follows that if there still is an uninformed available node\n  at time $\\theta_1-1$, some uninformed available node $u'$ gets\n  informed in round $\\theta_1$ and thus $\\hat{t}_{u'} = \\theta_1$. For\n  $i>1$, the induction step now follows in the same way.  It therefore\n  remains to show that w.h.p., if there is some node available $u$\n  with $\\hat{t}_u = \\theta_{i-1}$ and at the beginning of round\n  $\\theta_i$, there is at least one uninformed available node, then at\n  least one available node $v$ gets informed in round $\\theta_i$.\n\n  By Lemma \\ref{le:isolatedintheta} we know that w.h.p., all the nodes\n  $u$ with $\\hat{t}_u\\in \\left\\{{\\theta_{i-1},\\dots,\\theta_{i}-1}\\right\\}$ get\n  isolated in some round\n  $t'\\in \\left\\{{\\theta_{i-1}+1,\\dots,\\theta_{i}}\\right\\}$. Hence, by induction\n  on $j$, w.h.p., for all $j\\leq i-1$ there is some node $u'$ with\n  $\\hat{t}_{u'}=\\theta_j$ and therefore all nodes $u$ with\n  $\\hat{t}_u\\in\\left\\{{\\theta_0,\\dots,\\theta_i-1}\\right\\}$ get isolated in some\n  round $t'\\in \\left\\{{\\theta_0+1,\\dots,\\theta_i}\\right\\}$. Consequently, w.h.p.,\n  all newly informed nodes $N(\\theta_i-1)$ at time $\\theta_i-1$ get\n  isolated in some round $t'\\in \\left\\{{\\theta_0+1,\\dots,\\theta_i}\\right\\}$. Let\n  $v$ be an uninformed available node before round $\\theta_i$ (i.e.,\n  at time $\\theta_i-1$). Because $v$ is available, at time\n  $\\theta_i-1$, there is a informed available neighbor $u$ in the\n  backbone graph of the current phase. We clearly have\n  $u\\in N(\\theta_i-1)$ and thus w.h.p., $u$ gets isolated in some\n  round $t'\\in \\left\\{{\\theta_0+1,\\dots,\\theta_i}\\right\\}$. As soon as $u$ gets\n  isolated, $v$ gets informed and we can therefore conclude that $u$\n  gets isolated in round $\\theta_i$ and thus $v$ gets informed in\n  round $\\theta_i$.\n\\end{proof}\n\n\\begin{lemma}\\label{le:informednodesbounded} \n  Consider an arbitrary phase and assume that at the beginning of the\n  second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of the phase there are $z$\n  available nodes. Then, w.h.p., for some constant $c>0$, at the end\n  of the phase we have at least $\\min\\left\\{{z,c{\\psi}/ \\ln^2 n}\\right\\}$ newly\n  informed nodes.\n\\end{lemma}\n\\begin{proof}\n  We show that the claim holds through two general cases which could\nhappen within any phase, Fix some phase $j$.\n  \n{\\smallskip\\noindent\\textbf{{Case 1}: }} The number of busy rounds is not less than the\nnumber of free rounds in the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of\nphase $j$.\n  \n\\begin{claim}\\label{cl:morebusy}\n  If the number of busy rounds is not less than the number of free\n  rounds in the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of phase\n  $j$, then the number of newly informed nodes at the end of the phase\n  is at least $c{\\psi} / \\ln^2 n$.\n\\end{claim}\n\\begin{proof}\n  The sum of transmitting probabilities of all nodes in all rounds in\n  the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of phase $j$ is not smaller\n  than $\\left\\lfloor {{\\psi} / 4} \\right\\rfloor$, i.e.\n  \n", "itemtype": "equation", "pos": 21900, "prevtext": "\nwhere \n", "index": 9, "text": "\n\\[\n\\hat{t}_v := \\begin{cases}\n  \\left\\lfloor { \\frac{t}{{\\psi}}} \\right\\rfloor \\cdot {\\psi}\n  +\\left\\lceil {\\frac{{\\psi}}{2}} \\right\\rceil, & \\text{ if } \\left\\lfloor { t/{\\psi}} \\right\\rfloor \\cdot\n  {\\psi} < t_v < \\left\\lfloor {t/{\\psi}} \\right\\rfloor \\cdot {\\psi} +\\left\\lceil {{\\psi}/2} \\right\\rceil\\\\\n  t_v, & \\text{ otherwise}\n\\end{cases}\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"\\hat{t}_{v}:=\\begin{cases}\\left\\lfloor{\\frac{t}{{\\psi}}}\\right\\rfloor\\cdot{%&#10;\\psi}+\\left\\lceil{\\frac{{\\psi}}{2}}\\right\\rceil,&amp;\\text{ if }\\left\\lfloor{t/{%&#10;\\psi}}\\right\\rfloor\\cdot{\\psi}&lt;t_{v}&lt;\\left\\lfloor{t/{\\psi}}\\right\\rfloor\\cdot{%&#10;\\psi}+\\left\\lceil{{\\psi}/2}\\right\\rceil\\\\&#10;t_{v},&amp;\\text{ otherwise}\\end{cases}\" display=\"block\"><mrow><msub><mover accent=\"true\"><mi>t</mi><mo stretchy=\"false\">^</mo></mover><mi>v</mi></msub><mo>:=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mo>\u230a</mo><mstyle displaystyle=\"false\"><mfrac><mi>t</mi><mi>\u03c8</mi></mfrac></mstyle><mo>\u230b</mo></mrow><mo>\u22c5</mo><mi>\u03c8</mi></mrow><mo>+</mo><mrow><mo>\u2308</mo><mstyle displaystyle=\"false\"><mfrac><mi>\u03c8</mi><mn>2</mn></mfrac></mstyle><mo>\u2309</mo></mrow></mrow><mo>,</mo></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>\u00a0if\u00a0</mtext><mo>\u2062</mo><mrow><mo>\u230a</mo><mrow><mi>t</mi><mo>/</mo><mi>\u03c8</mi></mrow><mo>\u230b</mo></mrow></mrow><mo>\u22c5</mo><mi>\u03c8</mi></mrow><mo>&lt;</mo><msub><mi>t</mi><mi>v</mi></msub><mo>&lt;</mo><mrow><mrow><mrow><mo>\u230a</mo><mrow><mi>t</mi><mo>/</mo><mi>\u03c8</mi></mrow><mo>\u230b</mo></mrow><mo>\u22c5</mo><mi>\u03c8</mi></mrow><mo>+</mo><mrow><mo>\u2308</mo><mrow><mi>\u03c8</mi><mo>/</mo><mn>2</mn></mrow><mo>\u2309</mo></mrow></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><msub><mi>t</mi><mi>v</mi></msub><mo>,</mo></mrow></mtd><mtd columnalign=\"left\"><mtext>\u00a0otherwise</mtext></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": " \n  Let ${\\kappa}$ denote the number of newly informed nodes at the\n  end of the phase. We have\n  \n", "itemtype": "equation", "pos": -1, "prevtext": "\nand $\\mathcal{T}$ will be fixed in Lemma~\\ref{le:isolated}. \n\nThus, in the second half of a phase, only nodes participate which for\nthe first time receive $\\mathcal{M}$ in the current phase. Each node\n$v$ which gets newly informed in the phase executes the following\nprotocol. As soon as $v$ knows $\\mathcal{M}$ and as soon as the second\nhalf of the phase has started, $v$ starts transmitting $\\mathcal{M}$\nto its neighbors.  For the first $\\mathcal{T}$ rounds, $v$ transmits\nthe $\\mathcal{M}$ with probability 1, for the next $\\mathcal{T}$\nrounds $v$ transmits $\\mathcal{M}$ with probability $1/2$, and the\nprobability for the next time intervals of $\\mathcal{T}$ rounds\nbecomes $1/3$,$1/4$, etc.\n\n\\subsection{Analysis}\n\nRecall that by the definitiuon of ${\\psi}$, we have $k{\\psi}\\leq n/2$,\n${\\psi}\\leq T$, and ${\\psi} \\leq {\\tau}$. The $T$-interval\n$k$-connectivity of the dynamic network guarantees the existence of a\nstable spanning subgraph with vertex connectivity of at least $k$\nthroughout the whole duration of every phase. We call this reliable\nspanning subgraph the \\textit{backbone} of the phase. Note that we may\nhave different backbones in different phases. Let $P(t)$ denote the\nsum of transmitting probabilities of all the nodes in round $t$, i.e.,\n$P(t):=\\sum_{v\\in V} p_v(t)$. For the analysis of our algorithm, we\nsay that round $t$ is \\textit{busy} if $P(t) \\geq 1$ and otherwise we\nsay that round $t$ is \\textit{free}.\n\n\n\n\nIf the node $v$ is the only node transmitting in a round, we say that\nnode $v$ gets \\textit{isolated} in that round.\n\nFor any phase $j$, let $\\theta_0 :=j{\\psi} - \\left\\lfloor {{\\psi}/2} \\right\\rfloor$,\ni.e., $\\theta_0$ is the time when the second half of the phase\nstarts. For $i>0$, we define $\\theta_i>\\theta_{i-1}$ to be the first\ntime such that in the time interval $[\\theta_{i-1},\\theta_i]$ (i.e.,\nin rounds $\\theta_{i-1}+1,\\dots,\\theta_i$) the number of busy rounds\nequals the number of free rounds (see Figure \\ref{fig:thetas}).\n\n\\begin{figure}[t]\n\\centering\n\\includegraphics[scale=0.9]{thetas}\n\\caption{Time intervals $[\\theta_{i-1},\\theta_i]$ with equal number of\n  free and busy rounds where $i >1$.}\n\\label{fig:thetas}\n\\end{figure}\n\nWe further define $m\\geq 0$ such that $\\theta_m$ is the last such time\ndefined for a given phase. The case $m=0$ implies that throughout the\nsecond half of the phase, the number of busy rounds is always larger\nthan the number of free rounds.\n\n\n\n\nWe use the following lemma adapted from Lemma 13 of \\cite{dualgraph}.\n\\begin{lemma}\\label{le:isolated}\\cite{dualgraph}\n  Consider a node $v$. Let $t > \\hat{t}_v$ be such that at least half\n  of the rounds $\\hat{t}_v+1,\\dots,t$ are free.  If\n  $\\mathcal{T} \\geq \\left\\lceil {12\\ln(n/\\epsilon)} \\right\\rceil$ for some $\\epsilon>0$,\n  then with probability larger than $1-\\epsilon/n$ there exists a\n  round $t'\\in \\left\\{{\\hat{t}_v+1,\\dots,t}\\right\\}$ such that $v$ is isolated in\n  round $t'$.\n\\end{lemma}\n\n\\begin{lemma}\\label{le:isolatedintheta}\n  For all phases, in each time interval\n  $\\left[\\theta_{i-1},\\theta_i\\right]$, where $i \\in [m]$, if round\n  $\\theta_{i-1}+1$ is busy then any node $v$ with\n  $\\hat{t}_v \\in \\left\\{{\\theta_{i-1},\\dots.\\theta_i-1}\\right\\}$ gets isolated in some\n  round $t'\\in \\left\\{{\\hat{t}_v+1,\\dots,\\theta_i}\\right\\}$ with high probability.\n\\end{lemma}\n\\begin{proof}\n  Let $\\bar{t}$ denote the first round that the number of free rounds\n  equals the number of busy rounds starting from round\n  $\\hat{t}_v+1$. For the sake of contradiction, assume that\n  $\\bar{t} > \\theta_i$, that is, the number of free rounds is less\n  than the number of busy rounds in $\\left\\{{\\hat{t}_v+1,\\dots,\\theta_i}\\right\\}$\n  and we also know that the number of busy rounds is greater than the\n  number of free rounds in $\\left\\{{\\theta_{i-1}+1,\\dots,\\hat{t}_v}\\right\\}$\n  (because of minimality of $\\theta_i$ and the fact that round\n  $\\theta_{i-1}+1$ is busy). It follows that the number of busy rounds\n  is greater than the number of free rounds in\n  $\\left\\{{\\theta_{i-1}+1,\\dots,\\theta_i}\\right\\}$ contradicting our assumption\n  on the equality of free and busy rounds in\n  $\\left\\{{\\theta_{i-1}+1,\\dots,\\theta_i}\\right\\}$. Therefore,\n  $\\bar{t} \\leq \\theta_i$ and according to Lemma~\\ref{le:isolated} the\n  claim holds.\n\\end{proof}\n\nAs one can see in Figure \\ref{fig:uninfcomp}, at the beginning of each\nphase, the uninformed nodes in the backbone form one or several\nconnected subgraphs which we call the \\textit{uninformed connected\n  components}.  For each uninformed connected component there must\nexist some edge in the backbone (within a phase) connecting an\ninformed node to a node in that component. Note that because the\nadversary is ${\\tau}$-oblivious and thus also oblivious to the\nlast ${\\psi}\\leq {\\tau}$ rounds, the adversary has to determine the\ndynamic graph throughout a phase before the phase starts. The backbone\ngraph of a phase can therefore not change depending on the randomness\nof the algorithm during the phase.\n\n\\begin{definition}[Available Components and Available Nodes]\\label{de:availablenodes}\n  At the end of the first $\\left\\lceil {{\\psi}/2} \\right\\rceil$ rounds of each phase, any\n  uninformed connected component that includes at least one newly\n  informed node is called an available component. All the nodes in an\n  available component are called available nodes.\n\\end{definition}\n\n\\begin{figure}[t]\n\\centering\n\\includegraphics{uninfcomp}\n\\caption{Backbone of a phase. Available components are identified by thick circles.}\n\\label{fig:uninfcomp}\n\\end{figure}\n\n\\begin{lemma}\\label{le:broadcastproceed}\n  Consider an arbitrary phase and an arbitrary $i\\geq 1$. If at the\n  beginning of round\n  $\\theta_i$ of the phase there exists at least one uninformed\n  available node, then w.h.p.\\ at least one available node gets informed in\n  round $\\theta_i$.\n\\end{lemma}\n\\begin{proof} We will show that for every $i\\geq 1$, w.h.p., if there\n  is some node available $u$ with $\\hat{t}_u = \\theta_{i-1}$ and at\n  the beginning of round $\\theta_i$, there is at least one uninformed\n  available node, then at least one available node $v$ gets informed\n  in round $\\theta_i$. The claim of the lemma then follows by\n  induction on $i$. If there are no available nodes, there is nothing\n  to prove. If there are available nodes, there is at least one node\n  $u$ which gets newly informed in the first half of the phase and we\n  therefore have $\\hat{t}_u=\\theta_0$. Using the above claim, it then\n  w.h.p.\\ follows that if there still is an uninformed available node\n  at time $\\theta_1-1$, some uninformed available node $u'$ gets\n  informed in round $\\theta_1$ and thus $\\hat{t}_{u'} = \\theta_1$. For\n  $i>1$, the induction step now follows in the same way.  It therefore\n  remains to show that w.h.p., if there is some node available $u$\n  with $\\hat{t}_u = \\theta_{i-1}$ and at the beginning of round\n  $\\theta_i$, there is at least one uninformed available node, then at\n  least one available node $v$ gets informed in round $\\theta_i$.\n\n  By Lemma \\ref{le:isolatedintheta} we know that w.h.p., all the nodes\n  $u$ with $\\hat{t}_u\\in \\left\\{{\\theta_{i-1},\\dots,\\theta_{i}-1}\\right\\}$ get\n  isolated in some round\n  $t'\\in \\left\\{{\\theta_{i-1}+1,\\dots,\\theta_{i}}\\right\\}$. Hence, by induction\n  on $j$, w.h.p., for all $j\\leq i-1$ there is some node $u'$ with\n  $\\hat{t}_{u'}=\\theta_j$ and therefore all nodes $u$ with\n  $\\hat{t}_u\\in\\left\\{{\\theta_0,\\dots,\\theta_i-1}\\right\\}$ get isolated in some\n  round $t'\\in \\left\\{{\\theta_0+1,\\dots,\\theta_i}\\right\\}$. Consequently, w.h.p.,\n  all newly informed nodes $N(\\theta_i-1)$ at time $\\theta_i-1$ get\n  isolated in some round $t'\\in \\left\\{{\\theta_0+1,\\dots,\\theta_i}\\right\\}$. Let\n  $v$ be an uninformed available node before round $\\theta_i$ (i.e.,\n  at time $\\theta_i-1$). Because $v$ is available, at time\n  $\\theta_i-1$, there is a informed available neighbor $u$ in the\n  backbone graph of the current phase. We clearly have\n  $u\\in N(\\theta_i-1)$ and thus w.h.p., $u$ gets isolated in some\n  round $t'\\in \\left\\{{\\theta_0+1,\\dots,\\theta_i}\\right\\}$. As soon as $u$ gets\n  isolated, $v$ gets informed and we can therefore conclude that $u$\n  gets isolated in round $\\theta_i$ and thus $v$ gets informed in\n  round $\\theta_i$.\n\\end{proof}\n\n\\begin{lemma}\\label{le:informednodesbounded} \n  Consider an arbitrary phase and assume that at the beginning of the\n  second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of the phase there are $z$\n  available nodes. Then, w.h.p., for some constant $c>0$, at the end\n  of the phase we have at least $\\min\\left\\{{z,c{\\psi}/ \\ln^2 n}\\right\\}$ newly\n  informed nodes.\n\\end{lemma}\n\\begin{proof}\n  We show that the claim holds through two general cases which could\nhappen within any phase, Fix some phase $j$.\n  \n{\\smallskip\\noindent\\textbf{{Case 1}: }} The number of busy rounds is not less than the\nnumber of free rounds in the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of\nphase $j$.\n  \n\\begin{claim}\\label{cl:morebusy}\n  If the number of busy rounds is not less than the number of free\n  rounds in the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of phase\n  $j$, then the number of newly informed nodes at the end of the phase\n  is at least $c{\\psi} / \\ln^2 n$.\n\\end{claim}\n\\begin{proof}\n  The sum of transmitting probabilities of all nodes in all rounds in\n  the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of phase $j$ is not smaller\n  than $\\left\\lfloor {{\\psi} / 4} \\right\\rfloor$, i.e.\n  \n", "index": 11, "text": "\\begin{equation}\\label{eq:probabilitysumlowbound}\n    \\sum\\limits_{t=j{\\psi} - \\left\\lfloor {\\frac{{\\psi}}{2}} \\right\\rfloor+1}^{j{\\psi}} P(t) \\geq   \\left\\lfloor {\\frac{{\\psi}}{4}} \\right\\rfloor.\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\sum\\limits_{t=j{\\psi}-\\left\\lfloor{\\frac{{\\psi}}{2}}\\right\\rfloor+1}^{j{\\psi}%&#10;}P(t)\\geq\\left\\lfloor{\\frac{{\\psi}}{4}}\\right\\rfloor.\" display=\"block\"><mrow><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>t</mi><mo>=</mo><mrow><mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mo>-</mo><mrow><mo>\u230a</mo><mfrac><mi>\u03c8</mi><mn>2</mn></mfrac><mo>\u230b</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow></munderover><mrow><mi>P</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2265</mo><mrow><mo>\u230a</mo><mfrac><mi>\u03c8</mi><mn>4</mn></mfrac><mo>\u230b</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": " \n  Then (\\ref{eq:probabilitysumlowbound}) and\n  (\\ref{eq:probabilitysumupbound}) lead to\n \n", "itemtype": "equation", "pos": -1, "prevtext": " \n  Let ${\\kappa}$ denote the number of newly informed nodes at the\n  end of the phase. We have\n  \n", "index": 13, "text": "\\begin{equation}\\label{eq:probabilitysumupbound}\n    \\sum\\limits_{t=j{\\psi} - \\left\\lfloor {\\frac{{\\psi}}{2}} \\right\\rfloor+1}^{j{\\psi}} P(t) \\stackrel{\\eqref{eq:harmonicalg}}{\\leq} {\\kappa} \\mathcal{T} \\cdot \\sum\\limits_{i=1}^{\\left\\lceil {\\frac         {{\\psi}}{2\\mathcal{T}}} \\right\\rceil} \\frac{1}{i} < {\\kappa} \\mathcal{T} \\cdot \\left(\\ln\\left\\lceil {\\frac{{\\psi}}{2\\mathcal{T}}} \\right\\rceil+1\\right).\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\sum\\limits_{t=j{\\psi}-\\left\\lfloor{\\frac{{\\psi}}{2}}\\right\\rfloor+1}^{j{\\psi}%&#10;}P(t)\\stackrel{\\eqref{eq:harmonicalg}}{\\leq}{\\kappa}\\mathcal{T}\\cdot\\sum%&#10;\\limits_{i=1}^{\\left\\lceil{\\frac{{\\psi}}{2\\mathcal{T}}}\\right\\rceil}\\frac{1}{i%&#10;}&lt;{\\kappa}\\mathcal{T}\\cdot\\left(\\ln\\left\\lceil{\\frac{{\\psi}}{2\\mathcal{T}}}%&#10;\\right\\rceil+1\\right).\" display=\"block\"><mrow><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>t</mi><mo>=</mo><mrow><mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mo>-</mo><mrow><mo>\u230a</mo><mfrac><mi>\u03c8</mi><mn>2</mn></mfrac><mo>\u230b</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mrow><mrow><mi>j</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow></munderover><mrow><mi>P</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mover><mo movablelimits=\"false\">\u2264</mo><mrow><mi mathsize=\"142%\">(</mi><mo>\u2062</mo><mtext mathsize=\"142%\" mathvariant=\"italic\"><span xmlns=\"http://www.w3.org/1999/xhtml\" class=\"ltx_ref ltx_font_italic ltx_ref_self\"><span class=\"ltx_text ltx_ref_tag\">1</span></span></mtext><mo>\u2062</mo><mi mathsize=\"142%\">)</mi></mrow></mover><mrow><mrow><mi>\u03ba</mi><mo>\u2062</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaf</mi></mrow><mo>\u22c5</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo>\u2308</mo><mfrac><mi>\u03c8</mi><mrow><mn>2</mn><mo>\u2062</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaf</mi></mrow></mfrac><mo>\u2309</mo></mrow></munderover><mfrac><mn>1</mn><mi>i</mi></mfrac></mrow></mrow><mo>&lt;</mo><mrow><mrow><mi>\u03ba</mi><mo>\u2062</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaf</mi></mrow><mo>\u22c5</mo><mrow><mo>(</mo><mrow><mrow><mi>ln</mi><mo>\u2061</mo><mrow><mo>\u2308</mo><mfrac><mi>\u03c8</mi><mrow><mn>2</mn><mo>\u2062</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaf</mi></mrow></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mo>)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n  There exists some constant $c > 0$ such that the right-hand side of\n  the above inequality is not smaller than $c{\\psi}/\\ln^2 n$ and thus the\n  claim follows.\n\\end{proof}\n\n{\\smallskip\\noindent\\textbf{{Case 2}: }} The number of busy rounds is less than the number\nof free rounds in the second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of phase $j$.\n  \nIn this case, round $\\theta_m+1$ for $m \\geq 0$ cannot be\nbusy. Otherwise the number of busy rounds is larger than the number of\nfree rounds in $[\\theta_m+1,j{\\psi}]$ because $\\theta_m$ is supposed\nto be the last round of such intervals of second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$\nrounds as it is shown in Figure \\ref{fig:thetas}. This implies that\nthe number of busy rounds is larger than the number of free rounds in\nthe second $\\left\\lfloor {{\\psi}/2} \\right\\rfloor$ rounds of the phase which contradicts\nthe assumption of Case 2. Therefore, round $\\theta_m+1$ for $m \\geq 0$\nmust be free. For the sake of contradiction suppose that none of $z$\navailable nodes gets informed. Therefore, we can conclude that there\nexists some available uninformed node in round $\\theta_m$ and by Lemma\n\\ref{le:broadcastproceed} one node gets informed in this round which\nleads to having the round $\\theta_m+1$ busy that contradicts our\nassumption on its freeness. As a result, all the $z$ available nodes\nget informed.\n\nCase 1 and Case 2 together conclude the claim.\n\\end{proof}\n\n\n\n\n\n\n\n\nUsing the established technical lemmas, we can now proof our upper\nbound theorem.\n\n\\begin{theoremR}{thm:upperbound}\n  Let $T\\geq 1$, ${\\tau}\\geq 1$, and $k\\geq 1$ be positive integer\n  parameters. Assume that the adversary is ${\\tau}$-oblivious. Then, in\n  a dynamic $T$-interval $k$-connected $n$-node radio network, with\n  high probability, single message broadcast can be solved in time\n \n", "itemtype": "equation", "pos": 32566, "prevtext": " \n  Then (\\ref{eq:probabilitysumlowbound}) and\n  (\\ref{eq:probabilitysumupbound}) lead to\n \n", "index": 15, "text": "\\[\n  {\\kappa} > \\frac{\\left\\lfloor {\\frac{{\\psi}}{4}} \\right\\rfloor}{\\mathcal{T} \\cdot\n    \\left(\\ln\\left\\lceil {\\frac{{\\psi}}{2\\mathcal{T}}} \\right\\rceil+1\\right)}.\n  \\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"{\\kappa}&gt;\\frac{\\left\\lfloor{\\frac{{\\psi}}{4}}\\right\\rfloor}{\\mathcal{T}\\cdot%&#10;\\left(\\ln\\left\\lceil{\\frac{{\\psi}}{2\\mathcal{T}}}\\right\\rceil+1\\right)}.\" display=\"block\"><mrow><mrow><mi>\u03ba</mi><mo>&gt;</mo><mfrac><mrow><mo>\u230a</mo><mfrac><mi>\u03c8</mi><mn>4</mn></mfrac><mo>\u230b</mo></mrow><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaf</mi><mo>\u22c5</mo><mrow><mo>(</mo><mrow><mrow><mi>ln</mi><mo>\u2061</mo><mrow><mo>\u2308</mo><mfrac><mi>\u03c8</mi><mrow><mn>2</mn><mo>\u2062</mo><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaf</mi></mrow></mfrac><mo>\u2309</mo></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mo>)</mo></mrow></mrow></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n\\end{theorem}\n\\begin{remark}\n  Note that for small and for large values of $\\min\\left\\{{{\\tau},T}\\right\\}$, one can\n  do slightly better. It is straightforward to generalize the broadcast\n  algorithm of \\cite{clementi09} to complete single message broadcast\n  in time $O\\left(n^2/k\\log n\\right)$ in $1$-interval $k$-connected\n  radio networks against a $1$-oblivious adversary. Using the result\n  from \\cite{dualgraph}, we also know that for a sufficiently large\n  constant $c$ and $T\\geq cn\\log^2n$, single-message broadcast can be\n  solved in $O(n\\log^2n)$ rounds even for ${\\tau}=0$. Our upper bound\n  therefore beats previous results for\n  $\\min\\left\\{{{\\tau},T}\\right\\}=\\omega(\\log^4 n)$ and $T=O(n\\log^2 n)$.\n\\end{remark}\n\nIn addition to the upper bound of Theorem \\ref{thm:upperbound}, we\nalso prove a lower bound which essentially shows that even for very\nlarge values of $T$, some relaxation on the standard adaptive\nadversaries is necessary in order to get an upper bound which improves\nwith $T$. For ${\\tau}=1$, we show that at least for small $k$, the\ngeneralized upper bound of \\cite{clementi09} is essentially\noptimal. The lower bound can be seen as a generalization of the simple\n$\\Omega(n^2/\\log n)$ lower bound for $k=1$ and $T=1$ proven in\n\\cite{clementi09}.\n\n\\begin{theorem}\\label{thm:lowerbound}\n  For every constant ${\\varepsilon}>0$ and every $T\\leq (n/k)^{1-{\\varepsilon}}$, the\n  expected time to solve single-message broadcast in $T$-interval\n  $k$-connected radio networks against a $1$-oblivious adversary is at\n  least\n \n", "itemtype": "equation", "pos": 9401, "prevtext": "\n\n\\maketitle              \n\n\\thispagestyle{empty}\n\n\n\\begin{abstract}\n  We study the single-message broadcast problem in dynamic radio\n  networks. We show that the time complexity of the problem depends on\n  the amount of stability and connectivity of the dynamic network\n  topology and on the adaptiveness of the adversary providing the\n  dynamic topology. More formally, we model communication using the\n  standard graph-based radio network model. To model the dynamic\n  network, we use a generalization of the synchronous dynamic\n  graph model introduced in [Kuhn et al., STOC 2010]. For integer\n  parameters $T\\geq 1$ and $k\\geq 1$, we call a dynamic graph\n  $T$-interval $k$-connected if for every interval of $T$ consecutive\n  rounds, there exists a $k$-vertex-connected stable\n  subgraph. Further, for an integer parameter $\\tau\\geq 0$, we say that\n  the adversary providing the dynamic network is $\\tau$-oblivious if for\n  constructing the graph of some round $t$, the adversary has access\n  to all the randomness (and states) of the algorithm up to round\n  $t-\\tau$.\n\n  As our main result, we show that for any $T\\geq 1$, any $k\\geq 1$,\n  and any $\\tau\\geq 1$, for a $\\tau$-oblivious adversary, there is a\n  distributed algorithm to broadcast a single message in time\n  $O\\big(\\big(1+\\frac{n}{k\\cdot\\min\\left\\{{\\tau,T}\\right\\}}\\big)\\cdot n\\log^3\n  n\\big)$. We further show that even for large interval\n  $k$-connectivity, efficient broadcast is not possible for the usual\n  adaptive adversaries. For a $1$-oblivious adversary, we show that\n  even for any $T\\leq (n/k)^{1-{\\varepsilon}}$ (for any constant ${\\varepsilon}>0$) and for\n  any $k\\geq 1$, global broadcast in $T$-interval $k$-connected\n  networks requires at least $\\Omega(n^2/(k^2\\log n))$ time. Further,\n  for a $0$-oblivious adversary, broadcast cannot be solved in\n  $T$-interval $k$-connected networks as long as $T<n-k$.\n\\end{abstract}\n\\vspace{.5cm}\n\n\n\n\n\n\\section{Introduction}\n\\label{sec:intro}\n\nBy now, a rich theory on algorithms for large-scale wireless networks\nexists and we have a rather precise understanding of the complexity of\nmany basic computation and communication tasks for a variety of\nwireless network models. While many wireless communication models and\nmodeling assumptions have been studied, to a large part, the\nconsidered models all share one basic property. Most of the existing\nwork is based on static networks and on communication models where\nwireless signal reception is modeled in a completely deterministic\nway. For example, in the classic radio network model, a wireless\nnetwork is modeled as a graph and a node in the graph can receive a\nmessage transmitted by some neighbor if and only if no other neighbor\ntransmits at the same time, e.g., \\cite{bgi1,moscibroda05}. In the\nSINR (or physical) model, nodes have fixed coordinates in some\ngeometric space and a transmitted signal can be successfully received\nif and only if the signal-to-noise-and-interference ratio at the\nreceiver is above a certain fixed threshold, e.g.,\n\\cite{gupta:2000,moscibroda06}.\n\nThe situation in actual networks however is quite different and\nwireless signal reception might behave in a rather unpredictable\nway. There can be multiple sources for interference which cannot be\ncontrolled by a distributed algorithm and signal propagation depends\non various properties of the environment. As a result, we often obtain\nwireless communication links with unreliable behavior\n\\cite{kim06,newport:2007,ramachandran07,srinivasan08,yarvis02}. In\naddition, wireless devices might be mobile leading to a potentially\ncompletely dynamic network topology.\n\nAs a consequence, in recent years, researchers in the wireless\nalgorithms community have also started to consider radio network\nmodels which exhibit nondeterministic behavior and sometimes general\ndynamic topologies, e.g.,\n\\cite{structuringDG,clementi09,clementi12,fernandezanta12,dualgraph,obliviousDG}.\nIn the present paper, we continue this line of research and study the\nglobal broadcast problem in dynamic radio networks for a range of\nmodeling assumptions. Note that in ordinary, static radio networks,\nalbeit appearingly simple, global broadcast is one of the best studied\nproblems in the area, (see, e.g.,\n\\cite{bgi2,bgi1,chlamtac:1985,jurdzinski14,newport-hitting} and many\nothers). We model a dynamic network by applying the dynamic network\nmodel introduced in \\cite{kuhn_stoc10}. Time is divided into\nsynchronous rounds and a wireless network is modeled as a dynamic\ngraph with a fixed set of $n$ nodes and a set of edges which can\nchange from round to round. For two parameters $T\\geq 1$ and\n$k\\geq 1$, a dynamic graph is called \\emph{$T$-interval $k$-connected}\nif for any interval of $T$ consecutive rounds, the set of edges which\nare present throughout these $T$ rounds induces a graph with vertex\nconnectivity at least $k$ (in \\cite{kuhn_stoc10}, the model was only\nintroduced for $k=1$). We refer to \\cite{kuhn:2011:survey} for a more\nthorough discussion of the model of \\cite{kuhn_stoc10} and of several\nearlier related dynamic network models (e.g.,\n\\cite{avin08,baumann09,clementi09,odell05}).\n\nCommunication is modeled by using the standard\nradio network model. In each round, each node can either transmit a message or\nlisten. A listening node successfully receives a message transmitted\nby a neighbor in the current graph if and only if no other neighbor\ntransmits in the same round. We assume that nodes cannot detect\ncollisions, i.e., whether $0$ or more than $1$ neighbors transmit is\nindistinguishable for a listening node. Note that the described\ndynamic network model does not only allow to model topology changes\ndue to arbitrary node mobility. It also allows to model unreliable\nlinks where the presence/availability can change for various reasons.\n\nWe assume that the dynamic graph is provided by a worst-case\nadversary. As we study randomized distributed protocols, we need to\nspecify to what extent the adversary can adapt to the random decisions\nof the nodes when determining the sequence of network topologies. For\nthe adaptiveness of the adversary, we use a more fine-grained\nclassification than what is usually done. For an integer parameter\n${\\tau}\\geq 0$, we say that the adversary is ${\\tau}$-oblivious if for\ndetermining the graph in round $r$, the adversary knows the randomness\nof all nodes of all the rounds up to round $r-{\\tau}$. Typically, only\nthe extreme cases are studied. An adversary which does not have access\nto the random decisions of the algorithm (i.e., ${\\tau}=\\infty$) is\ncalled an \\emph{oblivious} adversary, whereas an adversary which has\naccess to the randomness of the algorithm is called an \\emph{adaptive}\nadversary. If the adversary even has access to the randomness of the\ncurrent round (${\\tau}=0$), it is called \\emph{strongly adaptive},\notherwise (${\\tau}=1$), it is called \\emph{weakly adaptive}. For more\nprecise formal definitions of the modeling assumptions, we refer to\n\\cref{sec:model}.\n\nIn our paper, we consider the problem of broadcasting a single message\nfrom a source node to all the nodes of a dynamic network. The most\nrelevant previous work in the context of the present work appeared in\n\\cite{clementi09,obliviousDG,dualgraph}. In \\cite{clementi09}, it is\nshown that in $1$-interval $1$-connected networks (i.e., the graph is\nconnected in every round)\\footnote{In \\cite{clementi09}, the\n  connectivity condition on the dynamic network is phrased differently\n  and slightly more general.}, the complexity of global broadcast for\na $1$-oblivious adversary is $\\Theta(n^2/\\log n)$. In \\cite{dualgraph}\nand \\cite{obliviousDG}, $\\infty$-interval $1$-connected graphs are\nconsidered (i.e., there is a stable connected subgraph which is\npresent throughout the whole execution). In \\cite{dualgraph}, it is\nshown that even for a $0$-oblivious adversary, it is possible to solve\nbroadcast in $O(n\\log^2 n)$ rounds and it is shown that $\\Omega(n)$\nrounds are necessary even if the stable connected subgraph has\ndiameter $2$. In \\cite{obliviousDG}, it is shown that when only\nassuming an $\\infty$-oblivious adversary, the running time can be\nimproved to $O((D+\\log n)\\log n)$, where $D$ is the diameter of the\nstable connected subgraph. Note that in this case, the algorithm in\n\\cite{obliviousDG} achieves essentially the same time complexity as is\npossible in static graphs of diameter $D$\n\\cite{bgi1,kushilevitz1998omega,newport-hitting}. In \\cite{obliviousDG}, it is also\nshown that for a $1$-oblivious adversary, $\\Omega(n/\\log n)$ rounds\nare necessary even for $D=2$.\n\n\n\\subsection{Contributions}\n\\label{sec:contributions}\n\nIn the following, we state the results of the paper. For formal\ndetails regarding problem statement and modeling not specified in the\nintroduction, we refer to Section \\ref{sec:model}. Our main result is\na randomized broadcast algorithm for the described dynamic radio\nnetwork model. The algorithm (and also partly its analysis) is based\non a combination of the techniques used in \\cite{clementi09} and\n\\cite{dualgraph}. We prove the following main theorem.\n\n\\begin{theorem}\\label{thm:upperbound}\n  Let $T\\geq 1$, ${\\tau}\\geq 1$, and $k\\geq 1$ be positive integer\n  parameters. Assume that the adversary is ${\\tau}$-oblivious. Then, in\n  a dynamic $T$-interval $k$-connected $n$-node radio network, with\n  high probability, single message broadcast can be solved in time\n \n", "index": 1, "text": "\\[\n  O\\left(\\left(1+\\frac{n}{k\\cdot \\min\\left\\{{{\\tau},T}\\right\\}}\\right)\\cdot n\\log^3 n\\right).\n  \\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"O\\left(\\left(1+\\frac{n}{k\\cdot\\min\\left\\{{{\\tau},T}\\right\\}}\\right)\\cdot n\\log%&#10;^{3}n\\right).\" display=\"block\"><mrow><mrow><mi>O</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><mrow><mrow><mo>(</mo><mrow><mn>1</mn><mo>+</mo><mfrac><mi>n</mi><mrow><mi>k</mi><mo>\u22c5</mo><mrow><mi>min</mi><mo>\u2061</mo><mrow><mo>{</mo><mi>\u03c4</mi><mo>,</mo><mi>T</mi><mo>}</mo></mrow></mrow></mrow></mfrac></mrow><mo>)</mo></mrow><mo>\u22c5</mo><mi>n</mi></mrow><mo>\u2062</mo><mrow><msup><mi>log</mi><mn>3</mn></msup><mo>\u2061</mo><mi>n</mi></mrow></mrow><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n  \n  In following, we analyze the progress in the first half of some\n  phase $j$. Consider an uninformed node $v\\in U_j$ (at the beginning\n  of phase $j$). Let $\\mathcal{A}_v$ be the event that $v$ becomes\n  available in the first half of phase $j$. Event $\\mathcal{A}_v$\n  definitely occurs if one of the at least $k$ initially informed\n  neighbors of $v$'s component in $\\mathcal{B}_j[U_j]$ gets isolated\n  in one of the at least ${\\psi}/2$ rounds of the first half of the\n  phase. The probability for this is\n \n", "itemtype": "equation", "pos": 35648, "prevtext": "\n\\end{theoremR}\n\\begin{proof}\n  Consider some phase $j$ and let $\\mathcal{B}_j$ be the backbone of\n  phase $j$, i.e., $\\mathcal{B}_j$ is the stable $k$-connected\n  subgraph of phase $j$.  Consider the subgraph $\\mathcal{B}_j[U_j]$\n  of $\\mathcal{B}_j$ induced by the uninformed nodes $U_j$. This\n  induced subgraph might consist of several connected\n  components. However, each of the components is connected to at least\n  $k$ nodes in $I_j$ as it is shown in Figure \\ref{fig:uninfcomp} (recall that we can assume that $|I(t)|\\geq\n  k+1$). Note that if one of these at least $k$ nodes gets isolated in\n  the first half of the phase, all nodes in the component become\n  available for the second half of the phase.\n  \n  In the first half of phase $j$, in any round $t$, each node in\n  $I(t)$ transmits the message with probability $1/n$. Therefore,\n  for every node $u\\in I(t)$, the probability that $u$ gets isolated\n  in round $t+1$ (in the first half of a phase) is at least\n  \n  \n", "index": 19, "text": "\\begin{equation}\n    \\label{eq:nodeisolation}\n    \\Pr(u\\text{ gets isolated in round }t+1) \\geq\n    \\frac{1}{n}\\left(1-\\frac{1}{n}\\right)^{n-1} > \\frac{1}{en}.\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\Pr(u\\text{ gets isolated in round }t+1)\\geq\\frac{1}{n}\\left(1-\\frac{1}{n}%&#10;\\right)^{n-1}&gt;\\frac{1}{en}.\" display=\"block\"><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>u</mi><mo>\u2062</mo><mtext>\u00a0gets isolated in round\u00a0</mtext><mo>\u2062</mo><mi>t</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2265</mo><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>\u2062</mo><msup><mrow><mo>(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><mo>)</mo></mrow><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></msup></mrow><mo>&gt;</mo><mfrac><mn>1</mn><mrow><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n  The last inequality follows from the fact that for all $0\\leq x\\leq 1$,\n  $e^{-x}\\leq 1-x/2$. Let $X$ be the number of nodes in $U_j$ that get\n  available in phase $j$. For convenience, we define $\\lambda:=\n  |U_j|/n \\leq 1$. We then have\n  \n", "itemtype": "equation", "pos": 36339, "prevtext": "\n  \n  In following, we analyze the progress in the first half of some\n  phase $j$. Consider an uninformed node $v\\in U_j$ (at the beginning\n  of phase $j$). Let $\\mathcal{A}_v$ be the event that $v$ becomes\n  available in the first half of phase $j$. Event $\\mathcal{A}_v$\n  definitely occurs if one of the at least $k$ initially informed\n  neighbors of $v$'s component in $\\mathcal{B}_j[U_j]$ gets isolated\n  in one of the at least ${\\psi}/2$ rounds of the first half of the\n  phase. The probability for this is\n \n", "index": 21, "text": "\\[\n  \\Pr(\\mathcal{A}_v) \\geq 1 - \\left(1-\\frac{k}{en}\\right)^{{\\psi}/2}\n  > 1 - e^{-k{\\psi}/2en} \\geq \\frac{k{\\psi}}{4en}.\n  \\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"\\Pr(\\mathcal{A}_{v})\\geq 1-\\left(1-\\frac{k}{en}\\right)^{{\\psi}/2}&gt;1-e^{-k{\\psi%&#10;}/2en}\\geq\\frac{k{\\psi}}{4en}.\" display=\"block\"><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mi>v</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2265</mo><mrow><mn>1</mn><mo>-</mo><msup><mrow><mo>(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mi>k</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mfrac></mrow><mo>)</mo></mrow><mrow><mi>\u03c8</mi><mo>/</mo><mn>2</mn></mrow></msup></mrow><mo>&gt;</mo><mrow><mn>1</mn><mo>-</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mrow><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mo>/</mo><mn>2</mn></mrow><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mrow></msup></mrow><mo>\u2265</mo><mfrac><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mrow><mn>4</mn><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n  We define $F:= \\min\\big\\{\\frac{{\\psi}}{16e},\\frac{c{\\psi}}{\\ln^2\n      n}\\big\\}$, where $c>0$ is the constant that is used in Lemma\n  \\ref{le:informednodesbounded}.  Note that by Lemma\n  \\ref{le:informednodesbounded}, in phase $j$, w.h.p., at least\n  $\\min\\{X,F\\}$ uninformed nodes become informed.\n\n  We define a phase to be successful if $X \\geq \\lambda F$. Let\n  $\\mathcal{S}$ be the event that phase $j$ is successful and let\n  $\\bar{\\mathcal{S}}$ be the complementary event. We can upper bound\n  the expected value of $X$ as follows:\n \n", "itemtype": "equation", "pos": 36710, "prevtext": "\n  The last inequality follows from the fact that for all $0\\leq x\\leq 1$,\n  $e^{-x}\\leq 1-x/2$. Let $X$ be the number of nodes in $U_j$ that get\n  available in phase $j$. For convenience, we define $\\lambda:=\n  |U_j|/n \\leq 1$. We then have\n  \n", "index": 23, "text": "\\begin{equation}\n    \\label{eq:availableexpect}\n    {\\operatorname{\\mathbb{E}}}[X] = \\sum_{v\\in U_j} \\Pr(\\mathcal{A}_v) \\geq |U_j|\\cdot\n    \\frac{k{\\psi}}{4en} = \\frac{\\lambda k {\\psi}}{4e}.\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{\\mathbb{E}}}[X]=\\sum_{v\\in U_{j}}\\Pr(\\mathcal{A}_{v})\\geq|U_{j}%&#10;|\\cdot\\frac{k{\\psi}}{4en}=\\frac{\\lambda k{\\psi}}{4e}.\" display=\"block\"><mrow><mrow><mrow><mo>\ud835\udd3c</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>v</mi><mo>\u2208</mo><msub><mi>U</mi><mi>j</mi></msub></mrow></munder><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9c</mi><mi>v</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2265</mo><mrow><mrow><mo stretchy=\"false\">|</mo><msub><mi>U</mi><mi>j</mi></msub><mo stretchy=\"false\">|</mo></mrow><mo>\u22c5</mo><mfrac><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mrow><mn>4</mn><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mfrac></mrow><mo>=</mo><mfrac><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mrow><mn>4</mn><mo>\u2062</mo><mi>e</mi></mrow></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n  Combining with the upper bound in \\eqref{eq:availableexpect},\n  we obtain (recall that we assume that $k{\\psi} \\leq n/2$).\n  \n", "itemtype": "equation", "pos": 37461, "prevtext": "\n  We define $F:= \\min\\big\\{\\frac{{\\psi}}{16e},\\frac{c{\\psi}}{\\ln^2\n      n}\\big\\}$, where $c>0$ is the constant that is used in Lemma\n  \\ref{le:informednodesbounded}.  Note that by Lemma\n  \\ref{le:informednodesbounded}, in phase $j$, w.h.p., at least\n  $\\min\\{X,F\\}$ uninformed nodes become informed.\n\n  We define a phase to be successful if $X \\geq \\lambda F$. Let\n  $\\mathcal{S}$ be the event that phase $j$ is successful and let\n  $\\bar{\\mathcal{S}}$ be the complementary event. We can upper bound\n  the expected value of $X$ as follows:\n \n", "index": 25, "text": "\\[\n  {\\operatorname{\\mathbb{E}}}[X] < \\Pr(\\bar{\\mathcal{S}})\\cdot \\lambda F +\n  \\big(1- \\Pr(\\bar{\\mathcal{S}})\\big)\\cdot \\lambda n.\n  \\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{\\mathbb{E}}}[X]&lt;\\Pr(\\bar{\\mathcal{S}})\\cdot\\lambda F+\\big{(}1-%&#10;\\Pr(\\bar{\\mathcal{S}})\\big{)}\\cdot\\lambda n.\" display=\"block\"><mrow><mrow><mrow><mo>\ud835\udd3c</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>&lt;</mo><mrow><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">\u00af</mo></mover><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u22c5</mo><mi>\u03bb</mi></mrow><mo>\u2062</mo><mi>F</mi></mrow><mo>+</mo><mrow><mrow><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><mn>1</mn><mo>-</mo><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">\u00af</mo></mover><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow><mo>\u22c5</mo><mi>\u03bb</mi></mrow><mo>\u2062</mo><mi>n</mi></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n  \n  By Lemma \\ref{le:informednodesbounded}, in a successful phase,\n  w.h.p., at least $\\lambda F$ new nodes get informed. Hence, in a\n  successful phase, w.h.p., we get rid of at least an $(F/n)$-fraction\n  of the remaining uninformed nodes. In order to inform all nodes,\n  w.h.p., we therefore need at most\n  $O(n\\log(n)/F)=O(n\\log^3(n)/{\\psi})$ successful phases. Using\n  \\eqref{eq:nosuccess} and a standard Chernoff argument, we can thus\n  w.h.p. upper bound the total number of phases by\n  $O\\big(n^2\\log^3(n)/(k{\\psi}^2)\\big)$. As each phase takes\n  ${\\psi}$ round, this concludes the proof.\n\\end{proof}\n\n\n\n\n\n\n\n\n\n\n\\section{Lower Bound}\n\\label{sec:lower}\n\nIn this section we prove a lower bound for global broadcast in\n$T$-interval $k$-connected radio networks against a $1$-oblivious\nadversary.  Furthermore, we show impossibility of solving the same\nproblem against a strongly adaptive adversary ($0$-oblivious\nadversary).\n\nOur lower bound is based on a general technique for proving lower\nbounds for communication problems in radio networks, introduced by\nNewport in \\cite{newport-hitting}.  Using this technique, one first\ndefines a combinatorial game for which a lower bound can be proved\ndirectly. It is then shown how to reduce the game to the problem in\norder to leverage the game's lower bound to obtain the desired lower\nbound for the problem.\n\nTo prove \\Cref{thm:lowerbound} using this technique, we first\nintroduce an abstract hitting game, called the\n\\textit{$(\\beta,\\ell,\\varphi)$-periodic hitting game} and directly\nprove a lower bound for winning this game. We note that this game is\nmore involved than the games used in previous work,e.g.,\n\\cite{obliviousDG,newport-hitting}. Based on a lower bound for the\nhitting game, for a given instance of the game we instantiate an\n$n$-node \\emph{target network}. By instantiation of an $n$-node network, we\nmean assigning $n$ processes with unique IDs to the nodes of the\nnetwork.  For the instantiation, one needs to also have information\nwhich is not available to the player in the game. However, we show\nthat by playing the game, the player can still simulate the execution\nof a given broadcast algorithm on the corresponding target network to\nthe given instance of the game.  We show that this simulation of a\nbroadcast algorithm allows to win the hitting game and the lower bound\non the hitting game and the simulation together imply a lower bound\nfor solving global broadcast.\n\n\n\n\n{\\smallskip\\noindent\\textbf{{\\boldmath$(\\beta,\\ell,\\varphi)$-periodic hitting game}: }}\nThe game is defined for three integers $\\beta ,\\ell,\\varphi >0$ and\nproceeds in rounds.  Time is divided into phases of $\\varphi$ rounds,\nwhere the $j^{th}$ phase of the game is called phase $\\pi_j$.  That\nis, phase $\\pi_1$ consists of rounds $1$ to $\\varphi$, phase $\\pi_2$\nconsists of rounds $\\varphi +1$ to $2\\varphi$, etc.  The first round\nof any phase $\\pi_j$ is called $t_j$.  The player of the game is\nrepresented by a probabilistic automaton $\\mathcal{P}$ and plays the\ngame against a referee.  Two sets are defined for this game, a\n\\textit{selection set} $S :=[\\beta]$ which is fixed during the game,\nand a \\textit{target set} which might change from round to round. The\ntarget set of round $t$ is denoted by $X(t)$.  In each round $t$,\n$\\mathcal{P}$ chooses one element from $S$ and outputs it as the guess\n$\\gamma(t)$ for round $t$. Round $t$ is called a \\textit{successful\n  round}, if and only if $\\gamma (t) \\in X(t)$.\n\t\t\nAt the beginning of each phase $\\pi_j$ ($j\\geq 1$), the referee\ndetermines a set $Y_j$ consisting of $\\ell$ elements chosen uniformly\nat random from $S$.  We define the target set as follows. For\nconvenience, assume that $Y_0$, $Y_{-1}$ and $X(0)$ are empty sets.\n\n", "itemtype": "equation", "pos": 37725, "prevtext": "\n  Combining with the upper bound in \\eqref{eq:availableexpect},\n  we obtain (recall that we assume that $k{\\psi} \\leq n/2$).\n  \n", "index": 27, "text": "\\begin{equation}\n    \\label{eq:nosuccess}\n    \\Pr(\\bar{\\mathcal{S}}) < \n    \\frac{n - \\frac{k{\\psi}}{4e}}{n - F} \\leq\n    \\frac{n - \\frac{k{\\psi}}{4e}}{n - \\frac{{\\psi}}{16e}} \n    \\leq\n    \\left(1-\\frac{k{\\psi}}{4en}\\right)\\left(1+\\frac{{\\psi}}{8en}\\right)\n    \\stackrel{(k\\geq 1)}{\\leq}\n    \\left(1-\\frac{k{\\psi}}{8en}\\right).\n  \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\Pr(\\bar{\\mathcal{S}})&lt;\\frac{n-\\frac{k{\\psi}}{4e}}{n-F}\\leq\\frac{n-\\frac{k{%&#10;\\psi}}{4e}}{n-\\frac{{\\psi}}{16e}}\\leq\\left(1-\\frac{k{\\psi}}{4en}\\right)\\left(1%&#10;+\\frac{{\\psi}}{8en}\\right)\\stackrel{(k\\geq 1)}{\\leq}\\left(1-\\frac{k{\\psi}}{8en%&#10;}\\right).\" display=\"block\"><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo stretchy=\"false\">\u00af</mo></mover><mo stretchy=\"false\">)</mo></mrow></mrow><mo>&lt;</mo><mfrac><mrow><mi>n</mi><mo>-</mo><mfrac><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mrow><mn>4</mn><mo>\u2062</mo><mi>e</mi></mrow></mfrac></mrow><mrow><mi>n</mi><mo>-</mo><mi>F</mi></mrow></mfrac><mo>\u2264</mo><mfrac><mrow><mi>n</mi><mo>-</mo><mfrac><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mrow><mn>4</mn><mo>\u2062</mo><mi>e</mi></mrow></mfrac></mrow><mrow><mi>n</mi><mo>-</mo><mfrac><mi>\u03c8</mi><mrow><mn>16</mn><mo>\u2062</mo><mi>e</mi></mrow></mfrac></mrow></mfrac><mo>\u2264</mo><mrow><mrow><mo>(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mrow><mn>4</mn><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mfrac></mrow><mo>)</mo></mrow><mo>\u2062</mo><mrow><mo>(</mo><mrow><mn>1</mn><mo>+</mo><mfrac><mi>\u03c8</mi><mrow><mn>8</mn><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mfrac></mrow><mo>)</mo></mrow></mrow><mover><mo movablelimits=\"false\">\u2264</mo><mrow><mo maxsize=\"142%\" minsize=\"142%\">(</mo><mrow><mi mathsize=\"142%\">k</mi><mo mathsize=\"142%\" stretchy=\"false\">\u2265</mo><mn mathsize=\"142%\">1</mn></mrow><mo maxsize=\"142%\" minsize=\"142%\">)</mo></mrow></mover><mrow><mo>(</mo><mrow><mn>1</mn><mo>-</mo><mfrac><mrow><mi>k</mi><mo>\u2062</mo><mi>\u03c8</mi></mrow><mrow><mn>8</mn><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>n</mi></mrow></mfrac></mrow><mo>)</mo></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "  \n\n\\noindent\nThat is, at the beginning of each phase $\\pi_j$, the referee chooses\n$\\ell$ elements $Y_j$ from $S$ uniformly at random and adds them to\nthe target set.  Two phases ($2\\varphi$ rounds) later, each of these\n$\\ell$ elements which still remains in the target set (and which is\nnot in $Y_{j+1}$) is removed from the target set by the referee.\nMoreover, after each successful round, the referee removes the correct\nguess from the target set.  Player $\\mathcal{P}$ wins the game in $r$\nrounds if and only if either round $r$ is the $\\beta^{th}$ successful round\nfor $\\mathcal{P}$, or before round $r+1$ (in phase $j$),\n$X(r+1)\\cap Y_{j-1}=\\emptyset$ or $X(r+1)\\cap Y_j=\\emptyset$. The\nsecond condition will be used to ensure sufficiently large interval\nconnectivity of the target network as long as the game is not won. The\nonly information that the player receives at the end of each round is\nwhether the round was successful or not. The player is also notified\nif it wins the game.\n\t\t\nIntuitively, as long as the target set changes sufficiently often, it\nshould always appear essentially random to the player. Therefore, the\nbest strategy for hitting the target set is to always choose an almost\nuniformly random guess, leading to roughly $\\beta/\\ell$ rounds to get\na single successful round.  The following lemma states this intuition\nformally. \n\n\n\n\n\n\\begin{lemma}\\label{le:gamelb}\n  For any $\\varphi \\leq \\beta/3$ and for $\\ell\\geq \\ell_0$ for a\n  sufficiently large constant $\\ell_0>0$, the expected number of\n  rounds for a player to win the ($\\beta,\\ell,\\varphi$)-periodic\n  hitting game is at least $\\Omega(\\beta^2/\\ell)$.\n\\end{lemma}\n\n\\begin{proof}\nFrom the game's definition, we can conclude that for winning the game, it is necessary for the player to either experiences $\\beta$ successful rounds or there exist two consecutive phases ($2\\varphi$ rounds) consisting at least $\\ell$ successful rounds. We first show that for sufficiently large constant $\\ell$, the latter case does not happen with high probability. Then, we show that the expected number of rounds for the player to experience $\\beta$ successful rounds is at least $\\Omega (\\beta^2/\\ell)$.\n\nFix some two consecutive phases ($2\\varphi$ rounds). We assume that $\\varphi < \\beta ^{1-{\\varepsilon}}$ for some constant ${\\varepsilon} > 0$. Let random variable $Z$ be the number of successful rounds in these $2\\varphi$ rounds. Then $Z$ is dominated by a binomial random variable with parameters $2\\varphi$ and $2\\ell/(\\beta -2\\varphi +1)$. Then, \n", "itemtype": "equation", "pos": -1, "prevtext": "\n  \n  By Lemma \\ref{le:informednodesbounded}, in a successful phase,\n  w.h.p., at least $\\lambda F$ new nodes get informed. Hence, in a\n  successful phase, w.h.p., we get rid of at least an $(F/n)$-fraction\n  of the remaining uninformed nodes. In order to inform all nodes,\n  w.h.p., we therefore need at most\n  $O(n\\log(n)/F)=O(n\\log^3(n)/{\\psi})$ successful phases. Using\n  \\eqref{eq:nosuccess} and a standard Chernoff argument, we can thus\n  w.h.p. upper bound the total number of phases by\n  $O\\big(n^2\\log^3(n)/(k{\\psi}^2)\\big)$. As each phase takes\n  ${\\psi}$ round, this concludes the proof.\n\\end{proof}\n\n\n\n\n\n\n\n\n\n\n\\section{Lower Bound}\n\\label{sec:lower}\n\nIn this section we prove a lower bound for global broadcast in\n$T$-interval $k$-connected radio networks against a $1$-oblivious\nadversary.  Furthermore, we show impossibility of solving the same\nproblem against a strongly adaptive adversary ($0$-oblivious\nadversary).\n\nOur lower bound is based on a general technique for proving lower\nbounds for communication problems in radio networks, introduced by\nNewport in \\cite{newport-hitting}.  Using this technique, one first\ndefines a combinatorial game for which a lower bound can be proved\ndirectly. It is then shown how to reduce the game to the problem in\norder to leverage the game's lower bound to obtain the desired lower\nbound for the problem.\n\nTo prove \\Cref{thm:lowerbound} using this technique, we first\nintroduce an abstract hitting game, called the\n\\textit{$(\\beta,\\ell,\\varphi)$-periodic hitting game} and directly\nprove a lower bound for winning this game. We note that this game is\nmore involved than the games used in previous work,e.g.,\n\\cite{obliviousDG,newport-hitting}. Based on a lower bound for the\nhitting game, for a given instance of the game we instantiate an\n$n$-node \\emph{target network}. By instantiation of an $n$-node network, we\nmean assigning $n$ processes with unique IDs to the nodes of the\nnetwork.  For the instantiation, one needs to also have information\nwhich is not available to the player in the game. However, we show\nthat by playing the game, the player can still simulate the execution\nof a given broadcast algorithm on the corresponding target network to\nthe given instance of the game.  We show that this simulation of a\nbroadcast algorithm allows to win the hitting game and the lower bound\non the hitting game and the simulation together imply a lower bound\nfor solving global broadcast.\n\n\n\n\n{\\smallskip\\noindent\\textbf{{\\boldmath$(\\beta,\\ell,\\varphi)$-periodic hitting game}: }}\nThe game is defined for three integers $\\beta ,\\ell,\\varphi >0$ and\nproceeds in rounds.  Time is divided into phases of $\\varphi$ rounds,\nwhere the $j^{th}$ phase of the game is called phase $\\pi_j$.  That\nis, phase $\\pi_1$ consists of rounds $1$ to $\\varphi$, phase $\\pi_2$\nconsists of rounds $\\varphi +1$ to $2\\varphi$, etc.  The first round\nof any phase $\\pi_j$ is called $t_j$.  The player of the game is\nrepresented by a probabilistic automaton $\\mathcal{P}$ and plays the\ngame against a referee.  Two sets are defined for this game, a\n\\textit{selection set} $S :=[\\beta]$ which is fixed during the game,\nand a \\textit{target set} which might change from round to round. The\ntarget set of round $t$ is denoted by $X(t)$.  In each round $t$,\n$\\mathcal{P}$ chooses one element from $S$ and outputs it as the guess\n$\\gamma(t)$ for round $t$. Round $t$ is called a \\textit{successful\n  round}, if and only if $\\gamma (t) \\in X(t)$.\n\t\t\nAt the beginning of each phase $\\pi_j$ ($j\\geq 1$), the referee\ndetermines a set $Y_j$ consisting of $\\ell$ elements chosen uniformly\nat random from $S$.  We define the target set as follows. For\nconvenience, assume that $Y_0$, $Y_{-1}$ and $X(0)$ are empty sets.\n\n", "index": 29, "text": "\\begin{equation*}\n  \\forall j, \\forall t\\in \\left[t_j,t_j+\\varphi-1\\right]\\,:\\,\n  X(t) :=\n  \\begin{cases}\n    Y_j \\cup \\big[X(t-1) \\setminus (\\{\\gamma(t-1)\\}\\cup\n    (Y_{j-2}\\setminus Y_{j-1}))\\big] &\n    \\text{if }{t=t_j},\\\\\n    X(t-1)\\setminus \\{\\gamma(t-1)\\} & \\text{if }{t\\neq t_j}.\n  \\end{cases}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex9.m1\" class=\"ltx_Math\" alttext=\"\\forall j,\\forall t\\in\\left[t_{j},t_{j}+\\varphi-1\\right]\\,:\\,X(t):=\\begin{%&#10;cases}Y_{j}\\cup\\big{[}X(t-1)\\setminus(\\{\\gamma(t-1)\\}\\cup(Y_{j-2}\\setminus Y_{%&#10;j-1}))\\big{]}&amp;\\text{if }{t=t_{j}},\\\\&#10;X(t-1)\\setminus\\{\\gamma(t-1)\\}&amp;\\text{if }{t\\neq t_{j}}.\\end{cases}\" display=\"block\"><mrow><mrow><mrow><mrow><mo>\u2200</mo><mi>j</mi></mrow><mo>,</mo><mrow><mo>\u2200</mo><mi>t</mi></mrow></mrow><mo>\u2208</mo><mrow><mo>[</mo><msub><mi>t</mi><mi>j</mi></msub><mo>,</mo><mrow><mrow><msub><mi>t</mi><mi>j</mi></msub><mo>+</mo><mi>\u03c6</mi></mrow><mo>-</mo><mn>1</mn></mrow><mo rspace=\"4.2pt\">]</mo></mrow></mrow><mo rspace=\"4.2pt\">:</mo><mrow><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>:=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mrow><msub><mi>Y</mi><mi>j</mi></msub><mo>\u222a</mo><mrow><mo maxsize=\"120%\" minsize=\"120%\">[</mo><mrow><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2216</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mo stretchy=\"false\">{</mo><mrow><mi>\u03b3</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">}</mo></mrow><mo>\u222a</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>Y</mi><mrow><mi>j</mi><mo>-</mo><mn>2</mn></mrow></msub><mo>\u2216</mo><msub><mi>Y</mi><mrow><mi>j</mi><mo>-</mo><mn>1</mn></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo maxsize=\"120%\" minsize=\"120%\">]</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>t</mi></mrow><mo>=</mo><msub><mi>t</mi><mi>j</mi></msub></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u2216</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mi>\u03b3</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>t</mi></mrow><mo>\u2260</mo><msub><mi>t</mi><mi>j</mi></msub></mrow><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nIt is, therefore, sufficient to choose $\\ell = O(1/{\\varepsilon}) = O(1)$ so that by applying union bound over all $O(\\beta^2)$ such periods of $2\\varphi $ rounds, we guarantee that with high probability there do not exist two consecutive phases consisting at least $\\ell$ successful rounds throughout the whole execution. \n\nNow let us calculate the expected number rounds for the player to experience $\\beta$ successful rounds. In any round $t$ we have at most $2\\ell$ elements in the target set\nand hence $|X(t)|\\leq 2\\ell$. Let $\\Gamma_j$ be the set of all\nproposals in phase $\\pi_j$:\n\n", "itemtype": "equation", "pos": 44651, "prevtext": "  \n\n\\noindent\nThat is, at the beginning of each phase $\\pi_j$, the referee chooses\n$\\ell$ elements $Y_j$ from $S$ uniformly at random and adds them to\nthe target set.  Two phases ($2\\varphi$ rounds) later, each of these\n$\\ell$ elements which still remains in the target set (and which is\nnot in $Y_{j+1}$) is removed from the target set by the referee.\nMoreover, after each successful round, the referee removes the correct\nguess from the target set.  Player $\\mathcal{P}$ wins the game in $r$\nrounds if and only if either round $r$ is the $\\beta^{th}$ successful round\nfor $\\mathcal{P}$, or before round $r+1$ (in phase $j$),\n$X(r+1)\\cap Y_{j-1}=\\emptyset$ or $X(r+1)\\cap Y_j=\\emptyset$. The\nsecond condition will be used to ensure sufficiently large interval\nconnectivity of the target network as long as the game is not won. The\nonly information that the player receives at the end of each round is\nwhether the round was successful or not. The player is also notified\nif it wins the game.\n\t\t\nIntuitively, as long as the target set changes sufficiently often, it\nshould always appear essentially random to the player. Therefore, the\nbest strategy for hitting the target set is to always choose an almost\nuniformly random guess, leading to roughly $\\beta/\\ell$ rounds to get\na single successful round.  The following lemma states this intuition\nformally. \n\n\n\n\n\n\\begin{lemma}\\label{le:gamelb}\n  For any $\\varphi \\leq \\beta/3$ and for $\\ell\\geq \\ell_0$ for a\n  sufficiently large constant $\\ell_0>0$, the expected number of\n  rounds for a player to win the ($\\beta,\\ell,\\varphi$)-periodic\n  hitting game is at least $\\Omega(\\beta^2/\\ell)$.\n\\end{lemma}\n\n\\begin{proof}\nFrom the game's definition, we can conclude that for winning the game, it is necessary for the player to either experiences $\\beta$ successful rounds or there exist two consecutive phases ($2\\varphi$ rounds) consisting at least $\\ell$ successful rounds. We first show that for sufficiently large constant $\\ell$, the latter case does not happen with high probability. Then, we show that the expected number of rounds for the player to experience $\\beta$ successful rounds is at least $\\Omega (\\beta^2/\\ell)$.\n\nFix some two consecutive phases ($2\\varphi$ rounds). We assume that $\\varphi < \\beta ^{1-{\\varepsilon}}$ for some constant ${\\varepsilon} > 0$. Let random variable $Z$ be the number of successful rounds in these $2\\varphi$ rounds. Then $Z$ is dominated by a binomial random variable with parameters $2\\varphi$ and $2\\ell/(\\beta -2\\varphi +1)$. Then, \n", "index": 31, "text": "\n\\[\n\\Pr\\left(Z\\geq \\ell \\right) \\leq \n\t\\binom{2\\varphi}{\\ell}\\cdot \\left( \\frac{2\\ell}{\\beta - 2\\varphi +1}\\right) ^\\ell \\leq\t\t\n\t\t\\left( \\frac{2e\\varphi}{\\ell} \\right) ^\\ell \\cdot \\left( \\frac{2\\ell}{\\beta - 2\\varphi +1}\\right) ^\\ell \\leq\n\t\t\t\\left( \\frac{8e\\varphi}{\\beta} \\right)^\\ell \\leq\n\t\t\t\t\\left( \\frac{8e}{\\beta ^{\\varepsilon}} \\right)^\\ell .\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex10.m1\" class=\"ltx_Math\" alttext=\"\\Pr\\left(Z\\geq\\ell\\right)\\leq\\binom{2\\varphi}{\\ell}\\cdot\\left(\\frac{2\\ell}{%&#10;\\beta-2\\varphi+1}\\right)^{\\ell}\\leq\\left(\\frac{2e\\varphi}{\\ell}\\right)^{\\ell}%&#10;\\cdot\\left(\\frac{2\\ell}{\\beta-2\\varphi+1}\\right)^{\\ell}\\leq\\left(\\frac{8e%&#10;\\varphi}{\\beta}\\right)^{\\ell}\\leq\\left(\\frac{8e}{\\beta^{\\varepsilon}}\\right)^{%&#10;\\ell}.\" display=\"block\"><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo>(</mo><mrow><mi>Z</mi><mo>\u2265</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mo>)</mo></mrow></mrow><mo>\u2264</mo><mrow><mrow><mo>(</mo><mfrac linethickness=\"0pt\"><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c6</mi></mrow><mi mathvariant=\"normal\">\u2113</mi></mfrac><mo>)</mo></mrow><mo>\u22c5</mo><msup><mrow><mo>(</mo><mfrac><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mrow><mrow><mi>\u03b2</mi><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c6</mi></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mfrac><mo>)</mo></mrow><mi mathvariant=\"normal\">\u2113</mi></msup></mrow><mo>\u2264</mo><mrow><msup><mrow><mo>(</mo><mfrac><mrow><mn>2</mn><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>\u03c6</mi></mrow><mi mathvariant=\"normal\">\u2113</mi></mfrac><mo>)</mo></mrow><mi mathvariant=\"normal\">\u2113</mi></msup><mo>\u22c5</mo><msup><mrow><mo>(</mo><mfrac><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mrow><mrow><mi>\u03b2</mi><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c6</mi></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mfrac><mo>)</mo></mrow><mi mathvariant=\"normal\">\u2113</mi></msup></mrow><mo>\u2264</mo><msup><mrow><mo>(</mo><mfrac><mrow><mn>8</mn><mo>\u2062</mo><mi>e</mi><mo>\u2062</mo><mi>\u03c6</mi></mrow><mi>\u03b2</mi></mfrac><mo>)</mo></mrow><mi mathvariant=\"normal\">\u2113</mi></msup><mo>\u2264</mo><msup><mrow><mo>(</mo><mfrac><mrow><mn>8</mn><mo>\u2062</mo><mi>e</mi></mrow><msup><mi>\u03b2</mi><mi>\u03b5</mi></msup></mfrac><mo>)</mo></mrow><mi mathvariant=\"normal\">\u2113</mi></msup></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nand $\\Gamma_j(t)$ the set of all proposals in phase $\\pi_j$ until\n(including) round $t$:\n\n", "itemtype": "equation", "pos": 45591, "prevtext": "\nIt is, therefore, sufficient to choose $\\ell = O(1/{\\varepsilon}) = O(1)$ so that by applying union bound over all $O(\\beta^2)$ such periods of $2\\varphi $ rounds, we guarantee that with high probability there do not exist two consecutive phases consisting at least $\\ell$ successful rounds throughout the whole execution. \n\nNow let us calculate the expected number rounds for the player to experience $\\beta$ successful rounds. In any round $t$ we have at most $2\\ell$ elements in the target set\nand hence $|X(t)|\\leq 2\\ell$. Let $\\Gamma_j$ be the set of all\nproposals in phase $\\pi_j$:\n\n", "index": 33, "text": "\\begin{equation*}\n  \\Gamma_j = \\bigcup \\limits_{i = t_j}^{t_j+\\varphi -1} \\{\\gamma(i)\\}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex11.m1\" class=\"ltx_Math\" alttext=\"\\Gamma_{j}=\\bigcup\\limits_{i=t_{j}}^{t_{j}+\\varphi-1}\\{\\gamma(i)\\}\" display=\"block\"><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>=</mo><mrow><munderover><mo largeop=\"true\" mathsize=\"160%\" movablelimits=\"false\" stretchy=\"false\" symmetric=\"true\">\u22c3</mo><mrow><mi>i</mi><mo>=</mo><msub><mi>t</mi><mi>j</mi></msub></mrow><mrow><mrow><msub><mi>t</mi><mi>j</mi></msub><mo>+</mo><mi>\u03c6</mi></mrow><mo>-</mo><mn>1</mn></mrow></munderover><mrow><mo stretchy=\"false\">{</mo><mrow><mi>\u03b3</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nAs mentioned above, the only information that the player receives in\neach round is whether its proposal was successful or not. While this\nis little information, the game history until round $t$ can still help\nthe player to offer a better proposal for the next round. In\nparticular, at the end of round $t$ in phase $\\pi_j$, the player knows\nthat $|\\Gamma_j(t)\\cap X(t+1)|=0$ because the adversary removes any\ncorrect proposal from the target set. Therefore, the player should\nnot output any proposal which is in $\\Gamma_j(t)$. On the other\nhand, in round $t$ of phase $\\pi_j$, any element in\n$\\Gamma_{j-1}\\setminus \\Gamma_j(t)$ is in $X(t+1)$ if and only if it\nis in $Y_j$. For every round $t$ in phase $\\pi_j$, we partition the\nset $S$ into three disjoint sets: $\\Gamma_j(t)$,\n$\\Gamma_{j-1}\\setminus \\Gamma_j(t)$, and\n$S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$. Based on its knowledge,\nthe player can then deduce the following statements with respect to\nthe game history:\n\n", "itemtype": "equation", "pos": 45784, "prevtext": "\nand $\\Gamma_j(t)$ the set of all proposals in phase $\\pi_j$ until\n(including) round $t$:\n\n", "index": 35, "text": "\\begin{equation*}\n  \\Gamma_j(t) = \\bigcup\\limits_{i = t_j}^{t} \\{\\gamma(i)\\}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex12.m1\" class=\"ltx_Math\" alttext=\"\\Gamma_{j}(t)=\\bigcup\\limits_{i=t_{j}}^{t}\\{\\gamma(i)\\}\" display=\"block\"><mrow><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" mathsize=\"160%\" movablelimits=\"false\" stretchy=\"false\" symmetric=\"true\">\u22c3</mo><mrow><mi>i</mi><mo>=</mo><msub><mi>t</mi><mi>j</mi></msub></mrow><mi>t</mi></munderover><mrow><mo stretchy=\"false\">{</mo><mrow><mi>\u03b3</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nBased on this information we can calculate the probability of success\nfor choosing a proposal from any of these three sets separately.\n\nFix some round $t$ in phase $\\pi_j$ and let $h_j(t)$ be the number of\nelements in $Y_j$ that are proposed correctly by the player until\nround $t$ (in other words, $h_j(t)$ is the number of elements in $Y_j$\nwhich are hit in some rounds in $[t_j,t]$). We will assume that the\nadversary informs the player in each successful round whether the\nproposal is from $Y_{j-1}$ or $Y_j$. As a player is free to ignore\nthis information, it only makes the adversary weaker (and the player\nstronger). Any lower bound which holds with this additional\ninformation therefore also holds without it. Knowing whether a\nsuccessful proposal in phase $\\pi_j$ is from $Y_{j-1}$ or $Y_j$ lets\nthe player know $h_j(t)$ for all $t$ and $j$. Assume that\n$x =\\gamma(t+1)$ is the proposal chosen by the player for the round\n$t+1$.\n\n{\\smallskip\\noindent\\textbf{{Case 1, \\boldmath$x\\in \\Gamma_j(t)$}: }}\nIn this case, the proposal of round $t+1$ is one of the earlier phase\n$\\pi_j$ proposals and it therefore cannot be in the target set. Thus,\nwe have\n", "itemtype": "equation", "pos": 46851, "prevtext": "\nAs mentioned above, the only information that the player receives in\neach round is whether its proposal was successful or not. While this\nis little information, the game history until round $t$ can still help\nthe player to offer a better proposal for the next round. In\nparticular, at the end of round $t$ in phase $\\pi_j$, the player knows\nthat $|\\Gamma_j(t)\\cap X(t+1)|=0$ because the adversary removes any\ncorrect proposal from the target set. Therefore, the player should\nnot output any proposal which is in $\\Gamma_j(t)$. On the other\nhand, in round $t$ of phase $\\pi_j$, any element in\n$\\Gamma_{j-1}\\setminus \\Gamma_j(t)$ is in $X(t+1)$ if and only if it\nis in $Y_j$. For every round $t$ in phase $\\pi_j$, we partition the\nset $S$ into three disjoint sets: $\\Gamma_j(t)$,\n$\\Gamma_{j-1}\\setminus \\Gamma_j(t)$, and\n$S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$. Based on its knowledge,\nthe player can then deduce the following statements with respect to\nthe game history:\n\n", "index": 37, "text": "\\begin{align*}\n  \\forall x\\in \\Gamma_j(t) : &\\   x\\not\\in X(t+1), \\\\\n  \\forall x\\in \\Gamma_{j-1}\\setminus \\Gamma_j(t) : \n                             &\\\n                               x\\in X(t+1) \\Longleftrightarrow  x\\in Y_j,\\\\\n  \\forall x\\in S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t)) : \n                             &\\\n                               x\\in X(t+1)\\Longleftrightarrow x\\in (Y_{j-1} \\cup Y_j).\n\\end{align*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\forall x\\in\\Gamma_{j}(t):\" display=\"inline\"><mrow><mrow><mrow><mo>\u2200</mo><mi>x</mi></mrow><mo>\u2208</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>:</mo><mi/></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex13.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ x\\not\\in X(t+1),\" display=\"inline\"><mrow><mrow><mrow><mi mathvariant=\"normal\">\u00a0</mi><mo>\u2062</mo><mi>x</mi></mrow><mo>\u2209</mo><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\forall x\\in\\Gamma_{j-1}\\setminus\\Gamma_{j}(t):\" display=\"inline\"><mrow><mrow><mrow><mo>\u2200</mo><mi>x</mi></mrow><mo>\u2208</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>j</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2216</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>:</mo><mi/></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex14.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ x\\in X(t+1)\\Longleftrightarrow x\\in Y_{j},\" display=\"inline\"><mrow><mrow><mrow><mrow><mi mathvariant=\"normal\">\u00a0</mi><mo>\u2062</mo><mi>x</mi></mrow><mo>\u2208</mo><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u27fa</mo><mrow><mi>x</mi><mo>\u2208</mo><msub><mi>Y</mi><mi>j</mi></msub></mrow></mrow><mo>,</mo></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\forall x\\in S\\setminus(\\Gamma_{j-1}\\cup\\Gamma_{j}(t)):\" display=\"inline\"><mrow><mrow><mrow><mo>\u2200</mo><mi>x</mi></mrow><mo>\u2208</mo><mrow><mi>S</mi><mo>\u2216</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>j</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u222a</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>:</mo><mi/></mrow></math>\n<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex15.m2\" class=\"ltx_Math\" alttext=\"\\displaystyle\\ x\\in X(t+1)\\Longleftrightarrow x\\in(Y_{j-1}\\cup Y_{j}).\" display=\"inline\"><mrow><mrow><mrow><mrow><mi mathvariant=\"normal\">\u00a0</mi><mo>\u2062</mo><mi>x</mi></mrow><mo>\u2208</mo><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u27fa</mo><mrow><mi>x</mi><mo>\u2208</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>Y</mi><mrow><mi>j</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u222a</mo><msub><mi>Y</mi><mi>j</mi></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n  \n{\\smallskip\\noindent\\textbf{{Case 2, \\boldmath$x\\in \\Gamma_{j-1}\\setminus \\Gamma_j(t)$}: }}\nIn this case the proposal is in the target set if and only if\n$x\\in Y_j$:\n", "itemtype": "equation", "pos": 48428, "prevtext": "\nBased on this information we can calculate the probability of success\nfor choosing a proposal from any of these three sets separately.\n\nFix some round $t$ in phase $\\pi_j$ and let $h_j(t)$ be the number of\nelements in $Y_j$ that are proposed correctly by the player until\nround $t$ (in other words, $h_j(t)$ is the number of elements in $Y_j$\nwhich are hit in some rounds in $[t_j,t]$). We will assume that the\nadversary informs the player in each successful round whether the\nproposal is from $Y_{j-1}$ or $Y_j$. As a player is free to ignore\nthis information, it only makes the adversary weaker (and the player\nstronger). Any lower bound which holds with this additional\ninformation therefore also holds without it. Knowing whether a\nsuccessful proposal in phase $\\pi_j$ is from $Y_{j-1}$ or $Y_j$ lets\nthe player know $h_j(t)$ for all $t$ and $j$. Assume that\n$x =\\gamma(t+1)$ is the proposal chosen by the player for the round\n$t+1$.\n\n{\\smallskip\\noindent\\textbf{{Case 1, \\boldmath$x\\in \\Gamma_j(t)$}: }}\nIn this case, the proposal of round $t+1$ is one of the earlier phase\n$\\pi_j$ proposals and it therefore cannot be in the target set. Thus,\nwe have\n", "index": 39, "text": "\n\\[\n\\Pr\\big(x\\in X(t+1)|x\\in \\Gamma_j(t)\\big) = 0.\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex16.m1\" class=\"ltx_Math\" alttext=\"\\Pr\\big{(}x\\in X(t+1)|x\\in\\Gamma_{j}(t)\\big{)}=0.\" display=\"block\"><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><mi>x</mi><mo>\u2208</mo><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">|</mo><mrow><mi>x</mi><mo>\u2208</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\n\n{\\smallskip\\noindent\\textbf{{Case 3, \\boldmath$x\\in S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$}: }}\nAny element in $S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$ is in\n$X(t+1)$ if and only if it is in $Y_j$ or in $Y_{j-1}$. Therefore, we\ncan estimate the probability of success for choosing any element in\n$S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$ as the proposal for round\n$t+1$ as follows:\n\\begin{eqnarray*}\n  \\Pr\\big(x\\in X(t+1)\\, |\\, x\\in S\\setminus \\left(\\Gamma_{j-1}\\cup\n  \\Gamma_j(t)\\right)\\big) \n  & \\leq & \\frac{|Y_{j-1}\\cup Y_j|-|\\Gamma_{j-1}\\cup \\Gamma_j(t)|}{|S|-|\\Gamma_{j-1}|-|\\Gamma_{j}(t)|}\\\\ \n  & \\leq & \\frac{|Y_j|+|Y_{j-1}|}{\\beta -2\\varphi +1} \\\\\n  & \\leq & \\frac{2\\ell}{\\beta -2\\varphi +1}.\n\\end{eqnarray*}\nFrom these three cases we can conclude that even when using all the\navailable information about the history, the probability of success\nfor any element from the selection set is at most\n$\\frac{2\\ell}{\\beta -2\\varphi +1}$. Let $\\bar{\\mathcal{H}}$ be the\ngame history and let $\\bar{x}$ be an arbitrary element from $S$. We\nthen have\n\n", "itemtype": "equation", "pos": 48650, "prevtext": "\n  \n{\\smallskip\\noindent\\textbf{{Case 2, \\boldmath$x\\in \\Gamma_{j-1}\\setminus \\Gamma_j(t)$}: }}\nIn this case the proposal is in the target set if and only if\n$x\\in Y_j$:\n", "index": 41, "text": "\n\\[\n\\Pr\\big(x\\in X(t+1)\\, |\\, x\\in \\Gamma_{j-1}\\setminus \\Gamma_j(t)\\big)\n= \n\\frac{|Y_j|-h_j(t)}{|S|-|\\Gamma_j(t)|} \\leq \\frac{|Y_j|}{\\beta\n  -\\varphi +1} \\leq \n\\frac{\\ell}{\\beta -\\varphi +1} \\leq \\frac{2\\ell}{\\beta -\n  2\\varphi +1}.\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex17.m1\" class=\"ltx_Math\" alttext=\"\\Pr\\big{(}x\\in X(t+1)\\,|\\,x\\in\\Gamma_{j-1}\\setminus\\Gamma_{j}(t)\\big{)}=\\frac{%&#10;|Y_{j}|-h_{j}(t)}{|S|-|\\Gamma_{j}(t)|}\\leq\\frac{|Y_{j}|}{\\beta-\\varphi+1}\\leq%&#10;\\frac{\\ell}{\\beta-\\varphi+1}\\leq\\frac{2\\ell}{\\beta-2\\varphi+1}.\" display=\"block\"><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo maxsize=\"120%\" minsize=\"120%\">(</mo><mrow><mi>x</mi><mo>\u2208</mo><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mo rspace=\"4.2pt\" stretchy=\"false\">)</mo></mrow></mrow></mrow><mo rspace=\"4.2pt\" stretchy=\"false\">|</mo><mrow><mi>x</mi><mo>\u2208</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>j</mi><mo>-</mo><mn>1</mn></mrow></msub><mo>\u2216</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo maxsize=\"120%\" minsize=\"120%\">)</mo></mrow></mrow><mo>=</mo><mfrac><mrow><mrow><mo stretchy=\"false\">|</mo><msub><mi>Y</mi><mi>j</mi></msub><mo stretchy=\"false\">|</mo></mrow><mo>-</mo><mrow><msub><mi>h</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mrow><mrow><mo stretchy=\"false\">|</mo><mi>S</mi><mo stretchy=\"false\">|</mo></mrow><mo>-</mo><mrow><mo stretchy=\"false\">|</mo><mrow><msub><mi mathvariant=\"normal\">\u0393</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">|</mo></mrow></mrow></mfrac><mo>\u2264</mo><mfrac><mrow><mo stretchy=\"false\">|</mo><msub><mi>Y</mi><mi>j</mi></msub><mo stretchy=\"false\">|</mo></mrow><mrow><mrow><mi>\u03b2</mi><mo>-</mo><mi>\u03c6</mi></mrow><mo>+</mo><mn>1</mn></mrow></mfrac><mo>\u2264</mo><mfrac><mi mathvariant=\"normal\">\u2113</mi><mrow><mrow><mi>\u03b2</mi><mo>-</mo><mi>\u03c6</mi></mrow><mo>+</mo><mn>1</mn></mrow></mfrac><mo>\u2264</mo><mfrac><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mrow><mrow><mi>\u03b2</mi><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c6</mi></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nStarting at any time $t$, let the random variable $R$ count the number\nof rounds until the first successful round after round $t$. We have\n", "itemtype": "equation", "pos": 49946, "prevtext": "\n\n{\\smallskip\\noindent\\textbf{{Case 3, \\boldmath$x\\in S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$}: }}\nAny element in $S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$ is in\n$X(t+1)$ if and only if it is in $Y_j$ or in $Y_{j-1}$. Therefore, we\ncan estimate the probability of success for choosing any element in\n$S\\setminus (\\Gamma_{j-1}\\cup \\Gamma_j(t))$ as the proposal for round\n$t+1$ as follows:\n\\begin{eqnarray*}\n  \\Pr\\big(x\\in X(t+1)\\, |\\, x\\in S\\setminus \\left(\\Gamma_{j-1}\\cup\n  \\Gamma_j(t)\\right)\\big) \n  & \\leq & \\frac{|Y_{j-1}\\cup Y_j|-|\\Gamma_{j-1}\\cup \\Gamma_j(t)|}{|S|-|\\Gamma_{j-1}|-|\\Gamma_{j}(t)|}\\\\ \n  & \\leq & \\frac{|Y_j|+|Y_{j-1}|}{\\beta -2\\varphi +1} \\\\\n  & \\leq & \\frac{2\\ell}{\\beta -2\\varphi +1}.\n\\end{eqnarray*}\nFrom these three cases we can conclude that even when using all the\navailable information about the history, the probability of success\nfor any element from the selection set is at most\n$\\frac{2\\ell}{\\beta -2\\varphi +1}$. Let $\\bar{\\mathcal{H}}$ be the\ngame history and let $\\bar{x}$ be an arbitrary element from $S$. We\nthen have\n\n", "index": 43, "text": "\\begin{equation}\\label{equ:hitting-prob}\t\n  \\Pr\\left(\\bar{x}\\in X(t+1)\\,|\\, \\bar{\\mathcal{H}}\\right) \\leq \\frac{2\\ell}{\\beta - 2\\varphi +1}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"\\Pr\\left(\\bar{x}\\in X(t+1)\\,|\\,\\bar{\\mathcal{H}}\\right)\\leq\\frac{2\\ell}{\\beta-%&#10;2\\varphi+1}.\" display=\"block\"><mrow><mrow><mrow><mi>Pr</mi><mo>\u2061</mo><mrow><mo>(</mo><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"false\">\u00af</mo></mover><mo>\u2208</mo><mrow><mi>X</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mo rspace=\"4.2pt\" stretchy=\"false\">)</mo></mrow></mrow></mrow><mo rspace=\"4.2pt\" stretchy=\"false\">|</mo><mover accent=\"true\"><mi class=\"ltx_font_mathcaligraphic\">\u210b</mi><mo stretchy=\"false\">\u00af</mo></mover><mo>)</mo></mrow></mrow><mo>\u2264</mo><mfrac><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mrow><mrow><mi>\u03b2</mi><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c6</mi></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01912.tex", "nexttext": "\nConsequently, the expected time until having $\\beta$ successful rounds\nbecomes $\\Omega(\\beta^2/\\ell)$.\n\\end{proof}\n\n\n\n\n\n\n\\begin{lemma}\\label{le:reduction}\n  If algorithm $\\mathcal{A}$ solves the global broadcast problem in\n  any $T$-interval $1$-connected dynamic $n$-nodes network against a\n  $1$-oblivious adversary in $f(n)=n^{O(1)}$ rounds in expectation for\n  a sufficiently large value of $T$, then we can construct a player\n  $\\mathcal{P}$ to win the\n  $(\\lfloor n/2\\rfloor-\\ell, \\ell , cT\\ln n)$-periodic hitting game\n  in expected $O(f(n)\\log n)$ rounds, for some positive constants $c$\n  and $\\ell$.\n\\end{lemma}\n\\begin{proof}\n  We construct a player $\\mathcal{P}$ to simulate the execution of\n  $\\mathcal{A}$ on a particular $T$-interval $1$-connected dynamic\n  $n$-node network (the target network). Then the player uses the transmitting behavior of\n  the nodes in the simulation to generate guesses for playing the\n  game. We start by defining the target network for a given instance\n  of the $(\\lfloor n/2\\rfloor-\\ell,\\ell, cT\\ln n)$-periodic hitting\n  game.\n\n\n\n\\begin{figure}[t]\n\\centering\n\\begin{subfigure}{.4\\textwidth}\n  \\centering\n  \\includegraphics[width=.9\\textwidth]{lowerbound1}\n  \\caption{The core structure of the dynamic lower bound\n    network. The edges labeled $A$, $B$, and $C$ are added in\n    different phases. \\label{fig:a}}\n  \\label{fig:sub1}\n\\end{subfigure}\n\\hspace{1cm}\n\\begin{subfigure}{.4\\textwidth}\n  \\centering\n  \\vspace{2cm}\n  \\includegraphics[width=.9\\textwidth]{lowerbound2}\n  \\caption{At least one edge exists between $I$ and $U$ for\n    any $T$ consecutive rounds. \\label{fig:b}}\n  \\label{fig:sub2}\n\\end{subfigure}\n\\caption{A snapshot of the dynamic network used in the hitting\n      game simulation.}\n\\label{fig:lowerbound}\n\\end{figure}\n\n\\iffalse\n  \\begin{figure}[t]\n    \\centering\n    \\subfloat[The core structure of the dynamic lower bound\n    network. The edges labeled $A$, $B$, and $C$ are added in\n    different phases. \\label{fig:a}]{\n      \\includegraphics[width=0.45 \\textwidth]{lowerbound1}\n    }\\hfill \\subfloat[At least one edge exists between $I$ and $U$ for\n    any $T$ consecutive rounds. \\label{fig:b}]{\n      \\includegraphics[width=0.4\\textwidth,keepaspectratio]{lowerbound2}\n    }\n    \\caption{A snapshot of the dynamic network used in the hitting\n      game simulation.}\n    \\label{fig:lowerbound}\n  \\end{figure}\n\\fi \n  \n  \n  \n  \n\n  {\\smallskip\\noindent\\textbf{{The Target Network}: }}\n  For the following discussion, we set\n  $\\beta:=\\lfloor n/2\\rfloor -\\ell$ and $\\varphi:=cT\\log n$ to\n  denote the size of the selection set and the length of a phase of\n  the hitting game. We assume that we are given an instance of the\n  $(\\beta,\\ell,\\varphi)$-periodic hitting game. Based on how the\n  hitting game develops, we define an $n$-node dynamic target\n  network. We first describe the core (backbone) part of the\n  network. The nodes of the dynamic network are defined as\n  $V:=\\left\\{{0,\\dots,n-1}\\right\\}$. We assume that node $0$ is the source and we\n  identify the next $\\beta$ nodes (i.e., the set $[\\beta]$) with the\n  selection set $S$ of the hitting game. Throughout the execution,\n  node $0$ is connected to all nodes in $[\\beta]$ and it is not\n  connected to any other node. Throughout the simulation of the\n  broadcast algorithm, we use $I$ and $U$ to denote the set of\n  informed and uninformed nodes, respectively (a node is informed iff\n  it knows the broadcast message $\\mathcal{M}$). Clearly, as soon as\n  the source node broadcasts $\\mathcal{M}$, the set of informed nodes\n  is $I=\\left\\{{0,\\dots,\\beta}\\right\\}$ and we thus have\n  $U=\\left\\{{\\beta+1,\\dots,n-1}\\right\\}$. To simplify notation, we assume that\n  already at the start of the simulation, all nodes in\n  $\\left\\{{0,\\dots,\\beta}\\right\\}$ know $\\mathcal{M}$ and thus, we start round\n  $1$ with $I=\\left\\{{0,\\dots,\\beta}\\right\\}$ and $U =\n  \\left\\{{\\beta+1,\\dots,n-1}\\right\\}$.\n  We will assume that the number of uninformed nodes is always at\n  least $2\\ell$. As soon as it drops below, we stop carrying out the\n  simulation.\n\n  Throughout the simulation, we always assume that all nodes in $I$\n  form a clique and all nodes in $U$ form a clique. Apart from this,\n  the topology of the core network is determined by the target set of\n  the hitting game that we are trying to win by simulating\n  $\\mathcal{A}$. Assume that in some round $r$ of the hitting game,\n  the target set is $X(r)\\subset[\\beta]$. During the simulation, in\n  the backbone network we then use the nodes in $X(r)$ as bridge nodes\n  to connect the informed nodes to the uninformed nodes. Each node\n  $x\\in X(r)$ is connected to exactly one node $n(x) \\in U$ such that\n  each node in $U$ is connected to at most one node in $X(r)$. We\n  assume that whenever a new node is added to $X(r)$, its neighbor in\n  $U$ is chosen uniformly at random among all nodes in $U$ which are\n  not already connected to a bridge node in $X(r)$. Note that the\n  size of $X(r)$ is always at most $2\\ell$ and because we assumed\n  that $|U|\\geq 2\\ell$, we can always do such an assignment of bridge\n  nodes. Whenever the player makes a successful guess $x\\in X(r)$, we\n  move $x$ to the set of informed nodes $I$ and we connect $x$ with\n  all nodes in $I$ and disconnect it with all nodes in the remaining\n  set $U$ of uninformed nodes. Note that in the hitting game, after a\n  successful guess $x\\in X(r)$, $x$ is also removed from the target\n  set. The target network at any time is either the described core network \n  (backbone) or the complete graph $K_n$, for which the choice will be \n  explained later. \n \n  {\\smallskip\\noindent\\textbf{{The Simulation}: }}\n  The simulation of the broadcast algorithm $\\mathcal{A}$ is done in a\n  round-by-round manner. As the dynamic topology used\n  in the simulation depends on the target set of the hitting game, the\n  player $\\mathcal{P}$ of the hitting game does not know the dynamic\n  topology. We need to show that $\\mathcal{P}$ can still correctly\n  simulate the behavior of the broadcast algorithm.\n\n  As discussed above, we assume that at the beginning of the\n  simulation, the set of informed nodes is $I = \\left\\{{0,\\dots,\\beta}\\right\\}$.\n  Each round of $\\mathcal{A}$ is simulated by $\\mathcal{P}$ by making\n  at most $c\\ln n$ guesses in the hitting game. More specifically, a\n  given round $r$ of $\\mathcal{A}$ is simulated as follows.\n\n  First, note that because we assume that the adversary is\n  $1$-oblivious, $\\mathcal{P}$ can base the graph of round $r$ on the\n  states of all nodes at the beginning of the round. Hence, in\n  particular, the graph of round $r$ can depend on the probability\n  $p_v(r)$ with which each node $v\\in I$ transmits in the given\n  round. We define a round $r$ of $\\mathcal{A}$ to be \\emph{busy} if\n  $\\sum_{v\\in I} p_v(r) > \\frac{c}{2}\\ln n$, otherwise a round $r$ is\n  called \\emph{free}. In a busy round, the network graph is assumed to\n  be the complete graph $K_n$ and in a free round, the network graph\n  is assumed to be exactly the backbone graph as described above. We\n  assume that $\\mathcal{P}$ always knows the set of informed nodes and\n  because only informed nodes are allowed to transmit, $\\mathcal{P}$\n  can determine all messages which are transmitted in a round by\n  simulating the random decisions of the nodes in $I$. We say that the\n  simulated execution of $\\mathcal{A}$ is \\emph{bad} if either there\n  is a free round in which more than $c\\ln n$ nodes in $I$ decide to\n  transmit a message or if there is a busy round in which\n  exactly one node in $I$ decides to transmit. Otherwise, the\n  simulated execution is called \\emph{good}. If an execution\n  turns out to be bad, $\\mathcal{P}$ stops the simulation of\n  $\\mathcal{A}$ and simply continues making random guesses until it\n  wins the hitting game. Note that the expected time to win the\n  hitting game in this way is at most $O(\\beta^2/\\ell)$ as unless\n  there have been at least $\\Omega(\\ell)$ successes during the last\n  $\\phi=O(\\beta)$ rounds of the hitting game, the probability for a\n  successful guess is always $\\Omega(\\ell/\\beta)$. As long as the\n  number of simulated rounds $f(n)$ of $\\mathcal{A}$ is polynomial in\n  $n$ (and thus also in $\\beta$), for an arbitrary given constant\n  $d>0$ and sufficiently large constant $c$, the probability to\n  obtain a good execution is at least $1-1/n^d$. For sufficiently\n  large constant $c$, the expected time to win the hitting game is\n  therefore dominated by the expected time to win the game conditioned\n  on the event that the simulation of $\\mathcal{A}$ creates a good\n  execution. In the following, we therefore assume that the generated\n  broadcast execution is good. In the following, we also assume that\n  in the current phase (of length $\\varphi$) of the hitting game,\n  there are still at least $c\\ln n$ guesses that can be made. If this\n  is not the case, player $\\mathcal{P}$ first makes a sequence of\n  unsuccessful guesses to finish the phase ($\\mathcal{P}$ can for\n  example repeat the last guess it has made before to make sure it is\n  not successful). As we assumed that $T$ is sufficiently large, we\n  can assume that $\\varphi \\gg c\\ln n$ and therefore we only waste a\n  small fraction of all guesses by doing this.\n\n  Let us first assume that a simulated round $r$ of $\\mathcal{A}$ is\n  busy. As in this case, the communication network is a complete graph\n  and since we assume that in a good execution, no node gets isolated \n  (transmits alone),\n  every node receives silence and we therefore do not need to simulate\n  any receive behavior. In this case, we also do not make any guesses\n  in the hitting game. If round $r$ is free, the number of nodes that\n  transmit is between $0$ and $c\\ln n$. First recall that the nodes\n  in $I$ are fully connected and $\\mathcal{P}$ can therefore clearly\n  simulate their receive behavior. Further, let\n  $Z(r)\\subseteq [\\beta]$ be the set of nodes in $\\beta$ which are\n  transmitting in round $r$. For each $z\\in Z(r)$, player\n  $\\mathcal{P}$ uses $z$ as a guess in the hitting game. Note that\n  because there are at most $c\\ln n$ guesses to be made and because\n  we assumed that there are still at least $c\\ln n$ guesses in the\n  current phase of the hitting game, during making the guesses for all\n  $z\\in Z(r)$, we do not change the phase (and thus the target set) in\n  the hitting game. The node $z$ therefore is a bridge node connecting\n  $I$ to a node $n(z)\\in U$ in round $r$ of the broadcast algorithm if\n  and only if $z$ is a successful guess. In that case, $n(z)$ is a\n  uniformly random node in $U$. Hence, if $z$ is a successful guess,\n  $\\mathcal{P}$ chooses $n(z)$ uniformly at random in $U$ and it moves\n  $n(z)$ from $U$ to $I$. Note that $z$ is also removed from the\n  target set, and all connections of $n(z)$ to nodes in the remaining set $U$\n  are removed. Note also that by choosing $n(z)$ uniformly at random\n  in $U$, player $\\mathcal{P}$ does not only simulate the randomness\n  of the broadcast algorithm, but it also simulates the randomness of\n  the adversary. As long as the execution is good, in the given\n  dynamic network, the broadcast algorithm informs a new node if and\n  only if one of the bridge nodes $v$ transmits in a free round. For\n  any bridge node $v$ which transmits in a free round, the\n  corresponding uninformed bridge node $n(v)$ gets informed. The\n  described simulation therefore correctly simulates the broadcast\n  algorithm and it informs a new node if and only if it makes a\n  correct guess. As we only stop the simulation once the number of\n  uninformed nodes drops below $2\\ell$, we need at least\n  $n-(\\beta+1)-2\\ell+1 = \\lceil n/2\\rceil - \\ell \\geq \\beta$\n  successful guesses and thus win the game to stop the simulation.\n\n  It remains to show that the dynamic network used in the simulation\n  is $T$-interval connected. Every $\\varphi$ guesses and thus after at\n  least $\\varphi / (c\\ln n)$ rounds of the simulation, we add $\\ell$\n  new edges connecting some $v\\in I$ and $n(v)\\in U$. As long as $v$\n  is not used as a guess, such an edge remains for $2\\varphi$\n  guesses. As long as it is always guaranteed that one of these edges\n  survives the next $2\\varphi$ guesses (and thus at least\n  $2\\varphi / (c\\ln n)$ rounds), the network is at least\n  $T=\\varphi/(c\\ln n)$-interval connected. Hence, the network is not\n  guaranteed to be $T$-interval connected if there is a phase $j$ in\n  the hitting game such that all the elements of the set $Y_j$ added\n  to the target set at the beginning of phase $j$ are successfully\n  guessed by the end of phase $j+1$. Recall that in this case, the\n  player also wins the game and therefore the claim of the lemma\n  follows.\n\\end{proof}\n\nFor $k=1$, the statement of our main lower bound theorem (Theorem\n\\ref{thm:lowerbound}) now directly follows by combining Lemmas\n\\ref{le:gamelb} and \\ref{le:reduction}.\n\n\\begin{lemma}\\label{lemma:simplelower}\n  For every constant ${\\varepsilon}>0$ and every $T\\leq n^{1-{\\varepsilon}}$, the\n  expected time to solve single-message broadcast in $T$-interval\n  $1$-connected radio networks against a $1$-oblivious adversary is at\n  least $\\Omega\\big(\\frac{n^2}{\\log n}\\big)$.\n\\end{lemma}\n\\begin{proof}\n  For the sake of contradiction let us assume that $\\mathcal{A}$ can\n  solve broadcast for any $T$-interval 1-connected network in\n  $f(n)=o(n^2/\\ell \\log n)$ rounds, then based on\n  Lemma~\\ref{le:reduction} a player can solve any instance of the\n  $(n/2, \\ell , cT\\log n)$-periodic hitting game in $o(n^2/\\ell)$\n  rounds which contradicts Lemma~\\ref{le:gamelb} and this proves the\n  necessity of $\\Omega (n^2/\\ell \\log n)$ rounds to solve broadcast in\n  any $T$-interval $1$-connected network. Based on Lemma~\\ref{le:gamelb}, \n  by choosing sufficiently large constant value for $\\ell$ the claimed lower bound follows.\n\\end{proof}\n\n\nIn order to obtain Theorem \\ref{thm:lowerbound}, we need to generalize\nthe above result from $T$-interval $1$-connected networks to\n$T$-interval $k$-connected networks for arbitrary $k\\geq 1$. As shown\nbelow, this can be achieved by using a simple generic reduction.\n\n\\begin{theoremR}{thm:lowerbound}\n  For every constant ${\\varepsilon}>0$ and every $T\\leq (n/k)^{1-{\\varepsilon}}$, the\n  expected time to solve single-message broadcast in $T$-interval\n  $k$-connected radio networks against a $1$-oblivious adversary is at\n  least $\\Omega\\big(\\frac{n^2}{k^2\\log n}\\big)$.\n\\end{theoremR}\n\\begin{proof}\n  Given an $n$-node graph $G$, let $H_k(G)$ be the graph which is\n  obtained by replacing each node of $G$ by a clique of size $k$ and\n  by replacing each edge $\\left\\{{u,v}\\right\\}$ of $G$ by a complete bipartite\n  subgraph $K_{k,k}$ between the two $k$-cliques representing $u$ and\n  $v$. If $G$ is connected, in order to disconnect $H_k(G)$ by\n  deleting some nodes, we need to completely remove at least one of\n  the $k$-cliques representing the nodes of $G$. Hence, if $G$ is\n  connected, $H_k(G)$ is $k$-vertex connected. It follows in the same\n  way that if we have a dynamic graph $G_1,\\dots,G_t$ which is\n  $T$-interval $1$-connected, the dynamic graph\n  $H_k(G_1),\\dots,H_k(G_t)$ is $T$-interval $k$-connected. Even if all\n  nodes of such a graph $H_k(G_i)$ know to which of the cliques\n  representing the nodes of $G_i$ they belong, solving broadcast in\n  the dynamic graph $H_k(G_1),\\dots,H_k(G_t)$ cannot be easier than\n  solving broadcast in $G_1,\\dots,G_t$. If each graph $H_k(G_i)$ has\n  $N$ nodes, the graphs $G_i$ have $N/k$ nodes and the\n  claimed lower bound directly follows by applying Lemma\n  \\ref{lemma:simplelower}.\n\\end{proof}\n\n\n\n\n\n\n\n\n\n\n\n\n\\section{Impossibility of Broadcast Against a \\boldmath$0$-Oblivious\n  Adversary}\\label{sec:impossibility}\n\nIn this section, we prove the impossibility result that we stated in\nSection \\ref{sec:contributions}. We show that unless $T$ is almost\nequal to $n$, the global broadcast problem cannot be solved in the\npresence of a $0$-oblivious adversary, even for very large vertex\nconnectivity $k$.\n\n\\begin{theoremR}{thm:impossibility}\n  For any $k\\geq 1$ and any $T<n-k$, it is not possible to solve\n  single-message broadcast in $T$-interval $k$-connected radio\n  networks against a $0$-oblivious adversary.\n\\end{theoremR}\n\\begin{proof}\n  We show that a strongly adaptive adversary (i.e., a $0$-oblivious\n  adversary) can apply a simple strategy to prevent any algorithm from\n  solving the global broadcast problem in a $T$-interval $k$-connected\n  network, where $T<n-k$.  Consider the following adversary strategy\n  to determine the sequence of network topologies.\n\t\t\n  The adversary partitions the $n$ nodes into two distinct sets $A$\n  and $B$, such that $A$ includes the source node and is of size\n  $T+k$, and $B$ is of size $n-(T+k)$.  Since $T<n-k$, there exists at\n  least one node in $B$. Note that at the beginning, no node in $B$\n  knows the broadcast message $\\mathcal{M}$ (or anything about\n  $\\mathcal{M}$). Because the adversary is $0$-oblivious, in each\n  round $r$, it can determine the graph after all nodes have made\n  their random decisions. It can therefore determine the graph based\n  on which nodes transmit.\n\n  If in a round $r$, either $0$ nodes transmit or at least $2$ nodes\n  transmit, the network graph is chosen to be the complete graph. Note\n  that in such a round, there is either silence or all nodes\n  experience a collision. In both cases, all listening nodes receive\n  $\\bot$ and therefore no node in $B$ can learn something about\n  $\\mathcal{M}$.\n\n  If in a round, exactly one node $v$ in $A$ transmits, the network\n  graph consists of all edges except the edges connecting $v$ to nodes\n  in $B$. Like this, also in this case all nodes in $B$ receive $\\bot$\n  and they therefore cannot learn something about $\\mathcal{M}$.\n\n  It remains to show that the given dynamic graph is $T$-interval\n  $k$-connected. During the whole execution, $A$ is a clique\n  consisting of $T+k$ nodes. Hence, $A$ is a $T$-interval\n  $k$-connected network. To show that whole $n$-node network is also a\n  $T$-interval $k$-connected network, it is sufficient to show that\n  for any node $v\\in B$, in any $T$ consecutive rounds, there exist at\n  least $k$ fixed edges from $v$ to the nodes in $A$. To do so, fix\n  some arbitrary time interval of $T$ consecutive rounds. During the\n  time interval, there are at most $T$ rounds in which exactly one\n  node transmits. Therefore, because $|A|=T+k$, there are at least $k$\n  nodes in $A$ which do not transmit alone during the given time\n  interval. The edges from these $k$ nodes to all nodes in $B$ are\n  therefore available throughout the $T$ rounds. Therefore throughout\n  any interval of $T$ rounds, each node in $B$ is connected to a set\n  of at least $k$ nodes in $A$. Consequently, the constructed dynamic\n  network is $T$-interval $k$-connected.\n\\end{proof}\n\nNotice that at least for store-and-forward algorithms even collision\ndetection does not help to overcome the impossibility result. The\n$0$-oblivious adaptive adversary knows the random choices of the\nalgorithm in the current round and it can thus prevent any\nprogress.\n\nWe also note that the above result turns out to be tight in the\nfollowing sense. If $T \\geq n-k$, global broadcast can be solved. If\nin each round, every node independently tries to broadcast with some\nprobability (say $1/n$), if $T + k \\geq n$ there is a non-zero\nprobability (it may be very small) that $T$ different nodes are\nisolated in $T$ consecutive rounds. Consider an interval of $T$ rounds\nand let $I$ and $U$ be the sets of informed and uninformed nodes at\nthe beginning of this interval. From $T$-interval $k$-connectivity, we\nget that there are at least $k$ nodes in $I$ which are stably\nconnected to nodes in $I$ throughout the $T$ rounds. Before broadcast\nis solved, we have $|I|\\leq n-1$ and if in the $T$ rounds, $T$\ndifferent nodes in $I$ are isolated, at least one of the $k$ nodes\nstably connected to $U$ gets isolated and we can therefore make\nprogress. Note that for $T=n-k$, the probability for making progress\nmight be exponentially small, resulting in an exponential running time\nfor the broadcast problem. Note however also that once\n$T\\geq cn\\log n$ for a sufficiently large constant $c$, it is not hard\nto show that broadcast can be solved in polynomial time against a\n$0$-oblivious adversary and if $T$ is larger than $cn\\log^2n$ for a\nsufficiently large constant $c$, it is shown in \\cite{dualgraph}, that\nit can be solved in time $O\\left(n\\log^2 n\\right)$.\n\n \n\n\n\\hide{Anisur: \n\n*** {\\color{red}\\bf [TODO: { to be included in the end of Subsection 4.1}]} ***\n\n\nWe can easily generalize the above result into the case of $k$ connected networks. In particular, we show an $\\Omega \\left(n^2/k^2\\tau\\log n\\right)$ lower bound for the global broadcast in $T$-interval $k$-connected radio networks against a $\\tau$-oblivious adversary for $\\tau \\geq 1$.      \n\n\\begin{theorem}\\label{thm:lowerbound-k-connect}\nThere exists a $T$ interval $k$ connected radio network such that any randomized algorithm requires at least $\\Omega \\left(\\frac{n^2}{k^2\\tau\\log n}\\right)$ time to solve global broadcast against a $\\tau$-oblivious adversary, where $1 \\leq T \\leq \\left(\\frac{n}{k}\\right)^{1-{\\varepsilon}}$ for some constant ${\\varepsilon}$. \n\\end{theorem}\n\\begin{proof}[Proof sketch]\nGiven a $n$-node graph $G$, we can always construct a new graph of $nk$ nodes replacing each node of $G$ by a clique of size $k$. Assume the above $\\tau$-dual $T$-interval $1$-connected radio network of $n/k$ nodes. Then replace every node in this graph by a clique of size $k$ and for each edge, add complete bipartite connection between two cliques. See the Figure~\\ref{fig:fragment-graph}. Clearly this new graph has $n$ nodes in total and it is $k$ connected. Hence the $\\tau$-dual $T$-interval $1$-connected graph of size $n$ is equivalent (i.e., has similar structure) to a $\\tau$-dual $T$-interval $k$-connected graph of size $n/k$. Therefore, we can apply the same reduction from the $(\\alpha,\\beta,l,\\varphi)$-periodic hitting game to get a lower bound  $\\Omega \\left(\\frac{n^2}{k^2\\tau\\log n}\\right)$ of the global broadcast problem in $\\tau$-dual $T$-interval $k$-connected radio networks.  \n\\end{proof}\n\nThe impossibility result is also valid even with the collision detection. The strongly adaptive adversary knows the random choices of the algorithm in the current round and  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\bibliographystyle{abbrv}\n\\bibliography{references}\n\n\n\n", "itemtype": "equation", "pos": 50240, "prevtext": "\nStarting at any time $t$, let the random variable $R$ count the number\nof rounds until the first successful round after round $t$. We have\n", "index": 45, "text": "\n\\[\n{\\operatorname{\\mathbb{E}}}[R_1] \\geq \\frac{\\beta -2\\varphi +1}{2\\ell}\n\\stackrel{(\\varphi\\leq\\beta/3)}{\\geq}\n\\frac{\\frac{1}{3}\\beta + 1}{2\\ell}.\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex18.m1\" class=\"ltx_Math\" alttext=\"{\\operatorname{\\mathbb{E}}}[R_{1}]\\geq\\frac{\\beta-2\\varphi+1}{2\\ell}\\stackrel{%&#10;(\\varphi\\leq\\beta/3)}{\\geq}\\frac{\\frac{1}{3}\\beta+1}{2\\ell}.\" display=\"block\"><mrow><mrow><mrow><mo>\ud835\udd3c</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">[</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy=\"false\">]</mo></mrow></mrow><mo>\u2265</mo><mfrac><mrow><mrow><mi>\u03b2</mi><mo>-</mo><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c6</mi></mrow></mrow><mo>+</mo><mn>1</mn></mrow><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow></mfrac><mover><mo movablelimits=\"false\">\u2265</mo><mrow><mo maxsize=\"142%\" minsize=\"142%\">(</mo><mrow><mi mathsize=\"142%\">\u03c6</mi><mo mathsize=\"142%\" stretchy=\"false\">\u2264</mo><mrow><mi mathsize=\"142%\">\u03b2</mi><mo mathsize=\"142%\" stretchy=\"false\">/</mo><mn mathsize=\"142%\">3</mn></mrow></mrow><mo maxsize=\"142%\" minsize=\"142%\">)</mo></mrow></mover><mfrac><mrow><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>\u2062</mo><mi>\u03b2</mi></mrow><mo>+</mo><mn>1</mn></mrow><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u2113</mi></mrow></mfrac></mrow><mo>.</mo></mrow></math>", "type": "latex"}]