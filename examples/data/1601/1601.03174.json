[{"file": "1601.03174.tex", "nexttext": "\nLet $k'=k(k-1)/2$. We claim that $(G,k)$ is a yes-instance of \\textsc{Clique} if and only if $(G,\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\nIf $K$ is a clique of size $k$ in $G$, then the graph $G'$ obtained  from $G$ by the deletion of the $k'=k(k-1)/2$ edges of $D=E(G[K])$ has the degree sequence $\\sigma$. Assume that \n$(U,D,A)$ is a solution of $(G,\\sigma,k)$. Clearly, $U=\\emptyset$ even if ${\\textrm{vd}}\\in R$, because $\\sigma$ contains $n$ elements. Since $\\sum_{i=1}^n\\sigma_i=dn-k(k-1)$, we have that $A=\\emptyset$. It remains to notice that because in $G-D$ $k$ vertices have degree $d-(k-1)$, $G[D]$ is a compete graph with $k$ vertices, i.e., $G$ contains a clique of size $k$.\n\nSuppose that ${\\textrm{ea}}\\in S$. We reduce \n\\textsc{Independent Set} problem that asks for a graph $G$ and a positive integer $k$, whether $G$ has an independent set of size $k$. Again, \\textsc{Independent Set}  is {\\ensuremath{{\\operatorname{NP}}}}-complete~\\cite{GareyJ79} and {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $k$~\\cite{Cai08} even if the input graph restricted to be  regular. Let $(G,k)$ be an instance of \\textsc{Independent Set}, where $G$ is an $n$-vertex $d$-regular graph and $k\\leq n$. Consider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_n)$, where\n\n", "itemtype": "equation", "pos": 18342, "prevtext": "\n\n\n\n\\title{Graph Editing to a Given Degree Sequence\\thanks{The research leading to these results has received funding from the European Research Council under the European Union's Seventh Framework Programme (FP/2007-2013)/ERC Grant Agreement n.~267959 and by the EPSRC Grant EP/K022660/1.}}\n\n\n\\author{Petr A. Golovach\\inst{1}\n\\and\nGeorge B. Mertzios\\inst{2}\n}\n\n\\institute{Department of Informatics, University of Bergen, Norway.\n\\and\nSchool of Engineering and Computing Sciences, Durham University, UK.\n}\n\n\n\\maketitle\n\n\n\n\\begin{abstract}\n We investigate the parameterized complexity of  the graph editing problem called \\textsc{Editing to a Graph with a Given Degree Sequence}, where the aim is to obtain a graph  with a given degree sequence $\\sigma$ by at most $k$ vertex or edge deletions and edge additions. We show that the problem is {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $k$ for any combination of the allowed editing operations. From the positive side, we show that the problem can be solved in time $2^{O(k(\\Delta+k)^2)}n^2\\log n$ for $n$-vertex graphs, where $\\Delta=\\max\\sigma$, i.e., the problem is {\\ensuremath{{\\operatorname{FPT}}}}{} when parameterized by $k+\\Delta$.  We also show that \\textsc{Editing to a Graph with a Given Degree Sequence} has a polynomial kernel when parameterized by $k+\\Delta$ if  only edge additions are allowed, and  there is no polynomial kernel unless  ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$ for all other combinations of allowed editing operations.\n\\end{abstract}\n\n\n\\section{Introduction}\nThe aim of graph editing (or graph modification) problems is to modify a given graph  \nby applying a bounded number of permitted operations in order to satisfy a certain\nproperty. Typically, vertex deletions, edge deletions and edge additions are the considered as the permitted editing operations, but in some cases other operations like edge contractions and vertex additions are also permitted.\n\nWe are interested in graph editing problems, where the aim is to obtain a graph satisfying some given degree constraints. These problems usually turn out to be {\\ensuremath{{\\operatorname{NP}}}}-hard (with rare exceptions). Hence, we are interested in the parameterized complexity of such problems. Before we state our results we briefly discuss the known related (parameterized) complexity results.\n\n\\medskip\n\\noindent\n{\\bf Related work.} \nThe investigation of the parameterized complexity of such problems was initiated by \nMoser and Thilikos in~\\cite{MoserT09} and Mathieson and Szeider~\\cite{MathiesonS12}. \nIn particular, Mathieson and Szeider~\\cite{MathiesonS12} considered the \\textsc{Degree Constraint Editing} problem that asks for a given graph $G$, nonnegative integers $d$ and $k$, and a function $\\delta\\colon V(G)\\rightarrow 2^{\\{0,\\ldots,d\\}}$, whether $G$ can be modified into a graph $G'$ such\nthat $d_{G'}(v)\\in \\delta(v)$ for each $v\\in V(G')$, by using at most $k$ editing operations. They \nclassified the (parameterized) complexity of the problem depending on the set of allowed editing operations.\nIn particular, they proved that if only edge deletions and additions are permitted, then the problem can be solved in polynomial time for the case where the set of feasible degrees $|\\delta(v)|=1$ for $v\\in V(G)$. \nWithout this restriction on the size of the sets of feasible degrees, the problem is {\\ensuremath{{\\operatorname{NP}}}}-hard even on subcubic planar graphs whenever only edge deletions are allowed~\\cite{Cornuejols88} and whenever only edge additions are allowed~\\cite{FroeseNN14}.\nIf vertex deletions can be used, then the problem becomes \n {\\ensuremath{{\\operatorname{NP}}}}-complete and {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard with parameter~$k$, even if the sets of feasible degrees have size oner~\\cite{MathiesonS12}. \n Mathieson and Szeider~\\cite{MathiesonS12} showed that \\textsc{Degree Constraint Editing} is  {\\ensuremath{{\\operatorname{FPT}}}}\\ when parameterized by $d+k$. They also proved that the problem has a polynomial kernel in  the case where only vertex and edge deletions are allowed and the sets of feasible degrees have size one. Further kernelization results were obtained by Froese, Nichterlein and Niedermeier~\\cite{FroeseNN14}. In particular, they proved that the problem with the parameter $d$ admits a polynomial kernel if only edge additions are permitted.  They also complemented these results by showing that there is no polynomial kernel \nunless ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$ if only vertex or edge deletions are allowed. Golovach proved in~\\cite{Golovach15} that, unless ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$, the problem does not admit a polynomial kernel when parameterized by $d+k$ if vertex deletion and edge addition are in the list of operations, even if the sets of feasible degrees have size one. \nThe case where the input graph is planar was considered by Dabrowski et al. in~\\cite{DabrowskiGHPT15}.\nGolovach~\\cite{Golovach14a} introduced a variant of \\textsc{Degree Constraint Editing} in which, besides the degree restrictions, it is required that the graph obtained by editing should be connected. This variant for planar input graphs was also considered in~\\cite{DabrowskiGHPT15}.\n\nFroese, Nichterlein and Niedermeier~\\cite{FroeseNN14} also considered the \\textsc{$\\Pi$-Degree Sequence Completion} problem which, \ngiven a graph $G$, a nonnegative integer $k$, and a property $\\Pi$ of graph degree sequences, \nasks whether it is possible to obtain a graph $G\\rq{}$ from $G$ by adding at most $k$ edges such that the degree sequence of $G\\rq{}$ satisfies $\\Pi$. \nThey gave some conditions when the problem is {\\ensuremath{{\\operatorname{FPT}}}}{}/admits a polynomial kernel when parameterized by $k$ and the maximum degree of $G$.\nThere are numerous results (see, e.g.,~\\cite{BoeschST77,CaiY11,CyganMPPS14,DGHP14}) about the graph editing problem, where the aim is to obtain a (connected) graph whose vertices satisfy some parity restrictions on their degree. In particular, if the obtained graph is required to be a connected graph with vertices of even degree, we obtain the classical \\textsc{Editing to Eulerian Graph} problem (see.~\\cite{BoeschST77,DGHP14}). \n\nAnother variant of graph editing with degree restrictions is the \\textsc{Degree Anonymization} problem, motivated by some privacy and social networks applications. A graph $G$ is \\emph{$h$-anonymous} for a positive integer $h$ if for any $v\\in V(G)$, there is at least $h-1$ other vertices of the same degree. \\textsc{Degree Anonymization} asks, given a graph $G$, a nonnegative $h$, and a positive integer $k$, whether it is possible to obtain an $h$-anonymous graph by at most $k$ editing operations. The investigation of the parameterized complexity of \\textsc{Degree Anonymization} was initiated by Hartung et al.~\\cite{HartungNNS15} and Bredereck et al.~\\cite{BredereckHNW13} (see also~\\cite{BredereckFHNNT14,HartungT15}). In particular,  Hartung et al.~\\cite{HartungNNS15} considered the case where only edge additions are allowed. They proved that the problem is {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $k$, but it becomes {\\ensuremath{{\\operatorname{FPT}}}}{} and has a polynomial kernel when parameterized by the maximum degree $\\Delta$ of an input graph. Bredereck et al. in~\\cite{BredereckHNW13} considered vertex deletions. They proved that the problem is {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $h+k$, but it is {\\ensuremath{{\\operatorname{FPT}}}}{} when parameterized by $\\Delta+h$ or by $\\Delta+k$. Also the problem was investigated for the cases when vertex additions~\\cite{BredereckFHNNT14} and edge contractions~\\cite{HartungT15} are the editing operations.\n\n\\medskip\n\\noindent\n{\\bf Our results.}\nRecall that the \\emph{degree sequence} of a graph is the nonincreasing sequence of its vertex degrees. \nWe consider the graph editing problem, where the aim is to obtain a graph with a given \\emph{degree sequence} by using the operations \\emph{vertex deletion}, \\emph{edge deletion}, and \\emph{edge addition}, \ndenoted by ${\\textrm{vd}}$, ${\\textrm{ed}}$, and ${\\textrm{ea}}$, respectively. Formally, the problem is stated as follows. Let $S\\subseteq\\{{\\textrm{vd}},{\\textrm{ed}},{\\textrm{ea}}\\}$.\n\n\\begin{center}\n\\begin{boxedminipage}{.99\\textwidth}\n\\textsc{Editing to a Graph with a Given Degree Sequence}\\\\\n\\begin{tabular}{ r l }\n\\textit{~~Instance:} & A graph $G$, a nondecreasing sequence of nonnegative integers\\\\\n& $\\sigma$ and a nonnegative integer $k$.\\\\\n\\textit{Question:} & Is it possible to obtain a graph $G'$ with the degree sequence $\\sigma$\\\\\n& from $G$  by at most $k$ operations from $S$?\\\\\n\\end{tabular}\n\\end{boxedminipage}\n\\end{center}\n\nIt is worth highlighting here the difference between this problem and the \\textsc{Editing to a Graph of Given Degrees} problem studied in~\\cite{Golovach15}. \nIn~\\cite{Golovach15} a function $\\delta:V(G)\\rightarrow \\{1,\\ldots,d\\}$ is given along with the input and, in the target graph~$G'$, every vertex~$v$ is required to have the \\emph{specific} degree~$\\delta(v)$. \nIn contrast, in the \\textsc{Editing to a Graph with a Given Degree Sequence}, only a degree sequence is given with the input and the requirement is that the target graph~$G'$ has this degree sequence, \nwithout specifying which specific vertex has which specific degree. \nTo some extend, this problem can be seen as a generalization of the \\textsc{Degree Anonymization} problem~\\cite{HartungNNS15,BredereckHNW13,BredereckFHNNT14,HartungT15}, \nas one can specify (as a special case) the target degree sequence in such a way that every degree appears at least $h$ times in it. \n\n\nIn practical applications with respect to privacy and social networks, we might want to appropriately ``smoothen'' the degree sequence of a given graph in such a way that \nit becomes difficult to distinguish between two vertices with (initially) similar degrees. \nIn such a setting, it does not seem very natural to specify in advance a \\emph{specific} desired degree to every \\emph{specific} vertex of the target graph. \nFurthermore, for anonymization purposes in the case of a social network, where the degree distribution often follows a so-called power law distribution~\\cite{Barabasi99}, \nit seems more natural to identify a smaller number of vertices having all the same ``high'' degree, and a greater number of vertices having all the same ``small'' degree, \nin contrast to the more modest $h$-anonymization requirement where \\emph{every} different degree must be shared among at least $h$ identified vertices in the target graph.\n\n\n\nIn Section~\\ref{sec:defs}, we observe that  for any nonempty $S\\subseteq\\{{\\textrm{vd}},{\\textrm{ed}},{\\textrm{ea}}\\}$, \n\\textsc{Editing to a Graph with a Given Degree Sequence} is {\\ensuremath{{\\operatorname{NP}}}}-complete and  {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $k$. Therefore, we consider a stronger parameterization by $k+\\Delta$, where $\\Delta=\\max\\sigma$. In Section~\\ref{sec:FPT}, we show that \\textsc{Editing to a Graph with a Given Degree Sequence} is {\\ensuremath{{\\operatorname{FPT}}}}\\ when parameterized by $k+\\Delta$. In fact, we obtain this result for the more general variant of the problem, where we ask whether we can obtain a graph $G\\rq{}$ with the degree sequence $\\sigma$ from an input graph $G$ by \nat most $k_{vd}$ vertex deletions, $k_{ed}$ edge deletions and $k_{ea}$ edge  additions. We show that the problem can be solved in time $2^{O(k(\\Delta+k)^2)}n^2\\log n$ for $n$-vertex graphs, where $k=k_{vd}+k_{ed}+k_{ea}$. The algorithm uses  the random separation techniques introduced by Cai, Chan and Chan~\\cite{CaiCC06} (see also~\\cite{AlonYZ95}). First, we construct a true biased Monte Carlo algorithm and then explain how it can be derandomized. \nIn Section~\\ref{sec:kernel}, we show that \\textsc{Editing to a Graph with a Given Degree Sequence} has a polynomial kernel when parameterized by $k+\\Delta$ if $S=\\{ea\\}$, but for all other nonempty $S\\subseteq \\{vd,ed,ea\\}$, there is no polynomial kernel unless  ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$.\n\n\n\\section{Basic definitions and preliminaries}\\label{sec:defs}\n\n\\noindent\n{\\bf Graphs.}\nWe consider only finite undirected graphs without loops or multiple\nedges. The vertex set of a graph $G$ is denoted by $V(G)$ and  \nthe edge set  is denoted by $E(G)$.\n\nFor a set of vertices $U\\subseteq V(G)$,\n$G[U]$ denotes the subgraph of $G$ induced by $U$, and by $G-U$ we denote the graph obtained from $G$ by the removal of all the vertices of $U$, i.e., the subgraph of $G$ induced by $V(G)\\setminus U$. If $U=\\{u\\}$, we write $G-u$ instead of $G-\\{u\\}$. \nRespectively, for a set of edges $L\\subseteq E(G)$, $G[L]$ is a subgraph of $G$ induced by $L$, i.e, the vertex set of $G[L]$ is the set of vert ices of $G$ incident to the edges of $L$, and $L$ is the set of edges of $G[L]$.  \nFor a nonempty set $U$, $\\binom{U}{2}$ is the set of unordered pairs of elements of $U$.\nFor a set of edges $L$,\nby $G-L$ we denote the graph obtained from $G$ by the removal of all the edges of $L$.\nRespectively, for $L\\subseteq \\binom{V(G)}{2}$, $G+L$ is the graph obtained from $G$ by the addition of the edges that are elements of $L$.\nIf $L=\\{a\\}$, then for simplicity, we write $G-a$ or $G+a$.\n\n\nFor a vertex $v$, we denote by $N_G(v)$ its\n\\emph{(open) neighborhood}, that is, the set of vertices which are adjacent to $v$, and for a set $U\\subseteq V(G)$, $N_G(U)=(\\cup_{v\\in U}N_G(v))\\setminus U$.\nThe \\emph{closed neighborhood} $N_G[v]=N_G(v)\\cup \\{v\\}$, and for a positive integer $r$, $N_G^r[v]$ is the set of vertices at distance at most $r$ from $v$. \nFor a set $U\\subseteq V(G)$ and a positive integer $r$, $N_G^r[U]=\\cup_{v\\in U}N_G^r[v]$.\nThe \\emph{degree} of a vertex $v$ is denoted by $d_G(v)=|N_G(v)|$. The \\emph{maximum degree} $\\Delta(G)=\\max\\{d_G(v)\\mid v\\in V(G)\\}$.\n\nFor a graph $G$, we denote by $\\sigma(G)$ its degree sequence. Notice that $\\sigma(G)$ can be represented \nby the vector $\\delta(G)=(\\delta_0,\\ldots,\\delta_{\\Delta(G)})$, where \n$\\delta_i=|\\{v\\in V(G)\\mid d_G(v)=i\\}|$ for $i\\in\\{0,\\ldots,\\Delta(G)\\}$.\nWe call $\\delta(G)$ the \\emph{degree vector} of $G$. \nFor a sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_n)$, $\\delta(\\sigma)=(\\delta_0,\\ldots,\\delta_r)$,\nwhere $r=\\max\\sigma$ and $\\delta_i=|\\{\\sigma_j\\mid \\sigma_j=i\\}|$ for $i\\in\\{0,\\ldots,r\\}$.\nClearly, $\\delta(G)=\\delta(\\sigma(G))$, and\nthe degree vector can be easily constructed from the degree sequence and vice versa.\n\nSlightly abusing notation, we write for two vectors of nonnegative integers, that $(\\delta_0,\\ldots,\\delta_r)=(\\delta_0',\\ldots,\\delta_{r'}')$ for $r\\leq r'$ if $\\delta_i=\\delta_i'$ for $i\\in\\{0,\\ldots,r\\}$ and\n$\\delta_i'=0$ for $i\\in\\{r+1,\\ldots,r'\\}$.\n\n\\medskip\n\\noindent\n{\\bf Parameterized Complexity.}\nParameterized complexity is a two dimensional framework\nfor studying the computational complexity of a problem. One dimension is the input size\n$n$ and another one is a parameter $k$. It is said that a problem is \\emph{fixed parameter tractable} (or {\\ensuremath{{\\operatorname{FPT}}}}), if it can be solved in time $f(k)\\cdot n^{O(1)}$ for some function $f$.\nA \\emph{kernelization} for a parameterized problem is a polynomial algorithm that maps each instance $(x,k)$ with the input $x$ and the parameter $k$ to an instance $(x',k')$ such that i) $(x,k)$ is a YES-instance if and only if $(x',k')$ is a YES-instance of the problem, and ii) $|x'|+k'$ is bounded by $f(k)$ for a computable function $f$. \nThe output $(x',k')$ is called a \\emph{kernel}. The function $f$ is said to be a \\emph{size} of a kernel. Respectively, a kernel is \\emph{polynomial} if $f$ is polynomial. \nA parameterized problem is {\\ensuremath{{\\operatorname{FPT}}}}{} if and only if it has a kernel, but it is widely believed that not all {\\ensuremath{{\\operatorname{FPT}}}}{} problems have polynomial kernels. In particular, Bodlaender et al.~\\cite{BodlaenderJK14} introduced techniques that allow to show that a parameterized problem has no polynomial kernel unless  ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$.\nWe refer to the recent books of Cygan et al.~\\cite{CyganFKLMPPS15} and  Downey and Fellows~\\cite{DowneyF13} for  detailed introductions  to parameterized complexity. \n\n\\medskip\n\\noindent\n{\\bf Solutions of \\textsc{Editing to a Graph with a Given Degree Sequence}.}\nLet $(G,\\sigma,k)$ be an instance of \\textsc{Editing to a Graph of Given Degrees}.\nLet $U\\subset V(G)$, $D\\subseteq E(G-U)$ and $A\\subseteq \\binom{V(G)\\setminus U}{2}$.\n We say that $(U,D,A)$ is a \\emph{solution} for $(G,\\delta,d,k)$, if $|U|+|D|+|A|\\leq k$, and the graph $G'=G-U-D+A$ has the degree sequence $\\sigma$.  \nWe also say that $G'$ is obtained by editing with respect to $(U,D,A)$. \n If ${\\textrm{vd}}$, ${\\textrm{ed}}$ or ${\\textrm{ea}}$ is not in $S$, then it is assumed that $U=\\emptyset$, $D=\\emptyset$ or $A=\\emptyset$ respectively. If $S=\\{{\\textrm{ed}}\\}$, then instead of $(\\emptyset,\\emptyset,A)$ we simply write $A$. \n\n\nWe conclude this section by showing that \\textsc{Editing to a Graph with a Given Degree Sequence} is hard when parameterized by $k$.\n\n\\begin{theorem}\\label{thm:W-hard}\nFor any nonempty $S\\subseteq\\{{\\textrm{vd}},{\\textrm{ed}},{\\textrm{ea}}\\}$, \n\\textsc{Editing to a Graph with a Given Degree Sequence} is {\\ensuremath{{\\operatorname{NP}}}}-complete and  {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $k$.\n\\end{theorem}\n\n\\begin{proof}\nSuppose that ${\\textrm{ed}}\\in S$.\nWe reduce the \\textsc{Clique} problem that asks for a graph $G$ and a positive integer $k$, whether $G$ has a clique of size $k$. This problem is known to be {\\ensuremath{{\\operatorname{NP}}}}-complete~\\cite{GareyJ79} and {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $k$~\\cite{Cai08} even if the input graph restricted to be  regular. Let $(G,k)$ be an instance of \\textsc{Clique}, where $G$ is an $n$-vertex $d$-regular graph, $d\\geq k-1$. Consider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_n)$, where\n\n", "index": 1, "text": "$$\n\\sigma_i=\n\\begin{cases}\nd&\\mbox{if }1\\leq i\\leq n-k,\\\\\nd-(k-1)&\\mbox{if } n-k+1\\leq i\\leq n.\n\\end{cases}\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\sigma_{i}=\\begin{cases}d&amp;\\mbox{if }1\\leq i\\leq n-k,\\\\&#10;d-(k-1)&amp;\\mbox{if }n-k+1\\leq i\\leq n.\\end{cases}\" display=\"block\"><mrow><msub><mi>\u03c3</mi><mi>i</mi></msub><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mi>d</mi></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><mi>d</mi><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>n</mi></mrow><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>n</mi></mrow><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03174.tex", "nexttext": "\nLet $k'=k(k-1)/2$. Similarly to the case ${\\textrm{ed}}\\in S$, we obtain that  $(G,k)$ is a yes-instance of \\textsc{Independent Set} if and only if $(G,\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\n\nFinally, assume that $S=\\{{\\textrm{vd}}\\}$. We again reduce  the \\textsc{Clique} problem for regular graphs. Let  $(G,k)$ be an instance of \\textsc{Clique}, where $G$ is an $n$-vertex $d$-regular graph with $m$ edges.\n We assume without loss of generality that  $d-(k-1)\\geq 3$. The graph $G'$ is constructed from $G$ by subdividing each edge of $G$, i.e., for each $xy\\in E(G)$, we construct a new vertex $u$ and replace $xy$ by $xu$ and $yu$. Let $k'=k(k-1)/2$.\nConsider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_p)$, where $p=n+m-k'$ and \n\n", "itemtype": "equation", "pos": 19790, "prevtext": "\nLet $k'=k(k-1)/2$. We claim that $(G,k)$ is a yes-instance of \\textsc{Clique} if and only if $(G,\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\nIf $K$ is a clique of size $k$ in $G$, then the graph $G'$ obtained  from $G$ by the deletion of the $k'=k(k-1)/2$ edges of $D=E(G[K])$ has the degree sequence $\\sigma$. Assume that \n$(U,D,A)$ is a solution of $(G,\\sigma,k)$. Clearly, $U=\\emptyset$ even if ${\\textrm{vd}}\\in R$, because $\\sigma$ contains $n$ elements. Since $\\sum_{i=1}^n\\sigma_i=dn-k(k-1)$, we have that $A=\\emptyset$. It remains to notice that because in $G-D$ $k$ vertices have degree $d-(k-1)$, $G[D]$ is a compete graph with $k$ vertices, i.e., $G$ contains a clique of size $k$.\n\nSuppose that ${\\textrm{ea}}\\in S$. We reduce \n\\textsc{Independent Set} problem that asks for a graph $G$ and a positive integer $k$, whether $G$ has an independent set of size $k$. Again, \\textsc{Independent Set}  is {\\ensuremath{{\\operatorname{NP}}}}-complete~\\cite{GareyJ79} and {\\ensuremath{{\\operatorname{W}}[{1}]}}-hard when parameterized by $k$~\\cite{Cai08} even if the input graph restricted to be  regular. Let $(G,k)$ be an instance of \\textsc{Independent Set}, where $G$ is an $n$-vertex $d$-regular graph and $k\\leq n$. Consider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_n)$, where\n\n", "index": 3, "text": "$$\n\\sigma_i=\n\\begin{cases}\nd+(k-1)&\\mbox{if } 1\\leq i\\leq k,\\\\\nd&\\mbox{if } k+1\\leq i\\leq n.\n\\end{cases}\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\sigma_{i}=\\begin{cases}d+(k-1)&amp;\\mbox{if }1\\leq i\\leq k,\\\\&#10;d&amp;\\mbox{if }k+1\\leq i\\leq n.\\end{cases}\" display=\"block\"><mrow><msub><mi>\u03c3</mi><mi>i</mi></msub><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mrow><mi>d</mi><mo>+</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>k</mi></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mi>d</mi></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>n</mi></mrow><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03174.tex", "nexttext": "\nAgain similarly to the case ${\\textrm{ed}}\\in S$, we obtain that  $(G,k)$ is a yes-instance of \\textsc{Clique} if and only if $(G',\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\\qed\n\\end{proof}\n\n\n\n\n\\section{{\\ensuremath{{\\operatorname{FPT}}}}-algorithm for Editing to a Graph with a Given Degree Sequence}\\label{sec:FPT}\nIn this section we show that \\textsc{Editing to a Graph with a Given Degree Sequence} is {\\ensuremath{{\\operatorname{FPT}}}}\\ when parameterized by $k+\\Delta$, where $\\Delta=\\max\\sigma$. In fact, we obtain this result for the more general variant of the problem:\n\n\\begin{center}\n\\begin{boxedminipage}{.99\\textwidth}\n\\textsc{Extended Editing to a Graph with a Given Degree Sequence}\\\\\n\\begin{tabular}{ r l }\n\\textit{~~Instance:} & A graph $G$, a nondecreasing sequence of nonnegative integers\\\\\n& $\\sigma$ and a nonnegative integers $k_{vd},k_{ed},k_{ea}$.\\\\\n\\textit{Question:} & Is it possible to obtain a graph $G'$ with $\\sigma(G)=\\sigma$ from $G$ by \\\\\n& at most $k_{vd}$ vertex deletions, $k_{ed}$ edge deletions and $k_{ea}$ edge\\\\ \n& additions?\\\\\n\\end{tabular}\n\\end{boxedminipage}\n\\end{center}\n\n\\begin{theorem}\\label{thm:FPT}\n\\textsc{Extended Editing to a Graph with a Given Degree Sequence} can be solved it time $2^{O(k(\\Delta+k)^2)}n^2\\log n$ for $n$-vertex graphs, where $\\Delta=\\max \\sigma$ and $k=k_{vd}+k_{ed}+k_{ea}$.\n\\end{theorem}\n\n\\begin{proof}\nFirst, we construct a randomized true biased Monte Carlo {\\ensuremath{{\\operatorname{FPT}}}}-algorithm for \\textsc{Extended Editing to a Graph with a Given Degree Sequence} parameterized by $k+d$ based on the random separation techniques introduced by Cai, Chan and Chan~\\cite{CaiCC06} (see also~\\cite{AlonYZ95}). Then we explain how this algorithm can be derandomized. \n\nLet $(G,S,k_{vd},k_{ed},k_{ea})$ be an instance of \\textsc{Extended Editing to a Graph with a Given Degree Sequence}, $n=|V(G)|$. \n\n\nOn the first stage of the algorithm we preprocess the instance to  get rid of vertices of high degree or solve the problem if we have a trivial no-instance by the following reduction rule.\n\n\n\\medskip\n\\noindent\n{\\bf Vertex deletion rule.} \nIf $G$ has a vertex $v$ with $d_G(v)> \\Delta+k_{vd}+k_{ed}$, then delete $v$ and set $k_{vd}=k_{vd}-1$. If $k_{vd}<0$, then stop and return a NO-answer.\n\n\\medskip\nTo show that the rule is \\emph{safe}, i.e., by the application of the rule we either correctly solve the problem or obtain an equivalent instance, assume that $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is a yes-instance of \\textsc{Extended Editing to a Graph with a Given Degree Sequence}. Let $(U,D,A)$ be a solution. We show that if $d_G(v)> \\delta+k_{vd}+k_{ed}$, then $v\\in U$. To obtain a contradiction, assume that $d_G(v)> \\delta+k_{vd}+k_{ed}$ but $v\\notin U$. Then $d_{G'}(v)\\leq \\Delta$, where $G'=G-U-D+A$. It remains to observe that to decrease the degree of $v$ by at least $k_{vd}+k_{ed}+1$, we need at least $k_{vd}+k_{ed}+1$ vertex or edge deletion operations; a contradiction. We conclude that if $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is a yes-instance, then the instance obtained by the application of the rule is also a yes-instance. It is straightforward to see that if $(G',\\sigma,k_{vd}',k_{ed},k_{ea})$ is a yes-instance of \\textsc{Extended Editing to a Graph with a Given Degree Sequence} obtained by the deletion of  a vertex $v$ and $(U,D,A)$ is a solution, then $(U\\cup\\{v\\},D,A)$ is a solution for the original instance. Hence, the rule is safe. \n\n\\medskip\nWe exhaustively apply the rule until we either stop and return a NO-answer or obtain an instance of the problem such that the degree of any vertex $v$ is at most $\\Delta+k$. To simplify notations, we assume that $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is such an instance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOn the next stage of the algorithm we apply the random separation technique.\nWe color the vertices of $G$ independently and uniformly at random by three colors. In other words, we partition $V(G)$ into three sets $R_v$, $Y_v$ and $B_v$ (some sets could be empty), and say that the vertices of $R_v$ are \\emph{red}, the vertices of $Y_v$ are \\emph{yellow} \nand the vertices of $B_v$ are \\emph{blue}. Then the edges of $G$ are colored by either \\emph{red} or \\emph{blue}. We denote by $R_e$ the set of red and by $B_e$ the set of blue edges respectively. \n\nWe are looking for a solution  $(U,D,A)$ of $(G,S,k_{vd},k_{ed},k_{ea})$ such that the vertices of $U$ are colored red, the vertices incident to the edges of $A$ are yellow and the edges of $D$ are red. Moreover, if $X$ and $Y$ are the sets of vertices incident to the edges of $D$ and $A$ respectively, then \nthe vertices of $(N_G^2[U]\\cup N_G[X\\cup Y])\\setminus (U\\cup Y)$ and the edges of $E(G)\\setminus D$ incident to the vertices of $N_G[U]\\cup X\\cup Y$ should be blue.\nFormally, \nwe say that a solution $(U,D,A)$ of $(G,S,k_{vd},k_{ed},k_{ea})$ is a \\emph{colorful} solution if there are $R_v^*\\subseteq R_v$, $Y_v^*\\subseteq Y_v$ and $R_e^*\\subseteq R_e$ such that the following holds.\n\\begin{itemize}\n\\item[i)] $|R_v^*|\\leq k_{vd}$, $|R_e^*|\\leq k_{ed}$ and $|Y_v^*|\\leq 2k_{ea}$.\n\\item[ii)] $U=R_v^*$, $D=R_e^*$,  and for any $uv\\in A$, $u,v\\in Y_v^*$ and $|A|\\leq k_{ea}$.\n\\item[iii)] If $u,v\\in R_v\\cup Y_v$  and $uv\\in E(G)$, then either $u,v\\in R_v^*\\cup Y_v^*$ or $u,v\\notin R_v^*\\cup Y_v^*$.\n\\item[iv)] If $u\\in  R_v\\cup Y_v$ and $uv\\in R_e$, then either $u\\in R_v^*\\cup Y_v^*,uv\\in R_e^*$ or $u\\notin R_v^*\\cup Y_v^*,uv\\notin R_e^*$.\n\\item[v)] If $uv,vw\\in R_e$, then either $uv,vw\\in R_e^*$ or $uv,vw\\notin R_e^*$.\n\\item[vi)] If distinct $u,v\\in R_v$ and $N_G(u)\\cap N_G(v)\\neq\\emptyset$, then  either $u,v\\in R_v^*$ or $u,v\\notin R_v^*$.\n\\item[vii)] If $u\\in R_v$ and $vw\\in R_e$ for $v\\in N_G(u)$, then either $u\\in R_v^*,vw\\in R_e^*$ or $u\\notin R_v^*,vw\\notin R_e^*$.\n\n\n\n\n\\end{itemize}\nWe also say that $(R_v^*,Y_v^*,R_e^*)$ is the \\emph{base} of $(U,D,A)$. \n\nOur aim is to find a colorful solution if it exists. We do is by a dynamic programming algorithm based of the following properties of colorful solutions.\n\n\n\n\nLet \n\n", "itemtype": "equation", "pos": 20687, "prevtext": "\nLet $k'=k(k-1)/2$. Similarly to the case ${\\textrm{ed}}\\in S$, we obtain that  $(G,k)$ is a yes-instance of \\textsc{Independent Set} if and only if $(G,\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\n\nFinally, assume that $S=\\{{\\textrm{vd}}\\}$. We again reduce  the \\textsc{Clique} problem for regular graphs. Let  $(G,k)$ be an instance of \\textsc{Clique}, where $G$ is an $n$-vertex $d$-regular graph with $m$ edges.\n We assume without loss of generality that  $d-(k-1)\\geq 3$. The graph $G'$ is constructed from $G$ by subdividing each edge of $G$, i.e., for each $xy\\in E(G)$, we construct a new vertex $u$ and replace $xy$ by $xu$ and $yu$. Let $k'=k(k-1)/2$.\nConsider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_p)$, where $p=n+m-k'$ and \n\n", "index": 5, "text": "$$\n\\sigma_i=\n\\begin{cases}\nd&\\mbox{if } 1\\leq i\\leq n-k,\\\\\nd-(k-1)&\\mbox{if } n-k+1\\leq i\\leq n,\\\\\n2&\\mbox{if } n+1\\leq i\\leq p.\n\\end{cases}\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\sigma_{i}=\\begin{cases}d&amp;\\mbox{if }1\\leq i\\leq n-k,\\\\&#10;d-(k-1)&amp;\\mbox{if }n-k+1\\leq i\\leq n,\\\\&#10;2&amp;\\mbox{if }n+1\\leq i\\leq p.\\end{cases}\" display=\"block\"><mrow><msub><mi>\u03c3</mi><mi>i</mi></msub><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mi>d</mi></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mrow><mi>n</mi><mo>-</mo><mi>k</mi></mrow></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><mi>d</mi><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>n</mi></mrow><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>n</mi></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>2</mn></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>n</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>p</mi></mrow><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03174.tex", "nexttext": "\nand $H=G[L]$.\nDenote by $H_1,\\ldots,H_s$ the components of $H$. Let $R_v^i=V(H_i)\\cap R_e$, $Y_v^i=V(H_i)\\cap Y_v$ and $R_e^i=E(H_i)\\cap R_e$ for $i\\in\\{1,\\ldots,s\\}$.\n\n\\begin{myclaim}\n\\label{myclaim-A}\nIf $(U,D,A)$ is a colorful solution and $(R_v^*,Y_v^*,R_e^*)$ is its base, then\nif  $H_i$ has a vertex of $R_v^*\\cup Y_v*$ or en edge of $R_e^*$, then $R_v^i\\subseteq R_v^*$, $Y_v^i\\subseteq Y_v^*$ and $R_e^i\\subseteq R_r^*$ for $i\\in\\{1,\\ldots,s\\}$.\n\\end{myclaim}\n\n\\begin{proofofclaim}[Proof of Claim \\protect\\ref{myclaim-A}]\nSuppose that $H_i$ has $u\\in R_v^*\\cup Y_v^*$ or $e\\in R_e^*$. \n\nIf $v\\in R_v^i\\cup Y_v^i$, then $H_i$ has a path $P=x_0\\ldots x_\\ell$ such that \n$u=x_0$ or $e=x_0x_1$, and $x_\\ell=v$.  By induction on $\\ell$, we show that $v\\in R_v^*$ or $v\\in Y_v^*$ respectively. If $\\ell=1$, then the statement follows from iii) and iv) of the definition of a colorful solution. Suppose that $\\ell>1$. We consider three cases.\n\n\\medskip\n\\noindent\n{\\bf Case~1.}  $x_1\\in R_v\\cup Y_v$. By  iii) and iv), $x_1\\in R_v^*\\cup Y_v^*$ and, because the $(x_1,x_\\ell)$-subpath of $P$ has length $\\ell-1$, we conclude that  $v\\in R_v^*$ or $v\\in \nY_v^*$ by induction. \n\n\\medskip\nAssume from now that $x_1\\notin  R_v\\cup Y_v$. \n\n\\medskip\n\\noindent\n{\\bf Case~2.} $x_0x_1\\in R_e$. Clearly, if for the first edge $e$ of $P$, $e\\in R_e^*$, then $x_0x_1=e\\in R_e^*$. Suppose that for the first vertex $u=x_0$ of $P$, $u\\in R_v^*\\cup Y_v^*$. Then \nby iv), $x_0x_1\\in R_e^*$. If $x_1x_2\\in R_e$, then $x_1x_2\\in R_e^*$ by v). Since $x_1x_2\\in R_e^*$ and  the $(x_1,x_\\ell)$-subpath of $P$ has length $\\ell-1$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction. Suppose that $x_1x_2\\notin R_e$. Then because $x_1x_2\\in L$, $x_2\\in R_v$ and by vii), $x_2\\in R_v^*$.  If $\\ell=2$, then $x_\\ell\\in R_v^*$. Otherwise, as the \n $(x_2,x_\\ell)$-subpath of $P$ has length $\\ell-2$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction.\n\n\\medskip\n\\noindent\n{\\bf Case~2.} $x_0x_1\\notin R_e$. Then $u=x_0\\in R_v^*\\cup Y_v^*$. Because $x_0x_1\\in L$, $x_0\\in R_v^*$. \nIf $x_1x_2\\in R_e$, then $x_1x_2\\in R_e^*$ by vii). Since $x_1x_2\\in R_e^*$ and  the $(x_1,x_\\ell)$-subpath of $P$ has length $\\ell-1$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction. Suppose that $x_1x_2\\notin R_e$. Then because $x_1x_2\\in L$, $x_2\\in R_v$ and by vi), $x_2\\in R_v^*$.  If $\\ell=2$, then $x_\\ell\\in R_v^*$. Otherwise, as the \n $(x_2,x_\\ell)$-subpath of $P$ has length $\\ell-2$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction.\n\\medskip\n\nSuppose that $e'\\in R_e^i$. Then  $H_i$ has a path $P=x_0\\ldots x_\\ell$ such that \n$u=x_0$ or $e=x_0x_1$, and $x_{\\ell-1}x_\\ell=e'$.  Using the same inductive arguments as before, we obtain that $e'\\in R_e^*$.\n\\end{proofofclaim}\n\n\\medskip\n\nBy Claim~\\ref{myclaim-A}, we have that if there is a colorful solution $(U,D,A)$, then for its base $(R_v^*,Y_v^*,R_e^*)$, $R_v^*=\\cup_{i\\in I}R_v^i$,  $Y_v^*=\\cup_{i\\in I}Y_v^i$ and $R_e^*=\\cup_{i\\in I}R_e^i$\nfor some set of indices $I\\subseteq\\{1,\\ldots,s\\}$.  \n\nThe next property is a straightforward corollary of the definition $H$.\n\n\\begin{myclaim}\n\\label{myclaim-B}\nFor distinct $i,j\\in\\{1,\\ldots,s\\}$, if $u\\in V(H_i)$ and $v\\in V(H_j)$ are adjacent in $G$, then either $u,v\\in B_v$ or \n($u\\in Y_v^i$ and $v\\in B_v$) or ($u\\in B_v$ and $v\\in Y_v^j$).\n\\end{myclaim}\n\n\nWe construct a dynamic programming algorithm that consecutively for $i=0,\\ldots,s$, constructs the table $T_i$\nthat \n\ncontains the records of values of the function $\\gamma$:\n\n", "itemtype": "equation", "pos": 26942, "prevtext": "\nAgain similarly to the case ${\\textrm{ed}}\\in S$, we obtain that  $(G,k)$ is a yes-instance of \\textsc{Clique} if and only if $(G',\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\\qed\n\\end{proof}\n\n\n\n\n\\section{{\\ensuremath{{\\operatorname{FPT}}}}-algorithm for Editing to a Graph with a Given Degree Sequence}\\label{sec:FPT}\nIn this section we show that \\textsc{Editing to a Graph with a Given Degree Sequence} is {\\ensuremath{{\\operatorname{FPT}}}}\\ when parameterized by $k+\\Delta$, where $\\Delta=\\max\\sigma$. In fact, we obtain this result for the more general variant of the problem:\n\n\\begin{center}\n\\begin{boxedminipage}{.99\\textwidth}\n\\textsc{Extended Editing to a Graph with a Given Degree Sequence}\\\\\n\\begin{tabular}{ r l }\n\\textit{~~Instance:} & A graph $G$, a nondecreasing sequence of nonnegative integers\\\\\n& $\\sigma$ and a nonnegative integers $k_{vd},k_{ed},k_{ea}$.\\\\\n\\textit{Question:} & Is it possible to obtain a graph $G'$ with $\\sigma(G)=\\sigma$ from $G$ by \\\\\n& at most $k_{vd}$ vertex deletions, $k_{ed}$ edge deletions and $k_{ea}$ edge\\\\ \n& additions?\\\\\n\\end{tabular}\n\\end{boxedminipage}\n\\end{center}\n\n\\begin{theorem}\\label{thm:FPT}\n\\textsc{Extended Editing to a Graph with a Given Degree Sequence} can be solved it time $2^{O(k(\\Delta+k)^2)}n^2\\log n$ for $n$-vertex graphs, where $\\Delta=\\max \\sigma$ and $k=k_{vd}+k_{ed}+k_{ea}$.\n\\end{theorem}\n\n\\begin{proof}\nFirst, we construct a randomized true biased Monte Carlo {\\ensuremath{{\\operatorname{FPT}}}}-algorithm for \\textsc{Extended Editing to a Graph with a Given Degree Sequence} parameterized by $k+d$ based on the random separation techniques introduced by Cai, Chan and Chan~\\cite{CaiCC06} (see also~\\cite{AlonYZ95}). Then we explain how this algorithm can be derandomized. \n\nLet $(G,S,k_{vd},k_{ed},k_{ea})$ be an instance of \\textsc{Extended Editing to a Graph with a Given Degree Sequence}, $n=|V(G)|$. \n\n\nOn the first stage of the algorithm we preprocess the instance to  get rid of vertices of high degree or solve the problem if we have a trivial no-instance by the following reduction rule.\n\n\n\\medskip\n\\noindent\n{\\bf Vertex deletion rule.} \nIf $G$ has a vertex $v$ with $d_G(v)> \\Delta+k_{vd}+k_{ed}$, then delete $v$ and set $k_{vd}=k_{vd}-1$. If $k_{vd}<0$, then stop and return a NO-answer.\n\n\\medskip\nTo show that the rule is \\emph{safe}, i.e., by the application of the rule we either correctly solve the problem or obtain an equivalent instance, assume that $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is a yes-instance of \\textsc{Extended Editing to a Graph with a Given Degree Sequence}. Let $(U,D,A)$ be a solution. We show that if $d_G(v)> \\delta+k_{vd}+k_{ed}$, then $v\\in U$. To obtain a contradiction, assume that $d_G(v)> \\delta+k_{vd}+k_{ed}$ but $v\\notin U$. Then $d_{G'}(v)\\leq \\Delta$, where $G'=G-U-D+A$. It remains to observe that to decrease the degree of $v$ by at least $k_{vd}+k_{ed}+1$, we need at least $k_{vd}+k_{ed}+1$ vertex or edge deletion operations; a contradiction. We conclude that if $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is a yes-instance, then the instance obtained by the application of the rule is also a yes-instance. It is straightforward to see that if $(G',\\sigma,k_{vd}',k_{ed},k_{ea})$ is a yes-instance of \\textsc{Extended Editing to a Graph with a Given Degree Sequence} obtained by the deletion of  a vertex $v$ and $(U,D,A)$ is a solution, then $(U\\cup\\{v\\},D,A)$ is a solution for the original instance. Hence, the rule is safe. \n\n\\medskip\nWe exhaustively apply the rule until we either stop and return a NO-answer or obtain an instance of the problem such that the degree of any vertex $v$ is at most $\\Delta+k$. To simplify notations, we assume that $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is such an instance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOn the next stage of the algorithm we apply the random separation technique.\nWe color the vertices of $G$ independently and uniformly at random by three colors. In other words, we partition $V(G)$ into three sets $R_v$, $Y_v$ and $B_v$ (some sets could be empty), and say that the vertices of $R_v$ are \\emph{red}, the vertices of $Y_v$ are \\emph{yellow} \nand the vertices of $B_v$ are \\emph{blue}. Then the edges of $G$ are colored by either \\emph{red} or \\emph{blue}. We denote by $R_e$ the set of red and by $B_e$ the set of blue edges respectively. \n\nWe are looking for a solution  $(U,D,A)$ of $(G,S,k_{vd},k_{ed},k_{ea})$ such that the vertices of $U$ are colored red, the vertices incident to the edges of $A$ are yellow and the edges of $D$ are red. Moreover, if $X$ and $Y$ are the sets of vertices incident to the edges of $D$ and $A$ respectively, then \nthe vertices of $(N_G^2[U]\\cup N_G[X\\cup Y])\\setminus (U\\cup Y)$ and the edges of $E(G)\\setminus D$ incident to the vertices of $N_G[U]\\cup X\\cup Y$ should be blue.\nFormally, \nwe say that a solution $(U,D,A)$ of $(G,S,k_{vd},k_{ed},k_{ea})$ is a \\emph{colorful} solution if there are $R_v^*\\subseteq R_v$, $Y_v^*\\subseteq Y_v$ and $R_e^*\\subseteq R_e$ such that the following holds.\n\\begin{itemize}\n\\item[i)] $|R_v^*|\\leq k_{vd}$, $|R_e^*|\\leq k_{ed}$ and $|Y_v^*|\\leq 2k_{ea}$.\n\\item[ii)] $U=R_v^*$, $D=R_e^*$,  and for any $uv\\in A$, $u,v\\in Y_v^*$ and $|A|\\leq k_{ea}$.\n\\item[iii)] If $u,v\\in R_v\\cup Y_v$  and $uv\\in E(G)$, then either $u,v\\in R_v^*\\cup Y_v^*$ or $u,v\\notin R_v^*\\cup Y_v^*$.\n\\item[iv)] If $u\\in  R_v\\cup Y_v$ and $uv\\in R_e$, then either $u\\in R_v^*\\cup Y_v^*,uv\\in R_e^*$ or $u\\notin R_v^*\\cup Y_v^*,uv\\notin R_e^*$.\n\\item[v)] If $uv,vw\\in R_e$, then either $uv,vw\\in R_e^*$ or $uv,vw\\notin R_e^*$.\n\\item[vi)] If distinct $u,v\\in R_v$ and $N_G(u)\\cap N_G(v)\\neq\\emptyset$, then  either $u,v\\in R_v^*$ or $u,v\\notin R_v^*$.\n\\item[vii)] If $u\\in R_v$ and $vw\\in R_e$ for $v\\in N_G(u)$, then either $u\\in R_v^*,vw\\in R_e^*$ or $u\\notin R_v^*,vw\\notin R_e^*$.\n\n\n\n\n\\end{itemize}\nWe also say that $(R_v^*,Y_v^*,R_e^*)$ is the \\emph{base} of $(U,D,A)$. \n\nOur aim is to find a colorful solution if it exists. We do is by a dynamic programming algorithm based of the following properties of colorful solutions.\n\n\n\n\nLet \n\n", "index": 7, "text": "$$L=R_e\\cup\\{e\\in E(G)\\mid e\\text{ is incident to a vertex of }R_v\\}\\cup\\{uv\\in E(G)\\mid u,v\\in Y_v\\},$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"L=R_{e}\\cup\\{e\\in E(G)\\mid e\\text{ is incident to a vertex of }R_{v}\\}\\cup\\{uv%&#10;\\in E(G)\\mid u,v\\in Y_{v}\\},\" display=\"block\"><mrow><mrow><mi>L</mi><mo>=</mo><mrow><msub><mi>R</mi><mi>e</mi></msub><mo>\u222a</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mi>e</mi><mo>\u2208</mo><mrow><mi>E</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2223</mo><mrow><mi>e</mi><mo>\u2062</mo><mtext>\u00a0is incident to a vertex of\u00a0</mtext><mo>\u2062</mo><msub><mi>R</mi><mi>v</mi></msub></mrow><mo stretchy=\"false\">}</mo></mrow><mo>\u222a</mo><mrow><mo stretchy=\"false\">{</mo><mrow><mrow><mi>u</mi><mo>\u2062</mo><mi>v</mi></mrow><mo>\u2208</mo><mrow><mi>E</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>G</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2223</mo><mrow><mrow><mi>u</mi><mo>,</mo><mi>v</mi></mrow><mo>\u2208</mo><msub><mi>Y</mi><mi>v</mi></msub></mrow><mo stretchy=\"false\">}</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.03174.tex", "nexttext": "\nwhere \n\\begin{itemize}\n\\item[i)] $t_{vd}\\leq k_{vd}$, $t_{ed}\\leq k_{ed}$ and $t_{ea}\\leq k_{ea}$,\n\\item[ii)] $X=\\{d_1,\\ldots,d_h\\}$ is a collection (multiset) of integers, where $h\\in\\{1,\\ldots,2t_{ea}\\}$ and $d_i\\in \\{0,\\ldots,\\Delta\\}$ for $i\\in\\{1,\\ldots,h\\}$,\n\\item[iii)] $\\delta=(\\delta_0,\\ldots,\\delta_{r})$, where $r=\\max\\{\\Delta,\\Delta(G)\\}$ and\n\n$\\delta_i$ is a nonnegative integer \n\nfor $i\\in\\{0,\\ldots,r\\}$,\n\\end{itemize}\nsuch that $(U,D,A)$ is a \\emph{partial solution} with the base $(R_v^*,Y_v^*,R_e^*)$ defined by $I\\subseteq\\{1,\\ldots,i\\}$ with the following properties.\n\\begin{itemize}\n\\item[iv)] \n$R_v^*=\\cup_{i\\in I}R_v^i$,  $Y_v^*=\\cup_{i\\in I}Y_v^i$ and $R_e^*=\\cup_{i\\in I}R_e^i$, and $t_{vd}=|R_v^*|$ and\n$t_{ed}=|R_e^*|$.\n\\item[v)]  $U=R_v^*$, $D=R_e^*$,  $|A|=t_{ea}$ and for any $uv\\in A$, $u,v\\in Y_v^*$.\n\\item[vi)] The multiset $\\{d_{G'}(y)\\mid y\\in Y_v^* \\}=X$, where $G'=G-U-D+A$.\n\\item[vii)] $\\delta(G')=\\delta$.\n\\end{itemize}\nIn other words, $t_{vd}$ ,$t_{ed}$ and $t_{ea}$ are the numbers of deleted vertices, deleted edges and added edges respectively, $X$ is the multiset of degrees of of yellow vertices in the base of a partial solution, and $\\delta$ is the degree vector of the graph obtained from $G$ by the editing with respect to a partial solution.\nNotice that the values of $\\gamma$ are defined only for some $t_{vd},t_{ed},t_{ea},X,\\delta$ that satisfy i)--iii), as a partial solution with the properties iv)--vii) not necessarily exists, and we only keep records corresponding to the arguments $t_{vd},t_{ed},t_{ea},X,\\delta$ for which $\\gamma$ is defined.  \n\nNow we explain how we construct the tables for $i\\in\\{0,\\ldots,s\\}$. \n\n\\medskip\n\\noindent\n{\\bf Construction of $T_0$.} The table $T_0$ contains the unique record $(0,0,0,\\emptyset,\\delta)=(\\emptyset,\\emptyset,\\emptyset,\\emptyset)$, where \n\n$\\delta=\\delta(G)$ (notice that the length of $\\delta$ can be bigger that the length of $\\delta(G)$). \n\n\n\\medskip\n\\noindent\n{\\bf Construction of $T_i$ for $i\\geq 1$.} We assume that $T_{i-1}$ is already constructed. Initially we set $T_i=T_{i-1}$. Then for each record  $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ in $T_{i-1}$, we construct new records $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A')$ and put them in $T_i$ unless $T_i$ already contains the value $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')$. In the last case we keep the old value.\n\nLet $(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ in $T_{i-1}$. \n\\begin{itemize}\n\\item If $t_{vd}+|R_v^i|>k_{vd}$ or $t_{ed}+|R_e^i|>k_{ed}$ or $t_{ea}+2|Y_v^i|>k_{ea}$, then stop considering the record. Otherwise,\nlet $t_{vd}'=t_{vd}+|R_v^i|$ and $t_{ed}'=t_{ed}+|R_e^i|$.\n\\item Let $F=G-U-D+A-R_v^i-R_e^i$. \n\\item Let $\\cup_{j\\in I}Y_v^j=\\{x_1,\\ldots,x_h\\}$, $d_F(x_f)=d_f$ for $f\\in\\{1,\\ldots,h\\}$. Let\n$Y_v^i=\\{y_1,\\ldots,y_{\\ell}\\}$. Consider every $E_1\\subseteq \\binom{Y_v^i}{2}\\setminus E(F[Y_v^i])$ and $E_2\\subseteq\\{x_fy_i\\mid 1\\leq f\\leq h,1\\leq j\\leq\\ell\\}$ such that $|E_1|+|E_2|\\leq k_{ea}-t_{ea}$, and set \n$\\alpha_f=|\\{x_fy_j\\mid x_fy_j\\in E_2,1\\leq j\\leq\\ell\\}|$ for $f\\in\\{1,\\ldots,h\\}$ and set \n$\\beta_j=|\\{e\\mid e\\in E_1,e\\text{ is incident to }y_j\\}|+|\\{x_fy_j\\mid x_fy_j\\in E_2,1\\leq f\\leq h\\}|$ for $j\\in\\{1,\\ldots,\\ell\\}$.\n\\begin{itemize}\n\\item If $d_f+\\alpha_f>\\Delta$ for some $f\\in\\{1,\\ldots,h\\}$ or $d_{F}(y_j)+\\beta_j>\\Delta$ for some $j\\in \\{1,\\ldots,\\ell\\}$, then stop considering the pair $(E_1,E_2)$.\n\\item Set $t_{ea}'=t_{ea}+|E_1|+|E_2|$, $X'=\\{d_1+\\alpha_1,\\ldots,d_h+\\alpha_h,d_F(y_1)+\\beta_1,\\ldots,d_F(y_\\ell)+\\beta_\\ell\\}$.\n\\item Let $F'=F+E_1+E_2$. Construct $\\delta'=(\\delta_0',\\ldots,\\delta_{r}')=\\delta(F')$. \n\n\\item Set $U'=U\\cup R_v^i$, $D'=D\\cup R_e^i$, $A'=A\\cup E_1\\cup E_2$, $I'=I\\cup\\{i\\}$, set $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ and put the record in $T_i$.\n\\end{itemize}\n\\end{itemize}\n\nWe consecutively construct $T_1,\\ldots,T_s$.  The algorithm returns a YES-answer if $T_s$ contains a record $(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ for $\\delta=\\delta(\\sigma)$ and $(U,D,A)$ is a colorful solution in this case. Otherwise, the algorithm returns a NO-answer.\n\nThe correctness of the algorithm follows from the next claim.\n\n\\begin{myclaim}\n\\label{myclaim-C}\nFor each $i\\in\\{1,\\ldots,s\\}$, the table $T_i$ contains a record $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$, if and only if \nthere are $t_{vd},t_{ed},t_{ea},X,\\delta$ satisfying i)-iii) such that there is a partial solution $(U^*,D^*,A^*)$ and $I^*\\subseteq\\{1,\\ldots,i\\}$ that satisfy iv)-vii). In particular $t_{vd},t_{ed},t_{ea},X,\\delta$,  $(U,D,A)$ and $I$ satisfy i)--vii) if $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ is in $T_i$.\n\\end{myclaim}\n\n\\begin{proofofclaim}[Proof of Claim~\\ref{myclaim-C}]\nWe prove the claim by induction on $i$. It is straightforward to see that it holds for $i=0$. Assume that $i>0$ and the claim is fulfilled for $T_{i-1}$.\n\nSuppose that a record $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ was added in $T_i$. Then ether  $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ was in $T_{i-1}$ or it was constructed for some record $(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ from $T_{i-1}$. In the first case, \n$t_{vd}',t_{ed}',t_{ea}',X',Q'$, $(U',D',A')$ and $I'\\subseteq\\{1,\\ldots,i\\}$  satisfy i)-vii) by induction. Assume that $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ was constructed for some record $(t_{vd},t_{ed},t_{ea},X,Q)=(U,D,A,I)$ from $T_{i-1}$. Notice that $i\\in I'$ in this case. Let $I=I'\\setminus \\{i\\}$.\nConsider $\\cup_{j\\in I}Y_v^j=\\{x_1,\\ldots,x_h\\}$ and $Y_v^i=\\{y_1,\\ldots,y_{\\ell}\\}$. By Claim~\\ref{myclaim-B}, $x_f$ and $y_j$ are not adjacent for $f\\in\\{1,\\ldots,h\\}$ and $j\\in\\{1,\\ldots,\\ell\\}$. Then it immediately follows from the description of the algorithm that $t_{vd}',t_{ed}',t_{ea}',X',\\delta'$, \n$(U',D',A')$ and $I'$ satisfy i)--vii). \n\nSuppose that there are $t_{vd},t_{ed},t_{ea},X,\\delta$ satisfying i)-iii) such that there is a partial solution $(U^*,D^*,A^*)$ and $I^*\\subseteq\\{1,\\ldots,i\\}$ that satisfy iv)-vii).\nSuppose that $i\\notin I^*$. Then $T_{i-1}$ contains a record  $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ by induction and, therefore, this record is in $T_i$. Assume from now that $i\\in I^*$.\nLet $I'=I^*\\setminus \\{i\\}$. Consider $R_v'=\\cup_{j\\in I'}R_v^j$ and $Y_v'=\\cup_{j\\in I'}Y_v^j$.\nLet $E_1=\\{uv\\in A\\mid u,v\\in T_v^i\\}$ and $E_2=\\{uv\\in A\\mid u\\in Y_v',v\\in Y_v^i\\}$.\nDefine $U'=U\\setminus R_v^i$, $D'=D\\setminus R_e^i$ and $A'=A\\setminus(E_1\\cup E_2)$.\nLet $t_{vd}'=|U'|$, $t_{ed}=|D'|$ and $t_{ea}=|A'|$.\nConsider the multiset of integers $X'=\\{d_F(v)\\mid v\\in Y_v'\\}$ and the sequence $\\delta'=(\\delta_1',\\ldots,\\delta_r')=\\delta(F)$ for $F=G-U'-D'+A'$.\nWe obtain that $t_{vd}',t_{ed}',t_{ea}',X',\\delta'$, $(U',D',A')$ and $I'\\subseteq\\{1,\\ldots,i-1\\}$  satisfy i)-vii). \nBy induction, $T_{i-1}$ contains a record $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U'',D'',A'',I'')$.\nLet $Y_v'=\\{x_1,\\ldots,x_h\\}$, $\\cup_{j\\in I''}Y_v^j=\\{x_1',\\ldots,x_h'\\}$ and assume that $d_F(x_f)=d_{F'}(x_f')$ for $f\\in\\{1,\\ldots,h\\}$, where $F'=G-U''-D''+A''$. \nConsider $E_2'$ obtained from $E_2$ by the replacement of every edge $x_fv$ by $x_f'v$ for $f\\in\\{1,\\ldots,h\\}$ and $v\\in Y_v^i$. It remains to observe that when we consider $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U'',D'',A'',I'')$ and the pair $(E_1,E_2')$, we obtain $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ for\n$U=U''\\cup R_v^i$, $D=D''\\cup R_e^i$, $A=A''\\cup E_1\\cup E_2'$ and $I=I''\\cup\\{i\\}$.\n\\end{proofofclaim}\n\n\\medskip\n\nNow we evaluate the running time of the dynamic programming algorithm. \n\nFirst, we upper bound the size of each table. Suppose that $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ is included in a table $T_i$. \nBy the definition and Claim~\\ref{myclaim-C}, $\\delta=\\delta(G')$ for $G'=G-U-D+A$. Let $\\delta=\\{\\delta_0,\\ldots,\\delta_r\\}$ and $\\delta(G)=(\\delta_0',\\ldots,\\delta_r')$.   Let $i\\in\\{0,\\ldots,r\\}$. Denote $W_i=\\{v\\in V(G)\\mid d_G(v)=i\\}$. Recall that $\\delta(G)\\leq \\Delta+k$. \n If $\\delta_i'>\\delta_i$, then at least $\\delta_i'-\\delta_i$ vertices of $W_i$ should be either deleted or get modified degrees by the editing with respect to $(U,D,A)$. Since at most $k_{vd}$ vertices of $W_i$ can be deleted and we can modify degrees of at most $(k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})$ vertices, \n$\\delta_i'-\\delta_i\\leq (k+\\Delta+1)k_{vd}+2(k_{ed}+k_{ea})$.\nSimilarly, if $\\delta_i>\\delta_i'$, then at least $\\delta_i-\\delta_i'$ vertices of $V(G)\\setminus W_i$ should get modified degrees. Since we can modify degrees of at most $(k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})$ vertices, $\\delta_i-\\delta_i'\\leq (k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})$. We conclude\nthat for each $i\\in\\{0,\\ldots,r\\}$, \n\n", "itemtype": "equation", "pos": 30568, "prevtext": "\nand $H=G[L]$.\nDenote by $H_1,\\ldots,H_s$ the components of $H$. Let $R_v^i=V(H_i)\\cap R_e$, $Y_v^i=V(H_i)\\cap Y_v$ and $R_e^i=E(H_i)\\cap R_e$ for $i\\in\\{1,\\ldots,s\\}$.\n\n\\begin{myclaim}\n\\label{myclaim-A}\nIf $(U,D,A)$ is a colorful solution and $(R_v^*,Y_v^*,R_e^*)$ is its base, then\nif  $H_i$ has a vertex of $R_v^*\\cup Y_v*$ or en edge of $R_e^*$, then $R_v^i\\subseteq R_v^*$, $Y_v^i\\subseteq Y_v^*$ and $R_e^i\\subseteq R_r^*$ for $i\\in\\{1,\\ldots,s\\}$.\n\\end{myclaim}\n\n\\begin{proofofclaim}[Proof of Claim \\protect\\ref{myclaim-A}]\nSuppose that $H_i$ has $u\\in R_v^*\\cup Y_v^*$ or $e\\in R_e^*$. \n\nIf $v\\in R_v^i\\cup Y_v^i$, then $H_i$ has a path $P=x_0\\ldots x_\\ell$ such that \n$u=x_0$ or $e=x_0x_1$, and $x_\\ell=v$.  By induction on $\\ell$, we show that $v\\in R_v^*$ or $v\\in Y_v^*$ respectively. If $\\ell=1$, then the statement follows from iii) and iv) of the definition of a colorful solution. Suppose that $\\ell>1$. We consider three cases.\n\n\\medskip\n\\noindent\n{\\bf Case~1.}  $x_1\\in R_v\\cup Y_v$. By  iii) and iv), $x_1\\in R_v^*\\cup Y_v^*$ and, because the $(x_1,x_\\ell)$-subpath of $P$ has length $\\ell-1$, we conclude that  $v\\in R_v^*$ or $v\\in \nY_v^*$ by induction. \n\n\\medskip\nAssume from now that $x_1\\notin  R_v\\cup Y_v$. \n\n\\medskip\n\\noindent\n{\\bf Case~2.} $x_0x_1\\in R_e$. Clearly, if for the first edge $e$ of $P$, $e\\in R_e^*$, then $x_0x_1=e\\in R_e^*$. Suppose that for the first vertex $u=x_0$ of $P$, $u\\in R_v^*\\cup Y_v^*$. Then \nby iv), $x_0x_1\\in R_e^*$. If $x_1x_2\\in R_e$, then $x_1x_2\\in R_e^*$ by v). Since $x_1x_2\\in R_e^*$ and  the $(x_1,x_\\ell)$-subpath of $P$ has length $\\ell-1$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction. Suppose that $x_1x_2\\notin R_e$. Then because $x_1x_2\\in L$, $x_2\\in R_v$ and by vii), $x_2\\in R_v^*$.  If $\\ell=2$, then $x_\\ell\\in R_v^*$. Otherwise, as the \n $(x_2,x_\\ell)$-subpath of $P$ has length $\\ell-2$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction.\n\n\\medskip\n\\noindent\n{\\bf Case~2.} $x_0x_1\\notin R_e$. Then $u=x_0\\in R_v^*\\cup Y_v^*$. Because $x_0x_1\\in L$, $x_0\\in R_v^*$. \nIf $x_1x_2\\in R_e$, then $x_1x_2\\in R_e^*$ by vii). Since $x_1x_2\\in R_e^*$ and  the $(x_1,x_\\ell)$-subpath of $P$ has length $\\ell-1$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction. Suppose that $x_1x_2\\notin R_e$. Then because $x_1x_2\\in L$, $x_2\\in R_v$ and by vi), $x_2\\in R_v^*$.  If $\\ell=2$, then $x_\\ell\\in R_v^*$. Otherwise, as the \n $(x_2,x_\\ell)$-subpath of $P$ has length $\\ell-2$, we have that  $v\\in R_v^*$ or $v\\in Y_v^*$ by induction.\n\\medskip\n\nSuppose that $e'\\in R_e^i$. Then  $H_i$ has a path $P=x_0\\ldots x_\\ell$ such that \n$u=x_0$ or $e=x_0x_1$, and $x_{\\ell-1}x_\\ell=e'$.  Using the same inductive arguments as before, we obtain that $e'\\in R_e^*$.\n\\end{proofofclaim}\n\n\\medskip\n\nBy Claim~\\ref{myclaim-A}, we have that if there is a colorful solution $(U,D,A)$, then for its base $(R_v^*,Y_v^*,R_e^*)$, $R_v^*=\\cup_{i\\in I}R_v^i$,  $Y_v^*=\\cup_{i\\in I}Y_v^i$ and $R_e^*=\\cup_{i\\in I}R_e^i$\nfor some set of indices $I\\subseteq\\{1,\\ldots,s\\}$.  \n\nThe next property is a straightforward corollary of the definition $H$.\n\n\\begin{myclaim}\n\\label{myclaim-B}\nFor distinct $i,j\\in\\{1,\\ldots,s\\}$, if $u\\in V(H_i)$ and $v\\in V(H_j)$ are adjacent in $G$, then either $u,v\\in B_v$ or \n($u\\in Y_v^i$ and $v\\in B_v$) or ($u\\in B_v$ and $v\\in Y_v^j$).\n\\end{myclaim}\n\n\nWe construct a dynamic programming algorithm that consecutively for $i=0,\\ldots,s$, constructs the table $T_i$\nthat \n\ncontains the records of values of the function $\\gamma$:\n\n", "index": 9, "text": "$$\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I),$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I),\" display=\"block\"><mrow><mrow><mrow><mi>\u03b3</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mrow><mi>v</mi><mo>\u2062</mo><mi>d</mi></mrow></msub><mo>,</mo><msub><mi>t</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>d</mi></mrow></msub><mo>,</mo><msub><mi>t</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>a</mi></mrow></msub><mo>,</mo><mi>X</mi><mo>,</mo><mi>\u03b4</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo stretchy=\"false\">(</mo><mi>U</mi><mo>,</mo><mi>D</mi><mo>,</mo><mi>A</mi><mo>,</mo><mi>I</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.03174.tex", "nexttext": "\nand, therefore, there are at most \n$(2(k+\\Delta)k_{vd}+4(k_{ed}+k_{ea})+1)^r$ distinct vectors $\\delta$.  Since $r=\\max\\{\\Delta,\\Delta(G)\\}\\leq \\Delta+k$, we have \n$2^{O((\\Delta+k)\\log (\\Delta+k))}$ distinct vectors $\\delta$. The number of distinct multisets $X$ is at most $(\\Delta+1)^{2k}$ and there are at most $3(k+1)$ possibilities for $t_{vd},t_{ed},t_{ea}$. We conclude that each $T_i$ has  $2^{O((\\Delta+k)\\log (\\Delta+k))}$ records.\n\nTo construct a new record $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ from  $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ we consider \nall possible choices of $E_1$ and $E_2$. Since these edges have their end-vertices in a set of size at most $2k_{ea}$ and $|E_1|+|E_2|\\leq k_{ea}$, there are $2^{O(k\\log k)}$ possibilities to choose $E_1$ and $E_2$. The other computations in the construction of  $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$  can be done  in linear time. We have that $T_i$ can be constructed from $T_{i-1}$ in time $2^{O((\\Delta+k)\\log (\\Delta+k))}\\cdot n$ for $i\\in\\{1,\\ldots,s\\}$. Since $s\\leq n$, the total time is $2^{O((\\Delta+k)\\log (\\Delta+k))}\\cdot n^2$. \n\n\\medskip\nWe proved that a colorful solution can be found in time $2^{O((\\Delta+k)\\log (\\Delta+k))}\\cdot n^2$ if exist. Clearly, any colorful solution is a solution for $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ and we can return it, but nonexistence of a colorful solution does not imply that there is no solution. Hence, to find a solution, we run the randomized algorithm  $N$ times, i.e., we consider $N$ random colorings and try to find a colorful solution for them. If we find a solution after some run, we return it and stop. If we do not obtain a solution after $N$ runs, we return a NO-answer. The next claim shows that it is sufficient to run the algorithm $N=6^{2k(\\Delta+k)^2}$ times.\n\n\\begin{myclaim}\n\\label{myclaim-D}\nThere is a positive $p$ that does not depend on the instance  such that \nif after $N=6^{2k(\\Delta+k)^2}$ executions the randomized algorithm does not find a solution for $(G,\\sigma,k_{vd},k_{ed},k_{ea})$, then \n\nthe probability that  $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is a no-instance is at least $p$.\n\n\\end{myclaim}\n\n\n\\begin{proofofclaim}[Proof of Claim~\\ref{myclaim-D}]\nSuppose that $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ has a solution $(U,D,A)$.  \nLet $X$ be the set of end-vertices of the edges of $D$ and $Y$ is the set of end-vertices of $A$. \nLet $W=N_G^2[U]\\cup N_G[X\\cup Y]$ and \ndenote by $L$ the set of edges incident to the vertices of $N_G[U]\\cup X\\cup Y$.\nThe algorithm colors the vertices of $G$ independently and uniformly at random by three colors and the edges are colored by two colors. \nNotice that if the vertices of $W$ and the edges of $L$ are colored correctly with respect to the solution, i.e., the vertices of $U$ are red, the vertices of $Y$ are yellow, all the other vertices are blue, the edges of $D$ are red and all the other edges are blue, then $(U,D,A)$ is a colorful solution. Hence, the algorithm can find a solution in this case.\n\nWe find a lower bound for the probability that the vertices of $W$ and the edges of $L$ are colored correctly with respect to the solution.\nRecall that $\\Delta(G)\\leq \\Delta+k$. \nHence, $|W|\\leq k_{vd}(\\Delta+k)^2+2(k_{ed}+k_{ea})(\\Delta+k)\\leq 2k(\\Delta+k)^2$ and $|L|\\leq  k_{vd}(\\Delta+k)^2+2(k_{ed}+k_{ea})(\\Delta+k)\\leq 2k(\\Delta+k)^2$. As the vertices are colored by three colors and the edges by two, we obtain that the probability that the vertices of $W$ and the edges of $L$ are colored correctly with respect to the solution is at least \n$3^{-2k(\\Delta+k)^2}\\cdot 2^{-2k(\\Delta+k)^2}=6^{-2k(\\Delta+k)^2}$. \n\nThe probability that the vertices of $W$ and the edges of $L$ are not colored correctly with respect to the solution is at most $1-6^{-2k(\\Delta+k)^2}$, and the probability that these vertices are non colored correctly with respect to the solution for neither of $N=6^{2k(\\Delta+k)^2}$ random colorings is at most   $(1-1/N)^{N}$, and the claim follows.\n\\end{proofofclaim}\n\n\\medskip\nClaim~\\ref{myclaim-D} implies that the running time of the randomized algorithm is $2^{O(k(\\Delta+k)^2}\\cdot n^2$.\n\nThe algorithm can be derandomized by standard techniques (see~ \\cite{AlonYZ95,CaiCC06}) because random colorings can be replaced by the colorings induced by \\emph{universal sets}.\nLet $m$ and $r$ be positive integers, $r\\leq m$. An  \\emph{$(m,r)$-universal set} is a collection of binary vectors of length $m$ such that for each index subset of size $r$, each of the $2^r$ possible combinations of values appears in some vector of the set. It is known that an $(m,r)$-universal set can be constructed in {\\ensuremath{{\\operatorname{FPT}}}}-time with the parameter $r$. The best construction is due to Naor, Schulman and Srinivasan~\\cite{naor1995splitters}. They obtained an $(m,r)$-universal set of size $2^r\\cdot r^{O(\\log r)} \\log m$, and proved that the elements of the sets  can be listed in time that is linear in the size of the set. \n\nIn our case we have $m=|V(G)|+|E(G)|\\leq ((\\Delta+k)/2+1)n$ and $r=4k(\\Delta+k)^2$, as we have to obtain the correct coloring of $W$ and $L$ corresponding to a solution $(U,D,A)$. \nObserve that colorings induced by a universal set are binary and we use three colors. To fix it, we assume that the coloring of the vertices and edges is done in two stages. First, we color the elements of $G$ by two colors: red and green, and then recolor the green elements by yellow or blue. By using  an $(m,r)$-universal set of size $2^r\\cdot r^{O(\\log r)} \\log m$, we get \n $4^r\\cdot r^{O(\\log r)} \\log m$ colorings by three colors. We conclude that the running time of the derandomized algorithm is $2^{O(k(\\Delta+k)^2}\\cdot n^2\\log n$.\n\\qed\n\\end{proof}\n\n\\section{Kernelization for  Editing to a Graph with a Given Degree Sequence}\\label{sec:kernel}\nIn this section we show that \\textsc{Editing to a Graph with a Given Degree Sequence} has a polynomial kernel when parameterized by $k+\\Delta$ if $S=\\{ea\\}$, but for all other nonempty $S\\subseteq \\{vd,ed,ea\\}$, there is no polynomial kernel unless  ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$.\n\n\\begin{theorem}\\label{thm:kernel}\nIf $S=\\{{\\textrm{ea}}\\}$, then \\textsc{Editing to a Graph with a Given Degree Sequence} parameterized by $k+\\Delta$ has a kernel with $O(k\\Delta^2)$ vertices, where $\\Delta=\\max \\sigma$.  \n\\end{theorem}\n\n\\begin{proof}\nLet $(G,\\sigma,k)$ be an instance of \\textsc{Editing to a Graph with a Given Degree Sequence} and $\\Delta=\\max \\sigma$. If $\\Delta(G)>\\Delta$,  $(G,\\sigma,k)$ is a no-instance, because by edge additions it is possible only increase degrees. Hence, we immediately stop and return a NO-answer in this case. Assume from now that $\\Delta(G)\\leq \\Delta$.\nFor $i\\in\\{0,\\ldots,\\Delta\\}$, denote $W_i=\\{v\\in V(G)\\mid d_G(v)=i\\}$ and $\\delta_i=|W_i|$. Let $s_i=\\min\\{\\delta_i,2k(\\Delta+1)\\}$ and let $W_i'\\subseteq W_i$ be an arbitrary set of size $s_i$ for $i\\in\\{0,\\ldots,\\Delta\\}$.  We consider $W=\\cup_{i=0}^\\Delta W_i'$ and prove the following claim.\n\n\n\\begin{myclaim}\n\\label{myclaim-E}\nIf $(G,\\sigma,k)$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}, then there is \n$A\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ such that $\\sigma(G+A)=\\sigma$, $|A|\\leq k$ and for any $uv\\in A$, $u,v\\in  W$.\n\\end{myclaim}\n\n\\begin{proofofclaim}[Proof of Claim~\\ref{myclaim-E}]\nSuppose that $A\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ is a solution for   $(G,\\sigma,k)$, i.e., $\\sigma(G+A)=\\sigma$ and $|A|\\leq k$, such that the total number of end-vertices of the edges of $A$ in $V(G)\\setminus W$ is minimum. Suppose that there is $i\\in\\{0,\\ldots,\\Delta\\}$ such that at least one edge of $A$ has its end-vertex in $W_i\\setminus W_i'$. \nClearly, $s_i= 2k(\\Delta+1)$.\nDenote by $\\{x_1,\\ldots,x_p\\}$ the set of end-vertices of the edges of $A$ in $W_i$ and let $\\{y_1,\\ldots,y_q\\}$ be the set of end-vertices of the edges of $A$ in $V(G)\\setminus W_i$. \nSince $p+q\\leq 2k$, $\\Delta(G)\\leq \\Delta$ and $s_i=2k(\\Delta+1)$, there is a set of vertices $\\{x_1',\\ldots,x_p'\\}\\subseteq W_i'$ such that the vertices of this set are pairwise nonadjacent and are not adjacent to the vertices of $\\{y_1,\\ldots,y_q\\}$. We construct $A'\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ by replacing every edge $x_iy_j$ by $x_i'y_j$ for $i\\in\\{1,\\ldots,p\\}$ and $j\\in\\{1,\\ldots,q\\}$, and every edge $x_ix_j$ is replaced by $x_i'x_j'$ for $i,j\\in\\{1,\\ldots,q\\}$. It is straightforward to verify that $A'$ is a solution for  \n $(G,\\sigma,k)$, but $A'$ has less end-vertices outside $W$ contradicting the choice of $A$. Hence, no edge of $A$ has an end-vertex in $V(G)\\setminus W$.\n\\end{proofofclaim}\n\n\\medskip\n\nIf $\\delta_i\\leq 2k(\\Delta+1)$ for $i\\in\\{0,\\ldots,\\Delta\\}$, then we return the original instance $(G,\\sigma,k)$ and stop, as $|V(G)|\\leq 2k(\\Delta+1)^2$. From now we assume that there is $i\\in\\{0,\\ldots,\\Delta\\}$ such that $\\delta_i>2k(\\Delta+1)$.\nWe construct the graph $G'$ as follows.\n\\begin{itemize}\n\\item Delete all the vertices of $V(G)\\setminus W$.\n\\item Construct $h=\\Delta+2$ new vertices $v_1,\\ldots,v_h$ and join them by edges pairwise to obtain a clique.  \n\\item For any $u\\in W$ such that $r=|N_G(u)\\cap (V(G)\\setminus W)|\\geq 1$, construct edges $uv_1,\\ldots,uv_r$. \n\\end{itemize}\nNotice that $d_{G'}(v_1)\\geq\\ldots\\geq d_{G'}(v_h)\\geq\\Delta+1$ and $d_{G'}(u)=d_G(u)$ for $u\\in W$.\nNow we consider the sequence $\\sigma$ and construct the sequence $\\sigma'$ as follows.\n\\begin{itemize}\n\\item The first $h$ elements of $\\sigma'$ are $d_{G'}(v_1),\\ldots,d_{G'}(v_h)$.\n\\item Consider the elements of $\\sigma$ in their order and for each integer $i\\in\\{0,\\ldots,\\Delta\\}$ that occurs $j_i$ times in $\\sigma$, add $j_i-(\\delta_i-s_i)$ copies of $i$ in $\\sigma'$.\n\\end{itemize}\nWe claim that $(G,\\sigma,k)$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence} if and only if $(G',\\sigma',k)$ is a yes-instance of the problem.\n\nSuppose that $(G,\\sigma,k)$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}. By Claim~\\ref{myclaim-E}, it has a solution \n$A\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ such that  for any $uv\\in A$, $u,v\\in  W$. It is straightforward to verify that $\\sigma(G'+A)=\\sigma'$, i.e., $A$ is a solution for $(G',\\sigma',k)$. Assume that $A\\subseteq \\binom{V(G')}{2}\\setminus E(G)$ is a solution for $(G',\\sigma',k)$. Because  $d_{G'}(v_1),\\ldots,d_{G'}(v_h)$ are the first $h$ elements of $\\sigma'$ and $d_{G'}(u)=d_G(u)\\leq \\Delta$ for $u\\in W$, for any $uv\\in A$, $u,v\\in W$. Then  it is straightforward to check that $\\sigma(G+A)=\\sigma$, i.e.,  $A$ is a solution for $(G,\\sigma,k)$.\n\\qed\n\\end{proof}\n\nWe complement Theorem~\\ref{thm:kernel} by showing that it is unlikely that \\textsc{Editing to a Graph with a Given Degree Sequence} parameterized by $k+\\Delta$ has a polynomial kernel\nfor $S\\neq\\{{\\textrm{ea}}\\}$. The proof is based on the cross-composition technique introduced by Bodlaender, Jansen and Kratsch~\\cite{BodlaenderJK14}.\n\n\\begin{theorem}\\label{thm:no-kernel}\nIf $S\\subseteq\\{{\\textrm{vd}},{\\textrm{ed}},{\\textrm{ea}}\\}$ but $S\\neq\\{{\\textrm{ed}}\\}$, then \\textsc{Editing to a Graph with a Given Degree Sequence}  has no polynomial kernel unless  ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$ when the problem is parameterized by $k+\\Delta$ for $\\Delta=\\max\\sigma$.  \n\\end{theorem}\n\n\n\\begin{proof}\nFor the proof of the theorem, we  need some additional definitions and statements.\nRecall that, formally, a parameterized problem $\\mathcal{P}\\subseteq\\Sigma^*\\times\\mathbb{N}$, where $\\Sigma$ is a finite alphabet.\n\nLet $\\Sigma$ be a finite alphabet. An equivalence relation $\\mathcal{R}$ on the set of strings $\\Sigma^*$ is called a \\emph{polynomial equivalence relation} if the following two conditions hold:\n\\begin{itemize}\n\\item[i)] there is an algorithm that given two strings $x,y\\in\\Sigma^*$ decides whether $x$ and $y$ belong to\nthe same equivalence class in time polynomial in $|x|+|y|$,\n\\item[ii)] for any finite set $S\\subseteq\\Sigma^*$, the equivalence relation $\\mathcal{R}$ partitions the elements of $S$ into a\nnumber of classes that is polynomially bounded in the size of the largest element of $S$.\n\\end{itemize}\n\n\nLet $L\\subseteq\\Sigma^*$ be a language, let $\\mathcal{R}$ be a polynomial\nequivalence relation on $\\Sigma^*$, and let $\\mathcal{P}\\subseteq\\Sigma^*\\times\\mathbb{N}$   \nbe a parameterized problem.  An \\emph{OR-cross-composition of $L$ into $\\mathcal{P}$} (with respect to $\\mathcal{R}$) is an algorithm that, given $t$ instances $x_1,x_2,\\ldots,x_t\\in\\Sigma^*$ \nof $L$ belonging to the same equivalence class of $\\mathcal{R}$, takes time polynomial in\n$\\sum_{i=1}^t|x_i|$ and outputs an instance $(y,k)\\in \\Sigma^*\\times \\mathbb{N}$ such that:\n\\begin{itemize}\n\\item[i)] the parameter value $k$ is polynomially bounded in $\\max\\{|x_1|,\\ldots,|x_t|\\} + \\log t$,\n\\item[ii)] the instance $(y,k)$ is a yes-instance for $\\mathcal{P}$ if and only if at least one instance $x_i$ is a yes-instance for $L$ for $i\\in\\{1,\\ldots,t\\}$.\n\\end{itemize}\nIt is said that $L$ \\emph{OR-cross-composes into} $\\mathcal{P}$ if a cross-composition\nalgorithm exists for a suitable relation $\\mathcal{R}$.\n\nIn particular, Bodlaender, Jansen and Kratsch~\\cite{BodlaenderJK14} proved that \nif an {\\ensuremath{{\\operatorname{NP}}}}-hard language $L$ OR-cross-composes into the parameterized problem $\\mathcal{P}$,\nthen $\\mathcal{P}$ does not admit a polynomial kernelization unless\n${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$.\n\nWe prove that the \\textsc{Clique} problem that asks for a graph $G$ and a positive integer $k$, whether $G$ has a clique of size $k$, OR-cross-composes into \\textsc{Editing to a Graph with a Given Degree Sequence}. Recall that this problem is  {\\ensuremath{{\\operatorname{NP}}}}-complete~\\cite{GareyJ79} for regular graphs.\n\n\nSuppose that ${\\textrm{ed}}\\in S$.\nWe assume that two instances $(G,k)$ and $(G',k')$ of \\textsc{Clique} are equivalent if $|V(G)|=|V(G')|$, $k=k'$ and $G,G'$ are $d$-regular for some nonnegative integer $d$.\n Let $(G_1,k),\\ldots,(G_t,k)$ be equivalent instances of \\textsc{Clique}, where $G_1,\\ldots,G_t$ are $d$-regular, $n=|V(G_1)|=\\ldots=|V(G_t)|$ and $d\\geq k-1$. \nWe construct the graph $G$ by taking the disjoint union of  copies of $G_1,\\ldots,G_t$. \nConsider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_{nt})$, where\n\n", "itemtype": "equation", "pos": 39412, "prevtext": "\nwhere \n\\begin{itemize}\n\\item[i)] $t_{vd}\\leq k_{vd}$, $t_{ed}\\leq k_{ed}$ and $t_{ea}\\leq k_{ea}$,\n\\item[ii)] $X=\\{d_1,\\ldots,d_h\\}$ is a collection (multiset) of integers, where $h\\in\\{1,\\ldots,2t_{ea}\\}$ and $d_i\\in \\{0,\\ldots,\\Delta\\}$ for $i\\in\\{1,\\ldots,h\\}$,\n\\item[iii)] $\\delta=(\\delta_0,\\ldots,\\delta_{r})$, where $r=\\max\\{\\Delta,\\Delta(G)\\}$ and\n\n$\\delta_i$ is a nonnegative integer \n\nfor $i\\in\\{0,\\ldots,r\\}$,\n\\end{itemize}\nsuch that $(U,D,A)$ is a \\emph{partial solution} with the base $(R_v^*,Y_v^*,R_e^*)$ defined by $I\\subseteq\\{1,\\ldots,i\\}$ with the following properties.\n\\begin{itemize}\n\\item[iv)] \n$R_v^*=\\cup_{i\\in I}R_v^i$,  $Y_v^*=\\cup_{i\\in I}Y_v^i$ and $R_e^*=\\cup_{i\\in I}R_e^i$, and $t_{vd}=|R_v^*|$ and\n$t_{ed}=|R_e^*|$.\n\\item[v)]  $U=R_v^*$, $D=R_e^*$,  $|A|=t_{ea}$ and for any $uv\\in A$, $u,v\\in Y_v^*$.\n\\item[vi)] The multiset $\\{d_{G'}(y)\\mid y\\in Y_v^* \\}=X$, where $G'=G-U-D+A$.\n\\item[vii)] $\\delta(G')=\\delta$.\n\\end{itemize}\nIn other words, $t_{vd}$ ,$t_{ed}$ and $t_{ea}$ are the numbers of deleted vertices, deleted edges and added edges respectively, $X$ is the multiset of degrees of of yellow vertices in the base of a partial solution, and $\\delta$ is the degree vector of the graph obtained from $G$ by the editing with respect to a partial solution.\nNotice that the values of $\\gamma$ are defined only for some $t_{vd},t_{ed},t_{ea},X,\\delta$ that satisfy i)--iii), as a partial solution with the properties iv)--vii) not necessarily exists, and we only keep records corresponding to the arguments $t_{vd},t_{ed},t_{ea},X,\\delta$ for which $\\gamma$ is defined.  \n\nNow we explain how we construct the tables for $i\\in\\{0,\\ldots,s\\}$. \n\n\\medskip\n\\noindent\n{\\bf Construction of $T_0$.} The table $T_0$ contains the unique record $(0,0,0,\\emptyset,\\delta)=(\\emptyset,\\emptyset,\\emptyset,\\emptyset)$, where \n\n$\\delta=\\delta(G)$ (notice that the length of $\\delta$ can be bigger that the length of $\\delta(G)$). \n\n\n\\medskip\n\\noindent\n{\\bf Construction of $T_i$ for $i\\geq 1$.} We assume that $T_{i-1}$ is already constructed. Initially we set $T_i=T_{i-1}$. Then for each record  $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ in $T_{i-1}$, we construct new records $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A')$ and put them in $T_i$ unless $T_i$ already contains the value $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')$. In the last case we keep the old value.\n\nLet $(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ in $T_{i-1}$. \n\\begin{itemize}\n\\item If $t_{vd}+|R_v^i|>k_{vd}$ or $t_{ed}+|R_e^i|>k_{ed}$ or $t_{ea}+2|Y_v^i|>k_{ea}$, then stop considering the record. Otherwise,\nlet $t_{vd}'=t_{vd}+|R_v^i|$ and $t_{ed}'=t_{ed}+|R_e^i|$.\n\\item Let $F=G-U-D+A-R_v^i-R_e^i$. \n\\item Let $\\cup_{j\\in I}Y_v^j=\\{x_1,\\ldots,x_h\\}$, $d_F(x_f)=d_f$ for $f\\in\\{1,\\ldots,h\\}$. Let\n$Y_v^i=\\{y_1,\\ldots,y_{\\ell}\\}$. Consider every $E_1\\subseteq \\binom{Y_v^i}{2}\\setminus E(F[Y_v^i])$ and $E_2\\subseteq\\{x_fy_i\\mid 1\\leq f\\leq h,1\\leq j\\leq\\ell\\}$ such that $|E_1|+|E_2|\\leq k_{ea}-t_{ea}$, and set \n$\\alpha_f=|\\{x_fy_j\\mid x_fy_j\\in E_2,1\\leq j\\leq\\ell\\}|$ for $f\\in\\{1,\\ldots,h\\}$ and set \n$\\beta_j=|\\{e\\mid e\\in E_1,e\\text{ is incident to }y_j\\}|+|\\{x_fy_j\\mid x_fy_j\\in E_2,1\\leq f\\leq h\\}|$ for $j\\in\\{1,\\ldots,\\ell\\}$.\n\\begin{itemize}\n\\item If $d_f+\\alpha_f>\\Delta$ for some $f\\in\\{1,\\ldots,h\\}$ or $d_{F}(y_j)+\\beta_j>\\Delta$ for some $j\\in \\{1,\\ldots,\\ell\\}$, then stop considering the pair $(E_1,E_2)$.\n\\item Set $t_{ea}'=t_{ea}+|E_1|+|E_2|$, $X'=\\{d_1+\\alpha_1,\\ldots,d_h+\\alpha_h,d_F(y_1)+\\beta_1,\\ldots,d_F(y_\\ell)+\\beta_\\ell\\}$.\n\\item Let $F'=F+E_1+E_2$. Construct $\\delta'=(\\delta_0',\\ldots,\\delta_{r}')=\\delta(F')$. \n\n\\item Set $U'=U\\cup R_v^i$, $D'=D\\cup R_e^i$, $A'=A\\cup E_1\\cup E_2$, $I'=I\\cup\\{i\\}$, set $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ and put the record in $T_i$.\n\\end{itemize}\n\\end{itemize}\n\nWe consecutively construct $T_1,\\ldots,T_s$.  The algorithm returns a YES-answer if $T_s$ contains a record $(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ for $\\delta=\\delta(\\sigma)$ and $(U,D,A)$ is a colorful solution in this case. Otherwise, the algorithm returns a NO-answer.\n\nThe correctness of the algorithm follows from the next claim.\n\n\\begin{myclaim}\n\\label{myclaim-C}\nFor each $i\\in\\{1,\\ldots,s\\}$, the table $T_i$ contains a record $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$, if and only if \nthere are $t_{vd},t_{ed},t_{ea},X,\\delta$ satisfying i)-iii) such that there is a partial solution $(U^*,D^*,A^*)$ and $I^*\\subseteq\\{1,\\ldots,i\\}$ that satisfy iv)-vii). In particular $t_{vd},t_{ed},t_{ea},X,\\delta$,  $(U,D,A)$ and $I$ satisfy i)--vii) if $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ is in $T_i$.\n\\end{myclaim}\n\n\\begin{proofofclaim}[Proof of Claim~\\ref{myclaim-C}]\nWe prove the claim by induction on $i$. It is straightforward to see that it holds for $i=0$. Assume that $i>0$ and the claim is fulfilled for $T_{i-1}$.\n\nSuppose that a record $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ was added in $T_i$. Then ether  $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ was in $T_{i-1}$ or it was constructed for some record $(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ from $T_{i-1}$. In the first case, \n$t_{vd}',t_{ed}',t_{ea}',X',Q'$, $(U',D',A')$ and $I'\\subseteq\\{1,\\ldots,i\\}$  satisfy i)-vii) by induction. Assume that $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ was constructed for some record $(t_{vd},t_{ed},t_{ea},X,Q)=(U,D,A,I)$ from $T_{i-1}$. Notice that $i\\in I'$ in this case. Let $I=I'\\setminus \\{i\\}$.\nConsider $\\cup_{j\\in I}Y_v^j=\\{x_1,\\ldots,x_h\\}$ and $Y_v^i=\\{y_1,\\ldots,y_{\\ell}\\}$. By Claim~\\ref{myclaim-B}, $x_f$ and $y_j$ are not adjacent for $f\\in\\{1,\\ldots,h\\}$ and $j\\in\\{1,\\ldots,\\ell\\}$. Then it immediately follows from the description of the algorithm that $t_{vd}',t_{ed}',t_{ea}',X',\\delta'$, \n$(U',D',A')$ and $I'$ satisfy i)--vii). \n\nSuppose that there are $t_{vd},t_{ed},t_{ea},X,\\delta$ satisfying i)-iii) such that there is a partial solution $(U^*,D^*,A^*)$ and $I^*\\subseteq\\{1,\\ldots,i\\}$ that satisfy iv)-vii).\nSuppose that $i\\notin I^*$. Then $T_{i-1}$ contains a record  $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ by induction and, therefore, this record is in $T_i$. Assume from now that $i\\in I^*$.\nLet $I'=I^*\\setminus \\{i\\}$. Consider $R_v'=\\cup_{j\\in I'}R_v^j$ and $Y_v'=\\cup_{j\\in I'}Y_v^j$.\nLet $E_1=\\{uv\\in A\\mid u,v\\in T_v^i\\}$ and $E_2=\\{uv\\in A\\mid u\\in Y_v',v\\in Y_v^i\\}$.\nDefine $U'=U\\setminus R_v^i$, $D'=D\\setminus R_e^i$ and $A'=A\\setminus(E_1\\cup E_2)$.\nLet $t_{vd}'=|U'|$, $t_{ed}=|D'|$ and $t_{ea}=|A'|$.\nConsider the multiset of integers $X'=\\{d_F(v)\\mid v\\in Y_v'\\}$ and the sequence $\\delta'=(\\delta_1',\\ldots,\\delta_r')=\\delta(F)$ for $F=G-U'-D'+A'$.\nWe obtain that $t_{vd}',t_{ed}',t_{ea}',X',\\delta'$, $(U',D',A')$ and $I'\\subseteq\\{1,\\ldots,i-1\\}$  satisfy i)-vii). \nBy induction, $T_{i-1}$ contains a record $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U'',D'',A'',I'')$.\nLet $Y_v'=\\{x_1,\\ldots,x_h\\}$, $\\cup_{j\\in I''}Y_v^j=\\{x_1',\\ldots,x_h'\\}$ and assume that $d_F(x_f)=d_{F'}(x_f')$ for $f\\in\\{1,\\ldots,h\\}$, where $F'=G-U''-D''+A''$. \nConsider $E_2'$ obtained from $E_2$ by the replacement of every edge $x_fv$ by $x_f'v$ for $f\\in\\{1,\\ldots,h\\}$ and $v\\in Y_v^i$. It remains to observe that when we consider $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U'',D'',A'',I'')$ and the pair $(E_1,E_2')$, we obtain $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ for\n$U=U''\\cup R_v^i$, $D=D''\\cup R_e^i$, $A=A''\\cup E_1\\cup E_2'$ and $I=I''\\cup\\{i\\}$.\n\\end{proofofclaim}\n\n\\medskip\n\nNow we evaluate the running time of the dynamic programming algorithm. \n\nFirst, we upper bound the size of each table. Suppose that $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ is included in a table $T_i$. \nBy the definition and Claim~\\ref{myclaim-C}, $\\delta=\\delta(G')$ for $G'=G-U-D+A$. Let $\\delta=\\{\\delta_0,\\ldots,\\delta_r\\}$ and $\\delta(G)=(\\delta_0',\\ldots,\\delta_r')$.   Let $i\\in\\{0,\\ldots,r\\}$. Denote $W_i=\\{v\\in V(G)\\mid d_G(v)=i\\}$. Recall that $\\delta(G)\\leq \\Delta+k$. \n If $\\delta_i'>\\delta_i$, then at least $\\delta_i'-\\delta_i$ vertices of $W_i$ should be either deleted or get modified degrees by the editing with respect to $(U,D,A)$. Since at most $k_{vd}$ vertices of $W_i$ can be deleted and we can modify degrees of at most $(k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})$ vertices, \n$\\delta_i'-\\delta_i\\leq (k+\\Delta+1)k_{vd}+2(k_{ed}+k_{ea})$.\nSimilarly, if $\\delta_i>\\delta_i'$, then at least $\\delta_i-\\delta_i'$ vertices of $V(G)\\setminus W_i$ should get modified degrees. Since we can modify degrees of at most $(k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})$ vertices, $\\delta_i-\\delta_i'\\leq (k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})$. We conclude\nthat for each $i\\in\\{0,\\ldots,r\\}$, \n\n", "index": 11, "text": "$$\\delta_i'-(k+\\Delta+1)k_{vd}+2(k_{ed}+k_{ea})\\leq  \\delta_i\\leq \\delta_i'+(k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"\\delta_{i}^{\\prime}-(k+\\Delta+1)k_{vd}+2(k_{ed}+k_{ea})\\leq\\delta_{i}\\leq%&#10;\\delta_{i}^{\\prime}+(k+\\Delta)k_{vd}+2(k_{ed}+k_{ea})\" display=\"block\"><mrow><mrow><mrow><msubsup><mi>\u03b4</mi><mi>i</mi><mo>\u2032</mo></msubsup><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>+</mo><mi mathvariant=\"normal\">\u0394</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>k</mi><mrow><mi>v</mi><mo>\u2062</mo><mi>d</mi></mrow></msub></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>k</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>d</mi></mrow></msub><mo>+</mo><msub><mi>k</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>a</mi></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2264</mo><msub><mi>\u03b4</mi><mi>i</mi></msub><mo>\u2264</mo><mrow><msubsup><mi>\u03b4</mi><mi>i</mi><mo>\u2032</mo></msubsup><mo>+</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>+</mo><mi mathvariant=\"normal\">\u0394</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>k</mi><mrow><mi>v</mi><mo>\u2062</mo><mi>d</mi></mrow></msub></mrow><mo>+</mo><mrow><mn>2</mn><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>k</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>d</mi></mrow></msub><mo>+</mo><msub><mi>k</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>a</mi></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03174.tex", "nexttext": "\nLet $k'=k(k-1)/2$. We claim that $(G_i,k)$ is a yes-instance of \\textsc{Clique} for some $i\\in\\{1,\\ldots,t\\}$\nif and only if $(G,\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\nIf $K$ is a clique of size $k$ in $G_i$, then the graph $G'$ obtained  from $G$ by the deletion of the $k'=k(k-1)/2$ edges of $D=E(G[K])$ has the degree sequence $\\sigma$. Assume that \n$(U,D,A)$ is a solution of $(G,\\sigma,k)$. Clearly, $U=\\emptyset$ even if ${\\textrm{vd}}\\in R$, because $\\sigma$ contains $nt$ elements. Since $\\sum_{i=1}^{nt}\\sigma_i=dn-k(k-1)$, we have that $A=\\emptyset$. It remains to notice that because in $G-D$ $k$ vertices have degree $d-(k-1)$, $G[D]$ is a compete graph with $k$ vertices, i.e., $G$ contains a clique of size $k$. Clearly, any clique $K$ of size $k$ is a clique of some $G_i$ for $i\\in\\{1,\\ldots,t\\}$.\n\nAssume that $S=\\{{\\textrm{vd}}\\}$. Now we assume that two instances $(G,k)$ and $(G',k')$ of \\textsc{Clique} are equivalent if $|V(G)|=|V(G')|$, $|E(G)|=|E(G')|$, $k=k'$ and $G,G'$ are $d$-regular for some nonnegative integer $d$.\nLet $(G_1,k),\\ldots,(G_t,k)$ be equivalent instances of \\textsc{Clique}, where $G_1,\\ldots,G_t$ are $d$-regular, $n=|V(G_1)|=\\ldots=|V(G_t)|$, $m=|E(G_1)|=\\ldots=|E(G_t)|$ and $d-(k-1)\\geq 3$. \nWe construct the graph $G$ as follows.\n\\begin{itemize}\n\\item Take the disjoint union of copies of $G_1,\\ldots,G_t$.\n\\item For each edge $uv\\in E(G_i)$ for $i\\in\\{1,\\ldots,t\\}$, subdivide it, i.e., construct a new vertex $w$ and replace $uv$ by $uw$ and $wv$. We call the new vertices \\emph{subdivision} vertices.\n\\end{itemize}\nLet $k'=k(k-1)/2$.\nConsider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_p)$, where $p=(n+m)t-k'$ and \n\n", "itemtype": "equation", "pos": 54050, "prevtext": "\nand, therefore, there are at most \n$(2(k+\\Delta)k_{vd}+4(k_{ed}+k_{ea})+1)^r$ distinct vectors $\\delta$.  Since $r=\\max\\{\\Delta,\\Delta(G)\\}\\leq \\Delta+k$, we have \n$2^{O((\\Delta+k)\\log (\\Delta+k))}$ distinct vectors $\\delta$. The number of distinct multisets $X$ is at most $(\\Delta+1)^{2k}$ and there are at most $3(k+1)$ possibilities for $t_{vd},t_{ed},t_{ea}$. We conclude that each $T_i$ has  $2^{O((\\Delta+k)\\log (\\Delta+k))}$ records.\n\nTo construct a new record $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$ from  $\\gamma(t_{vd},t_{ed},t_{ea},X,\\delta)=(U,D,A,I)$ we consider \nall possible choices of $E_1$ and $E_2$. Since these edges have their end-vertices in a set of size at most $2k_{ea}$ and $|E_1|+|E_2|\\leq k_{ea}$, there are $2^{O(k\\log k)}$ possibilities to choose $E_1$ and $E_2$. The other computations in the construction of  $\\gamma(t_{vd}',t_{ed}',t_{ea}',X',\\delta')=(U',D',A',I')$  can be done  in linear time. We have that $T_i$ can be constructed from $T_{i-1}$ in time $2^{O((\\Delta+k)\\log (\\Delta+k))}\\cdot n$ for $i\\in\\{1,\\ldots,s\\}$. Since $s\\leq n$, the total time is $2^{O((\\Delta+k)\\log (\\Delta+k))}\\cdot n^2$. \n\n\\medskip\nWe proved that a colorful solution can be found in time $2^{O((\\Delta+k)\\log (\\Delta+k))}\\cdot n^2$ if exist. Clearly, any colorful solution is a solution for $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ and we can return it, but nonexistence of a colorful solution does not imply that there is no solution. Hence, to find a solution, we run the randomized algorithm  $N$ times, i.e., we consider $N$ random colorings and try to find a colorful solution for them. If we find a solution after some run, we return it and stop. If we do not obtain a solution after $N$ runs, we return a NO-answer. The next claim shows that it is sufficient to run the algorithm $N=6^{2k(\\Delta+k)^2}$ times.\n\n\\begin{myclaim}\n\\label{myclaim-D}\nThere is a positive $p$ that does not depend on the instance  such that \nif after $N=6^{2k(\\Delta+k)^2}$ executions the randomized algorithm does not find a solution for $(G,\\sigma,k_{vd},k_{ed},k_{ea})$, then \n\nthe probability that  $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ is a no-instance is at least $p$.\n\n\\end{myclaim}\n\n\n\\begin{proofofclaim}[Proof of Claim~\\ref{myclaim-D}]\nSuppose that $(G,\\sigma,k_{vd},k_{ed},k_{ea})$ has a solution $(U,D,A)$.  \nLet $X$ be the set of end-vertices of the edges of $D$ and $Y$ is the set of end-vertices of $A$. \nLet $W=N_G^2[U]\\cup N_G[X\\cup Y]$ and \ndenote by $L$ the set of edges incident to the vertices of $N_G[U]\\cup X\\cup Y$.\nThe algorithm colors the vertices of $G$ independently and uniformly at random by three colors and the edges are colored by two colors. \nNotice that if the vertices of $W$ and the edges of $L$ are colored correctly with respect to the solution, i.e., the vertices of $U$ are red, the vertices of $Y$ are yellow, all the other vertices are blue, the edges of $D$ are red and all the other edges are blue, then $(U,D,A)$ is a colorful solution. Hence, the algorithm can find a solution in this case.\n\nWe find a lower bound for the probability that the vertices of $W$ and the edges of $L$ are colored correctly with respect to the solution.\nRecall that $\\Delta(G)\\leq \\Delta+k$. \nHence, $|W|\\leq k_{vd}(\\Delta+k)^2+2(k_{ed}+k_{ea})(\\Delta+k)\\leq 2k(\\Delta+k)^2$ and $|L|\\leq  k_{vd}(\\Delta+k)^2+2(k_{ed}+k_{ea})(\\Delta+k)\\leq 2k(\\Delta+k)^2$. As the vertices are colored by three colors and the edges by two, we obtain that the probability that the vertices of $W$ and the edges of $L$ are colored correctly with respect to the solution is at least \n$3^{-2k(\\Delta+k)^2}\\cdot 2^{-2k(\\Delta+k)^2}=6^{-2k(\\Delta+k)^2}$. \n\nThe probability that the vertices of $W$ and the edges of $L$ are not colored correctly with respect to the solution is at most $1-6^{-2k(\\Delta+k)^2}$, and the probability that these vertices are non colored correctly with respect to the solution for neither of $N=6^{2k(\\Delta+k)^2}$ random colorings is at most   $(1-1/N)^{N}$, and the claim follows.\n\\end{proofofclaim}\n\n\\medskip\nClaim~\\ref{myclaim-D} implies that the running time of the randomized algorithm is $2^{O(k(\\Delta+k)^2}\\cdot n^2$.\n\nThe algorithm can be derandomized by standard techniques (see~ \\cite{AlonYZ95,CaiCC06}) because random colorings can be replaced by the colorings induced by \\emph{universal sets}.\nLet $m$ and $r$ be positive integers, $r\\leq m$. An  \\emph{$(m,r)$-universal set} is a collection of binary vectors of length $m$ such that for each index subset of size $r$, each of the $2^r$ possible combinations of values appears in some vector of the set. It is known that an $(m,r)$-universal set can be constructed in {\\ensuremath{{\\operatorname{FPT}}}}-time with the parameter $r$. The best construction is due to Naor, Schulman and Srinivasan~\\cite{naor1995splitters}. They obtained an $(m,r)$-universal set of size $2^r\\cdot r^{O(\\log r)} \\log m$, and proved that the elements of the sets  can be listed in time that is linear in the size of the set. \n\nIn our case we have $m=|V(G)|+|E(G)|\\leq ((\\Delta+k)/2+1)n$ and $r=4k(\\Delta+k)^2$, as we have to obtain the correct coloring of $W$ and $L$ corresponding to a solution $(U,D,A)$. \nObserve that colorings induced by a universal set are binary and we use three colors. To fix it, we assume that the coloring of the vertices and edges is done in two stages. First, we color the elements of $G$ by two colors: red and green, and then recolor the green elements by yellow or blue. By using  an $(m,r)$-universal set of size $2^r\\cdot r^{O(\\log r)} \\log m$, we get \n $4^r\\cdot r^{O(\\log r)} \\log m$ colorings by three colors. We conclude that the running time of the derandomized algorithm is $2^{O(k(\\Delta+k)^2}\\cdot n^2\\log n$.\n\\qed\n\\end{proof}\n\n\\section{Kernelization for  Editing to a Graph with a Given Degree Sequence}\\label{sec:kernel}\nIn this section we show that \\textsc{Editing to a Graph with a Given Degree Sequence} has a polynomial kernel when parameterized by $k+\\Delta$ if $S=\\{ea\\}$, but for all other nonempty $S\\subseteq \\{vd,ed,ea\\}$, there is no polynomial kernel unless  ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$.\n\n\\begin{theorem}\\label{thm:kernel}\nIf $S=\\{{\\textrm{ea}}\\}$, then \\textsc{Editing to a Graph with a Given Degree Sequence} parameterized by $k+\\Delta$ has a kernel with $O(k\\Delta^2)$ vertices, where $\\Delta=\\max \\sigma$.  \n\\end{theorem}\n\n\\begin{proof}\nLet $(G,\\sigma,k)$ be an instance of \\textsc{Editing to a Graph with a Given Degree Sequence} and $\\Delta=\\max \\sigma$. If $\\Delta(G)>\\Delta$,  $(G,\\sigma,k)$ is a no-instance, because by edge additions it is possible only increase degrees. Hence, we immediately stop and return a NO-answer in this case. Assume from now that $\\Delta(G)\\leq \\Delta$.\nFor $i\\in\\{0,\\ldots,\\Delta\\}$, denote $W_i=\\{v\\in V(G)\\mid d_G(v)=i\\}$ and $\\delta_i=|W_i|$. Let $s_i=\\min\\{\\delta_i,2k(\\Delta+1)\\}$ and let $W_i'\\subseteq W_i$ be an arbitrary set of size $s_i$ for $i\\in\\{0,\\ldots,\\Delta\\}$.  We consider $W=\\cup_{i=0}^\\Delta W_i'$ and prove the following claim.\n\n\n\\begin{myclaim}\n\\label{myclaim-E}\nIf $(G,\\sigma,k)$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}, then there is \n$A\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ such that $\\sigma(G+A)=\\sigma$, $|A|\\leq k$ and for any $uv\\in A$, $u,v\\in  W$.\n\\end{myclaim}\n\n\\begin{proofofclaim}[Proof of Claim~\\ref{myclaim-E}]\nSuppose that $A\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ is a solution for   $(G,\\sigma,k)$, i.e., $\\sigma(G+A)=\\sigma$ and $|A|\\leq k$, such that the total number of end-vertices of the edges of $A$ in $V(G)\\setminus W$ is minimum. Suppose that there is $i\\in\\{0,\\ldots,\\Delta\\}$ such that at least one edge of $A$ has its end-vertex in $W_i\\setminus W_i'$. \nClearly, $s_i= 2k(\\Delta+1)$.\nDenote by $\\{x_1,\\ldots,x_p\\}$ the set of end-vertices of the edges of $A$ in $W_i$ and let $\\{y_1,\\ldots,y_q\\}$ be the set of end-vertices of the edges of $A$ in $V(G)\\setminus W_i$. \nSince $p+q\\leq 2k$, $\\Delta(G)\\leq \\Delta$ and $s_i=2k(\\Delta+1)$, there is a set of vertices $\\{x_1',\\ldots,x_p'\\}\\subseteq W_i'$ such that the vertices of this set are pairwise nonadjacent and are not adjacent to the vertices of $\\{y_1,\\ldots,y_q\\}$. We construct $A'\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ by replacing every edge $x_iy_j$ by $x_i'y_j$ for $i\\in\\{1,\\ldots,p\\}$ and $j\\in\\{1,\\ldots,q\\}$, and every edge $x_ix_j$ is replaced by $x_i'x_j'$ for $i,j\\in\\{1,\\ldots,q\\}$. It is straightforward to verify that $A'$ is a solution for  \n $(G,\\sigma,k)$, but $A'$ has less end-vertices outside $W$ contradicting the choice of $A$. Hence, no edge of $A$ has an end-vertex in $V(G)\\setminus W$.\n\\end{proofofclaim}\n\n\\medskip\n\nIf $\\delta_i\\leq 2k(\\Delta+1)$ for $i\\in\\{0,\\ldots,\\Delta\\}$, then we return the original instance $(G,\\sigma,k)$ and stop, as $|V(G)|\\leq 2k(\\Delta+1)^2$. From now we assume that there is $i\\in\\{0,\\ldots,\\Delta\\}$ such that $\\delta_i>2k(\\Delta+1)$.\nWe construct the graph $G'$ as follows.\n\\begin{itemize}\n\\item Delete all the vertices of $V(G)\\setminus W$.\n\\item Construct $h=\\Delta+2$ new vertices $v_1,\\ldots,v_h$ and join them by edges pairwise to obtain a clique.  \n\\item For any $u\\in W$ such that $r=|N_G(u)\\cap (V(G)\\setminus W)|\\geq 1$, construct edges $uv_1,\\ldots,uv_r$. \n\\end{itemize}\nNotice that $d_{G'}(v_1)\\geq\\ldots\\geq d_{G'}(v_h)\\geq\\Delta+1$ and $d_{G'}(u)=d_G(u)$ for $u\\in W$.\nNow we consider the sequence $\\sigma$ and construct the sequence $\\sigma'$ as follows.\n\\begin{itemize}\n\\item The first $h$ elements of $\\sigma'$ are $d_{G'}(v_1),\\ldots,d_{G'}(v_h)$.\n\\item Consider the elements of $\\sigma$ in their order and for each integer $i\\in\\{0,\\ldots,\\Delta\\}$ that occurs $j_i$ times in $\\sigma$, add $j_i-(\\delta_i-s_i)$ copies of $i$ in $\\sigma'$.\n\\end{itemize}\nWe claim that $(G,\\sigma,k)$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence} if and only if $(G',\\sigma',k)$ is a yes-instance of the problem.\n\nSuppose that $(G,\\sigma,k)$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}. By Claim~\\ref{myclaim-E}, it has a solution \n$A\\subseteq \\binom{V(G)}{2}\\setminus E(G)$ such that  for any $uv\\in A$, $u,v\\in  W$. It is straightforward to verify that $\\sigma(G'+A)=\\sigma'$, i.e., $A$ is a solution for $(G',\\sigma',k)$. Assume that $A\\subseteq \\binom{V(G')}{2}\\setminus E(G)$ is a solution for $(G',\\sigma',k)$. Because  $d_{G'}(v_1),\\ldots,d_{G'}(v_h)$ are the first $h$ elements of $\\sigma'$ and $d_{G'}(u)=d_G(u)\\leq \\Delta$ for $u\\in W$, for any $uv\\in A$, $u,v\\in W$. Then  it is straightforward to check that $\\sigma(G+A)=\\sigma$, i.e.,  $A$ is a solution for $(G,\\sigma,k)$.\n\\qed\n\\end{proof}\n\nWe complement Theorem~\\ref{thm:kernel} by showing that it is unlikely that \\textsc{Editing to a Graph with a Given Degree Sequence} parameterized by $k+\\Delta$ has a polynomial kernel\nfor $S\\neq\\{{\\textrm{ea}}\\}$. The proof is based on the cross-composition technique introduced by Bodlaender, Jansen and Kratsch~\\cite{BodlaenderJK14}.\n\n\\begin{theorem}\\label{thm:no-kernel}\nIf $S\\subseteq\\{{\\textrm{vd}},{\\textrm{ed}},{\\textrm{ea}}\\}$ but $S\\neq\\{{\\textrm{ed}}\\}$, then \\textsc{Editing to a Graph with a Given Degree Sequence}  has no polynomial kernel unless  ${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$ when the problem is parameterized by $k+\\Delta$ for $\\Delta=\\max\\sigma$.  \n\\end{theorem}\n\n\n\\begin{proof}\nFor the proof of the theorem, we  need some additional definitions and statements.\nRecall that, formally, a parameterized problem $\\mathcal{P}\\subseteq\\Sigma^*\\times\\mathbb{N}$, where $\\Sigma$ is a finite alphabet.\n\nLet $\\Sigma$ be a finite alphabet. An equivalence relation $\\mathcal{R}$ on the set of strings $\\Sigma^*$ is called a \\emph{polynomial equivalence relation} if the following two conditions hold:\n\\begin{itemize}\n\\item[i)] there is an algorithm that given two strings $x,y\\in\\Sigma^*$ decides whether $x$ and $y$ belong to\nthe same equivalence class in time polynomial in $|x|+|y|$,\n\\item[ii)] for any finite set $S\\subseteq\\Sigma^*$, the equivalence relation $\\mathcal{R}$ partitions the elements of $S$ into a\nnumber of classes that is polynomially bounded in the size of the largest element of $S$.\n\\end{itemize}\n\n\nLet $L\\subseteq\\Sigma^*$ be a language, let $\\mathcal{R}$ be a polynomial\nequivalence relation on $\\Sigma^*$, and let $\\mathcal{P}\\subseteq\\Sigma^*\\times\\mathbb{N}$   \nbe a parameterized problem.  An \\emph{OR-cross-composition of $L$ into $\\mathcal{P}$} (with respect to $\\mathcal{R}$) is an algorithm that, given $t$ instances $x_1,x_2,\\ldots,x_t\\in\\Sigma^*$ \nof $L$ belonging to the same equivalence class of $\\mathcal{R}$, takes time polynomial in\n$\\sum_{i=1}^t|x_i|$ and outputs an instance $(y,k)\\in \\Sigma^*\\times \\mathbb{N}$ such that:\n\\begin{itemize}\n\\item[i)] the parameter value $k$ is polynomially bounded in $\\max\\{|x_1|,\\ldots,|x_t|\\} + \\log t$,\n\\item[ii)] the instance $(y,k)$ is a yes-instance for $\\mathcal{P}$ if and only if at least one instance $x_i$ is a yes-instance for $L$ for $i\\in\\{1,\\ldots,t\\}$.\n\\end{itemize}\nIt is said that $L$ \\emph{OR-cross-composes into} $\\mathcal{P}$ if a cross-composition\nalgorithm exists for a suitable relation $\\mathcal{R}$.\n\nIn particular, Bodlaender, Jansen and Kratsch~\\cite{BodlaenderJK14} proved that \nif an {\\ensuremath{{\\operatorname{NP}}}}-hard language $L$ OR-cross-composes into the parameterized problem $\\mathcal{P}$,\nthen $\\mathcal{P}$ does not admit a polynomial kernelization unless\n${\\ensuremath{{\\operatorname{NP}}}}\\subseteq{\\ensuremath{{\\operatorname{coNP}}}}/\\text{\\rm poly}$.\n\nWe prove that the \\textsc{Clique} problem that asks for a graph $G$ and a positive integer $k$, whether $G$ has a clique of size $k$, OR-cross-composes into \\textsc{Editing to a Graph with a Given Degree Sequence}. Recall that this problem is  {\\ensuremath{{\\operatorname{NP}}}}-complete~\\cite{GareyJ79} for regular graphs.\n\n\nSuppose that ${\\textrm{ed}}\\in S$.\nWe assume that two instances $(G,k)$ and $(G',k')$ of \\textsc{Clique} are equivalent if $|V(G)|=|V(G')|$, $k=k'$ and $G,G'$ are $d$-regular for some nonnegative integer $d$.\n Let $(G_1,k),\\ldots,(G_t,k)$ be equivalent instances of \\textsc{Clique}, where $G_1,\\ldots,G_t$ are $d$-regular, $n=|V(G_1)|=\\ldots=|V(G_t)|$ and $d\\geq k-1$. \nWe construct the graph $G$ by taking the disjoint union of  copies of $G_1,\\ldots,G_t$. \nConsider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_{nt})$, where\n\n", "index": 13, "text": "$$\n\\sigma_i=\n\\begin{cases}\nd&\\mbox{if }1\\leq i\\leq nt-k,\\\\\nd-(k-1)&\\mbox{if } nt-k+1\\leq i\\leq nt.\n\\end{cases}\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex7.m1\" class=\"ltx_Math\" alttext=\"\\sigma_{i}=\\begin{cases}d&amp;\\mbox{if }1\\leq i\\leq nt-k,\\\\&#10;d-(k-1)&amp;\\mbox{if }nt-k+1\\leq i\\leq nt.\\end{cases}\" display=\"block\"><mrow><msub><mi>\u03c3</mi><mi>i</mi></msub><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mi>d</mi></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>\u2062</mo><mi>t</mi></mrow><mo>-</mo><mi>k</mi></mrow></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><mi>d</mi><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>t</mi></mrow><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mrow><mi>n</mi><mo>\u2062</mo><mi>t</mi></mrow></mrow><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.03174.tex", "nexttext": "\n We claim that $(G_i,k)$ is a yes-instance of \\textsc{Clique} for some $i\\in\\{1,\\ldots,t\\}$\nif and only if $(G,\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\nIf $K$ is a clique of size $k$ in $G_i$, then the graph $G'$ obtained  from $G$ by the deletion of the $k'=k(k-1)/2$ subdivision vertices corresponding to the edges $G[K]$ has the degree sequence $\\sigma$. Assume that \n$(U,D,A)$ is a solution of $(G,\\sigma,k)$. Because $\\sigma$ has $p$ elements and $|V(G)|-p=t(n+m)-p=k'$, $U$ contains $k'$ vertices and $D=A=\\emptyset$. By the construction of $G$ and $\\sigma$, $U$ contains only vertices of degree 2. As $d-(k-1)\\geq 3$, we have that $U$ contains $k'$ subdivision vertices.\nIt remains to notice that because in $G-U$ $k$ vertices have degree $d-(k-1)$, the subdivision vertices of $U$ correspond to the edges of a compete graph with $k$ vertices, i.e., $G$ contains a clique of size $k$. Clearly, any clique $K$ of size $k$ is a clique of some $G_i$ for $i\\in\\{1,\\ldots,t\\}$.\n\\qed\n\\end{proof}\n\n\n\n\n\n\n\n\\begin{thebibliography}{10}\n\\providecommand{\\url}[1]{\\texttt{#1}}\n\\providecommand{\\urlprefix}{URL }\n\n\\bibitem{AlonYZ95}\nAlon, N., Yuster, R., Zwick, U.: Color-coding. J. ACM  42(4),  844--856 (1995)\n\n\\bibitem{Barabasi99}\nBarabasi, A.L., Albert, R.: Emergence of scaling in random networks. Science\n  286(5439),  509--512 (1999)\n\n\\bibitem{BodlaenderJK14}\nBodlaender, H.L., Jansen, B.M.P., Kratsch, S.: Kernelization lower bounds by\n  cross-composition. {SIAM} J. Discrete Math.  28(1),  277--305 (2014)\n \n\n\\bibitem{BoeschST77}\nBoesch, F.T., Suffel, C.L., Tindell, R.: The spanning subgraphs of {Eulerian}\n  graphs. Journal of Graph Theory  1(1),  79--84 (1977)\n\n\\bibitem{BredereckFHNNT14}\nBredereck, R., Froese, V., Hartung, S., Nichterlein, A., Niedermeier, R.,\n  Talmon, N.: The complexity of degree anonymization by vertex addition. In:\n  {AAIM} 2014. Lecture Notes in Computer Science, vol. 8546, pp. 44--55.\n  Springer (2014)\n\n\\bibitem{BredereckHNW13}\nBredereck, R., Hartung, S., Nichterlein, A., Woeginger, G.J.: The complexity of\n  finding a large subgraph under anonymity constraints. In: {ISAAC} 2013.\n  Lecture Notes in Computer Science, vol. 8283, pp. 152--162. Springer (2013)\n\n\\bibitem{Cai08}\nCai, L.: Parameterized complexity of cardinality constrained optimization\n  problems. Comput. J.  51(1),  102--121 (2008)\n\n\n\\bibitem{CaiCC06}\nCai, L., Chan, S.M., Chan, S.O.: Random separation: A new method for solving\n  fixed-cardinality optimization problems. In: IWPEC. Lecture Notes in Computer\n  Science, vol. 4169, pp. 239--250. Springer (2006)\n\n\\bibitem{CaiY11}\nCai, L., Yang, B.: Parameterized complexity of even/odd subgraph problems. J.\n  Discrete Algorithms  9(3),  231--240 (2011)\n\n\\bibitem{Cornuejols88}\nCornu{\\'{e}}jols, G.: General factors of graphs. J. Comb. Theory, Ser. {B}\n  45(2),  185--198 (1988)\n\n\n\\bibitem{CyganFKLMPPS15}\nCygan, M., Fomin, F.V., Kowalik, L., Lokshtanov, D., Marx, D., Pilipczuk, M.,\n  Pilipczuk, M., Saurabh, S.: Parameterized Algorithms. Springer (2015)\n\n\n\\bibitem{CyganMPPS14}\nCygan, M., Marx, D., Pilipczuk, M., Pilipczuk, M., Schlotter, I.: Parameterized\n  complexity of {Eulerian} deletion problems. Algorithmica  68(1),  41--61\n  (2014)\n\n\\bibitem{DGHP14}\nDabrowski, K.K., Golovach, P.A., van~'t Hof, P., Paulusma, D.: Editing to\n  {Eulerian} graphs. In: {FSTTCS} 2014. LIPIcs, vol.~29, pp. 97--108. Schloss\n  Dagstuhl - Leibniz-Zentrum fuer Informatik (2014)\n\n\\bibitem{DabrowskiGHPT15}\nDabrowski, K.K., Golovach, P.A., van~'t Hof, P., Paulusma, D., Thilikos, D.M.:\n  Editing to a planar graph of given degrees. In: {CSR} 2015. Lecture Notes in\n  Computer Science, vol. 9139, pp. 143--156. Springer (2015)\n\n\\bibitem{DowneyF13}\nDowney, R.G., Fellows, M.R.: Fundamentals of Parameterized Complexity. Texts in\n  Computer Science, Springer (2013)\n\n\n\\bibitem{FroeseNN14}\nFroese, V., Nichterlein, A., Niedermeier, R.: Win-win kernelization for degree\n  sequence completion problems. In: {SWAT} 2014. Lecture Notes in Computer\n  Science, vol. 8503, pp. 194--205. Springer (2014)\n\n\\bibitem{GareyJ79}\nGarey, M.R., Johnson, D.S.: Computers and Intractability: A Guide to the Theory\n  of NP-Completeness. W. H. Freeman (1979)\n\n\\bibitem{Golovach14a}\nGolovach, P.A.: Editing to a connected graph of given degrees. In: {MFCS} 2014,\n  Part {II}. Lecture Notes in Computer Science, vol. 8635, pp. 324--335.\n  Springer (2014)\n\n\\bibitem{Golovach15}\nGolovach, P.A.: Editing to a graph of given degrees. Theor. Comput. Sci.  591,\n  72--84 (2015)\n\n\n\\bibitem{HartungNNS15}\nHartung, S., Nichterlein, A., Niedermeier, R., Such{\\'{y}}, O.: A refined\n  complexity analysis of degree anonymization in graphs. Inf. Comput.  243,\n  249--262 (2015)\n\n\n\\bibitem{HartungT15}\nHartung, S., Talmon, N.: The complexity of degree anonymization by graph\n  contractions. In: {TAMC} 2015. Lecture Notes in Computer Science, vol. 9076,\n  pp. 260--271. Springer (2015)\n\n\\bibitem{MathiesonS12}\nMathieson, L., Szeider, S.: Editing graphs to satisfy degree constraints: A\n  parameterized approach. J. Comput. Syst. Sci.  78(1),  179--191 (2012)\n\n\\bibitem{MoserT09}\nMoser, H., Thilikos, D.M.: Parameterized complexity of finding regular induced\n  subgraphs. J. Discrete Algorithms  7(2),  181--190 (2009)\n\n\\bibitem{naor1995splitters}\nNaor, M., Schulman, L., Srinivasan, A.: Splitters and near-optimal\n  derandomization. In: FOCS 1995, pp. 182--191. IEEE (1995)\n\n\\end{thebibliography}\n\n\n\n\n", "itemtype": "equation", "pos": 55886, "prevtext": "\nLet $k'=k(k-1)/2$. We claim that $(G_i,k)$ is a yes-instance of \\textsc{Clique} for some $i\\in\\{1,\\ldots,t\\}$\nif and only if $(G,\\sigma,k')$ is a yes-instance of \\textsc{Editing to a Graph with a Given Degree Sequence}.\nIf $K$ is a clique of size $k$ in $G_i$, then the graph $G'$ obtained  from $G$ by the deletion of the $k'=k(k-1)/2$ edges of $D=E(G[K])$ has the degree sequence $\\sigma$. Assume that \n$(U,D,A)$ is a solution of $(G,\\sigma,k)$. Clearly, $U=\\emptyset$ even if ${\\textrm{vd}}\\in R$, because $\\sigma$ contains $nt$ elements. Since $\\sum_{i=1}^{nt}\\sigma_i=dn-k(k-1)$, we have that $A=\\emptyset$. It remains to notice that because in $G-D$ $k$ vertices have degree $d-(k-1)$, $G[D]$ is a compete graph with $k$ vertices, i.e., $G$ contains a clique of size $k$. Clearly, any clique $K$ of size $k$ is a clique of some $G_i$ for $i\\in\\{1,\\ldots,t\\}$.\n\nAssume that $S=\\{{\\textrm{vd}}\\}$. Now we assume that two instances $(G,k)$ and $(G',k')$ of \\textsc{Clique} are equivalent if $|V(G)|=|V(G')|$, $|E(G)|=|E(G')|$, $k=k'$ and $G,G'$ are $d$-regular for some nonnegative integer $d$.\nLet $(G_1,k),\\ldots,(G_t,k)$ be equivalent instances of \\textsc{Clique}, where $G_1,\\ldots,G_t$ are $d$-regular, $n=|V(G_1)|=\\ldots=|V(G_t)|$, $m=|E(G_1)|=\\ldots=|E(G_t)|$ and $d-(k-1)\\geq 3$. \nWe construct the graph $G$ as follows.\n\\begin{itemize}\n\\item Take the disjoint union of copies of $G_1,\\ldots,G_t$.\n\\item For each edge $uv\\in E(G_i)$ for $i\\in\\{1,\\ldots,t\\}$, subdivide it, i.e., construct a new vertex $w$ and replace $uv$ by $uw$ and $wv$. We call the new vertices \\emph{subdivision} vertices.\n\\end{itemize}\nLet $k'=k(k-1)/2$.\nConsider the sequence $\\sigma=(\\sigma_1,\\ldots,\\sigma_p)$, where $p=(n+m)t-k'$ and \n\n", "index": 15, "text": "$$\n\\sigma_i=\n\\begin{cases}\nd&\\mbox{if } 1\\leq i\\leq nt-k,\\\\\nd-(k-1)&\\mbox{if } nt-k+1\\leq i\\leq nt,\\\\\n2&\\mbox{if } nt+1\\leq i\\leq p.\n\\end{cases}\n$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex8.m1\" class=\"ltx_Math\" alttext=\"\\sigma_{i}=\\begin{cases}d&amp;\\mbox{if }1\\leq i\\leq nt-k,\\\\&#10;d-(k-1)&amp;\\mbox{if }nt-k+1\\leq i\\leq nt,\\\\&#10;2&amp;\\mbox{if }nt+1\\leq i\\leq p.\\end{cases}\" display=\"block\"><mrow><msub><mi>\u03c3</mi><mi>i</mi></msub><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mi>d</mi></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mrow><mrow><mi>n</mi><mo>\u2062</mo><mi>t</mi></mrow><mo>-</mo><mi>k</mi></mrow></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><mi>d</mi><mo>-</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>-</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>t</mi></mrow><mo>-</mo><mi>k</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mrow><mi>n</mi><mo>\u2062</mo><mi>t</mi></mrow></mrow><mo>,</mo></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>2</mn></mtd><mtd columnalign=\"left\"><mrow><mrow><mrow><mrow><mtext>if\u00a0</mtext><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>t</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>\u2264</mo><mi>i</mi><mo>\u2264</mo><mi>p</mi></mrow><mo>.</mo></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}]