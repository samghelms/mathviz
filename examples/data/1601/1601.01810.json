[{"file": "1601.01810.tex", "nexttext": "\nand  the magnetic Reynolds number $Re_m$, \\label{eq:def:Re}\n\n", "itemtype": "equation", "pos": 12287, "prevtext": "\n\\label{firstpage}\n\\author[S. Vantieghem, A. Sheyko and A. Jackson]{S. Vantieghem, A. Sheyko, A. Jackson \\\\ Institut f\\\"ur Geophysik, ETH Z\\\"urich, Sonneggstrasse 5, CH8092 Z\\\"urich, Switzerland}\n\\title{Applications of a  finite-volume algorithm for incompressible MHD problems}\n\\maketitle\n\\begin{abstract}\nWe present the theory, algorithms and implementation of a parallel finite-volume algorithm for the solution of the incompressible magnetohydrodynamic (MHD) equations using unstructured grids that are applicable for a wide variety of geometries.\nOur method implements a mixed Adams-Bashforth/Crank-Nicolson scheme for\nthe nonlinear terms in the MHD equations and we prove that it is stable independent of the time step. To ensure that the solenoidal condition is met for the magnetic field, we\nuse a method whereby a pseudo-pressure is introduced into the induction equation; since we are concerned with incompressible flows, the resulting Poisson equation for the pseudo-pressure is solved alongside the equivalent Poisson problem for the velocity field.\nWe validate our code in a variety of geometries including periodic boxes, spheres, spherical shells, spheroids and ellipsoids; for the finite geometries we implement the so-called ferromagnetic or pseudo-vacuum boundary conditions appropriate for a surrounding medium with infinite magnetic permeability. This implies that the magnetic field must be purely perpendicular to the boundary. We present a number of comparisons against previous results and against analytical solutions, which verify  the code's accuracy. This documents the code's reliability as a prelude to its use in more difficult problems.\nWe finally present a new simple drifting solution for thermal convection in a spherical shell that successfully sustains a\nmagnetic field of simple geometry. By dint of its rapid stabilization from the given initial conditions, we deem it suitable as a benchmark against which other self-consistent dynamo codes can be tested.\n\\end{abstract}  \n\\section{Introduction}\nThe Earth, as well as many other celestial bodies, posesses a dynamo, that is, a self-sustained magnetic field that is generated by the turbulent flow of molten iron-rich material in its fluid outer core. Understanding the processes governing the geodynamo, and more broadly, the dynamics of planetary fluid envelopes, is a formidable task for numerous reasons. First, we can only probe the interiors of these bodies indirectly, for example through observations of the magnetic field at the planetary surface, analysis of seismic data, records of length-of-day variations or detailed measurements of their gravity field. Moreover, the timescales involved range from days to millions of years whereas abundant data coverage has been available only for  a few decades. Furthermore, planetary cores operate in an extreme parameter regime that is difficult to reach experimentally. Bearing all this in mind, numerical simulations of the relevant core processes are essential to increase our understanding of natural dynamo action.\n\nThe mechanisms underlying the generation and sustenance of magnetic fields are studied in a branch of physics called magnetohydrodynamics (MHD). The notion MHD refers to physical processes in which there is a mutual interaction between the flow of an electrically conducting fluid and an electromagnetic field. In mathematical terms, this leads to a coupling between the Navier\\-Stokes equations and the pre-Maxell equations. Apart from geo- and astrophysical phenomena, MHD flows are also encountered in metallurgical processes where magnetic fields are used for various purposes such as the enhancing of mixing processes or the damping of small-scale turbulence. The essential difference between natural and manmade MHD phenomena is that the coupling between flow and magnetic field is virtually one-way in the latter. More specifically, in manmade flows, the role of the Lorentz force in the momentum balance can be significant, whereas the magnetic field induced by the flow mostly remains negligible with respect to the externally imposed one. This difference can be cast in terms of the magnetic Reynolds number $Re_m$, as defined later by equation (\\ref{eq:def_Rem}), which is a proxy for the ability of the flow to induce a significant magnetic field. This implies that the existence of a dynamo demands that the magnetic Reynolds number is large. \n\nStarting with the pioneering work of \\citet{Glatzmaier1995} and \\citet{kageyama1995}, numerical studies of self-consistent geodynamo processes in a planetary geometry have mainly been performed using spectral codes. These methods are based on the following strategy: (1) The divergence-free character of the velocity and magnetic field is implicitly built-in by using a toroidal-poloidal formulation. (2) The unknown scalar functions are expanded in a complete series of functions. In the spherical case spherical harmonics and a set of radial basis functions are used; the 1-D problem in the radial direction is then solved by means of a finite-difference approach or a spectral method that uses basis functions such as the Chebychev or Jacobi polynomials. This type of code is nowadays well-established, and the continuous increase in computational power has allowed more Earth-like parameters \\citep[e.g.,][]{Sakuraba2009} to be reached. The main limitation of these codes is that their application is restricted to problems with a spherical symmetry; a small drawback is the computational expense from the back-and-forth transformations between spectral and real space required for the evaluation of nonlinear terms; this brings along couplings between all expansion coefficients and global communication in simulations using distributed memory parallelization.\n\nLocal discretization approaches like the finite-volume (FV), finite-difference or finite-element method have been much less popular for the simulation of dynamo processes. The rationale for using this type of code is that they can accommodate more easily boundary topography, which has recently been advocated to be an essential ingredient in the mechanism underlying the dynamos of the ancient Moon and exoplanets \\citep{dwyer2011,lebarsNature,cebronAA}. This type of code essentially faces two challenging problems: 1) The discretized induction equation does not necessarily conserve the solenoidal character of the magnetic field. 2) The boundary condition next to an electrically insulating medium, representing the silicate mantle in the context of planetary physics, has a non-local nature, and requires, in principle, the solution of a Laplace equation in an exterior domain of infinite extent. The first issue can be avoided by using a so-called constrained transport method \\citep[][]{evans1988,teyssier2006}, which is based on the rotational form of the induction equation (see expression (\\ref{eq:induction_rot}) below). To date, this technique has only been used in the context of structured-grid codes (albeit in a non-Cartesian coordinate system). Some other authors have reformulated the induction equation in terms of the magnetic vector potential \\citep{matsui2004development,CebronMHD}. A third possibility is to supplement the induction equation with the gradient of a pseudo-pressure that acts as a Lagrangian multiplier to project the magnetic field onto a solenoidal field. This approach was introduced by \\cite{toth2000}, and has since been adopted by a large number of authors \\citep[e.g.,][]{harder2005finite,chan2007,guermond2007}. \n\nThe issue of insulating boundary conditions has been approached from different angles as well. Given the fact that, in the insulating exterior, the magnetic field derives from a scalar potential $\\phi$ which declines as $\\mathcal{O}(r^{-2})$, one can solve the Laplace equation governing $\\phi$ in an extended but finite exterior domain and impose $\\phi=0$ far away from the fluid domain of interest. Another approximation is to replace the insulating exterior by a weakly conducting one \\citep{chan2007}. An elegant alternative was devised by \\citet{iskakov2004}, who recasted the Laplace equation for $\\phi$ into a boundary integral equation on the interface between the insulating and conducting domain. This method does not introduce any approximation at the physical level, and reduces a 3-D problem into a 2-D one. The main disadvantage of this method, however, is that the coefficient matrix representing the discretized boundary integral equation is dense so that this approach eventually comes at a higher computational cost than the direct solution of the Laplace equation for $\\phi$. Apart from the computational overhead associated with solving the Laplace equation, the different approximations discussed above also affect the accuracy of the results obtained with these codes, as noted by \\citet{jackson2014}. \n\nPseudo-vacuum boundary conditions, also referred to as ferromagnetic boundary conditions, have become a popular alternative to the use of insulating boundary conditions. Implemented for the first time in a numerical code by \\citet{kageyama1995}, these conditions prescribe that the magnetic field tangential to the boundary of the conducting fluid region to be zero. The physical equivalent of this mathematical condition is a perfect ferromagnetic exterior, that is, a material whose magnetic permeability tends to infinity. These conditions are more easily implemented in local codes, and do not require additional approximations. Hence, they may be better suited for benchmarking purposes. Finally, this type of boundary condition has also been applied by the solar physics community, where its use is underpinned by observational support \\citep{gilmanmiller}.\n\nIn this work, we present a FV algorithm for the solution of the incompressible MHD equations. It is akin to the ones used by \\citet{harder2005finite,hullermann} and \\cite{wu2009dynamo,WR2012}. The main novelty of our algorithm is the capability of handling arbitrary unstructured meshes. This permits us to consider a wide range of different geometries, like spheres and ellipsoids both with and without inner cores. To describe our approach, we first present the governing equations in section \\ref{sec:eqns}. Then, we describe and validate our numerical method in sections \\ref{sec:bulk_algorithm} and \\ref{sec:ferro}. In section \\ref{sec:benchmark}, we present a self-consistent numerical dynamo benchmark. \n\n\\section{Mathematical background} \\label{sec:eqns}\nThe equations governing incompressible MHD can be readily derived from the incompressible Navier-Stokes equation and the pre-Maxell equations. From a physical point of view, the neglect of displacement currents is valid as long as the flow speed is small with respect to the speed of light in the medium, that is, for non-relativistic phenomena. Upon the choice of a characteristic length and velocity scale $L$ and $U$, respectively, we can write the MHD equations in the following non-dimensional form:\n\\begin{eqnarray}\n\\nabla \\cdot {\\boldsymbol u} & = & 0, \\label{eq:divu} \\\\\n\\frac{\\partial {\\boldsymbol u}}{\\partial t} + {\\boldsymbol u} \\cdot \\nabla {\\boldsymbol u}  & = & {\\boldsymbol b} \\cdot \\nabla {\\boldsymbol b} + Re^{-1}\\nabla^2{\\boldsymbol u} - \\nabla p + {\\boldsymbol f}_b, \\label{eq:navierstokes} \\\\\n\\frac{\\partial {\\boldsymbol b}}{\\partial t} + {\\boldsymbol u} \\cdot  \\nabla {\\boldsymbol b} & = & {\\boldsymbol b}\\cdot \\nabla {\\boldsymbol u} + Re_m^{-1} \\nabla^2{\\boldsymbol b}, \\label{eq:induction} \\\\\n\\nabla \\cdot {\\boldsymbol b} & = & 0. \\label{eq:divb}\n\\end{eqnarray}\nHere $t$ denotes time, ${\\boldsymbol u}$ the velocity field, ${\\boldsymbol b}$ the magnetic field, ${\\boldsymbol f}_b$ a body force, and $p$ the (modified) pressure. These quantities have been non-dimensionalised according to ${\\boldsymbol u} \\rightarrow U{\\boldsymbol u}$, $t \\rightarrow LU^{-1} t$, $\\nabla \\rightarrow L^{-1} \\nabla$, $p \\rightarrow \\rho U^{2} p$, ${\\boldsymbol f}_b \\rightarrow \\rho U^2 L^{-1}{\\boldsymbol f}_b $, ${\\boldsymbol b} \\rightarrow U \\sqrt{\\rho \\mu}{\\boldsymbol b}$, where $\\rho$ and $\\mu$ denote the fluid's mass density and magnetic permeability, respectively.\n \nThese equations contain two independent non-dimensional numbers: the well-known Reynolds number $Re$,\n\n", "index": 1, "text": "\\begin{equation} \nRe = \\frac{UL}{\\nu},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"Re=\\frac{UL}{\\nu},\" display=\"block\"><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><mi>e</mi></mrow><mo>=</mo><mfrac><mrow><mi>U</mi><mo>\u2062</mo><mi>L</mi></mrow><mi>\u03bd</mi></mfrac></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": " \nIn these definitions, the symbols $\\nu$ and $\\sigma$ represent the fluid's viscosity and electrical conductivity, respectively; these material properties will be assumed constant throughout this work.\n\nThe induction equation (\\ref{eq:induction}) has an alternative representation,\n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nand  the magnetic Reynolds number $Re_m$, \\label{eq:def:Re}\n\n", "index": 3, "text": "\\begin{equation}\nRe_m = \\mu \\sigma U L. \\label{eq:def_Rem}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"Re_{m}=\\mu\\sigma UL.\" display=\"block\"><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><msub><mi>e</mi><mi>m</mi></msub></mrow><mo>=</mo><mrow><mi>\u03bc</mi><mo>\u2062</mo><mi>\u03c3</mi><mo>\u2062</mo><mi>U</mi><mo>\u2062</mo><mi>L</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhich reveals immediately that the magnetic induction equation (\\ref{eq:induction}) or (\\ref{eq:induction_rot}) satisfies the property:\n\n", "itemtype": "equation", "pos": 12757, "prevtext": " \nIn these definitions, the symbols $\\nu$ and $\\sigma$ represent the fluid's viscosity and electrical conductivity, respectively; these material properties will be assumed constant throughout this work.\n\nThe induction equation (\\ref{eq:induction}) has an alternative representation,\n\n", "index": 5, "text": "\\begin{equation}\n\\frac{\\partial {\\boldsymbol b}}{\\partial t} = \\nabla \\times ({\\boldsymbol u} \\times {\\boldsymbol b} - Re_m^{-1} \\nabla \\times {\\boldsymbol b}), \\label{eq:induction_rot}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial{\\boldsymbol{b}}}{\\partial t}=\\nabla\\times({\\boldsymbol{u}}%&#10;\\times{\\boldsymbol{b}}-Re_{m}^{-1}\\nabla\\times{\\boldsymbol{b}}),\" display=\"block\"><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mrow><mo>\u2207</mo><mo>\u00d7</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mi>\ud835\udc96</mi><mo>\u00d7</mo><mi>\ud835\udc83</mi></mrow><mo>-</mo><mrow><mrow><mi>R</mi><mo>\u2062</mo><msubsup><mi>e</mi><mi>m</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mo>\u2207</mo></mrow><mo>\u00d7</mo><mi>\ud835\udc83</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThis implies that equations (\\ref{eq:induction}) or (\\ref{eq:induction_rot}) will satisfy the solenoidality constraint (\\ref{eq:divb}) for $t>t_0$, provided that $\\nabla \\cdot {\\boldsymbol b}=0$ at $t=t_0$. This property, however, does not necessarily carry over to spatial discretizations of the induction equation. Therefore, special care needs to be taken to ensure that $\\nabla \\cdot {\\boldsymbol b}=0$ when solving numerical approximations of the induction equation.\n\nIn order to close the system of equations (\\ref{eq:divu})-(\\ref{eq:divb}), we should supply suitable boundary conditions for ${\\boldsymbol u}$, ${\\boldsymbol b}$ at the boundaries of the solution domain $V$, denoted as $\\partial V$. Furthermore, we will use the notation $\\hat {\\boldsymbol n}$ for the external unit normal on $\\partial V$. For the velocity field ${\\boldsymbol u}$, we will only use no-slip conditions, that is, ${\\boldsymbol u}|_{\\partial V}=0$. For the magnetic field ${\\boldsymbol b}$, we will use the pseudo-vacuum condition, which specifies that the tangential components of ${\\boldsymbol b}$ vanish at the domain boundary, that is:\n\n", "itemtype": "equation", "pos": 13094, "prevtext": "\nwhich reveals immediately that the magnetic induction equation (\\ref{eq:induction}) or (\\ref{eq:induction_rot}) satisfies the property:\n\n", "index": 7, "text": "\\begin{equation}\n\\frac{\\partial( \\nabla \\cdot {\\boldsymbol b})}{\\partial t} = 0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial(\\nabla\\cdot{\\boldsymbol{b}})}{\\partial t}=0.\" display=\"block\"><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u2207</mo><mo>\u22c5</mo><mi>\ud835\udc83</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nIt should be noted that this condition does not explicitly prescribe a condition on the wall-normal component of the magnetic field. Indeed, the specific nature of the induction equation does not allow imposition of constraints on the three components of the magnetic field independently, because this could possibly lead to a violation of the solenoidal character of ${\\boldsymbol b}$. Rather, the divergence constraint (\\ref{eq:divb}) together with the two scalar conditions (\\ref{eq:bcb}) will implicitly impose a condition on the boundary-normal component. \n\n\\section{Numerical method} \\label{sec:bulk_algorithm}\nIn this section, we present the implementation of an unstructured FV algorithm for the solutions of the incompressible MHD equations (\\ref{eq:divu})-(\\ref{eq:divb}), which builds upon the earlier work of \\cite{vantieghem_phd} that concerned numerical solutions of the quasi-static MHD equations. \nThe basic building block of the FV method is a small control volume (CV), into which the solution domain is divided.  FV methods solve a weak form of the equations under consideration by taking their integral over the CV, and transforming volume integrals of spatial derivatives into surface integrals  over the surface bounding the CV by virtue of Gauss's theorem. The surface integrals are then discretized using Taylor expansions, and this eventually gives rise to a set of ordinary differential equations (ODEs). To describe in more detail this process, first we explain the grid arrangement and how the CVs are constructed. Then, we present the discretization stencils followed by a discussion of how the resulting ODEs are integrated in time. Finally, we validate our method by performing nonlinear dynamo simulations in a periodic box and comparing them against results obtained with a spectral code.  \n\n\\subsection{Grid arrangement}\nThe starting point for our numerical procedure is a number of non-overlapping polyhedra (tetrahedra, prisms, pyramids or hexahedra) that fill completely the solution domain $V$ and together define the computational grid. We will refer to these basic building blocks as elements and their vertices are termed `grid nodes'. The grid can be unstructured, that is, the connectivity between the grid elements can be arbitrarily complex. In this work, we will adopt a node-based approach, which means that control volumes are created around the grid nodes, as illustrated in Figure \\ref{fig:cv_total}. More specifically, the surface that bounds the CV associated with a node $i$ is the union of triangular patches that are created by connecting the midpoints of an edge, the centroid of a face that contains the edge, and the centroid of the element. Each of these elementary triangles can be associated with a pair of grid nodes. For instance, the red triangles in Figure \\ref{fig:cv} are associated with the pair A and B; two nodes form a pair if and only if they share a common edge. We will denote by $\\pi_i$ the set of all nodes $j$ with which node $i$ forms a pair. Furthermore, the notation ${\\boldsymbol S}_{ij}$ refers to the sum of the surface normals of all triangular patches associated with the pair $(i,j)$, whereby the magnitude of a surface normal on a triangular patch is the area of the patch. We adopt the convention that ${\\boldsymbol S}_{ij}$ points from $i$ to $j$.\nFinally, we will use the notation $V_{i}$ for the volume of the CV associated with node $i$ and $\\partial V_i$ for its bounding surface.\n\\begin{figure}\n\\begin{center}\n\\includegraphics[width=0.6\\columnwidth]{fig1.pdf}\n\\caption{Illustration of the construction of a control volume (grey shading) around a grid node (black dot) that is a vertex of an unstructured set of hexahedral, pyramidal and tetrahedral grid elements (red lines).}\n\\label{fig:cv_total}\n\\end{center}\n\\end{figure}\n\\begin{figure}             \n  \\begin{center}\n  \\setlength{\\epsfysize}{6.0cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{6.0cm}\n      \\subfigure[]{\\epsfbox{fig2a.pdf}}  &\n      \\setlength{\\epsfysize}{6.0cm}\n      \\subfigure[]{\\epsfbox{fig2b.pdf}}\n    \\end{tabular}\n    \\caption{Association of control volume surface patches to a pair of nodes for (a) a tetrahedral and (b) a hexahedral element. The colors of the different surface patches of the CV refer to the pair with which it is associated.}\n         \\label{fig:cv}                \n  \\end{center}\n\\end{figure}\n\nWe choose a so-called collocated approach, which means that all variables (${\\boldsymbol u}$, ${\\boldsymbol b}$, $p$,...) share the same CVs. This is preferred above a staggered approach as we avoid the computational complexity and overhead associated with having separate sets of CVs for different variables. In the area of classical hydrodynamical computational fluid dynamics, it is well known that the use of a collocated approach also requires the definition of quantities at the interfaces between CVs (see, e.g. \\cite{ferzigerbook}). In the case of incompressible MHD, we will need the discretized equivalent of the momentum and magnetic fluxes through the surface patches ${\\boldsymbol S}_{ij}$, that is, $\\int_{S_{ij}} {\\boldsymbol u} \\cdot \\mathrm{d}{\\boldsymbol S}$ and $\\int_{S_{ij}} {\\boldsymbol b} \\cdot \\mathrm{d}{\\boldsymbol S}$; in our non-dimensionalized setup we will denote these quantities as ${U}_{ij}$ and $B_{ij}$, respectively.   \n\nThe code runs in parallel on distributed-memory systems. The parallelization strategy is based on a domain decomposition approach using the graph partitioning tool \\texttt{Metis} \\citep{parmetis}. An illustration of the decomposition of a spherical domain is given in Figure \\ref{fig:partition}, where each colour corresponds to the part of the grid that is associated with one core. There is in principle no constraint on the number of cores that can be used.\n\\begin{figure}                 \n  \\begin{center}\n\\includegraphics[width=0.6\\columnwidth]{fig3.pdf}\n    \\caption{Illustration of the domain decomposition onto different cores of an unstructured grid. The different colours indicate different partitions; please note that some colours have been reused.}\n         \\label{fig:partition}                \n  \\end{center}\n\\end{figure}\n\n\n\\subsection{Spatial discretization} \\label{subsec:spatial}\nThe essential idea underlying the FV method is that integrals of spatial derivatives over a CV can be transformed into surface integrals by virtue of Gauss's theorem. For instance, the numerical approximation for the divergence of a (continuous) vector field ${\\boldsymbol f}$ is the following:\n\\begin{eqnarray}\n\\int_{V} \\nabla \\cdot {\\boldsymbol f} \\,\\mathrm{dV} & = & \\oint_{\\partial V} {\\boldsymbol f} \\cdot {\\mathrm{d}}{\\boldsymbol S} \\\\ & \\approx &  \\sum_{j \\in \\pi_i} {\\boldsymbol f} \\left( \\frac{{\\boldsymbol r}_i + {\\boldsymbol r}_j}{2}\\right) \\cdot {\\boldsymbol S}_{ij} \\\\ &  \\approx & \\sum_{j \\in \\pi_i} \\frac{{\\boldsymbol f}({\\boldsymbol r}_i) + {\\boldsymbol f}({\\boldsymbol r}_j)}{2} \\cdot {\\boldsymbol S}_{ij},\n\\end{eqnarray}\nWe now denote by ${\\boldsymbol F}$ the vector that contains the values of ${\\boldsymbol f}$ at all grid nodes $i$, that is, ${\\boldsymbol F}_{i} = {\\boldsymbol f}({\\boldsymbol r}_i)$ and by ${\\mathbb D}$ the discretized divergence operator. In the remainder of this section, we will adopt the convention that capital letters denote spatially discrete variables whereas small letters represent continuous fields. Thus, we have:\n\n", "itemtype": "equation", "pos": 14317, "prevtext": "\nThis implies that equations (\\ref{eq:induction}) or (\\ref{eq:induction_rot}) will satisfy the solenoidality constraint (\\ref{eq:divb}) for $t>t_0$, provided that $\\nabla \\cdot {\\boldsymbol b}=0$ at $t=t_0$. This property, however, does not necessarily carry over to spatial discretizations of the induction equation. Therefore, special care needs to be taken to ensure that $\\nabla \\cdot {\\boldsymbol b}=0$ when solving numerical approximations of the induction equation.\n\nIn order to close the system of equations (\\ref{eq:divu})-(\\ref{eq:divb}), we should supply suitable boundary conditions for ${\\boldsymbol u}$, ${\\boldsymbol b}$ at the boundaries of the solution domain $V$, denoted as $\\partial V$. Furthermore, we will use the notation $\\hat {\\boldsymbol n}$ for the external unit normal on $\\partial V$. For the velocity field ${\\boldsymbol u}$, we will only use no-slip conditions, that is, ${\\boldsymbol u}|_{\\partial V}=0$. For the magnetic field ${\\boldsymbol b}$, we will use the pseudo-vacuum condition, which specifies that the tangential components of ${\\boldsymbol b}$ vanish at the domain boundary, that is:\n\n", "index": 9, "text": "\\begin{equation}\n\\left. {\\boldsymbol b} \\times \\hat{\\boldsymbol n}\\right|_{\\partial V} = 0. \\label{eq:bcb}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"\\left.{\\boldsymbol{b}}\\times\\hat{\\boldsymbol{n}}\\right|_{\\partial V}=0.\" display=\"block\"><mrow><mrow><msub><mrow><mrow><mi>\ud835\udc83</mi><mo>\u00d7</mo><mover accent=\"true\"><mi>\ud835\udc8f</mi><mo stretchy=\"false\">^</mo></mover></mrow><mo fence=\"true\">|</mo></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>V</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nSimilarly, for the gradient of a scalar function $\\phi$, we obtain\n\\begin{eqnarray}\n\\int_{V} \\nabla \\phi\\,\\mathrm{d}V  & = & \\oint_{\\partial V} {\\phi}\\,{\\mathrm{d}}{\\boldsymbol S} ,\\\\ & \\approx & \\sum_{j \\in \\pi_i} \\frac{\\phi({\\boldsymbol r}_i) +  \\phi({\\boldsymbol r}_j)}{2}  {\\boldsymbol S}_{ij}. \n\\end{eqnarray}\nWe write, using an obvious notation:\n\n", "itemtype": "equation", "pos": 21854, "prevtext": "\nIt should be noted that this condition does not explicitly prescribe a condition on the wall-normal component of the magnetic field. Indeed, the specific nature of the induction equation does not allow imposition of constraints on the three components of the magnetic field independently, because this could possibly lead to a violation of the solenoidal character of ${\\boldsymbol b}$. Rather, the divergence constraint (\\ref{eq:divb}) together with the two scalar conditions (\\ref{eq:bcb}) will implicitly impose a condition on the boundary-normal component. \n\n\\section{Numerical method} \\label{sec:bulk_algorithm}\nIn this section, we present the implementation of an unstructured FV algorithm for the solutions of the incompressible MHD equations (\\ref{eq:divu})-(\\ref{eq:divb}), which builds upon the earlier work of \\cite{vantieghem_phd} that concerned numerical solutions of the quasi-static MHD equations. \nThe basic building block of the FV method is a small control volume (CV), into which the solution domain is divided.  FV methods solve a weak form of the equations under consideration by taking their integral over the CV, and transforming volume integrals of spatial derivatives into surface integrals  over the surface bounding the CV by virtue of Gauss's theorem. The surface integrals are then discretized using Taylor expansions, and this eventually gives rise to a set of ordinary differential equations (ODEs). To describe in more detail this process, first we explain the grid arrangement and how the CVs are constructed. Then, we present the discretization stencils followed by a discussion of how the resulting ODEs are integrated in time. Finally, we validate our method by performing nonlinear dynamo simulations in a periodic box and comparing them against results obtained with a spectral code.  \n\n\\subsection{Grid arrangement}\nThe starting point for our numerical procedure is a number of non-overlapping polyhedra (tetrahedra, prisms, pyramids or hexahedra) that fill completely the solution domain $V$ and together define the computational grid. We will refer to these basic building blocks as elements and their vertices are termed `grid nodes'. The grid can be unstructured, that is, the connectivity between the grid elements can be arbitrarily complex. In this work, we will adopt a node-based approach, which means that control volumes are created around the grid nodes, as illustrated in Figure \\ref{fig:cv_total}. More specifically, the surface that bounds the CV associated with a node $i$ is the union of triangular patches that are created by connecting the midpoints of an edge, the centroid of a face that contains the edge, and the centroid of the element. Each of these elementary triangles can be associated with a pair of grid nodes. For instance, the red triangles in Figure \\ref{fig:cv} are associated with the pair A and B; two nodes form a pair if and only if they share a common edge. We will denote by $\\pi_i$ the set of all nodes $j$ with which node $i$ forms a pair. Furthermore, the notation ${\\boldsymbol S}_{ij}$ refers to the sum of the surface normals of all triangular patches associated with the pair $(i,j)$, whereby the magnitude of a surface normal on a triangular patch is the area of the patch. We adopt the convention that ${\\boldsymbol S}_{ij}$ points from $i$ to $j$.\nFinally, we will use the notation $V_{i}$ for the volume of the CV associated with node $i$ and $\\partial V_i$ for its bounding surface.\n\\begin{figure}\n\\begin{center}\n\\includegraphics[width=0.6\\columnwidth]{fig1.pdf}\n\\caption{Illustration of the construction of a control volume (grey shading) around a grid node (black dot) that is a vertex of an unstructured set of hexahedral, pyramidal and tetrahedral grid elements (red lines).}\n\\label{fig:cv_total}\n\\end{center}\n\\end{figure}\n\\begin{figure}             \n  \\begin{center}\n  \\setlength{\\epsfysize}{6.0cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{6.0cm}\n      \\subfigure[]{\\epsfbox{fig2a.pdf}}  &\n      \\setlength{\\epsfysize}{6.0cm}\n      \\subfigure[]{\\epsfbox{fig2b.pdf}}\n    \\end{tabular}\n    \\caption{Association of control volume surface patches to a pair of nodes for (a) a tetrahedral and (b) a hexahedral element. The colors of the different surface patches of the CV refer to the pair with which it is associated.}\n         \\label{fig:cv}                \n  \\end{center}\n\\end{figure}\n\nWe choose a so-called collocated approach, which means that all variables (${\\boldsymbol u}$, ${\\boldsymbol b}$, $p$,...) share the same CVs. This is preferred above a staggered approach as we avoid the computational complexity and overhead associated with having separate sets of CVs for different variables. In the area of classical hydrodynamical computational fluid dynamics, it is well known that the use of a collocated approach also requires the definition of quantities at the interfaces between CVs (see, e.g. \\cite{ferzigerbook}). In the case of incompressible MHD, we will need the discretized equivalent of the momentum and magnetic fluxes through the surface patches ${\\boldsymbol S}_{ij}$, that is, $\\int_{S_{ij}} {\\boldsymbol u} \\cdot \\mathrm{d}{\\boldsymbol S}$ and $\\int_{S_{ij}} {\\boldsymbol b} \\cdot \\mathrm{d}{\\boldsymbol S}$; in our non-dimensionalized setup we will denote these quantities as ${U}_{ij}$ and $B_{ij}$, respectively.   \n\nThe code runs in parallel on distributed-memory systems. The parallelization strategy is based on a domain decomposition approach using the graph partitioning tool \\texttt{Metis} \\citep{parmetis}. An illustration of the decomposition of a spherical domain is given in Figure \\ref{fig:partition}, where each colour corresponds to the part of the grid that is associated with one core. There is in principle no constraint on the number of cores that can be used.\n\\begin{figure}                 \n  \\begin{center}\n\\includegraphics[width=0.6\\columnwidth]{fig3.pdf}\n    \\caption{Illustration of the domain decomposition onto different cores of an unstructured grid. The different colours indicate different partitions; please note that some colours have been reused.}\n         \\label{fig:partition}                \n  \\end{center}\n\\end{figure}\n\n\n\\subsection{Spatial discretization} \\label{subsec:spatial}\nThe essential idea underlying the FV method is that integrals of spatial derivatives over a CV can be transformed into surface integrals by virtue of Gauss's theorem. For instance, the numerical approximation for the divergence of a (continuous) vector field ${\\boldsymbol f}$ is the following:\n\\begin{eqnarray}\n\\int_{V} \\nabla \\cdot {\\boldsymbol f} \\,\\mathrm{dV} & = & \\oint_{\\partial V} {\\boldsymbol f} \\cdot {\\mathrm{d}}{\\boldsymbol S} \\\\ & \\approx &  \\sum_{j \\in \\pi_i} {\\boldsymbol f} \\left( \\frac{{\\boldsymbol r}_i + {\\boldsymbol r}_j}{2}\\right) \\cdot {\\boldsymbol S}_{ij} \\\\ &  \\approx & \\sum_{j \\in \\pi_i} \\frac{{\\boldsymbol f}({\\boldsymbol r}_i) + {\\boldsymbol f}({\\boldsymbol r}_j)}{2} \\cdot {\\boldsymbol S}_{ij},\n\\end{eqnarray}\nWe now denote by ${\\boldsymbol F}$ the vector that contains the values of ${\\boldsymbol f}$ at all grid nodes $i$, that is, ${\\boldsymbol F}_{i} = {\\boldsymbol f}({\\boldsymbol r}_i)$ and by ${\\mathbb D}$ the discretized divergence operator. In the remainder of this section, we will adopt the convention that capital letters denote spatially discrete variables whereas small letters represent continuous fields. Thus, we have:\n\n", "index": 11, "text": "\\begin{equation}\n\\left({\\mathbb D} {\\boldsymbol F} \\right)_i = \\frac{1}{V_i}\\sum_{j \\in \\pi_i} \\frac{\\boldsymbol F_i + \\boldsymbol F_j}{2} \\cdot {\\boldsymbol S}_{ij}.  \\label{eq:div_discrete}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"\\left({\\mathbb{D}}{\\boldsymbol{F}}\\right)_{i}=\\frac{1}{V_{i}}\\sum_{j\\in\\pi_{i}%&#10;}\\frac{\\boldsymbol{F}_{i}+\\boldsymbol{F}_{j}}{2}\\cdot{\\boldsymbol{S}}_{ij}.\" display=\"block\"><mrow><mrow><msub><mrow><mo>(</mo><mrow><mi>\ud835\udd3b</mi><mo>\u2062</mo><mi>\ud835\udc6d</mi></mrow><mo>)</mo></mrow><mi>i</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><msub><mi>V</mi><mi>i</mi></msub></mfrac><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><mrow><mfrac><mrow><msub><mi>\ud835\udc6d</mi><mi>i</mi></msub><mo>+</mo><msub><mi>\ud835\udc6d</mi><mi>j</mi></msub></mrow><mn>2</mn></mfrac><mo>\u22c5</mo><msub><mi>\ud835\udc7a</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe MHD equations also contain convective-like derivatives of the form ${\\boldsymbol f} \\cdot \\nabla {\\boldsymbol g}$, where ${\\boldsymbol f}$ and ${\\boldsymbol g}$ are solenoidal vector fields. These derivatives can be approximated as\n \\begin{eqnarray}\n\\int_{V} {\\boldsymbol f} \\cdot \\nabla {\\boldsymbol g} \\,\\mathrm{d}V & = & \\oint_{\\partial V} {\\boldsymbol g} \\left( {\\boldsymbol f} \\cdot {\\mathrm{d}}{\\boldsymbol S} \\right), \\\\ & \\approx & \\sum_{j \\in \\pi_i} \\frac{{\\boldsymbol g}({\\boldsymbol r}_i) + {\\boldsymbol g}({\\boldsymbol r}_j)}{2} F_{ij}.\n\\end{eqnarray}\nWe will denote the discretized version of the convective derivative in the following way:\n\n", "itemtype": "equation", "pos": 22413, "prevtext": "\nSimilarly, for the gradient of a scalar function $\\phi$, we obtain\n\\begin{eqnarray}\n\\int_{V} \\nabla \\phi\\,\\mathrm{d}V  & = & \\oint_{\\partial V} {\\phi}\\,{\\mathrm{d}}{\\boldsymbol S} ,\\\\ & \\approx & \\sum_{j \\in \\pi_i} \\frac{\\phi({\\boldsymbol r}_i) +  \\phi({\\boldsymbol r}_j)}{2}  {\\boldsymbol S}_{ij}. \n\\end{eqnarray}\nWe write, using an obvious notation:\n\n", "index": 13, "text": "\\begin{equation}\n(\\mathbb{G} \\Phi)_{i} = \\frac{1}{V_i}\\sum_{j \\in \\pi_i} \\frac{ \\Phi_i + \\Phi_j}{2}  {\\boldsymbol S}_{ij}. \\label{eq:grad_discrete}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"(\\mathbb{G}\\Phi)_{i}=\\frac{1}{V_{i}}\\sum_{j\\in\\pi_{i}}\\frac{\\Phi_{i}+\\Phi_{j}}%&#10;{2}{\\boldsymbol{S}}_{ij}.\" display=\"block\"><mrow><mrow><msub><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\ud835\udd3e</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u03a6</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><msub><mi>V</mi><mi>i</mi></msub></mfrac><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><mrow><mfrac><mrow><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>i</mi></msub><mo>+</mo><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>j</mi></msub></mrow><mn>2</mn></mfrac><mo>\u2062</mo><msub><mi>\ud835\udc7a</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nFurthemore, we also need a discretization scheme for the vector Laplacian operator required for the calculation of the diffusive terms in the momentum and induction equation. Since our code uses a Cartesian coordinate system, this is equivalent to the evaluation of a scalar Laplacian, that is, $\\nabla^2 {\\boldsymbol u} = (\\nabla^2 u_x) \\hat{\\boldsymbol x} + (\\nabla^2 u_y) \\hat{\\boldsymbol y} + (\\nabla^2 u_z) \\hat{\\boldsymbol z}$.  In addition, the numerical solution of Poisson equations will be required for our time-stepping approach as described in Section \\ref{subsec:timestep}.  A straightforward combination of the discretization stencils (\\ref{eq:div_discrete}) and (\\ref{eq:grad_discrete}) would lead to the well-known odd-even decoupling problem \\citep{ferzigerbook}, that is, a stencil that has a non-trivial null space, and is therefore not suitable for the solution of Poisson equations. In order to illustrate this, we consider a 1-D grid with equidistant grid spacing $\\Delta$. The successive application of the operators ${\\mathbb D}$ and ${\\mathbb G}$ results in the stencil $\\phi_i'' = (\\phi_{i+2}+\\phi_{i-2}-2\\phi_i)/(4\\Delta^2)$. Applied to a function $\\phi$ whose value is zero at even-indexed positions and one at odd-indexed ones, this gives strictly zero.  \n\nInstead, one can derive a FV discretization stencil starting from\n\\begin{eqnarray}\n\\int_{V}\\nabla^2 \\phi \\,\\mathrm{d}V  & = &  \\oint_{\\partial V} {\\nabla \\phi}\\cdot \\,{\\mathrm{d}}{\\boldsymbol S} ,\\\\ & = & \\sum_{j \\in \\pi_i} \\int_{S_{ij}}\\nabla  \\phi  \\cdot \\mathrm{d}{\\boldsymbol S}.  \\label{eq:lapl_contour}\n\\end{eqnarray}\n\\begin{figure}                 \n  \\begin{center}\n  \\setlength{\\epsfysize}{7.0cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig4a.pdf}}  &\n      \\setlength{\\epsfysize}{5.5cm}\n      \\subfigure[]{\\epsfbox{fig4b.pdf}}\n    \\end{tabular}\n    \\caption{(a) Illustration of the decomposition of surface normal vectors ${\\boldsymbol S}_{i,j}$ into a component parallel and perpendicular to the node pair, in case $A-B$. (b) The (red shaded) union of triangular surface patches is the elements surface $S_{fa}$ (used in expression (\\ref{eq:lapl_fa})) associated with node `A'. Each of the triangular patches has the grid node $k$, a midpoint $m_i$ and a face centre $c_i$ as vertices.}\n         \\label{fig:lapl}                \n  \\end{center}\n\\end{figure}\n In the case of unstructured meshes, however, the interface normal ${\\boldsymbol S}_{ij}$ is in general not parallel to the vector ${\\boldsymbol r}_j - {\\boldsymbol r}_i$. Therefore, we cannot use of the approximation $\\nabla \\phi = (\\phi_j-\\phi_i)({\\boldsymbol r}_j-{\\boldsymbol r}_i)/({\\boldsymbol r}_j-{\\boldsymbol r}_i)^2 $, as this only gives the component of $\\nabla \\phi$ along the direction of the vector ${\\boldsymbol r}_j-{\\boldsymbol r}_i$. Instead, we use a modified scheme as devised by \\citet{diskin2010}. In order to introduce it, we recall that the surface associated with the node pair $i,j$ is the union of different triangular patches. This is illustrated for a 2-D example (where the surface patches are line elements) in Figure \\ref{fig:lapl}; the vector ${\\boldsymbol S}_{AB}$ is the sum of ${\\boldsymbol S}_{AB,ADCB}$ and ${\\boldsymbol S}_{AB,ABGF}$, vectors that are associated with the quadrilateral elements $ADCB$ and $ABGF$, respectively. Here, we have introduced the notation ${\\boldsymbol S}_{ij,el}$ for the contribution to ${\\boldsymbol S}_{ij}$ associated with triangular patches that are located within element $el$. It follows that $\\sum_{el:\\{i,j\\} \\in el} {\\boldsymbol S}_{ij,el}$, and that we can recast expression (\\ref{eq:lapl_contour}) as\n\n", "itemtype": "equation", "pos": 23234, "prevtext": "\nThe MHD equations also contain convective-like derivatives of the form ${\\boldsymbol f} \\cdot \\nabla {\\boldsymbol g}$, where ${\\boldsymbol f}$ and ${\\boldsymbol g}$ are solenoidal vector fields. These derivatives can be approximated as\n \\begin{eqnarray}\n\\int_{V} {\\boldsymbol f} \\cdot \\nabla {\\boldsymbol g} \\,\\mathrm{d}V & = & \\oint_{\\partial V} {\\boldsymbol g} \\left( {\\boldsymbol f} \\cdot {\\mathrm{d}}{\\boldsymbol S} \\right), \\\\ & \\approx & \\sum_{j \\in \\pi_i} \\frac{{\\boldsymbol g}({\\boldsymbol r}_i) + {\\boldsymbol g}({\\boldsymbol r}_j)}{2} F_{ij}.\n\\end{eqnarray}\nWe will denote the discretized version of the convective derivative in the following way:\n\n", "index": 15, "text": "\\begin{equation} \n(\\mathbb{C}_F {\\boldsymbol G})_{i} = \\frac{1}{V_i}\\sum_{j \\in \\pi_i} \\frac{\\boldsymbol G_i + \\boldsymbol G_j}{2} F_{ij}. \n \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"(\\mathbb{C}_{F}{\\boldsymbol{G}})_{i}=\\frac{1}{V_{i}}\\sum_{j\\in\\pi_{i}}\\frac{%&#10;\\boldsymbol{G}_{i}+\\boldsymbol{G}_{j}}{2}F_{ij}.\" display=\"block\"><mrow><mrow><msub><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\u2102</mi><mi>F</mi></msub><mo>\u2062</mo><mi>\ud835\udc6e</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><msub><mi>V</mi><mi>i</mi></msub></mfrac><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><mrow><mfrac><mrow><msub><mi>\ud835\udc6e</mi><mi>i</mi></msub><mo>+</mo><msub><mi>\ud835\udc6e</mi><mi>j</mi></msub></mrow><mn>2</mn></mfrac><mo>\u2062</mo><msub><mi>F</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nWe can further expand the integral on the right-hand side of equation (\\ref{eq:lapl_double_sum}) as \n\n", "itemtype": "equation", "pos": 27072, "prevtext": "\nFurthemore, we also need a discretization scheme for the vector Laplacian operator required for the calculation of the diffusive terms in the momentum and induction equation. Since our code uses a Cartesian coordinate system, this is equivalent to the evaluation of a scalar Laplacian, that is, $\\nabla^2 {\\boldsymbol u} = (\\nabla^2 u_x) \\hat{\\boldsymbol x} + (\\nabla^2 u_y) \\hat{\\boldsymbol y} + (\\nabla^2 u_z) \\hat{\\boldsymbol z}$.  In addition, the numerical solution of Poisson equations will be required for our time-stepping approach as described in Section \\ref{subsec:timestep}.  A straightforward combination of the discretization stencils (\\ref{eq:div_discrete}) and (\\ref{eq:grad_discrete}) would lead to the well-known odd-even decoupling problem \\citep{ferzigerbook}, that is, a stencil that has a non-trivial null space, and is therefore not suitable for the solution of Poisson equations. In order to illustrate this, we consider a 1-D grid with equidistant grid spacing $\\Delta$. The successive application of the operators ${\\mathbb D}$ and ${\\mathbb G}$ results in the stencil $\\phi_i'' = (\\phi_{i+2}+\\phi_{i-2}-2\\phi_i)/(4\\Delta^2)$. Applied to a function $\\phi$ whose value is zero at even-indexed positions and one at odd-indexed ones, this gives strictly zero.  \n\nInstead, one can derive a FV discretization stencil starting from\n\\begin{eqnarray}\n\\int_{V}\\nabla^2 \\phi \\,\\mathrm{d}V  & = &  \\oint_{\\partial V} {\\nabla \\phi}\\cdot \\,{\\mathrm{d}}{\\boldsymbol S} ,\\\\ & = & \\sum_{j \\in \\pi_i} \\int_{S_{ij}}\\nabla  \\phi  \\cdot \\mathrm{d}{\\boldsymbol S}.  \\label{eq:lapl_contour}\n\\end{eqnarray}\n\\begin{figure}                 \n  \\begin{center}\n  \\setlength{\\epsfysize}{7.0cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig4a.pdf}}  &\n      \\setlength{\\epsfysize}{5.5cm}\n      \\subfigure[]{\\epsfbox{fig4b.pdf}}\n    \\end{tabular}\n    \\caption{(a) Illustration of the decomposition of surface normal vectors ${\\boldsymbol S}_{i,j}$ into a component parallel and perpendicular to the node pair, in case $A-B$. (b) The (red shaded) union of triangular surface patches is the elements surface $S_{fa}$ (used in expression (\\ref{eq:lapl_fa})) associated with node `A'. Each of the triangular patches has the grid node $k$, a midpoint $m_i$ and a face centre $c_i$ as vertices.}\n         \\label{fig:lapl}                \n  \\end{center}\n\\end{figure}\n In the case of unstructured meshes, however, the interface normal ${\\boldsymbol S}_{ij}$ is in general not parallel to the vector ${\\boldsymbol r}_j - {\\boldsymbol r}_i$. Therefore, we cannot use of the approximation $\\nabla \\phi = (\\phi_j-\\phi_i)({\\boldsymbol r}_j-{\\boldsymbol r}_i)/({\\boldsymbol r}_j-{\\boldsymbol r}_i)^2 $, as this only gives the component of $\\nabla \\phi$ along the direction of the vector ${\\boldsymbol r}_j-{\\boldsymbol r}_i$. Instead, we use a modified scheme as devised by \\citet{diskin2010}. In order to introduce it, we recall that the surface associated with the node pair $i,j$ is the union of different triangular patches. This is illustrated for a 2-D example (where the surface patches are line elements) in Figure \\ref{fig:lapl}; the vector ${\\boldsymbol S}_{AB}$ is the sum of ${\\boldsymbol S}_{AB,ADCB}$ and ${\\boldsymbol S}_{AB,ABGF}$, vectors that are associated with the quadrilateral elements $ADCB$ and $ABGF$, respectively. Here, we have introduced the notation ${\\boldsymbol S}_{ij,el}$ for the contribution to ${\\boldsymbol S}_{ij}$ associated with triangular patches that are located within element $el$. It follows that $\\sum_{el:\\{i,j\\} \\in el} {\\boldsymbol S}_{ij,el}$, and that we can recast expression (\\ref{eq:lapl_contour}) as\n\n", "index": 17, "text": "\\begin{equation}\n\\int_{V}\\nabla^2 \\phi \\,\\mathrm{d}V  = \\sum_{j \\in \\pi_i}  \\sum_{el:\\{i,j\\} \\in el}  \\int_{S_{ij,el}} \\nabla \\phi \\cdot \\mathrm{d}{\\boldsymbol S}. \\label{eq:lapl_double_sum}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"\\int_{V}\\nabla^{2}\\phi\\,\\mathrm{d}V=\\sum_{j\\in\\pi_{i}}\\sum_{el:\\{i,j\\}\\in el}%&#10;\\int_{S_{ij,el}}\\nabla\\phi\\cdot\\mathrm{d}{\\boldsymbol{S}}.\" display=\"block\"><mrow><mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mi>V</mi></msub><mrow><msup><mo>\u2207</mo><mn>2</mn></msup><mo>\u2061</mo><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><mi mathvariant=\"normal\">d</mi><mo>\u2062</mo><mi>V</mi></mrow></mrow></mrow><mo>=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow><mo>:</mo><mrow><mrow><mo stretchy=\"false\">{</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo stretchy=\"false\">}</mo></mrow><mo>\u2208</mo><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></mrow></mrow></munder><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>,</mo><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></mrow></msub></msub><mrow><mo>\u2207</mo><mo>\u2061</mo><mrow><mrow><mi>\u03d5</mi><mo>\u22c5</mo><mi mathvariant=\"normal\">d</mi></mrow><mo>\u2062</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nHere, $(\\nabla \\phi)^{||}$ and  ${\\boldsymbol S}^{||}$ refer to the projection of $\\nabla \\phi$ and ${\\boldsymbol S}$ along the edge connecting nodes $i$ and $j$, and $(\\nabla \\phi)^{\\perp}$ to the orthogonal complement of $(\\nabla \\phi)^{||}$, respectively. The numerical approximation for $(\\nabla \\phi)^{||}$ is easily found,\n\n", "itemtype": "equation", "pos": 27379, "prevtext": "\nWe can further expand the integral on the right-hand side of equation (\\ref{eq:lapl_double_sum}) as \n\n", "index": 19, "text": "\\begin{equation}\n\\int_{S_{ij,el}} \\nabla \\phi \\cdot \\mathrm{d}{\\boldsymbol S} = \\int_{S_{ij,el}} (\\nabla \\phi)^{||} \\cdot \\mathrm{d}{\\boldsymbol S}^{||} + \\int_{S_{ij,el}} (\\nabla \\phi) \\cdot \\mathrm{d}{\\boldsymbol S}^{\\perp}. \\label{eq:lapl_split}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E10.m1\" class=\"ltx_Math\" alttext=\"\\int_{S_{ij,el}}\\nabla\\phi\\cdot\\mathrm{d}{\\boldsymbol{S}}=\\int_{S_{ij,el}}(%&#10;\\nabla\\phi)^{||}\\cdot\\mathrm{d}{\\boldsymbol{S}}^{||}+\\int_{S_{ij,el}}(\\nabla%&#10;\\phi)\\cdot\\mathrm{d}{\\boldsymbol{S}}^{\\perp}.\" display=\"block\"><mrow><mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>,</mo><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></mrow></msub></msub><mrow><mo>\u2207</mo><mo>\u2061</mo><mrow><mrow><mi>\u03d5</mi><mo>\u22c5</mo><mi mathvariant=\"normal\">d</mi></mrow><mo>\u2062</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow><mo>=</mo><mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>,</mo><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></mrow></msub></msub><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\u03d5</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">|</mo></mrow></msup><mo>\u22c5</mo><mrow><mo>d</mo><msup><mi>\ud835\udc7a</mi><mrow><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">|</mo></mrow></msup></mrow></mrow></mrow><mo>+</mo><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>,</mo><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></mrow></msub></msub><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\u03d5</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u22c5</mo><mrow><mo>d</mo><msup><mi>\ud835\udc7a</mi><mo>\u27c2</mo></msup></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nFor the second term in expression (\\ref{eq:lapl_split}), we compute $\\nabla \\phi$ using a Green-Gauss approximation applied to the element $el$, i.e. we approximate:\n\n", "itemtype": "equation", "pos": 27972, "prevtext": "\nHere, $(\\nabla \\phi)^{||}$ and  ${\\boldsymbol S}^{||}$ refer to the projection of $\\nabla \\phi$ and ${\\boldsymbol S}$ along the edge connecting nodes $i$ and $j$, and $(\\nabla \\phi)^{\\perp}$ to the orthogonal complement of $(\\nabla \\phi)^{||}$, respectively. The numerical approximation for $(\\nabla \\phi)^{||}$ is easily found,\n\n", "index": 21, "text": "\\begin{equation}\n(\\nabla \\phi)^{||}_{ij}\\approx \\frac{\\phi({\\boldsymbol r}_j) - \\phi({\\boldsymbol r}_i)}{\\left|{\\boldsymbol r}_j - {\\boldsymbol r}_i \\right|^2} \\left({\\boldsymbol r}_j - {\\boldsymbol r}_i \\right).\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E11.m1\" class=\"ltx_Math\" alttext=\"(\\nabla\\phi)^{||}_{ij}\\approx\\frac{\\phi({\\boldsymbol{r}}_{j})-\\phi({%&#10;\\boldsymbol{r}}_{i})}{\\left|{\\boldsymbol{r}}_{j}-{\\boldsymbol{r}}_{i}\\right|^{%&#10;2}}\\left({\\boldsymbol{r}}_{j}-{\\boldsymbol{r}}_{i}\\right).\" display=\"block\"><mrow><mrow><msubsup><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\u03d5</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mo stretchy=\"false\">|</mo><mo stretchy=\"false\">|</mo></mrow></msubsup><mo>\u2248</mo><mrow><mfrac><mrow><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc93</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><mi>\u03d5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>\ud835\udc93</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><msup><mrow><mo>|</mo><mrow><msub><mi>\ud835\udc93</mi><mi>j</mi></msub><mo>-</mo><msub><mi>\ud835\udc93</mi><mi>i</mi></msub></mrow><mo>|</mo></mrow><mn>2</mn></msup></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mrow><msub><mi>\ud835\udc93</mi><mi>j</mi></msub><mo>-</mo><msub><mi>\ud835\udc93</mi><mi>i</mi></msub></mrow><mo>)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nHere ${\\Omega_{el}}$ denotes the bounding surface of a grid element (like e.g. ADCB in Figure \\ref{fig:lapl} (a)) and $V_{el}$ its volume. The index $fa \\in el$  refers to the faces of the element $el$ and $S_{fa}$ are their respective surfaces. In order to discretize the integrals on the right-hand side of eq. (\\ref{eq:lapl_fa}), we triangulate the element faces, that is, we consider them as a union of triangular surfaces that each have a grid node $k$, an edge midpoint $m$ and an element face centroid $c$ as their vertices. The surface integral of $\\phi$ over $S_{fa}$ can then be expanded as a sum of surface integrals over these triangles, and each of these integrals is then approximated as:\n\n", "itemtype": "equation", "pos": 28366, "prevtext": "\nFor the second term in expression (\\ref{eq:lapl_split}), we compute $\\nabla \\phi$ using a Green-Gauss approximation applied to the element $el$, i.e. we approximate:\n\n", "index": 23, "text": "\\begin{equation}\n\\nabla \\phi \\approx \\frac{1}{V_{el}}\\oint_{\\Omega_{el}} \\phi \\,\\mathrm{d}{\\boldsymbol S} = \\sum_{fa \\in el} \\int_{S_{fa}} \\phi \\,\\mathrm{d}{\\boldsymbol S}. \\label{eq:lapl_fa}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E12.m1\" class=\"ltx_Math\" alttext=\"\\nabla\\phi\\approx\\frac{1}{V_{el}}\\oint_{\\Omega_{el}}\\phi\\,\\mathrm{d}{%&#10;\\boldsymbol{S}}=\\sum_{fa\\in el}\\int_{S_{fa}}\\phi\\,\\mathrm{d}{\\boldsymbol{S}}.\" display=\"block\"><mrow><mrow><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\u03d5</mi></mrow><mo>\u2248</mo><mrow><mfrac><mn>1</mn><msub><mi>V</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></msub></mfrac><mo>\u2062</mo><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222e</mo><msub><mi mathvariant=\"normal\">\u03a9</mi><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></msub></msub><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow></mrow><mo>=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mrow><mi>f</mi><mo>\u2062</mo><mi>a</mi></mrow><mo>\u2208</mo><mrow><mi>e</mi><mo>\u2062</mo><mi>l</mi></mrow></mrow></munder><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mi>f</mi><mo>\u2062</mo><mi>a</mi></mrow></msub></msub><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere $S_{tri}$ denotes the triangular surface and $\\Phi_{k}, \\Phi_{m}$ amd $\\Phi_{c}$ are the values of $\\phi$ at the node $k$, edge midpoint $m$ and element face centroid $c$, respectively. These last two values are approximated by means of linear interpolation between the nodes of the face $fa$. \nAll this allows us to write down a discretization of $\\nabla^2 \\phi$ around a grid node $i$ solely in terms of the values of $\\phi$ at $i$ and its neighbours, that is,. we may write:\n\n", "itemtype": "equation", "pos": 29276, "prevtext": "\nHere ${\\Omega_{el}}$ denotes the bounding surface of a grid element (like e.g. ADCB in Figure \\ref{fig:lapl} (a)) and $V_{el}$ its volume. The index $fa \\in el$  refers to the faces of the element $el$ and $S_{fa}$ are their respective surfaces. In order to discretize the integrals on the right-hand side of eq. (\\ref{eq:lapl_fa}), we triangulate the element faces, that is, we consider them as a union of triangular surfaces that each have a grid node $k$, an edge midpoint $m$ and an element face centroid $c$ as their vertices. The surface integral of $\\phi$ over $S_{fa}$ can then be expanded as a sum of surface integrals over these triangles, and each of these integrals is then approximated as:\n\n", "index": 25, "text": "\\begin{equation}\n\\int _{S_{tri}} \\phi \\,\\mathrm{d}{\\boldsymbol S} \\approx \\frac{1}{3}\\left(\\Phi_k +  \\Phi_m + \\Phi_c \\right) {\\boldsymbol S}_{tri},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E13.m1\" class=\"ltx_Math\" alttext=\"\\int_{S_{tri}}\\phi\\,\\mathrm{d}{\\boldsymbol{S}}\\approx\\frac{1}{3}\\left(\\Phi_{k}%&#10;+\\Phi_{m}+\\Phi_{c}\\right){\\boldsymbol{S}}_{tri},\" display=\"block\"><mrow><mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mi>t</mi><mo>\u2062</mo><mi>r</mi><mo>\u2062</mo><mi>i</mi></mrow></msub></msub><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow><mo>\u2248</mo><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mrow><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>k</mi></msub><mo>+</mo><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>m</mi></msub><mo>+</mo><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>c</mi></msub></mrow><mo>)</mo></mrow><mo>\u2062</mo><msub><mi>\ud835\udc7a</mi><mrow><mi>t</mi><mo>\u2062</mo><mi>r</mi><mo>\u2062</mo><mi>i</mi></mrow></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nin which the factors $w_{ij}$ are related to the grid geometry. Furthermore, we use the notation $\\mathbb L$ and $(\\mathbb{G}_{f} \\Phi)_{ij}$ to denote the numerical approximation to the Laplacian and the face-normal component of the gradient of $\\phi$ at the interface associated with the node pair $(i,j)$. \n\nFinally, spatial averages of a function $\\phi$ over a control volume are simply approximated as\n\n", "itemtype": "equation", "pos": 29923, "prevtext": "\nwhere $S_{tri}$ denotes the triangular surface and $\\Phi_{k}, \\Phi_{m}$ amd $\\Phi_{c}$ are the values of $\\phi$ at the node $k$, edge midpoint $m$ and element face centroid $c$, respectively. These last two values are approximated by means of linear interpolation between the nodes of the face $fa$. \nAll this allows us to write down a discretization of $\\nabla^2 \\phi$ around a grid node $i$ solely in terms of the values of $\\phi$ at $i$ and its neighbours, that is,. we may write:\n\n", "index": 27, "text": "\\begin{equation}\n\\left. \\nabla^2 \\phi \\right|_{{\\boldsymbol r}={\\boldsymbol r_i}} \\approx \\left({\\mathbb L} \\Phi \\right)_{i} = \\frac{1}{V_i}\\sum_{j \\in \\pi_i}(\\mathbb{G}_{f} \\Phi)_{ij} \\cdot {\\boldsymbol S}_{ij} = \\frac{1}{V_i}\\sum_{j \\in \\pi_i} w_{ij}\\left( \\Phi_{j}  - \\Phi_{i} \\right),\n\\label{eq:laplacian_final}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E14.m1\" class=\"ltx_Math\" alttext=\"\\left.\\nabla^{2}\\phi\\right|_{{\\boldsymbol{r}}={\\boldsymbol{r}_{i}}}\\approx%&#10;\\left({\\mathbb{L}}\\Phi\\right)_{i}=\\frac{1}{V_{i}}\\sum_{j\\in\\pi_{i}}(\\mathbb{G}%&#10;_{f}\\Phi)_{ij}\\cdot{\\boldsymbol{S}}_{ij}=\\frac{1}{V_{i}}\\sum_{j\\in\\pi_{i}}w_{%&#10;ij}\\left(\\Phi_{j}-\\Phi_{i}\\right),\" display=\"block\"><mrow><mrow><msub><mrow><mrow><msup><mo>\u2207</mo><mn>2</mn></msup><mo>\u2061</mo><mi>\u03d5</mi></mrow><mo fence=\"true\">|</mo></mrow><mrow><mi>\ud835\udc93</mi><mo>=</mo><msub><mi>\ud835\udc93</mi><mi>i</mi></msub></mrow></msub><mo>\u2248</mo><msub><mrow><mo>(</mo><mrow><mi>\ud835\udd43</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u03a6</mi></mrow><mo>)</mo></mrow><mi>i</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><msub><mi>V</mi><mi>i</mi></msub></mfrac><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><mrow><msub><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>\ud835\udd3e</mi><mi>f</mi></msub><mo>\u2062</mo><mi mathvariant=\"normal\">\u03a6</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub><mo>\u22c5</mo><msub><mi>\ud835\udc7a</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub></mrow></mrow></mrow><mo>=</mo><mrow><mfrac><mn>1</mn><msub><mi>V</mi><mi>i</mi></msub></mfrac><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><mrow><msub><mi>w</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub><mo>\u2062</mo><mrow><mo>(</mo><mrow><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>j</mi></msub><mo>-</mo><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>i</mi></msub></mrow><mo>)</mo></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThis formula will be used for the discretization of a body force, like the buoyancy force we will be concerned with in section \\ref{sec:benchmark}.\n\n\\subsection{Time-stepping scheme for the MHD equations \\label{subsec:timestep}}\nThe spatial discretization procedure discussed in the previous section transforms the MHD equations into a set of ordinary differential equation for the unknown values $({\\boldsymbol u}_i,{\\boldsymbol b}_i,p_i)$ at the grid nodes $i$. One of the major difficulties associated with this is that the discretized magnetic induction equation does not necessarily conserve the solenoidal character of ${\\boldsymbol b}$. To remedy this issue, we follow a technique pioneered by \\citet{toth2000} and afterwards adopted, among others by \\citet{harder2005finite}, \\citet{chan2007} and \\citet{guermond2007}. It consists of equipping the induction equation with a Lagrange multiplier or pseudo-pressure $p_b$ that allows projection of the magnetic field onto the space of divergence-free vector fields. More specifically, the induction equation now reads:\n\n", "itemtype": "equation", "pos": 30661, "prevtext": "\nin which the factors $w_{ij}$ are related to the grid geometry. Furthermore, we use the notation $\\mathbb L$ and $(\\mathbb{G}_{f} \\Phi)_{ij}$ to denote the numerical approximation to the Laplacian and the face-normal component of the gradient of $\\phi$ at the interface associated with the node pair $(i,j)$. \n\nFinally, spatial averages of a function $\\phi$ over a control volume are simply approximated as\n\n", "index": 29, "text": "\\begin{equation}\n\\int_{V_i} \\phi \\,\\mathrm{d}V \\approx V_{i} \\Phi_{i}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E15.m1\" class=\"ltx_Math\" alttext=\"\\int_{V_{i}}\\phi\\,\\mathrm{d}V\\approx V_{i}\\Phi_{i}.\" display=\"block\"><mrow><mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>V</mi><mi>i</mi></msub></msub><mrow><mpadded width=\"+1.7pt\"><mi>\u03d5</mi></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>V</mi></mrow></mrow></mrow><mo>\u2248</mo><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mi mathvariant=\"normal\">\u03a6</mi><mi>i</mi></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": " \nIn order to integrate the momentum equation (\\ref{eq:navierstokes}) and modified induction equation (\\ref{eq:induction_modif}) in time, we adopt a fractional step algorithm akin to the one devised by \\cite{chorin1968} and \\cite{kim1985} for the incompressible Navier-Stokes equation as follows:\n\\begin{enumerate}\n\\item Compute the intermediate velocity and magnetic field ${\\boldsymbol U}^{\\star},{\\boldsymbol B}^{\\star}$ at the grid nodes from the given data ${\\boldsymbol U}^n, {\\boldsymbol B}^n, P^{n}, P^{n}_{b}$ by integration of the MHD equations, that is,\n\\begin{eqnarray}\n\\frac{{\\boldsymbol U}^{\\star} - {\\boldsymbol U}^{n}}{\\Delta t} & = & - \\mathbb{C}^{n+1/2}_{U}{\\boldsymbol U^{n+1/2}} + \\mathbb{C}^{n+1/2}_{B}{\\boldsymbol B}^{n+1/2} + \\frac{1}{Re}\\mathbb{L}{\\boldsymbol U}^{n+1/2} -\\mathbb{G}P^{n} + {\\boldsymbol F}_b, \\\\\n\\frac{{\\boldsymbol B}^{\\star} - {\\boldsymbol B}^{n}}{\\Delta t} & = & - \\mathbb{C}^{n+1/2}_{U}{\\boldsymbol B}^{n+1/2} + \\mathbb{C}^{n+1/2}_{B}{\\boldsymbol U}^{n+1/2} + \\frac{1}{Re_m} \\mathbb{L}{\\boldsymbol B}^{n+1/2} -\\mathbb{G}P^{n}_{b}.\n\\end{eqnarray}\nHere, a second order accurate Crank-Nicolson time discretisation scheme is used for the node-based, vectorial quantities, that is,\n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nThis formula will be used for the discretization of a body force, like the buoyancy force we will be concerned with in section \\ref{sec:benchmark}.\n\n\\subsection{Time-stepping scheme for the MHD equations \\label{subsec:timestep}}\nThe spatial discretization procedure discussed in the previous section transforms the MHD equations into a set of ordinary differential equation for the unknown values $({\\boldsymbol u}_i,{\\boldsymbol b}_i,p_i)$ at the grid nodes $i$. One of the major difficulties associated with this is that the discretized magnetic induction equation does not necessarily conserve the solenoidal character of ${\\boldsymbol b}$. To remedy this issue, we follow a technique pioneered by \\citet{toth2000} and afterwards adopted, among others by \\citet{harder2005finite}, \\citet{chan2007} and \\citet{guermond2007}. It consists of equipping the induction equation with a Lagrange multiplier or pseudo-pressure $p_b$ that allows projection of the magnetic field onto the space of divergence-free vector fields. More specifically, the induction equation now reads:\n\n", "index": 31, "text": "\\begin{equation}\n\\frac{\\partial {\\boldsymbol b}}{\\partial t} + {\\boldsymbol u} \\cdot  \\nabla {\\boldsymbol b} + \\nabla p_b =  {\\boldsymbol b}\\cdot \\nabla {\\boldsymbol u} + Re_m^{-1} \\nabla^2{\\boldsymbol b}. \\label{eq:induction_modif}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E16.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial{\\boldsymbol{b}}}{\\partial t}+{\\boldsymbol{u}}\\cdot\\nabla{%&#10;\\boldsymbol{b}}+\\nabla p_{b}={\\boldsymbol{b}}\\cdot\\nabla{\\boldsymbol{u}}+Re_{m%&#10;}^{-1}\\nabla^{2}{\\boldsymbol{b}}.\" display=\"block\"><mrow><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac><mo>+</mo><mrow><mi>\ud835\udc96</mi><mo>\u22c5</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow></mrow><mo>+</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><msub><mi>p</mi><mi>b</mi></msub></mrow></mrow><mo>=</mo><mrow><mrow><mi>\ud835\udc83</mi><mo>\u22c5</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc96</mi></mrow></mrow><mo>+</mo><mrow><mi>R</mi><mo>\u2062</mo><msubsup><mi>e</mi><mi>m</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mrow><msup><mo>\u2207</mo><mn>2</mn></msup><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nand likewise for ${\\boldsymbol B}^{n+1/2}$. For the face-centred quantities $U_{ij}$ and $B_{ij}$ that appear in the expression of the operators $\\mathbb{C}_{U}$ and $\\mathbb{C}_{B}$, we use an explicit second-order time accurate Adams-Bashforth scheme, that is,\n\n", "itemtype": "equation", "pos": 33288, "prevtext": " \nIn order to integrate the momentum equation (\\ref{eq:navierstokes}) and modified induction equation (\\ref{eq:induction_modif}) in time, we adopt a fractional step algorithm akin to the one devised by \\cite{chorin1968} and \\cite{kim1985} for the incompressible Navier-Stokes equation as follows:\n\\begin{enumerate}\n\\item Compute the intermediate velocity and magnetic field ${\\boldsymbol U}^{\\star},{\\boldsymbol B}^{\\star}$ at the grid nodes from the given data ${\\boldsymbol U}^n, {\\boldsymbol B}^n, P^{n}, P^{n}_{b}$ by integration of the MHD equations, that is,\n\\begin{eqnarray}\n\\frac{{\\boldsymbol U}^{\\star} - {\\boldsymbol U}^{n}}{\\Delta t} & = & - \\mathbb{C}^{n+1/2}_{U}{\\boldsymbol U^{n+1/2}} + \\mathbb{C}^{n+1/2}_{B}{\\boldsymbol B}^{n+1/2} + \\frac{1}{Re}\\mathbb{L}{\\boldsymbol U}^{n+1/2} -\\mathbb{G}P^{n} + {\\boldsymbol F}_b, \\\\\n\\frac{{\\boldsymbol B}^{\\star} - {\\boldsymbol B}^{n}}{\\Delta t} & = & - \\mathbb{C}^{n+1/2}_{U}{\\boldsymbol B}^{n+1/2} + \\mathbb{C}^{n+1/2}_{B}{\\boldsymbol U}^{n+1/2} + \\frac{1}{Re_m} \\mathbb{L}{\\boldsymbol B}^{n+1/2} -\\mathbb{G}P^{n}_{b}.\n\\end{eqnarray}\nHere, a second order accurate Crank-Nicolson time discretisation scheme is used for the node-based, vectorial quantities, that is,\n\n", "index": 33, "text": "\\begin{equation}\n{\\boldsymbol U}^{n+1/2} = \\frac{{\\boldsymbol U}^{\\star}+{\\boldsymbol U}^{n}}{2},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E17.m1\" class=\"ltx_Math\" alttext=\"{\\boldsymbol{U}}^{n+1/2}=\\frac{{\\boldsymbol{U}}^{\\star}+{\\boldsymbol{U}}^{n}}{%&#10;2},\" display=\"block\"><mrow><mrow><msup><mi>\ud835\udc7c</mi><mrow><mi>n</mi><mo>+</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></mrow></msup><mo>=</mo><mfrac><mrow><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup></mrow><mn>2</mn></mfrac></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nand likewise for $B_{ij}^{n+1/2}$. This scheme has the advantage of being stable independently of the time step $\\Delta t$ -- we corroborate this stability property in Appendix \\ref{app:stab} -- but still being linear in the unknowns ${\\boldsymbol U}^{\\star}$ and ${\\boldsymbol B}^{\\star}$. As such, we avoid the difficulties associated with solving a nonlinear system in these quantities. The linear system is solved using a classical Jacobi iterative method. This method is preferred above a Gauss-Seidel scheme that lacks natural data parallelism in an unstructured grid setting; this is related to the fact the Gauss-Seidel method requires the inversion of an upper triangular matrix, which is essentially a sequential process. We combine the Jacobi method with a successive overrelaxation technique; in a recent work \\citep{mittal}, it was shown that this technique holds the promise of a considerable speed-up of the convergence.\n\\item The `new' velocity ${\\boldsymbol U}^{n+1}$ and magnetic field ${\\boldsymbol B}^{n+1}$ are related to their intermediate counterparts  ${\\boldsymbol U}^{\\star}$ and ${\\boldsymbol B}^{\\star}$ through the following relationships:\n\n", "itemtype": "equation", "pos": 33664, "prevtext": "\nand likewise for ${\\boldsymbol B}^{n+1/2}$. For the face-centred quantities $U_{ij}$ and $B_{ij}$ that appear in the expression of the operators $\\mathbb{C}_{U}$ and $\\mathbb{C}_{B}$, we use an explicit second-order time accurate Adams-Bashforth scheme, that is,\n\n", "index": 35, "text": "\\begin{equation}\nU_{ij}^{n+1/2} = \\frac{3}{2}U_{ij}^{n} - \\frac{1}{2}U_{ij}^{n-1}, \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E18.m1\" class=\"ltx_Math\" alttext=\"U_{ij}^{n+1/2}=\\frac{3}{2}U_{ij}^{n}-\\frac{1}{2}U_{ij}^{n-1},\" display=\"block\"><mrow><mrow><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>n</mi><mo>+</mo><mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></mrow></msubsup><mo>=</mo><mrow><mrow><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>\u2062</mo><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mi>n</mi></msubsup></mrow><mo>-</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>n</mi><mo>-</mo><mn>1</mn></mrow></msubsup></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 34932, "prevtext": "\nand likewise for $B_{ij}^{n+1/2}$. This scheme has the advantage of being stable independently of the time step $\\Delta t$ -- we corroborate this stability property in Appendix \\ref{app:stab} -- but still being linear in the unknowns ${\\boldsymbol U}^{\\star}$ and ${\\boldsymbol B}^{\\star}$. As such, we avoid the difficulties associated with solving a nonlinear system in these quantities. The linear system is solved using a classical Jacobi iterative method. This method is preferred above a Gauss-Seidel scheme that lacks natural data parallelism in an unstructured grid setting; this is related to the fact the Gauss-Seidel method requires the inversion of an upper triangular matrix, which is essentially a sequential process. We combine the Jacobi method with a successive overrelaxation technique; in a recent work \\citep{mittal}, it was shown that this technique holds the promise of a considerable speed-up of the convergence.\n\\item The `new' velocity ${\\boldsymbol U}^{n+1}$ and magnetic field ${\\boldsymbol B}^{n+1}$ are related to their intermediate counterparts  ${\\boldsymbol U}^{\\star}$ and ${\\boldsymbol B}^{\\star}$ through the following relationships:\n\n", "index": 37, "text": "\\begin{equation}\n\\frac{{\\boldsymbol U}^{n+1} - {\\boldsymbol U}^{\\star}}{\\Delta t} = - \\mathbb{G}\\left(P^{n+1} -P^{n}\\right) =  -\\mathbb{G}\\delta P, \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E19.m1\" class=\"ltx_Math\" alttext=\"\\frac{{\\boldsymbol{U}}^{n+1}-{\\boldsymbol{U}}^{\\star}}{\\Delta t}=-\\mathbb{G}%&#10;\\left(P^{n+1}-P^{n}\\right)=-\\mathbb{G}\\delta P,\" display=\"block\"><mrow><mrow><mfrac><mrow><msup><mi>\ud835\udc7c</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>-</mo><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mrow><mo>-</mo><mrow><mi>\ud835\udd3e</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><msup><mi>P</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>-</mo><msup><mi>P</mi><mi>n</mi></msup></mrow><mo>)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mo>-</mo><mrow><mi>\ud835\udd3e</mi><mo>\u2062</mo><mi>\u03b4</mi><mo>\u2062</mo><mi>P</mi></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere $P$ and $P_b$ denote the discrete version of the pressure $p$ and magnetic pseudo-pressure $p_b$, respectively, and where we have introduced the shorthand notations $\\delta P = P^{n+1}-P^{n}$ and $\\delta P_b = P^{n+1}_b-P^{n}_b$.\nTaking the divergence of this expression and imposing the incompressibility constraint on ${\\boldsymbol  U}^{n+1}$ and ${\\boldsymbol  B}^{n+1}$ would lead to a Poisson equation that suffers from the odd-even-decoupling described above. Instead, we enforce the solenoidality constraints at the level of the face-normal velocity and magnetic fluxes $U_{ij}$ and $B_{ij}$. We start from the intermediate face-normal velocity and magnetic field $U^{\\star}_{ij}$ and $B^{\\star}_{ij}$:\n\n", "itemtype": "equation", "pos": 35096, "prevtext": "\n\n", "index": 39, "text": "\\begin{equation}\n\\frac{{\\boldsymbol B}^{n+1} - {\\boldsymbol B}^{\\star}}{\\Delta t} = - \\mathbb{G}\\left(P^{n+1}_b-P^{n}_b\\right) = -\\mathbb{G}\\delta P_b,  \\label{eq:corr_magnetic}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E20.m1\" class=\"ltx_Math\" alttext=\"\\frac{{\\boldsymbol{B}}^{n+1}-{\\boldsymbol{B}}^{\\star}}{\\Delta t}=-\\mathbb{G}%&#10;\\left(P^{n+1}_{b}-P^{n}_{b}\\right)=-\\mathbb{G}\\delta P_{b},\" display=\"block\"><mrow><mrow><mfrac><mrow><msup><mi>\ud835\udc69</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>-</mo><msup><mi>\ud835\udc69</mi><mo>\u22c6</mo></msup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mrow><mo>-</mo><mrow><mi>\ud835\udd3e</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><msubsup><mi>P</mi><mi>b</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>-</mo><msubsup><mi>P</mi><mi>b</mi><mi>n</mi></msubsup></mrow><mo>)</mo></mrow></mrow></mrow><mo>=</mo><mrow><mo>-</mo><mrow><mi>\ud835\udd3e</mi><mo>\u2062</mo><mi>\u03b4</mi><mo>\u2062</mo><msub><mi>P</mi><mi>b</mi></msub></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe gradients of the Lagrangian multipliers $P$ and $P_b$ at the faces can now be used to relate the new face-normal velocity $U^{n+1}_{ij}$ to $U^{\\star}_{ij}$:\n\n", "itemtype": "equation", "pos": 36005, "prevtext": "\nwhere $P$ and $P_b$ denote the discrete version of the pressure $p$ and magnetic pseudo-pressure $p_b$, respectively, and where we have introduced the shorthand notations $\\delta P = P^{n+1}-P^{n}$ and $\\delta P_b = P^{n+1}_b-P^{n}_b$.\nTaking the divergence of this expression and imposing the incompressibility constraint on ${\\boldsymbol  U}^{n+1}$ and ${\\boldsymbol  B}^{n+1}$ would lead to a Poisson equation that suffers from the odd-even-decoupling described above. Instead, we enforce the solenoidality constraints at the level of the face-normal velocity and magnetic fluxes $U_{ij}$ and $B_{ij}$. We start from the intermediate face-normal velocity and magnetic field $U^{\\star}_{ij}$ and $B^{\\star}_{ij}$:\n\n", "index": 41, "text": "\\begin{equation}\nU^{\\star}_{ij} = \\frac{{\\boldsymbol U}^{\\star}_{i} + {\\boldsymbol U}^{\\star}_{j}}{2} \\cdot {\\boldsymbol S}_{i,j}, \\hspace{1cm} B^{\\star}_{ij} = \\frac{{\\boldsymbol B}^{\\star}_{i} + {\\boldsymbol B}^{\\star}_{j}}{2} \\cdot {\\boldsymbol S}_{i,j}\n\\label{ustar-face}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E21.m1\" class=\"ltx_Math\" alttext=\"U^{\\star}_{ij}=\\frac{{\\boldsymbol{U}}^{\\star}_{i}+{\\boldsymbol{U}}^{\\star}_{j}%&#10;}{2}\\cdot{\\boldsymbol{S}}_{i,j},\\hskip 28.452756ptB^{\\star}_{ij}=\\frac{{%&#10;\\boldsymbol{B}}^{\\star}_{i}+{\\boldsymbol{B}}^{\\star}_{j}}{2}\\cdot{\\boldsymbol{%&#10;S}}_{i,j}\" display=\"block\"><mrow><mrow><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>\u22c6</mo></msubsup><mo>=</mo><mrow><mfrac><mrow><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>+</mo><msubsup><mi>\ud835\udc7c</mi><mi>j</mi><mo>\u22c6</mo></msubsup></mrow><mn>2</mn></mfrac><mo>\u22c5</mo><msub><mi>\ud835\udc7a</mi><mrow><mi>i</mi><mo>,</mo><mi>j</mi></mrow></msub></mrow></mrow><mo rspace=\"31pt\">,</mo><mrow><msubsup><mi>B</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>\u22c6</mo></msubsup><mo>=</mo><mrow><mfrac><mrow><msubsup><mi>\ud835\udc69</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>+</mo><msubsup><mi>\ud835\udc69</mi><mi>j</mi><mo>\u22c6</mo></msubsup></mrow><mn>2</mn></mfrac><mo>\u22c5</mo><msub><mi>\ud835\udc7a</mi><mrow><mi>i</mi><mo>,</mo><mi>j</mi></mrow></msub></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": " \nand likewise for   \n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nThe gradients of the Lagrangian multipliers $P$ and $P_b$ at the faces can now be used to relate the new face-normal velocity $U^{n+1}_{ij}$ to $U^{\\star}_{ij}$:\n\n", "index": 43, "text": "\\begin{equation}\n\\frac{U^{n+1}_{ij} - U^{\\star}_{ij}}{\\Delta t} = \\left(\\mathbb{G}_{f} \\delta P \\right)_{ij},\n\\label{press-corr}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E22.m1\" class=\"ltx_Math\" alttext=\"\\frac{U^{n+1}_{ij}-U^{\\star}_{ij}}{\\Delta t}=\\left(\\mathbb{G}_{f}\\delta P%&#10;\\right)_{ij},\" display=\"block\"><mrow><mrow><mfrac><mrow><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>-</mo><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>\u22c6</mo></msubsup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac><mo>=</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\ud835\udd3e</mi><mi>f</mi></msub><mo>\u2062</mo><mi>\u03b4</mi><mo>\u2062</mo><mi>P</mi></mrow><mo>)</mo></mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "   \nWe now want to impose mass conservation at the level of the convecting velocities, that is, we want $U^{n+1}_{ij}$ and $B^{n+1}_{ij}$ to satisfy:\n\n", "itemtype": "equation", "pos": -1, "prevtext": " \nand likewise for   \n\n", "index": 45, "text": "\\begin{equation}\n\\frac{B^{n+1}_{ij} - B^{\\star}_{ij}}{\\Delta t} = \\left(\\mathbb{G}_{f}\\delta P_b \\right)_{ij}\n\\label{press-corrb}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E23.m1\" class=\"ltx_Math\" alttext=\"\\frac{B^{n+1}_{ij}-B^{\\star}_{ij}}{\\Delta t}=\\left(\\mathbb{G}_{f}\\delta P_{b}%&#10;\\right)_{ij}\" display=\"block\"><mrow><mfrac><mrow><msubsup><mi>B</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>-</mo><msubsup><mi>B</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mo>\u22c6</mo></msubsup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac><mo>=</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\ud835\udd3e</mi><mi>f</mi></msub><mo>\u2062</mo><mi>\u03b4</mi><mo>\u2062</mo><msub><mi>P</mi><mi>b</mi></msub></mrow><mo>)</mo></mrow><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow></msub></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 36917, "prevtext": "   \nWe now want to impose mass conservation at the level of the convecting velocities, that is, we want $U^{n+1}_{ij}$ and $B^{n+1}_{ij}$ to satisfy:\n\n", "index": 47, "text": "\\begin{equation}\n\\sum_{j \\in \\pi_i } U^{n+1}_{ij} = 0\n\\label{incompress-np1}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E24.m1\" class=\"ltx_Math\" alttext=\"\\sum_{j\\in\\pi_{i}}U^{n+1}_{ij}=0\" display=\"block\"><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msubsup></mrow><mo>=</mo><mn>0</mn></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nCombination of all this now leads to a Poisson equation for $\\delta P$ and $\\delta P_b$ at the CV nodes based on the discretization scheme (\\ref{eq:laplacian_final}) that is free of odd-even-decoupling, and can be expressed as\n\n", "itemtype": "equation", "pos": 37009, "prevtext": "\n\n", "index": 49, "text": "\\begin{equation}\n\\sum_{j \\in \\pi_i } B^{n+1}_{ij} = 0\n\\label{incompress-np2}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E25.m1\" class=\"ltx_Math\" alttext=\"\\sum_{j\\in\\pi_{i}}B^{n+1}_{ij}=0\" display=\"block\"><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><msubsup><mi>B</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msubsup></mrow><mo>=</mo><mn>0</mn></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 37328, "prevtext": "\nCombination of all this now leads to a Poisson equation for $\\delta P$ and $\\delta P_b$ at the CV nodes based on the discretization scheme (\\ref{eq:laplacian_final}) that is free of odd-even-decoupling, and can be expressed as\n\n", "index": 51, "text": "\\begin{equation}\n\\mathbb{L}\\delta P = \\frac{1}{\\Delta t}\\mathbb{D}({\\boldsymbol U}^{\\star}), \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E26.m1\" class=\"ltx_Math\" alttext=\"\\mathbb{L}\\delta P=\\frac{1}{\\Delta t}\\mathbb{D}({\\boldsymbol{U}}^{\\star}),\" display=\"block\"><mrow><mrow><mrow><mi>\ud835\udd43</mi><mo>\u2062</mo><mi>\u03b4</mi><mo>\u2062</mo><mi>P</mi></mrow><mo>=</mo><mrow><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac><mo>\u2062</mo><mi>\ud835\udd3b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThese equation are solved using a BiCGstab(2)-algorithm \\citep{vanderVorst} or an algebraic multigrid method \\citep{hypre,boomeramg}.\n\\item Finally, both the nodal and face-normal velocity and magnetic field are corrected with the gradient of $\\delta P$ and $\\delta P_b$,\n\\begin{eqnarray}\n{\\boldsymbol U}^{n+1} &=& {\\boldsymbol U}^{\\star} - \\Delta t \\mathbb{G}\\delta P, \\\\\nU^{n+1}_{ij} & = & U^{\\star}_{ij} - \\Delta t \\left(\\mathbb{G}_f \\delta P\\right)_{ij}, \\\\\n{\\boldsymbol B}^{n+1} &=& {\\boldsymbol B}^{\\star} - \\Delta t \\mathbb{G}\\delta P_b, \\label{eq:correct_b} \\\\\nB^{n+1}_{ij} & = & B^{\\star}_{ij} - \\Delta t \\left(\\mathbb{G}_f \\delta P_b \\right)_{ij}.\n\\end{eqnarray}\n \\end{enumerate}\nWe note that the updating scheme for the face-centred and nodal quantities is slightly different. As a consequence of this, the nodal divergence of the velocity field is not exactly zero, but of order-of-magnitude $\\mathcal{O}(\\Delta x)$. Since, however, at every time step, the new nodal and face-centreed quantities are coupled by eq. (\\ref{ustar-face}), the divergence of the nodal velocity can never become larger than $\\mathcal{O}(\\Delta x)$. As shown in Appendix \\ref{app:stab}, the mixed Adams-Bashforth/Crank-Nicolson scheme ensures that the nonlinear terms exactly conserve the total energy, that is, the sum of kinetic and magnetic energy. It can be shown, on the other hand, that there is a small spurious kinetic energy dissipation term associated with the Lagrange multiplier gradients $\\nabla p$ and $\\nabla p_b$ that scales as $\\mathcal{O}(\\Delta t \\Delta x^2)$ \\citep{ham2007}. Therefore, the total energy cannot become unbounded, and thus we can conclude that our time-stepping method is stable.\n\n\\subsection{Validation: The incompressible Archontis dynamo}\nIn order to test the algorithm outlined above, we perform MHD simulations in periodic box geometries. We consider the nonlinear saturation of the Archontis dynamo \\citep{ArchontisPhD}, as studied by \\citet{cameron2006}. In this case, the box size is $2\\pi$, and we choose $Re=Re_m=100$ and the initial conditions \n\n", "itemtype": "equation", "pos": 37436, "prevtext": "\n\n", "index": 53, "text": "\\begin{equation}\n\\mathbb{L}\\delta P_b = \\frac{1}{\\Delta t}\\mathbb{D}({\\boldsymbol B}^{\\star}). \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E27.m1\" class=\"ltx_Math\" alttext=\"\\mathbb{L}\\delta P_{b}=\\frac{1}{\\Delta t}\\mathbb{D}({\\boldsymbol{B}}^{\\star}).\" display=\"block\"><mrow><mrow><mrow><mi>\ud835\udd43</mi><mo>\u2062</mo><mi>\u03b4</mi><mo>\u2062</mo><msub><mi>P</mi><mi>b</mi></msub></mrow><mo>=</mo><mrow><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac><mo>\u2062</mo><mi>\ud835\udd3b</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc69</mi><mo>\u22c6</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe system is forced by a body force ${\\boldsymbol f}_b = Re^{-1}\\left. {\\boldsymbol u} \\right|_{t=t_0}$. Using a spectral method, Cameron and Galloway found that the system evolves into a stationary state in which kinetic and magnetic energy are quasi-equipartioned with \n\n", "itemtype": "equation", "pos": 39625, "prevtext": "\nThese equation are solved using a BiCGstab(2)-algorithm \\citep{vanderVorst} or an algebraic multigrid method \\citep{hypre,boomeramg}.\n\\item Finally, both the nodal and face-normal velocity and magnetic field are corrected with the gradient of $\\delta P$ and $\\delta P_b$,\n\\begin{eqnarray}\n{\\boldsymbol U}^{n+1} &=& {\\boldsymbol U}^{\\star} - \\Delta t \\mathbb{G}\\delta P, \\\\\nU^{n+1}_{ij} & = & U^{\\star}_{ij} - \\Delta t \\left(\\mathbb{G}_f \\delta P\\right)_{ij}, \\\\\n{\\boldsymbol B}^{n+1} &=& {\\boldsymbol B}^{\\star} - \\Delta t \\mathbb{G}\\delta P_b, \\label{eq:correct_b} \\\\\nB^{n+1}_{ij} & = & B^{\\star}_{ij} - \\Delta t \\left(\\mathbb{G}_f \\delta P_b \\right)_{ij}.\n\\end{eqnarray}\n \\end{enumerate}\nWe note that the updating scheme for the face-centred and nodal quantities is slightly different. As a consequence of this, the nodal divergence of the velocity field is not exactly zero, but of order-of-magnitude $\\mathcal{O}(\\Delta x)$. Since, however, at every time step, the new nodal and face-centreed quantities are coupled by eq. (\\ref{ustar-face}), the divergence of the nodal velocity can never become larger than $\\mathcal{O}(\\Delta x)$. As shown in Appendix \\ref{app:stab}, the mixed Adams-Bashforth/Crank-Nicolson scheme ensures that the nonlinear terms exactly conserve the total energy, that is, the sum of kinetic and magnetic energy. It can be shown, on the other hand, that there is a small spurious kinetic energy dissipation term associated with the Lagrange multiplier gradients $\\nabla p$ and $\\nabla p_b$ that scales as $\\mathcal{O}(\\Delta t \\Delta x^2)$ \\citep{ham2007}. Therefore, the total energy cannot become unbounded, and thus we can conclude that our time-stepping method is stable.\n\n\\subsection{Validation: The incompressible Archontis dynamo}\nIn order to test the algorithm outlined above, we perform MHD simulations in periodic box geometries. We consider the nonlinear saturation of the Archontis dynamo \\citep{ArchontisPhD}, as studied by \\citet{cameron2006}. In this case, the box size is $2\\pi$, and we choose $Re=Re_m=100$ and the initial conditions \n\n", "index": 55, "text": "\\begin{equation}\n\\left. {\\boldsymbol u} \\right|_{t=t_0} = \\left. {\\boldsymbol b} \\right|_{t=t_0} =  \\sin z \\hat{\\boldsymbol x} +  \\sin x  \\hat{\\boldsymbol y}  + \\sin y  \\hat{\\boldsymbol z} .\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E28.m1\" class=\"ltx_Math\" alttext=\"\\left.{\\boldsymbol{u}}\\right|_{t=t_{0}}=\\left.{\\boldsymbol{b}}\\right|_{t=t_{0}%&#10;}=\\sin z\\hat{\\boldsymbol{x}}+\\sin x\\hat{\\boldsymbol{y}}+\\sin y\\hat{\\boldsymbol%&#10;{z}}.\" display=\"block\"><mrow><mrow><msub><mrow><mi>\ud835\udc96</mi><mo fence=\"true\">|</mo></mrow><mrow><mi>t</mi><mo>=</mo><msub><mi>t</mi><mn>0</mn></msub></mrow></msub><mo>=</mo><msub><mrow><mi>\ud835\udc83</mi><mo fence=\"true\">|</mo></mrow><mrow><mi>t</mi><mo>=</mo><msub><mi>t</mi><mn>0</mn></msub></mrow></msub><mo>=</mo><mrow><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mi>z</mi><mo>\u2062</mo><mover accent=\"true\"><mi>\ud835\udc99</mi><mo stretchy=\"false\">^</mo></mover></mrow></mrow><mo>+</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mi>x</mi><mo>\u2062</mo><mover accent=\"true\"><mi>\ud835\udc9a</mi><mo stretchy=\"false\">^</mo></mover></mrow></mrow><mo>+</mo><mrow><mi>sin</mi><mo>\u2061</mo><mrow><mi>y</mi><mo>\u2062</mo><mover accent=\"true\"><mi>\ud835\udc9b</mi><mo stretchy=\"false\">^</mo></mover></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nIn Table \\ref{tab:CameronGalloway}, we compare these values to the ones obtained with the present FV code. We report results for three different types of meshes, illustrated in Figure \\ref{fig:meshes_CameronGalloway}, and different grid resolutions. The first type of mesh is a Cartesian one with equidistant grid spacing $\\Delta x = \\Delta y = \\Delta z$. The second grid also consists of hexahedral elements, and is obtained as follows. Starting from a Cartesian, equidistant grid, we perturb the positions of the grid nodes according to $(x,y,z) \\rightarrow (x,y,z) + 0.5(\\sin(z),\\sin(x),\\sin(y))$. The third grid, finally, consists of isotropic tetrahedral elements and has been generated using the preprocessing software ANSYS ICEM CFD. \n\\begin{figure}\n\\begin{center}               \n\\includegraphics[width=\\columnwidth]{fig5.pdf}\n    \\caption{Illustration of the three different types of grids used for the simulation of the Archontis dynamo. In Table \\ref{tab:CameronGalloway}, these are referred to as Cartesian, hexahedral and tetrahedral, respectively.}              \n    \\label{fig:meshes_CameronGalloway}  \n  \\end{center}\n\\end{figure}\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{c|cc|cc|cc}\n\\hline \\hline \n           &       \\multicolumn{2}{|c|}{Cartesian}       &       \\multicolumn{2}{|c|}{Hexahedral}    &   \\multicolumn{2}{|c|}{Tetrahedral}  \\\\ \\hline\n           & $e_k$ & $e_m$ & $e_k$ & $e_m$ & $e_k$ & $e_m$ \\\\\n$16^3$ & 0.1803 & 0.1777  &  0.1792 & 0.1767 &    \\multicolumn{2}{|c|}{No dynamo}                       \\\\\n$24^3$ & 0.1796 & 0.1775  &  0.1790 & 0.1771 & 0.1794 & 0.1776\\\\\n$32^3$ & 0.1791 & 0.1772  &  0.1788 & 0.1769 & 0.1788 & 0.1771 \\\\\n$48^3$ & 0.1786 & 0.1768  &  0.1784 & 0.1767 & 0.1784 & 0.1767  \\\\\n$64^3$ & 0.1783 & 0.1766  &  0.1783 & 0.1766 & 0.1783 & 0.1766    \\\\\n\\hline \\hline\n\\end{tabular}\n\\end{center}\n\\caption{Numerical results for the kinetic and magnetic energy density $e_k$ and $e_m$ of the Archontis dynamo at $Re=Re_m=100$. The reference values are $e_k = 0.1781$ and $e_m=0.1765$.}\n\\label{tab:CameronGalloway}\n\\end{table}\n\nTable 1 summarizes the results for the different grid types; the different resolutions are given in the leftmost column. We find that, by increasing the resolution, the values of $e_k$ and $e_m$ converge towards the ones reported by \\citet{cameron2006}. Remarkably, the Cartesian grid does not yield results any better than the others, although this scheme is strictly second-order accurate whereas the other ones are only first order-accurate. Finally, in order to assess the fidelity of the numerical solution in a more local way, we show, in figure \\ref{fig:CameronGalloway}, isocontours of the intensities of the Elsasser variables ${\\boldsymbol u} + {\\boldsymbol b}$ and ${\\boldsymbol u} - {\\boldsymbol b}$. These are essentially the same as the ones provided by \\citet{cameron2006} (see their figures 4 and 5, note that we also set $Re=Re_m=200$ in agreement with the value in those figures). \n\\begin{figure}\n  \\begin{center}\n  \\setlength{\\epsfysize}{7.0cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig6a.pdf}}  &\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig6b.pdf}}\n    \\end{tabular}\n    \\caption{Isocontours of $({\\boldsymbol u}+{\\boldsymbol b})\\cdot({\\boldsymbol u}+{\\boldsymbol b})$ (a) and $({\\boldsymbol u}-{\\boldsymbol b})\\cdot({\\boldsymbol u}-{\\boldsymbol b})$ (b) for $Re=Re_m=200$. The red and blue/green isosurfaces correspond to values of 80 and 50 \\% of the global maximum of the quantity, respectively. }\n         \\label{fig:CameronGalloway}                \n  \\end{center}\n\\end{figure}\n\\subsection{Weak scaling tests}\nIn order to investigate the computational efficiency of our code, we have carried out the so-called weak scaling tests, that is, we report the the time required to compute 500 time steps when we increase both the number of CVs and computational cores such that the number of CVs per core remains constant. We use a setup with periodic boundary conditions, similar to the ones discussed in the previous paragraph, where the number of CVs ranges from 524 888  to 33 554 432 and the number of cores from 16 to 1024. The scaling tests have been carried out on the Piz Daint system of the Swiss Supercomputing Service (CSCS). The results are shown in figure \\ref{fig:scaling}. We see a slow increase in time-to-solution as we increase the number of cores, which is dominantly associated with the  higher number of iterations required to solve the Poisson equations as the number of unknowns increases.\n\\begin{figure}\n\\begin{center}               \n\\includegraphics[width=\\columnwidth]{fig7.pdf}\n    \\caption{Weak scaling tests for a periodic box dynamo simulation. The blue symbols show the results of our scaling experiments, whereas the dashed red line indicates ideal scaling behaviour. The results have been normalized by the time-to-solution at lowest resolution (524 888 nodes, 16 cores).}              \n    \\label{fig:scaling}  \n  \\end{center}\n\\end{figure}\n\\section{Implementation of ferromagnetic boundary conditions} \\label{sec:ferro}\n\\subsection{Boundary conditions on the wall-normal component of ${\\boldsymbol b}$}\nThe `bulk algorithm' having been validated, we now turn our attention to the implementation of the ferromagnetic boundary conditions ${\\boldsymbol b} \\times \\hat {\\boldsymbol n} = 0$.\nAs mentioned in section \\ref{sec:eqns}, the main difficulty resides in the fact that our algorithm requires us to impose a condition on each of the (three) components of the magnetic field. Therefore, our implementation needs to take into account two aspects:\n\\begin{enumerate}\n\\item At all times, we enforce the tangential components of ${\\boldsymbol b}$ at the boundary to be zero, and we only retain the normal component of the magnetic field.\n\\item We impose a boundary condition on the normal component of ${\\boldsymbol b}$ that is consistent with $\\nabla \\cdot {\\boldsymbol b} = 0$.\n\\end{enumerate}\nWe will first illustrate this for spherical geometries; for the sake of simplicity, we will assume no-slip boundary conditions for the velocity field. Adopting canonical spherical coordinates $(r,\\theta,\\phi)$, the divergence constraint on ${\\boldsymbol b}$ reads\n\n", "itemtype": "equation", "pos": 40104, "prevtext": "\nThe system is forced by a body force ${\\boldsymbol f}_b = Re^{-1}\\left. {\\boldsymbol u} \\right|_{t=t_0}$. Using a spectral method, Cameron and Galloway found that the system evolves into a stationary state in which kinetic and magnetic energy are quasi-equipartioned with \n\n", "index": 57, "text": "\\begin{equation}\ne_{k} = \\frac{1}{8\\pi^3} \\iiint {\\boldsymbol u}^2 \\,\\mathrm{d}V \\approx 0.1781, \\hspace{1cm} e_{m} =  \\frac{1}{8\\pi^3} \\iiint {\\boldsymbol b}^2 \\,\\mathrm{d}V  \\approx 0.1765.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E29.m1\" class=\"ltx_Math\" alttext=\"e_{k}=\\frac{1}{8\\pi^{3}}\\iiint{\\boldsymbol{u}}^{2}\\,\\mathrm{d}V\\approx 0.1781,%&#10;\\hskip 28.452756pte_{m}=\\frac{1}{8\\pi^{3}}\\iiint{\\boldsymbol{b}}^{2}\\,\\mathrm{%&#10;d}V\\approx 0.1765.\" display=\"block\"><mrow><mrow><mrow><msub><mi>e</mi><mi>k</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><mrow><mn>8</mn><mo>\u2062</mo><msup><mi>\u03c0</mi><mn>3</mn></msup></mrow></mfrac><mo>\u2062</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222d</mo><mrow><mpadded width=\"+1.7pt\"><msup><mi>\ud835\udc96</mi><mn>2</mn></msup></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>V</mi></mrow></mrow></mrow></mrow><mo>\u2248</mo><mn>0.1781</mn></mrow><mo rspace=\"31pt\">,</mo><mrow><msub><mi>e</mi><mi>m</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><mrow><mn>8</mn><mo>\u2062</mo><msup><mi>\u03c0</mi><mn>3</mn></msup></mrow></mfrac><mo>\u2062</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222d</mo><mrow><mpadded width=\"+1.7pt\"><msup><mi>\ud835\udc83</mi><mn>2</mn></msup></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>V</mi></mrow></mrow></mrow></mrow><mo>\u2248</mo><mn>0.1765</mn></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe last two terms in this expression vanish since $b_\\theta$ and $b_\\phi$ are identically zero at the surface $r=R$. Hence, we obtain\n\n", "itemtype": "equation", "pos": 46567, "prevtext": "\nIn Table \\ref{tab:CameronGalloway}, we compare these values to the ones obtained with the present FV code. We report results for three different types of meshes, illustrated in Figure \\ref{fig:meshes_CameronGalloway}, and different grid resolutions. The first type of mesh is a Cartesian one with equidistant grid spacing $\\Delta x = \\Delta y = \\Delta z$. The second grid also consists of hexahedral elements, and is obtained as follows. Starting from a Cartesian, equidistant grid, we perturb the positions of the grid nodes according to $(x,y,z) \\rightarrow (x,y,z) + 0.5(\\sin(z),\\sin(x),\\sin(y))$. The third grid, finally, consists of isotropic tetrahedral elements and has been generated using the preprocessing software ANSYS ICEM CFD. \n\\begin{figure}\n\\begin{center}               \n\\includegraphics[width=\\columnwidth]{fig5.pdf}\n    \\caption{Illustration of the three different types of grids used for the simulation of the Archontis dynamo. In Table \\ref{tab:CameronGalloway}, these are referred to as Cartesian, hexahedral and tetrahedral, respectively.}              \n    \\label{fig:meshes_CameronGalloway}  \n  \\end{center}\n\\end{figure}\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{c|cc|cc|cc}\n\\hline \\hline \n           &       \\multicolumn{2}{|c|}{Cartesian}       &       \\multicolumn{2}{|c|}{Hexahedral}    &   \\multicolumn{2}{|c|}{Tetrahedral}  \\\\ \\hline\n           & $e_k$ & $e_m$ & $e_k$ & $e_m$ & $e_k$ & $e_m$ \\\\\n$16^3$ & 0.1803 & 0.1777  &  0.1792 & 0.1767 &    \\multicolumn{2}{|c|}{No dynamo}                       \\\\\n$24^3$ & 0.1796 & 0.1775  &  0.1790 & 0.1771 & 0.1794 & 0.1776\\\\\n$32^3$ & 0.1791 & 0.1772  &  0.1788 & 0.1769 & 0.1788 & 0.1771 \\\\\n$48^3$ & 0.1786 & 0.1768  &  0.1784 & 0.1767 & 0.1784 & 0.1767  \\\\\n$64^3$ & 0.1783 & 0.1766  &  0.1783 & 0.1766 & 0.1783 & 0.1766    \\\\\n\\hline \\hline\n\\end{tabular}\n\\end{center}\n\\caption{Numerical results for the kinetic and magnetic energy density $e_k$ and $e_m$ of the Archontis dynamo at $Re=Re_m=100$. The reference values are $e_k = 0.1781$ and $e_m=0.1765$.}\n\\label{tab:CameronGalloway}\n\\end{table}\n\nTable 1 summarizes the results for the different grid types; the different resolutions are given in the leftmost column. We find that, by increasing the resolution, the values of $e_k$ and $e_m$ converge towards the ones reported by \\citet{cameron2006}. Remarkably, the Cartesian grid does not yield results any better than the others, although this scheme is strictly second-order accurate whereas the other ones are only first order-accurate. Finally, in order to assess the fidelity of the numerical solution in a more local way, we show, in figure \\ref{fig:CameronGalloway}, isocontours of the intensities of the Elsasser variables ${\\boldsymbol u} + {\\boldsymbol b}$ and ${\\boldsymbol u} - {\\boldsymbol b}$. These are essentially the same as the ones provided by \\citet{cameron2006} (see their figures 4 and 5, note that we also set $Re=Re_m=200$ in agreement with the value in those figures). \n\\begin{figure}\n  \\begin{center}\n  \\setlength{\\epsfysize}{7.0cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig6a.pdf}}  &\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig6b.pdf}}\n    \\end{tabular}\n    \\caption{Isocontours of $({\\boldsymbol u}+{\\boldsymbol b})\\cdot({\\boldsymbol u}+{\\boldsymbol b})$ (a) and $({\\boldsymbol u}-{\\boldsymbol b})\\cdot({\\boldsymbol u}-{\\boldsymbol b})$ (b) for $Re=Re_m=200$. The red and blue/green isosurfaces correspond to values of 80 and 50 \\% of the global maximum of the quantity, respectively. }\n         \\label{fig:CameronGalloway}                \n  \\end{center}\n\\end{figure}\n\\subsection{Weak scaling tests}\nIn order to investigate the computational efficiency of our code, we have carried out the so-called weak scaling tests, that is, we report the the time required to compute 500 time steps when we increase both the number of CVs and computational cores such that the number of CVs per core remains constant. We use a setup with periodic boundary conditions, similar to the ones discussed in the previous paragraph, where the number of CVs ranges from 524 888  to 33 554 432 and the number of cores from 16 to 1024. The scaling tests have been carried out on the Piz Daint system of the Swiss Supercomputing Service (CSCS). The results are shown in figure \\ref{fig:scaling}. We see a slow increase in time-to-solution as we increase the number of cores, which is dominantly associated with the  higher number of iterations required to solve the Poisson equations as the number of unknowns increases.\n\\begin{figure}\n\\begin{center}               \n\\includegraphics[width=\\columnwidth]{fig7.pdf}\n    \\caption{Weak scaling tests for a periodic box dynamo simulation. The blue symbols show the results of our scaling experiments, whereas the dashed red line indicates ideal scaling behaviour. The results have been normalized by the time-to-solution at lowest resolution (524 888 nodes, 16 cores).}              \n    \\label{fig:scaling}  \n  \\end{center}\n\\end{figure}\n\\section{Implementation of ferromagnetic boundary conditions} \\label{sec:ferro}\n\\subsection{Boundary conditions on the wall-normal component of ${\\boldsymbol b}$}\nThe `bulk algorithm' having been validated, we now turn our attention to the implementation of the ferromagnetic boundary conditions ${\\boldsymbol b} \\times \\hat {\\boldsymbol n} = 0$.\nAs mentioned in section \\ref{sec:eqns}, the main difficulty resides in the fact that our algorithm requires us to impose a condition on each of the (three) components of the magnetic field. Therefore, our implementation needs to take into account two aspects:\n\\begin{enumerate}\n\\item At all times, we enforce the tangential components of ${\\boldsymbol b}$ at the boundary to be zero, and we only retain the normal component of the magnetic field.\n\\item We impose a boundary condition on the normal component of ${\\boldsymbol b}$ that is consistent with $\\nabla \\cdot {\\boldsymbol b} = 0$.\n\\end{enumerate}\nWe will first illustrate this for spherical geometries; for the sake of simplicity, we will assume no-slip boundary conditions for the velocity field. Adopting canonical spherical coordinates $(r,\\theta,\\phi)$, the divergence constraint on ${\\boldsymbol b}$ reads\n\n", "index": 59, "text": "\\begin{equation}\n\\frac{1}{r^2}\\frac{\\partial}{\\partial r} \\left(r^2 b_r \\right) + \\frac{1}{r \\sin \\theta} \\frac{\\partial}{\\partial \\theta}\\left(b_\\theta \\sin \\theta\\right) + \\frac{1}{r \\sin \\theta} \\frac{\\partial b_\\phi}{\\partial \\phi} = 0. \\label{eq:divb_spherical}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E30.m1\" class=\"ltx_Math\" alttext=\"\\frac{1}{r^{2}}\\frac{\\partial}{\\partial r}\\left(r^{2}b_{r}\\right)+\\frac{1}{r%&#10;\\sin\\theta}\\frac{\\partial}{\\partial\\theta}\\left(b_{\\theta}\\sin\\theta\\right)+%&#10;\\frac{1}{r\\sin\\theta}\\frac{\\partial b_{\\phi}}{\\partial\\phi}=0.\" display=\"block\"><mrow><mrow><mrow><mrow><mfrac><mn>1</mn><msup><mi>r</mi><mn>2</mn></msup></mfrac><mo>\u2062</mo><mfrac><mo>\u2202</mo><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>r</mi></mrow></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>\u2062</mo><msub><mi>b</mi><mi>r</mi></msub></mrow><mo>)</mo></mrow></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mrow><mi>r</mi><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow></mrow></mfrac><mo>\u2062</mo><mfrac><mo>\u2202</mo><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\u03b8</mi></mrow></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mrow><msub><mi>b</mi><mi>\u03b8</mi></msub><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow></mrow><mo>)</mo></mrow></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mrow><mi>r</mi><mo>\u2062</mo><mrow><mi>sin</mi><mo>\u2061</mo><mi>\u03b8</mi></mrow></mrow></mfrac><mo>\u2062</mo><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msub><mi>b</mi><mi>\u03d5</mi></msub></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\u03d5</mi></mrow></mfrac></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": " \nWe can use this result to implement a consistent boundary condition in the radial component of the induction equation. We start from an FV formulation of the induction equation,\n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nThe last two terms in this expression vanish since $b_\\theta$ and $b_\\phi$ are identically zero at the surface $r=R$. Hence, we obtain\n\n", "index": 61, "text": "\\begin{equation}\n\\frac{\\partial b_r}{\\partial r} = -\\frac{2}{R} b_r \\label{eq:br_spherical}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E31.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial b_{r}}{\\partial r}=-\\frac{2}{R}b_{r}\" display=\"block\"><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msub><mi>b</mi><mi>r</mi></msub></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>r</mi></mrow></mfrac><mo>=</mo><mrow><mo>-</mo><mrow><mfrac><mn>2</mn><mi>R</mi></mfrac><mo>\u2062</mo><msub><mi>b</mi><mi>r</mi></msub></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere the symbol $\\otimes$ denotes the tensor product.\n\nThe integral on the right-hand side of this expression consists of a sum of surface integrals over both internal surface patches (i.e. those surface patches separating two CVs) and boundary surface patches (see Figure \\ref{fig:bndsurface}). For the internal surfaces, we can use the discretization stencils laid out in Section \\ref{subsec:spatial}.  The first two terms on the right-hand side of eq. (\\ref{eq:induction_bnd}) do not contribute to this integral as we have assumed no-slip conditions. As we only solve for the radial component of the induction equation, it follows that we only have to compute $\\hat{\\boldsymbol r} \\cdot \\int_{S_{bnd}} (\\nabla {\\boldsymbol b})^{T} \\cdot \\mathrm{d}{\\boldsymbol S}$. This quantity can be approximated as follows:\n\n", "itemtype": "equation", "pos": 47270, "prevtext": " \nWe can use this result to implement a consistent boundary condition in the radial component of the induction equation. We start from an FV formulation of the induction equation,\n\n", "index": 63, "text": "\\begin{equation}\n\\int_V \\frac{\\partial {\\boldsymbol b}}{\\partial t} \\,\\mathrm{d}V = \\oint_{\\partial V} \\left\\{-{\\boldsymbol u}\\otimes{\\boldsymbol b} + {\\boldsymbol b}\\otimes{\\boldsymbol u} + Re_m^{-1} \\left( \\nabla {\\boldsymbol b} \\right)^T  \\right\\} \\cdot \\mathrm{d}{\\boldsymbol S}, \n\\label{eq:induction_bnd}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E32.m1\" class=\"ltx_Math\" alttext=\"\\int_{V}\\frac{\\partial{\\boldsymbol{b}}}{\\partial t}\\,\\mathrm{d}V=\\oint_{%&#10;\\partial V}\\left\\{-{\\boldsymbol{u}}\\otimes{\\boldsymbol{b}}+{\\boldsymbol{b}}%&#10;\\otimes{\\boldsymbol{u}}+Re_{m}^{-1}\\left(\\nabla{\\boldsymbol{b}}\\right)^{T}%&#10;\\right\\}\\cdot\\mathrm{d}{\\boldsymbol{S}},\" display=\"block\"><mrow><mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mi>V</mi></msub><mrow><mpadded width=\"+1.7pt\"><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>V</mi></mrow></mrow></mrow><mo>=</mo><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222e</mo><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>V</mi></mrow></msub><mrow><mrow><mo>{</mo><mrow><mrow><mo>-</mo><mrow><mi>\ud835\udc96</mi><mo>\u2297</mo><mi>\ud835\udc83</mi></mrow></mrow><mo>+</mo><mrow><mi>\ud835\udc83</mi><mo>\u2297</mo><mi>\ud835\udc96</mi></mrow><mo>+</mo><mrow><mi>R</mi><mo>\u2062</mo><msubsup><mi>e</mi><mi>m</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><msup><mrow><mo>(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mo>)</mo></mrow><mi>T</mi></msup></mrow></mrow><mo>}</mo></mrow><mo>\u22c5</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nFor a spherical boundary, this can be rewritten as $\\int \\hat{\\boldsymbol r} \\cdot \\left( \\nabla {\\boldsymbol b}\\right)^T \\cdot \\hat{\\boldsymbol r} \\, \\mathrm{d}S$, where $\\hat{\\boldsymbol r}$ denotes the unit vector in radial direction. It follows that the only component of the magnetic field gradient tensor that is required to evaluate the rightmost term of eq. (\\ref{eq:induction_bnd}) is $(\\nabla {\\boldsymbol b})_{rr} = \\partial_r b_r$; thus, no tangential derivatives are required to compute the diffusive flux. Moreover, we can use eq. (\\ref{eq:br_spherical}) to eliminate the (unknown) $\\partial_r b_r$ and use directly the values from $b_r$ in the computation of the diffusive flux through the boundary surface patch. Summarizing, the pseudo-vacuum boundary condition gives rise to an additional diffusive boundary term of the form $-\\int 2 Re_m^{-1} b_r /R\\,\\mathrm{d}S$ in the radial component of the induction equation. \n\\begin{figure}\n\\begin{center}\n\\includegraphics[width=\\columnwidth]{fig8.pdf}\n\\caption{Control volume associated with a grid node on the boundary (black-dotted). The green surface represents the internal surface patches whereas the blue one represents the boundary surface patches}\n\\label{fig:bndsurface}\n\\end{center}\n\\end{figure}\n\nMotivated by the recent interest in dynamo action driven by tidal effects \\citep[e.g.,][]{arkani2008tidal,arkani2009did}, we now generalize this approach towards ellipsoidal boundaries, which are described by:\n\n", "itemtype": "equation", "pos": 48410, "prevtext": "\nwhere the symbol $\\otimes$ denotes the tensor product.\n\nThe integral on the right-hand side of this expression consists of a sum of surface integrals over both internal surface patches (i.e. those surface patches separating two CVs) and boundary surface patches (see Figure \\ref{fig:bndsurface}). For the internal surfaces, we can use the discretization stencils laid out in Section \\ref{subsec:spatial}.  The first two terms on the right-hand side of eq. (\\ref{eq:induction_bnd}) do not contribute to this integral as we have assumed no-slip conditions. As we only solve for the radial component of the induction equation, it follows that we only have to compute $\\hat{\\boldsymbol r} \\cdot \\int_{S_{bnd}} (\\nabla {\\boldsymbol b})^{T} \\cdot \\mathrm{d}{\\boldsymbol S}$. This quantity can be approximated as follows:\n\n", "index": 65, "text": "\\begin{equation}\n\\hat{\\boldsymbol r} \\cdot \\int_{S_{bnd}} (\\nabla {\\boldsymbol b})^{T} \\cdot \\mathrm{d}{\\boldsymbol S} = \\int_{S_{bnd}}(\\hat{\\boldsymbol r} \\cdot \\nabla {\\boldsymbol b})^{T} \\cdot \\mathrm{d}{\\boldsymbol S} + \\mathcal{O}(\\Delta x) \\approx  \\int_{S_{bnd}}(\\hat{\\boldsymbol r} \\cdot \\nabla {\\boldsymbol b})^{T} \\cdot \\mathrm{d}{\\boldsymbol S}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E33.m1\" class=\"ltx_Math\" alttext=\"\\hat{\\boldsymbol{r}}\\cdot\\int_{S_{bnd}}(\\nabla{\\boldsymbol{b}})^{T}\\cdot%&#10;\\mathrm{d}{\\boldsymbol{S}}=\\int_{S_{bnd}}(\\hat{\\boldsymbol{r}}\\cdot\\nabla{%&#10;\\boldsymbol{b}})^{T}\\cdot\\mathrm{d}{\\boldsymbol{S}}+\\mathcal{O}(\\Delta x)%&#10;\\approx\\int_{S_{bnd}}(\\hat{\\boldsymbol{r}}\\cdot\\nabla{\\boldsymbol{b}})^{T}%&#10;\\cdot\\mathrm{d}{\\boldsymbol{S}}.\" display=\"block\"><mrow><mrow><mrow><mover accent=\"true\"><mi>\ud835\udc93</mi><mo stretchy=\"false\">^</mo></mover><mo>\u22c5</mo><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mi>b</mi><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>d</mi></mrow></msub></msub><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup><mo>\u22c5</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow></mrow><mo>=</mo><mrow><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mi>b</mi><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>d</mi></mrow></msub></msub><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mover accent=\"true\"><mi>\ud835\udc93</mi><mo stretchy=\"false\">^</mo></mover><mo>\u22c5</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup><mo>\u22c5</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow><mo>+</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcaa</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>x</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>\u2248</mo><mrow><msub><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><msub><mi>S</mi><mrow><mi>b</mi><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>d</mi></mrow></msub></msub><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mover accent=\"true\"><mi>\ud835\udc93</mi><mo stretchy=\"false\">^</mo></mover><mo>\u22c5</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup><mo>\u22c5</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nIt will be instructive at this point to introduce the (orthogonal) confocal ellipsoidal coordinate system $(\\lambda,\\mu,\\nu)$, where each of $\\lambda,\\mu,\\nu$ is a root $\\chi$ of:\n\n", "itemtype": "equation", "pos": 50258, "prevtext": "\nFor a spherical boundary, this can be rewritten as $\\int \\hat{\\boldsymbol r} \\cdot \\left( \\nabla {\\boldsymbol b}\\right)^T \\cdot \\hat{\\boldsymbol r} \\, \\mathrm{d}S$, where $\\hat{\\boldsymbol r}$ denotes the unit vector in radial direction. It follows that the only component of the magnetic field gradient tensor that is required to evaluate the rightmost term of eq. (\\ref{eq:induction_bnd}) is $(\\nabla {\\boldsymbol b})_{rr} = \\partial_r b_r$; thus, no tangential derivatives are required to compute the diffusive flux. Moreover, we can use eq. (\\ref{eq:br_spherical}) to eliminate the (unknown) $\\partial_r b_r$ and use directly the values from $b_r$ in the computation of the diffusive flux through the boundary surface patch. Summarizing, the pseudo-vacuum boundary condition gives rise to an additional diffusive boundary term of the form $-\\int 2 Re_m^{-1} b_r /R\\,\\mathrm{d}S$ in the radial component of the induction equation. \n\\begin{figure}\n\\begin{center}\n\\includegraphics[width=\\columnwidth]{fig8.pdf}\n\\caption{Control volume associated with a grid node on the boundary (black-dotted). The green surface represents the internal surface patches whereas the blue one represents the boundary surface patches}\n\\label{fig:bndsurface}\n\\end{center}\n\\end{figure}\n\nMotivated by the recent interest in dynamo action driven by tidal effects \\citep[e.g.,][]{arkani2008tidal,arkani2009did}, we now generalize this approach towards ellipsoidal boundaries, which are described by:\n\n", "index": 67, "text": "\\begin{equation}\n\\frac{x^2}{a^2} + \\frac{y^2}{b^2} + \\frac{z^2}{c^2} = 1. \\label{eq:def_ellipse}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E34.m1\" class=\"ltx_Math\" alttext=\"\\frac{x^{2}}{a^{2}}+\\frac{y^{2}}{b^{2}}+\\frac{z^{2}}{c^{2}}=1.\" display=\"block\"><mrow><mrow><mrow><mfrac><msup><mi>x</mi><mn>2</mn></msup><msup><mi>a</mi><mn>2</mn></msup></mfrac><mo>+</mo><mfrac><msup><mi>y</mi><mn>2</mn></msup><msup><mi>b</mi><mn>2</mn></msup></mfrac><mo>+</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><msup><mi>c</mi><mn>2</mn></msup></mfrac></mrow><mo>=</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nWithout loss of generality, we can choose the isosurface $\\lambda=0$ to represent the ellipsoidal surface (\\ref{eq:def_ellipse}) such that the unit vector $\\hat{\\boldsymbol \\lambda}$ points in wall-normal direction and the ferromagnetic boundary condition is equivalent to $b_{\\mu} = b_{\\nu} = 0$. An argument  similar to the one invoked for  the spherical case shows that we can restrict ourselves to one single element of the magnetic field gradient tensor to compute the diffusive flux across the boundary surface, more specifically $\\left( \\nabla {\\boldsymbol b} \\right)_{\\lambda \\lambda}$.\nUsing standard tensor calculus in orthogonal curvilinear coordinates, together with $b_{\\mu} = b_{\\nu} = 0$, we find that this component is given by\n\n", "itemtype": "equation", "pos": 50550, "prevtext": "\nIt will be instructive at this point to introduce the (orthogonal) confocal ellipsoidal coordinate system $(\\lambda,\\mu,\\nu)$, where each of $\\lambda,\\mu,\\nu$ is a root $\\chi$ of:\n\n", "index": 69, "text": "\\begin{equation}\n\\frac{x^2}{a^2+\\chi}+\\frac{y^2}{b^2+\\chi}+\\frac{z^2}{c^2+\\chi} = 1. \\label{eq:def_coordinate}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E35.m1\" class=\"ltx_Math\" alttext=\"\\frac{x^{2}}{a^{2}+\\chi}+\\frac{y^{2}}{b^{2}+\\chi}+\\frac{z^{2}}{c^{2}+\\chi}=1.\" display=\"block\"><mrow><mrow><mrow><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><mi>\u03c7</mi></mrow></mfrac><mo>+</mo><mfrac><msup><mi>y</mi><mn>2</mn></msup><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><mi>\u03c7</mi></mrow></mfrac><mo>+</mo><mfrac><msup><mi>z</mi><mn>2</mn></msup><mrow><msup><mi>c</mi><mn>2</mn></msup><mo>+</mo><mi>\u03c7</mi></mrow></mfrac></mrow><mo>=</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere $\\Gamma$ denotes a Christoffel symbol of the second kind and superscripts refer to contravariant vector components. As in the spherical case, we see that eq. (\\ref{eq:hessian_ll}) does not contain any tangential derivatives. The solenoidal constraint  on the other hand reads (in contravariant form)\n\n", "itemtype": "equation", "pos": 51420, "prevtext": "\nWithout loss of generality, we can choose the isosurface $\\lambda=0$ to represent the ellipsoidal surface (\\ref{eq:def_ellipse}) such that the unit vector $\\hat{\\boldsymbol \\lambda}$ points in wall-normal direction and the ferromagnetic boundary condition is equivalent to $b_{\\mu} = b_{\\nu} = 0$. An argument  similar to the one invoked for  the spherical case shows that we can restrict ourselves to one single element of the magnetic field gradient tensor to compute the diffusive flux across the boundary surface, more specifically $\\left( \\nabla {\\boldsymbol b} \\right)_{\\lambda \\lambda}$.\nUsing standard tensor calculus in orthogonal curvilinear coordinates, together with $b_{\\mu} = b_{\\nu} = 0$, we find that this component is given by\n\n", "index": 71, "text": "\\begin{equation}\n\\left( \\nabla {\\boldsymbol b} \\right)_{\\lambda \\lambda} = \\frac{\\partial b^{\\lambda}}{\\partial \\lambda} + \\Gamma^{\\lambda}_{\\lambda \\lambda} b^{\\lambda}, \\label{eq:hessian_ll}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E36.m1\" class=\"ltx_Math\" alttext=\"\\left(\\nabla{\\boldsymbol{b}}\\right)_{\\lambda\\lambda}=\\frac{\\partial b^{\\lambda%&#10;}}{\\partial\\lambda}+\\Gamma^{\\lambda}_{\\lambda\\lambda}b^{\\lambda},\" display=\"block\"><mrow><mrow><msub><mrow><mo>(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mo>)</mo></mrow><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bb</mi></mrow></msub><mo>=</mo><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msup><mi>b</mi><mi>\u03bb</mi></msup></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\u03bb</mi></mrow></mfrac><mo>+</mo><mrow><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bb</mi></mrow><mi>\u03bb</mi></msubsup><mo>\u2062</mo><msup><mi>b</mi><mi>\u03bb</mi></msup></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThis allows the recasting of eq. (\\ref{eq:hessian_ll}) as \n\n", "itemtype": "equation", "pos": 51934, "prevtext": "\nwhere $\\Gamma$ denotes a Christoffel symbol of the second kind and superscripts refer to contravariant vector components. As in the spherical case, we see that eq. (\\ref{eq:hessian_ll}) does not contain any tangential derivatives. The solenoidal constraint  on the other hand reads (in contravariant form)\n\n", "index": 73, "text": "\\begin{equation}\n\\frac{\\partial b^{\\lambda}}{\\partial \\lambda} + \\left(\\Gamma^{\\lambda}_{\\lambda \\lambda} + \\Gamma^{\\mu}_{\\lambda \\mu} + \\Gamma^{\\nu}_{\\lambda \\nu} \\right) b^{\\lambda}=0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E37.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial b^{\\lambda}}{\\partial\\lambda}+\\left(\\Gamma^{\\lambda}_{\\lambda%&#10;\\lambda}+\\Gamma^{\\mu}_{\\lambda\\mu}+\\Gamma^{\\nu}_{\\lambda\\nu}\\right)b^{\\lambda}%&#10;=0.\" display=\"block\"><mrow><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msup><mi>b</mi><mi>\u03bb</mi></msup></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\u03bb</mi></mrow></mfrac><mo>+</mo><mrow><mrow><mo>(</mo><mrow><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bb</mi></mrow><mi>\u03bb</mi></msubsup><mo>+</mo><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bc</mi></mrow><mi>\u03bc</mi></msubsup><mo>+</mo><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bd</mi></mrow><mi>\u03bd</mi></msubsup></mrow><mo>)</mo></mrow><mo>\u2062</mo><msup><mi>b</mi><mi>\u03bb</mi></msup></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nWe are now left with finding an expression for the Christoffel symbols $\\Gamma^{\\mu}_{\\lambda \\mu}$ and $ \\Gamma^{\\nu}_{\\lambda \\nu} $. We can invoke the well-known identity   \n\n", "itemtype": "equation", "pos": 52195, "prevtext": "\nThis allows the recasting of eq. (\\ref{eq:hessian_ll}) as \n\n", "index": 75, "text": "\\begin{equation}\n\\left( \\nabla {\\boldsymbol b} \\right)_{\\lambda \\lambda} = - \\left( \\Gamma^{\\mu}_{\\lambda \\mu} + \\Gamma^{\\nu}_{\\lambda \\nu} \\right) b^{\\lambda}. \\label{eq:christoffel}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E38.m1\" class=\"ltx_Math\" alttext=\"\\left(\\nabla{\\boldsymbol{b}}\\right)_{\\lambda\\lambda}=-\\left(\\Gamma^{\\mu}_{%&#10;\\lambda\\mu}+\\Gamma^{\\nu}_{\\lambda\\nu}\\right)b^{\\lambda}.\" display=\"block\"><mrow><mrow><msub><mrow><mo>(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mo>)</mo></mrow><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bb</mi></mrow></msub><mo>=</mo><mrow><mo>-</mo><mrow><mrow><mo>(</mo><mrow><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bc</mi></mrow><mi>\u03bc</mi></msubsup><mo>+</mo><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bd</mi></mrow><mi>\u03bd</mi></msubsup></mrow><mo>)</mo></mrow><mo>\u2062</mo><msup><mi>b</mi><mi>\u03bb</mi></msup></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe scale factors $h_{\\lambda}, h_{\\mu}$ and $h_{\\nu}$ \\citep{dassios} are\n\n", "itemtype": "equation", "pos": 52571, "prevtext": "\nWe are now left with finding an expression for the Christoffel symbols $\\Gamma^{\\mu}_{\\lambda \\mu}$ and $ \\Gamma^{\\nu}_{\\lambda \\nu} $. We can invoke the well-known identity   \n\n", "index": 77, "text": "\\begin{equation}\n\\Gamma^{\\mu}_{\\lambda \\mu} = \\frac{\\partial}{\\partial \\lambda} \\log h_{\\mu}, \\Gamma^{\\nu}_{\\lambda \\nu} = \\frac{\\partial}{\\partial \\lambda} \\log h_{\\nu}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E39.m1\" class=\"ltx_Math\" alttext=\"\\Gamma^{\\mu}_{\\lambda\\mu}=\\frac{\\partial}{\\partial\\lambda}\\log h_{\\mu},\\Gamma^%&#10;{\\nu}_{\\lambda\\nu}=\\frac{\\partial}{\\partial\\lambda}\\log h_{\\nu}\" display=\"block\"><mrow><mrow><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bc</mi></mrow><mi>\u03bc</mi></msubsup><mo>=</mo><mrow><mfrac><mo>\u2202</mo><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\u03bb</mi></mrow></mfrac><mo>\u2062</mo><mrow><mi>log</mi><mo>\u2061</mo><msub><mi>h</mi><mi>\u03bc</mi></msub></mrow></mrow></mrow><mo>,</mo><mrow><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bd</mi></mrow><mi>\u03bd</mi></msubsup><mo>=</mo><mrow><mfrac><mo>\u2202</mo><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\u03bb</mi></mrow></mfrac><mo>\u2062</mo><mrow><mi>log</mi><mo>\u2061</mo><msub><mi>h</mi><mi>\u03bd</mi></msub></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 52831, "prevtext": "\nThe scale factors $h_{\\lambda}, h_{\\mu}$ and $h_{\\nu}$ \\citep{dassios} are\n\n", "index": 79, "text": "\\begin{equation}\nh_{\\lambda} = \\frac{1}{2}\\sqrt{\\frac{(\\lambda-\\nu)(\\lambda-\\mu)}{(a^2+\\lambda)(b^2+\\lambda)(c^2+\\lambda)}},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E40.m1\" class=\"ltx_Math\" alttext=\"h_{\\lambda}=\\frac{1}{2}\\sqrt{\\frac{(\\lambda-\\nu)(\\lambda-\\mu)}{(a^{2}+\\lambda)%&#10;(b^{2}+\\lambda)(c^{2}+\\lambda)}},\" display=\"block\"><mrow><mrow><msub><mi>h</mi><mi>\u03bb</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><msqrt><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bb</mi><mo>-</mo><mi>\u03bd</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bb</mi><mo>-</mo><mi>\u03bc</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bb</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bb</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>c</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bb</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mfrac></msqrt></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 52971, "prevtext": "\n\n", "index": 81, "text": "\\begin{equation}\nh_{\\mu} = \\frac{1}{2}\\sqrt{\\frac{(\\mu-\\nu)(\\mu-\\lambda)}{(a^2+\\mu)(b^2+\\mu)(c^2+\\mu)}},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E41.m1\" class=\"ltx_Math\" alttext=\"h_{\\mu}=\\frac{1}{2}\\sqrt{\\frac{(\\mu-\\nu)(\\mu-\\lambda)}{(a^{2}+\\mu)(b^{2}+\\mu)(%&#10;c^{2}+\\mu)}},\" display=\"block\"><mrow><mrow><msub><mi>h</mi><mi>\u03bc</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><msqrt><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bc</mi><mo>-</mo><mi>\u03bd</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bc</mi><mo>-</mo><mi>\u03bb</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bc</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bc</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>c</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bc</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mfrac></msqrt></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nAfter some algebra, we eventually find\n\n", "itemtype": "equation", "pos": 53091, "prevtext": "\n\n", "index": 83, "text": "\\begin{equation}\nh_{\\nu} =  \\frac{1}{2}\\sqrt{\\frac{(\\nu-\\mu)(\\nu-\\lambda)}{(a^2+\\nu)(b^2+\\nu)(c^2+\\nu)}} .\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E42.m1\" class=\"ltx_Math\" alttext=\"h_{\\nu}=\\frac{1}{2}\\sqrt{\\frac{(\\nu-\\mu)(\\nu-\\lambda)}{(a^{2}+\\nu)(b^{2}+\\nu)(%&#10;c^{2}+\\nu)}}.\" display=\"block\"><mrow><mrow><msub><mi>h</mi><mi>\u03bd</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><msqrt><mfrac><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bd</mi><mo>-</mo><mi>\u03bc</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>\u03bd</mi><mo>-</mo><mi>\u03bb</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bd</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bd</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>c</mi><mn>2</mn></msup><mo>+</mo><mi>\u03bd</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mfrac></msqrt></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nIn order to recast the numerator and denominator of the above expression, we start from expression (\\ref{eq:def_coordinate}) which defines a cubic equation in $\\chi$, and thus can be written as\n\n", "itemtype": "equation", "pos": 53252, "prevtext": "\nAfter some algebra, we eventually find\n\n", "index": 85, "text": "\\begin{equation}\n\\Gamma^{\\mu}_{\\lambda \\mu} + \\Gamma^{\\nu}_{\\lambda \\nu} = -\\frac{1}{2} \\frac{\\mu + \\nu}{\\mu \\nu}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E43.m1\" class=\"ltx_Math\" alttext=\"\\Gamma^{\\mu}_{\\lambda\\mu}+\\Gamma^{\\nu}_{\\lambda\\nu}=-\\frac{1}{2}\\frac{\\mu+\\nu}%&#10;{\\mu\\nu}.\" display=\"block\"><mrow><mrow><mrow><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bc</mi></mrow><mi>\u03bc</mi></msubsup><mo>+</mo><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bd</mi></mrow><mi>\u03bd</mi></msubsup></mrow><mo>=</mo><mrow><mo>-</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><mfrac><mrow><mi>\u03bc</mi><mo>+</mo><mi>\u03bd</mi></mrow><mrow><mi>\u03bc</mi><mo>\u2062</mo><mi>\u03bd</mi></mrow></mfrac></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nOn the ellipsoidal boundary surface, the term $\\alpha_0=0$ as we know that $\\chi_1 = \\lambda = 0$. Thus, we have\n\n", "itemtype": "equation", "pos": 53576, "prevtext": "\nIn order to recast the numerator and denominator of the above expression, we start from expression (\\ref{eq:def_coordinate}) which defines a cubic equation in $\\chi$, and thus can be written as\n\n", "index": 87, "text": "\\begin{equation}\n\\chi^3 + \\alpha_2 \\chi^2 + \\alpha_1 \\chi + \\alpha_0 = 0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E44.m1\" class=\"ltx_Math\" alttext=\"\\chi^{3}+\\alpha_{2}\\chi^{2}+\\alpha_{1}\\chi+\\alpha_{0}=0.\" display=\"block\"><mrow><mrow><mrow><msup><mi>\u03c7</mi><mn>3</mn></msup><mo>+</mo><mrow><msub><mi>\u03b1</mi><mn>2</mn></msub><mo>\u2062</mo><msup><mi>\u03c7</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><msub><mi>\u03b1</mi><mn>1</mn></msub><mo>\u2062</mo><mi>\u03c7</mi></mrow><mo>+</mo><msub><mi>\u03b1</mi><mn>0</mn></msub></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe sum and product of the two roots, $\\chi_{2,3}=\\left\\{ \\mu,\\nu \\right\\}$, of the quadratic polynomial between brackets are $-\\alpha_2$ and $\\alpha_1$, respectively. After some algebra, we obtain\n\n", "itemtype": "equation", "pos": 53778, "prevtext": "\nOn the ellipsoidal boundary surface, the term $\\alpha_0=0$ as we know that $\\chi_1 = \\lambda = 0$. Thus, we have\n\n", "index": 89, "text": "\\begin{equation}\n\\chi\\left(\\chi^2 + \\alpha_2 \\chi + \\alpha_1 \\right) = 0.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E45.m1\" class=\"ltx_Math\" alttext=\"\\chi\\left(\\chi^{2}+\\alpha_{2}\\chi+\\alpha_{1}\\right)=0.\" display=\"block\"><mrow><mrow><mrow><mi>\u03c7</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><msup><mi>\u03c7</mi><mn>2</mn></msup><mo>+</mo><mrow><msub><mi>\u03b1</mi><mn>2</mn></msub><mo>\u2062</mo><mi>\u03c7</mi></mrow><mo>+</mo><msub><mi>\u03b1</mi><mn>1</mn></msub></mrow><mo>)</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": " \nFinally, we note that that the contravariant component ${b^{\\lambda}}=h_\\lambda^{-1} {\\boldsymbol b} \\cdot \\hat {\\boldsymbol \\lambda}$. This, together with expressions (\\ref{eq:christoffel}) and (\\ref{eq:christoffel2}), gives us all elements required for the computation of the diffusive flux through an ellipsoidal surface in terms of ${\\boldsymbol b} \\cdot \\hat {\\boldsymbol \\lambda}$. \nIn the specific case of a spherical surface with $a^2=b^2=c^2=x^2+y^2+z^2=R^2$, we find \n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nThe sum and product of the two roots, $\\chi_{2,3}=\\left\\{ \\mu,\\nu \\right\\}$, of the quadratic polynomial between brackets are $-\\alpha_2$ and $\\alpha_1$, respectively. After some algebra, we obtain\n\n", "index": 91, "text": "\\begin{equation}\n\\Gamma^{\\mu}_{\\lambda \\mu} + \\Gamma^{\\nu}_{\\lambda \\nu} = \\frac{1}{2}\\frac{\\alpha_2}{\\alpha_1} = \\frac{1}{2} \\frac{a^2+b^2+c^2-x^2-y^2-z^2}{a^2b^2+a^2c^2+b^2c^2-(b^2+c^2)x^2-(a^2+c^2)y^2-(a^2+b^2)z^2}. \\label{eq:christoffel2}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E46.m1\" class=\"ltx_Math\" alttext=\"\\Gamma^{\\mu}_{\\lambda\\mu}+\\Gamma^{\\nu}_{\\lambda\\nu}=\\frac{1}{2}\\frac{\\alpha_{2%&#10;}}{\\alpha_{1}}=\\frac{1}{2}\\frac{a^{2}+b^{2}+c^{2}-x^{2}-y^{2}-z^{2}}{a^{2}b^{2%&#10;}+a^{2}c^{2}+b^{2}c^{2}-(b^{2}+c^{2})x^{2}-(a^{2}+c^{2})y^{2}-(a^{2}+b^{2})z^{%&#10;2}}.\" display=\"block\"><mrow><mrow><mrow><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bc</mi></mrow><mi>\u03bc</mi></msubsup><mo>+</mo><msubsup><mi mathvariant=\"normal\">\u0393</mi><mrow><mi>\u03bb</mi><mo>\u2062</mo><mi>\u03bd</mi></mrow><mi>\u03bd</mi></msubsup></mrow><mo>=</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><mfrac><msub><mi>\u03b1</mi><mn>2</mn></msub><msub><mi>\u03b1</mi><mn>1</mn></msub></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><mfrac><mrow><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><msup><mi>c</mi><mn>2</mn></msup></mrow><mo>-</mo><msup><mi>x</mi><mn>2</mn></msup><mo>-</mo><msup><mi>y</mi><mn>2</mn></msup><mo>-</mo><msup><mi>z</mi><mn>2</mn></msup></mrow><mrow><mrow><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>\u2062</mo><msup><mi>b</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>\u2062</mo><msup><mi>c</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>\u2062</mo><msup><mi>c</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>+</mo><msup><mi>c</mi><mn>2</mn></msup></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>c</mi><mn>2</mn></msup></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>-</mo><mrow><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow></mfrac></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhich is consistent with the result previously derived in terms of spherical coordinates.\n\nWe now have obtained consistent boundary conditions for the wall-normal component of the (physical) magnetic field. The time-stepping approach outlined in Section \\ref{subsec:timestep}, however, requires us to define boundary conditions on the `intermediate' magnetic field ${\\boldsymbol b}^{\\star}$ and the magnetic pseudo-pressure $p_b$. We choose to apply the same condition on ${\\boldsymbol b}^{\\star}$ as ${\\boldsymbol b}^{n+1}$, that is ${\\boldsymbol b}^{\\star} \\times \\hat{\\boldsymbol n} = {\\boldsymbol b}^{\\star} \\times \\hat{\\boldsymbol n}=0$. This, combined with (\\ref{eq:corr_magnetic}), implies that the correct boundary condition on $p_b$ is \n$\\nabla p_b \\times \\hat{\\boldsymbol n}=0$, that is, a Dirichlet condition on $p_b$.\n\n\n\\subsection{Magnetic decay modes}\nTo verify the procedure outlined above, we perform simulations of the magnetic diffusion equation, which can, without loss of generality, be written as follows:\n\n", "itemtype": "equation", "pos": 54802, "prevtext": " \nFinally, we note that that the contravariant component ${b^{\\lambda}}=h_\\lambda^{-1} {\\boldsymbol b} \\cdot \\hat {\\boldsymbol \\lambda}$. This, together with expressions (\\ref{eq:christoffel}) and (\\ref{eq:christoffel2}), gives us all elements required for the computation of the diffusive flux through an ellipsoidal surface in terms of ${\\boldsymbol b} \\cdot \\hat {\\boldsymbol \\lambda}$. \nIn the specific case of a spherical surface with $a^2=b^2=c^2=x^2+y^2+z^2=R^2$, we find \n\n", "index": 93, "text": "\\begin{equation}\n\\hat{\\boldsymbol \\lambda} \\cdot \\left\\{\\int (\\nabla {\\boldsymbol b})^T\\cdot \\mathrm{d}{\\boldsymbol S}\\right\\} \\approx \\int \\hat{\\boldsymbol \\lambda} \\cdot  (\\nabla {\\boldsymbol b})^T\\cdot \\mathrm{d}{\\boldsymbol S} \\approx -\\frac{1}{R^2}\\int b^{\\lambda} \\mathrm{d}S = -\\frac{1}{R^2}\\int h_\\lambda^{-1} {\\boldsymbol b} \\cdot \\hat{\\boldsymbol \\lambda} \\mathrm{d}S = -\\frac{2}{R} \\int {\\boldsymbol b} \\cdot \\hat{\\boldsymbol r} \\mathrm{d}S,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E47.m1\" class=\"ltx_Math\" alttext=\"\\hat{\\boldsymbol{\\lambda}}\\cdot\\left\\{\\int(\\nabla{\\boldsymbol{b}})^{T}\\cdot%&#10;\\mathrm{d}{\\boldsymbol{S}}\\right\\}\\approx\\int\\hat{\\boldsymbol{\\lambda}}\\cdot(%&#10;\\nabla{\\boldsymbol{b}})^{T}\\cdot\\mathrm{d}{\\boldsymbol{S}}\\approx-\\frac{1}{R^{%&#10;2}}\\int b^{\\lambda}\\mathrm{d}S=-\\frac{1}{R^{2}}\\int h_{\\lambda}^{-1}{%&#10;\\boldsymbol{b}}\\cdot\\hat{\\boldsymbol{\\lambda}}\\mathrm{d}S=-\\frac{2}{R}\\int{%&#10;\\boldsymbol{b}}\\cdot\\hat{\\boldsymbol{r}}\\mathrm{d}S,\" display=\"block\"><mrow><mrow><mrow><mover accent=\"true\"><mi>\ud835\udf40</mi><mo stretchy=\"false\">^</mo></mover><mo>\u22c5</mo><mrow><mo>{</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mrow><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup><mo>\u22c5</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow><mo>}</mo></mrow></mrow><mo>\u2248</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mrow><mover accent=\"true\"><mi>\ud835\udf40</mi><mo stretchy=\"false\">^</mo></mover><mo>\u22c5</mo><msup><mrow><mo stretchy=\"false\">(</mo><mrow><mo>\u2207</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></msup><mo>\u22c5</mo><mrow><mo>d</mo><mi>\ud835\udc7a</mi></mrow></mrow></mrow><mo>\u2248</mo><mrow><mo>-</mo><mrow><mfrac><mn>1</mn><msup><mi>R</mi><mn>2</mn></msup></mfrac><mo>\u2062</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mrow><msup><mi>b</mi><mi>\u03bb</mi></msup><mo>\u2062</mo><mrow><mo>d</mo><mi>S</mi></mrow></mrow></mrow></mrow></mrow><mo>=</mo><mrow><mo>-</mo><mrow><mfrac><mn>1</mn><msup><mi>R</mi><mn>2</mn></msup></mfrac><mo>\u2062</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mrow><mrow><mrow><msubsup><mi>h</mi><mi>\u03bb</mi><mrow><mo>-</mo><mn>1</mn></mrow></msubsup><mo>\u2062</mo><mi>\ud835\udc83</mi></mrow><mo>\u22c5</mo><mover accent=\"true\"><mi>\ud835\udf40</mi><mo stretchy=\"false\">^</mo></mover></mrow><mo>\u2062</mo><mrow><mo>d</mo><mi>S</mi></mrow></mrow></mrow></mrow></mrow><mo>=</mo><mrow><mo>-</mo><mrow><mfrac><mn>2</mn><mi>R</mi></mfrac><mo>\u2062</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mrow><mrow><mi>\ud835\udc83</mi><mo>\u22c5</mo><mover accent=\"true\"><mi>\ud835\udc93</mi><mo stretchy=\"false\">^</mo></mover></mrow><mo>\u2062</mo><mrow><mo>d</mo><mi>S</mi></mrow></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThis equation has an infinite set of eigensolutions ${\\boldsymbol b}_i = {\\boldsymbol B}_i({\\boldsymbol r})\\exp(-\\sigma_i t)$ with the eigenvalues ${\\sigma_i}$ being real and strictly positive. Analytical solutions in spherical domains can be easily found (e.g. \\cite{sheyko_thesis} and Appendix \\ref{app:decay}). We find $\\sigma = 7.527926$ and $20.19064$ as the analytical decay rates of the slowest decaying poloidal and toroidal mode in a full sphere of radius one. We compare these results against decay rates obtained with the present FV code for two different initial conditions, which correspond to a purely poloidal and toroidal field, respectively. We use a grid that consists of tetrahedral elements (illustrated in Figure \\ref{fig:gridtetra}) and a time step $\\Delta t = 5 \\cdot 10^{-3}$. As shown in Table \\ref{tab:fullsphere}, the decay rates obtained with the FV code clearly converge towards the analytical ones as the resolution is increased.\n\\begin{figure}\n\\begin{center}\\includegraphics[width=\\columnwidth]{fig9.pdf}\n    \\caption{Illustration of the tetrahedral grid system used for the simulation of the magnetic diffusion equation in the full sphere/spheroid/ellipsoid geometry.}              \n    \\label{fig:gridtetra}  \n  \\end{center}\n\\end{figure}\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{c|ccc}\n\\hline \\hline \n     $\\#$ CVs        &  Poloidal                             &    Toroidal       &  Random \\\\ \\hline\n$5844$                & 7.522178                           &  19.95080        &  7.521235                         \\\\\n$40327$              & 7.524224                           &  20.12600        &  7.524335                      \\\\\n$156673$            & 7.525911                           &  20.16512       &   7.525112                       \\\\\n\\hline\nAnalytical             & 7.527926                          & 20.19064 & 7.527926               \\\\\n\\hline \\hline\n\\end{tabular}\n\\end{center}\n\\caption{Decay rates of a magnetic field in a full sphere with pseudo-vacuum boundary conditions associated for a purely toroidal, poloidal and random initial condition. }\n\\label{tab:fullsphere}\n\\end{table}\nFurther tests have been performed with a random initial magnetic field.  We first generate a random field that satisfies neither the divergence constraint nor the boundary condition. A consistent initial condition is then obtained by using a Lagrange multiplier that projects the original field onto the subspace of solenoidal fields that satisfy the boundary condition (\\ref{eq:bcb}). Precise values of the decay rates for different resolutions are shown in the rightmost column of Table \\ref{tab:fullsphere}. We find that these agree well with the values obtained for a purely poloidal initial condition.\n\n\nSimilar tests were carried out for a number of other geometries such as full spheroids and ellipsoids and also shell geometries, and the results are summarized in Table \\ref{tab:decay_geometries}. Analytical results are only available for the spheical shell  (see Appendix \\ref{app:decay}) and the axisymmetric toroidal mode of the full spheroid \\citep{wu2009dynamo}; for the latter geometry we can rely on the fact that the boundary condition for the toroidal mode is the same for an insulating as for a ferromagnetic exterior. We note that, in a spheroidal geometry, only the axisymmetric eigenmodes are purely poloidal or toroidal.  In those cases where no analytical result is available, we have benchmarked our code against a finite-element code (D. C\\'ebron, personal communication) that uses a vector potential formulation\\footnote{The vector potential associated with a magnetic field ${\\boldsymbol b}$ is a vector field ${\\boldsymbol a}$ such that ${\\boldsymbol b} = \\nabla \\times {\\boldsymbol a}$.}. We note also that it is not possible to separate between toroidal and poloidal modes in the case of a non-axisymmetric ellipsoidal geometry. Therefore we report only one value for the slowest decay rate.  Overall, we find that there is a very good agreement between the different approaches. Given that the numerical methods are fairly different, we can assume that this validates our implementation of the ferromagnetic boundary conditions.\n\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{cc|cc|cc|c}\n\\hline \\hline \nGeometry             &      (outer) Semi-axes         &    $\\sigma_{FV}^{P}$ & $\\sigma_{FV}^{T}$  &    $\\sigma_{ref}^{P}$    & $\\sigma_{ref}^{T}$  & Reference type\\\\ \\hline\nSpherical shell    &      $(20/13,20/13,20/13)$       &    2.2207            &   10.642                       & 2.2279    & 10.634                   & Analytical         \\\\\nFull spheroid        &      $(1,1,0.8)$    &    7.6933            &  22.376           & 7.6962    & 22.412        & FE (P), analytical (T)                    \\\\\nSpheroidal shell  &      $(20/13,20/13,16/13)$   &    2.4303            &  13.203           & 2.4475    & 13.177 &FE                      \\\\\nFull ellipsoid        &       $(\\sqrt{1.44},\\sqrt{0.56},1)$           & 9.1656 &        &   9.1728 &          &      FE                        \\\\\n\\hline \\hline\n\\end{tabular}\n\\end{center}\n\\caption{Decay rates for the slowest decaying magnetic field eigenmodes in different geometries. The shell geometries are homothetic with the ratio between inner and outer radii $r_i/r_o=0.35$. The superscripts `P' and `T' refer to poloidal and toroidal eigenmodes, respectively. FE refers to a finite-element solution implemented in Comsol (D. C\\'ebron, personal communication). For the full ellipsoid, we report the slowest decaying mode, it is neither P or T.}\n\\label{tab:decay_geometries}\n\\end{table}\n\n\\section{Self-consistent convection-driven dynamo benchmark }\\label{sec:benchmark}\nThe final and most challenging benchmark exercise concerns a convection-driven dynamo simulation that provides a simplified model for rotating planetary cores or solar convection zones. We use a Boussinesq approximation and the geometry is a spherical shell with inner radius $r_i=7/13$ and outer radius $r_o=20/13$. The equations governing this system can then be written in the following non-dimensional form:\n\\begin{eqnarray}\n\\frac{\\partial \\Theta}{\\partial t} + {\\boldsymbol u}\\cdot{\\nabla} \\Theta & = & q \\nabla^2  \\Theta, \\label{eq:temp} \\\\\n\\nabla \\cdot {\\boldsymbol u} & = & 0, \\\\\nRo \\left( \\frac{\\partial {\\boldsymbol u}}{\\partial t} + {\\boldsymbol u}\\cdot {\\nabla} {\\boldsymbol u} \\right)+ \\hat{\\boldsymbol z}\\times{\\boldsymbol u} +\\nabla p & = &  E\\nabla^2{\\boldsymbol u} + {\\boldsymbol b}\\cdot \\nabla {\\boldsymbol b} + q Ra \\Theta {\\boldsymbol r}, \\\\\n\\frac{\\partial {\\boldsymbol b}}{\\partial t} + {\\boldsymbol u}\\cdot {\\nabla} {\\boldsymbol b} & = &  {\\boldsymbol b}\\cdot {\\nabla} {\\boldsymbol u} + \\nabla^2 {\\boldsymbol b}, \\\\\n\\nabla \\cdot {\\boldsymbol b} & = & 0. \\label{eq:divb2}\n\\end{eqnarray}\nCompared to the set of equations (\\ref{eq:divu})-(\\ref{eq:divb}), we note the presence of the terms $\\hat{\\boldsymbol z} \\times {\\boldsymbol u}$ and $Ra \\Theta$ in the momentum equation. Note also that we use a different non-dimensionalization compared to eqs. (\\ref{eq:divu})-(\\ref{eq:divb}), for example, time is measured in units of magnetic diffusion time \\citep{jackson2014}.\nThese embody the Coriolis force and a thermally driven buoyancy force, respectively. Overall, four non-dimensional parameters are required to characterize the system: the Roberts number $q$, the Rayleigh number $Ra$, the Ekman number $E$ and the Rossby number $Ro$. They are related to the physical properties of the system by the following definitions:\n\n", "itemtype": "equation", "pos": 56297, "prevtext": "\nwhich is consistent with the result previously derived in terms of spherical coordinates.\n\nWe now have obtained consistent boundary conditions for the wall-normal component of the (physical) magnetic field. The time-stepping approach outlined in Section \\ref{subsec:timestep}, however, requires us to define boundary conditions on the `intermediate' magnetic field ${\\boldsymbol b}^{\\star}$ and the magnetic pseudo-pressure $p_b$. We choose to apply the same condition on ${\\boldsymbol b}^{\\star}$ as ${\\boldsymbol b}^{n+1}$, that is ${\\boldsymbol b}^{\\star} \\times \\hat{\\boldsymbol n} = {\\boldsymbol b}^{\\star} \\times \\hat{\\boldsymbol n}=0$. This, combined with (\\ref{eq:corr_magnetic}), implies that the correct boundary condition on $p_b$ is \n$\\nabla p_b \\times \\hat{\\boldsymbol n}=0$, that is, a Dirichlet condition on $p_b$.\n\n\n\\subsection{Magnetic decay modes}\nTo verify the procedure outlined above, we perform simulations of the magnetic diffusion equation, which can, without loss of generality, be written as follows:\n\n", "index": 95, "text": "\\begin{equation}\n\\frac{\\partial {\\boldsymbol b}}{\\partial t } = \\nabla^2{\\boldsymbol b}.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E48.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial{\\boldsymbol{b}}}{\\partial t}=\\nabla^{2}{\\boldsymbol{b}}.\" display=\"block\"><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mrow><msup><mo>\u2207</mo><mn>2</mn></msup><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere $\\Omega$ denotes the spin rate, $d=r_o-r_i$ the shell thickness, $\\kappa$ the heat diffusivity, $\\eta=(\\mu \\sigma)^{-1}$ the magnetic diffusivity, $g$ gravity and $\\alpha$ the thermal expansion coefficient of the fluid, which are all constant and uniform. $\\Delta \\Theta $ is a measure of\n the temperature contrast across the shell. To close the system, the equations need to be augmented with suitable boundary conditions. For the velocity, we prescribe a no-slip boundary condition. The magnetic field obeys the pseudo-vacuum condition (\\ref{eq:bcb}), and we impose a fixed value of the temperature such that the fluid has an unstable stratification, more specifically\n\n", "itemtype": "equation", "pos": 63937, "prevtext": "\nThis equation has an infinite set of eigensolutions ${\\boldsymbol b}_i = {\\boldsymbol B}_i({\\boldsymbol r})\\exp(-\\sigma_i t)$ with the eigenvalues ${\\sigma_i}$ being real and strictly positive. Analytical solutions in spherical domains can be easily found (e.g. \\cite{sheyko_thesis} and Appendix \\ref{app:decay}). We find $\\sigma = 7.527926$ and $20.19064$ as the analytical decay rates of the slowest decaying poloidal and toroidal mode in a full sphere of radius one. We compare these results against decay rates obtained with the present FV code for two different initial conditions, which correspond to a purely poloidal and toroidal field, respectively. We use a grid that consists of tetrahedral elements (illustrated in Figure \\ref{fig:gridtetra}) and a time step $\\Delta t = 5 \\cdot 10^{-3}$. As shown in Table \\ref{tab:fullsphere}, the decay rates obtained with the FV code clearly converge towards the analytical ones as the resolution is increased.\n\\begin{figure}\n\\begin{center}\\includegraphics[width=\\columnwidth]{fig9.pdf}\n    \\caption{Illustration of the tetrahedral grid system used for the simulation of the magnetic diffusion equation in the full sphere/spheroid/ellipsoid geometry.}              \n    \\label{fig:gridtetra}  \n  \\end{center}\n\\end{figure}\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{c|ccc}\n\\hline \\hline \n     $\\#$ CVs        &  Poloidal                             &    Toroidal       &  Random \\\\ \\hline\n$5844$                & 7.522178                           &  19.95080        &  7.521235                         \\\\\n$40327$              & 7.524224                           &  20.12600        &  7.524335                      \\\\\n$156673$            & 7.525911                           &  20.16512       &   7.525112                       \\\\\n\\hline\nAnalytical             & 7.527926                          & 20.19064 & 7.527926               \\\\\n\\hline \\hline\n\\end{tabular}\n\\end{center}\n\\caption{Decay rates of a magnetic field in a full sphere with pseudo-vacuum boundary conditions associated for a purely toroidal, poloidal and random initial condition. }\n\\label{tab:fullsphere}\n\\end{table}\nFurther tests have been performed with a random initial magnetic field.  We first generate a random field that satisfies neither the divergence constraint nor the boundary condition. A consistent initial condition is then obtained by using a Lagrange multiplier that projects the original field onto the subspace of solenoidal fields that satisfy the boundary condition (\\ref{eq:bcb}). Precise values of the decay rates for different resolutions are shown in the rightmost column of Table \\ref{tab:fullsphere}. We find that these agree well with the values obtained for a purely poloidal initial condition.\n\n\nSimilar tests were carried out for a number of other geometries such as full spheroids and ellipsoids and also shell geometries, and the results are summarized in Table \\ref{tab:decay_geometries}. Analytical results are only available for the spheical shell  (see Appendix \\ref{app:decay}) and the axisymmetric toroidal mode of the full spheroid \\citep{wu2009dynamo}; for the latter geometry we can rely on the fact that the boundary condition for the toroidal mode is the same for an insulating as for a ferromagnetic exterior. We note that, in a spheroidal geometry, only the axisymmetric eigenmodes are purely poloidal or toroidal.  In those cases where no analytical result is available, we have benchmarked our code against a finite-element code (D. C\\'ebron, personal communication) that uses a vector potential formulation\\footnote{The vector potential associated with a magnetic field ${\\boldsymbol b}$ is a vector field ${\\boldsymbol a}$ such that ${\\boldsymbol b} = \\nabla \\times {\\boldsymbol a}$.}. We note also that it is not possible to separate between toroidal and poloidal modes in the case of a non-axisymmetric ellipsoidal geometry. Therefore we report only one value for the slowest decay rate.  Overall, we find that there is a very good agreement between the different approaches. Given that the numerical methods are fairly different, we can assume that this validates our implementation of the ferromagnetic boundary conditions.\n\n\\begin{table}\n\\begin{center}\n\\begin{tabular}{cc|cc|cc|c}\n\\hline \\hline \nGeometry             &      (outer) Semi-axes         &    $\\sigma_{FV}^{P}$ & $\\sigma_{FV}^{T}$  &    $\\sigma_{ref}^{P}$    & $\\sigma_{ref}^{T}$  & Reference type\\\\ \\hline\nSpherical shell    &      $(20/13,20/13,20/13)$       &    2.2207            &   10.642                       & 2.2279    & 10.634                   & Analytical         \\\\\nFull spheroid        &      $(1,1,0.8)$    &    7.6933            &  22.376           & 7.6962    & 22.412        & FE (P), analytical (T)                    \\\\\nSpheroidal shell  &      $(20/13,20/13,16/13)$   &    2.4303            &  13.203           & 2.4475    & 13.177 &FE                      \\\\\nFull ellipsoid        &       $(\\sqrt{1.44},\\sqrt{0.56},1)$           & 9.1656 &        &   9.1728 &          &      FE                        \\\\\n\\hline \\hline\n\\end{tabular}\n\\end{center}\n\\caption{Decay rates for the slowest decaying magnetic field eigenmodes in different geometries. The shell geometries are homothetic with the ratio between inner and outer radii $r_i/r_o=0.35$. The superscripts `P' and `T' refer to poloidal and toroidal eigenmodes, respectively. FE refers to a finite-element solution implemented in Comsol (D. C\\'ebron, personal communication). For the full ellipsoid, we report the slowest decaying mode, it is neither P or T.}\n\\label{tab:decay_geometries}\n\\end{table}\n\n\\section{Self-consistent convection-driven dynamo benchmark }\\label{sec:benchmark}\nThe final and most challenging benchmark exercise concerns a convection-driven dynamo simulation that provides a simplified model for rotating planetary cores or solar convection zones. We use a Boussinesq approximation and the geometry is a spherical shell with inner radius $r_i=7/13$ and outer radius $r_o=20/13$. The equations governing this system can then be written in the following non-dimensional form:\n\\begin{eqnarray}\n\\frac{\\partial \\Theta}{\\partial t} + {\\boldsymbol u}\\cdot{\\nabla} \\Theta & = & q \\nabla^2  \\Theta, \\label{eq:temp} \\\\\n\\nabla \\cdot {\\boldsymbol u} & = & 0, \\\\\nRo \\left( \\frac{\\partial {\\boldsymbol u}}{\\partial t} + {\\boldsymbol u}\\cdot {\\nabla} {\\boldsymbol u} \\right)+ \\hat{\\boldsymbol z}\\times{\\boldsymbol u} +\\nabla p & = &  E\\nabla^2{\\boldsymbol u} + {\\boldsymbol b}\\cdot \\nabla {\\boldsymbol b} + q Ra \\Theta {\\boldsymbol r}, \\\\\n\\frac{\\partial {\\boldsymbol b}}{\\partial t} + {\\boldsymbol u}\\cdot {\\nabla} {\\boldsymbol b} & = &  {\\boldsymbol b}\\cdot {\\nabla} {\\boldsymbol u} + \\nabla^2 {\\boldsymbol b}, \\\\\n\\nabla \\cdot {\\boldsymbol b} & = & 0. \\label{eq:divb2}\n\\end{eqnarray}\nCompared to the set of equations (\\ref{eq:divu})-(\\ref{eq:divb}), we note the presence of the terms $\\hat{\\boldsymbol z} \\times {\\boldsymbol u}$ and $Ra \\Theta$ in the momentum equation. Note also that we use a different non-dimensionalization compared to eqs. (\\ref{eq:divu})-(\\ref{eq:divb}), for example, time is measured in units of magnetic diffusion time \\citep{jackson2014}.\nThese embody the Coriolis force and a thermally driven buoyancy force, respectively. Overall, four non-dimensional parameters are required to characterize the system: the Roberts number $q$, the Rayleigh number $Ra$, the Ekman number $E$ and the Rossby number $Ro$. They are related to the physical properties of the system by the following definitions:\n\n", "index": 97, "text": "\\begin{equation}\nRo = \\frac{\\eta}{2 \\Omega d^2}, E=\\frac{\\nu}{2\\Omega d^2}, Ra = \\frac{g\\alpha \\Delta \\Theta d}{2 \\Omega \\kappa}, q = \\frac{\\kappa}{\\eta},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E49.m1\" class=\"ltx_Math\" alttext=\"Ro=\\frac{\\eta}{2\\Omega d^{2}},E=\\frac{\\nu}{2\\Omega d^{2}},Ra=\\frac{g\\alpha%&#10;\\Delta\\Theta d}{2\\Omega\\kappa},q=\\frac{\\kappa}{\\eta},\" display=\"block\"><mrow><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><mi>o</mi></mrow><mo>=</mo><mfrac><mi>\u03b7</mi><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u03a9</mi><mo>\u2062</mo><msup><mi>d</mi><mn>2</mn></msup></mrow></mfrac></mrow><mo>,</mo><mrow><mrow><mi>E</mi><mo>=</mo><mfrac><mi>\u03bd</mi><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u03a9</mi><mo>\u2062</mo><msup><mi>d</mi><mn>2</mn></msup></mrow></mfrac></mrow><mo>,</mo><mrow><mrow><mrow><mi>R</mi><mo>\u2062</mo><mi>a</mi></mrow><mo>=</mo><mfrac><mrow><mi>g</mi><mo>\u2062</mo><mi>\u03b1</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi mathvariant=\"normal\">\u0398</mi><mo>\u2062</mo><mi>d</mi></mrow><mrow><mn>2</mn><mo>\u2062</mo><mi mathvariant=\"normal\">\u03a9</mi><mo>\u2062</mo><mi>\u03ba</mi></mrow></mfrac></mrow><mo>,</mo><mrow><mi>q</mi><mo>=</mo><mfrac><mi>\u03ba</mi><mi>\u03b7</mi></mfrac></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe first solution of the system (\\ref{eq:temp})-(\\ref{eq:divb2}) using local methods was provided by \\cite{harder2005finite} for the parameter sets $E = 5 \\cdot 10^{-4}, Ra=32.5$, $q=\\{4,5,8\\}$ and $Ro=5\\cdot 10^{4}/q$.\n They reported the occurrence of a subcritical dynamo for $q=\\{5,8\\}$. The case $q=5$ was later the base for a natural dynamo community benchmark exercise by \\cite{jackson2014}. \\citet{sheyko_thesis} studied the case $q=8$ using a pseudospectral code for a large set of initial magnetic field intensities associated with the field configuration\n\\begin{eqnarray}\nb_r & = & \\frac{1}{\\sqrt{2}} \\frac{5}{8} \\frac{9r^3-4(4+3(r_i+r_o))r^2 + (4r_o + r_i(4+3r_o))6r - 48r_i r_o}{r}\\cos \\theta, \\\\\nb_{\\theta} &=& -\\frac{1}{\\sqrt{2}} \\frac{15}{4}\\frac{(r-r_i)(r-r_o)(3r-4)}{r} \\sin \\theta, \\\\\nb_{\\phi} &=& \\frac{1}{\\sqrt{2}} \\frac{15}{8} \\sin \\pi(r-r_i) \\sin 2 \\theta,\n\\end{eqnarray}\nThe initial temperature distribution is\n\n", "itemtype": "equation", "pos": 64784, "prevtext": "\nwhere $\\Omega$ denotes the spin rate, $d=r_o-r_i$ the shell thickness, $\\kappa$ the heat diffusivity, $\\eta=(\\mu \\sigma)^{-1}$ the magnetic diffusivity, $g$ gravity and $\\alpha$ the thermal expansion coefficient of the fluid, which are all constant and uniform. $\\Delta \\Theta $ is a measure of\n the temperature contrast across the shell. To close the system, the equations need to be augmented with suitable boundary conditions. For the velocity, we prescribe a no-slip boundary condition. The magnetic field obeys the pseudo-vacuum condition (\\ref{eq:bcb}), and we impose a fixed value of the temperature such that the fluid has an unstable stratification, more specifically\n\n", "index": 99, "text": "\\begin{equation}\n\\Theta(r_o) = 0 < \\Theta(r_i) = 1.\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E50.m1\" class=\"ltx_Math\" alttext=\"\\Theta(r_{o})=0&lt;\\Theta(r_{i})=1.\" display=\"block\"><mrow><mrow><mrow><mi mathvariant=\"normal\">\u0398</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mi>o</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>0</mn><mo>&lt;</mo><mrow><mi mathvariant=\"normal\">\u0398</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mn>1</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere $\\xi = 2r -r_i - r_o$, and the initial velocity is ${\\boldsymbol u}={\\boldsymbol 0}$. It is also useful at this point to define the kinetic energy $E_k$ and magnetic energy $E_m$ as follows:\n\n", "itemtype": "equation", "pos": 65786, "prevtext": "\nThe first solution of the system (\\ref{eq:temp})-(\\ref{eq:divb2}) using local methods was provided by \\cite{harder2005finite} for the parameter sets $E = 5 \\cdot 10^{-4}, Ra=32.5$, $q=\\{4,5,8\\}$ and $Ro=5\\cdot 10^{4}/q$.\n They reported the occurrence of a subcritical dynamo for $q=\\{5,8\\}$. The case $q=5$ was later the base for a natural dynamo community benchmark exercise by \\cite{jackson2014}. \\citet{sheyko_thesis} studied the case $q=8$ using a pseudospectral code for a large set of initial magnetic field intensities associated with the field configuration\n\\begin{eqnarray}\nb_r & = & \\frac{1}{\\sqrt{2}} \\frac{5}{8} \\frac{9r^3-4(4+3(r_i+r_o))r^2 + (4r_o + r_i(4+3r_o))6r - 48r_i r_o}{r}\\cos \\theta, \\\\\nb_{\\theta} &=& -\\frac{1}{\\sqrt{2}} \\frac{15}{4}\\frac{(r-r_i)(r-r_o)(3r-4)}{r} \\sin \\theta, \\\\\nb_{\\phi} &=& \\frac{1}{\\sqrt{2}} \\frac{15}{8} \\sin \\pi(r-r_i) \\sin 2 \\theta,\n\\end{eqnarray}\nThe initial temperature distribution is\n\n", "index": 101, "text": "\\begin{equation}\n\\Theta = \\frac{r_o r_i}{r} - r_i + \\frac{21}{\\sqrt{17920 \\pi}}(1 - 3\\xi^2 + 3\\xi^4 - \\xi^6) \\sin^4 \\theta \\cos 4\\phi,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E51.m1\" class=\"ltx_Math\" alttext=\"\\Theta=\\frac{r_{o}r_{i}}{r}-r_{i}+\\frac{21}{\\sqrt{17920\\pi}}(1-3\\xi^{2}+3\\xi^{%&#10;4}-\\xi^{6})\\sin^{4}\\theta\\cos 4\\phi,\" display=\"block\"><mrow><mrow><mi mathvariant=\"normal\">\u0398</mi><mo>=</mo><mrow><mrow><mfrac><mrow><msub><mi>r</mi><mi>o</mi></msub><mo>\u2062</mo><msub><mi>r</mi><mi>i</mi></msub></mrow><mi>r</mi></mfrac><mo>-</mo><msub><mi>r</mi><mi>i</mi></msub></mrow><mo>+</mo><mrow><mfrac><mn>21</mn><msqrt><mrow><mn>17920</mn><mo>\u2062</mo><mi>\u03c0</mi></mrow></msqrt></mfrac><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mrow><mrow><mn>1</mn><mo>-</mo><mrow><mn>3</mn><mo>\u2062</mo><msup><mi>\u03be</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>3</mn><mo>\u2062</mo><msup><mi>\u03be</mi><mn>4</mn></msup></mrow></mrow><mo>-</mo><msup><mi>\u03be</mi><mn>6</mn></msup></mrow><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><mrow><msup><mi>sin</mi><mn>4</mn></msup><mo>\u2061</mo><mi>\u03b8</mi></mrow><mo>\u2062</mo><mrow><mi>cos</mi><mo>\u2061</mo><mrow><mn>4</mn><mo>\u2062</mo><mi>\u03d5</mi></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 66133, "prevtext": "\nwhere $\\xi = 2r -r_i - r_o$, and the initial velocity is ${\\boldsymbol u}={\\boldsymbol 0}$. It is also useful at this point to define the kinetic energy $E_k$ and magnetic energy $E_m$ as follows:\n\n", "index": 103, "text": "\\begin{equation}\nE_{k} = \\frac{1}{2}\\iiint {\\boldsymbol u}^2 \\,\\mathrm{d}V, \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E52.m1\" class=\"ltx_Math\" alttext=\"E_{k}=\\frac{1}{2}\\iiint{\\boldsymbol{u}}^{2}\\,\\mathrm{d}V,\" display=\"block\"><mrow><mrow><msub><mi>E</mi><mi>k</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222d</mo><mrow><mpadded width=\"+1.7pt\"><msup><mi>\ud835\udc96</mi><mn>2</mn></msup></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>V</mi></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\nAs shown in Figure \\ref{fig:benchmarkPm8}, it was found by \\citet{sheyko_thesis} that, for $q=8$, two different types of self-sustained dynamo behaviour can occur depending on the initial conditions. For initial values of the magnetic energy between $407101$ and $623428$, a quasi-steady dynamo is found, that is, a solution that is time-independent apart from a steady azimuthal drift. In other terms, the solution can be expressed in the form $\\left( {\\boldsymbol u},{\\boldsymbol b}, \\Theta \\right)=f(r,\\theta,\\phi-\\omega t)$. Outside this range, the dynamo is not quasi-steady anymore, but exhibits relaxation oscillations similar to those observed by \\cite{busse2006}.\n\\begin{figure}                 \n  \\begin{center}\n        \\includegraphics[width=\\columnwidth]{fig10.pdf}\n        \\caption{Time series of the magnetic energy $E_m$ for the spectral (blue, dot-dashed) and FV code with $6\\times64^3$ CVs (red, solid) for two different initial magnetic field intensities. For the oscillating solution, an FV run at higher resolution ($6 \\times 128^3$ CVs) is shown as well (black, dashed). Time $t$ is measured in units of magnetic diffusion time.}\n         \\label{fig:benchmarkPm8}                \n  \\end{center}\n\\end{figure}\n\n\\begin{figure}\n\\begin{center}               \n\\includegraphics[width=\\columnwidth]{fig11.pdf}\n    \\caption{Illustration of the cubed grid system used for the convection-driven dynamo system. Note also the stretching of the radial grid point distribution.}              \n    \\label{fig:cubedsphere}  \n  \\end{center}\n\\end{figure}\n\n\nIn Figure \\ref{fig:benchmarkPm8}, we compare results obtained with the present FV code and a reference code for the choice $q=8$. For the FV simulation, we use a so-called cubed-sphere grid system that consists of six equal blocks of hexahedral elements (see Figure \\ref{fig:cubedsphere}). We consider two different resolutions, that consist of blocks of $64^3$ and $128^3$ CVs, respectively. The grid is stretched in the radial direction in order to properly resolve the Ekman boundary layers whose thickness scales as $E^{1/2}$. More specifically, the stretching is such that we have at least five CVs within a radial distance $E^{1/2}$ from the boundaries. A Crank-Nicolson scheme is used to discretise the Coriolis and buoyancy terms, and the time step $\\Delta t = 2 \\cdot 10^{-5}$. The reference code on the other hand is pseudospectral in angle and uses finite-differences in radius. The nonlinear and Coriolis term are integrated in time by means of a second-order accurate predictor-corrector scheme, whereas a Crank-Nicolson scheme is applied for the diffusive terms.\n\nWe see that the FV simulations recover well the two branches of the dynamo solution. The maximum discrepancy between the solutions is about 3.5\\% and 1\\% for the oscillating and steadily solutions, respectively. The structure of the non-oscillatory solution is depicted in Figures \\ref{fig:eq_fv} and \\ref{fig:med_fv}; the meridional planes are chosen such that they contain one of the reference points, that is, one of the blue dots depicted in Figure \\ref{fig:eq_fv}.\n\\begin{figure}                 \n  \\begin{center}\n  \\setlength{\\epsfysize}{7.0cm}\n\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12a.pdf}}  &\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12b.pdf}} &    \\\\  \n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12c.pdf}} &\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12d.pdf}} \n    \\end{tabular}\n    \\caption{Equatorial slices of the (steady) benchmark solution. The blue squares correspond to the reference points. (a) $\\Theta$, (b) $b_\\theta$, (c) $u_r$, (d) $u_{\\phi}$.}\n         \\label{fig:eq_fv}                \n  \\end{center}\n\\end{figure}\n\n\\begin{figure}                 \n  \\begin{center}\n  \\setlength{\\epsfysize}{5.50cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13a.pdf}}  &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13b.pdf}} &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13c.pdf}}  \\\\\n            \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13d.pdf}}  &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13e.pdf}} &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13f.pdf}}  \n    \\end{tabular}\n    \\caption{Meridional slices of the steady benchmark solution in a plane that contains one of the reference points. (a) $u_r$, (b) $u_\\theta$, (c) $u_\\phi$, (d) $b_{r}$, (e) $b_\\theta$, (f) $b_\\phi$.}\n         \\label{fig:med_fv}                \n  \\end{center}\n\\end{figure}\nIn the same spirit of \\cite{christensen2001numerical} and \\cite{jackson2014}, we suggest that  the quasi-steady solution can act as benchmark solution, as it allows the comparison of well-defined numbers. The final solution is reached within less than one magnetic diffusion time, whereas at least five magnetic diffusion times are required to reach the steady state in the benchmark by \\citet{jackson2014}. Following the same predecessor studies, we report in Table \\ref{tab:benchmark} the total kinetic and magnetic energy as global data and we also provide local data of $u_\\phi,b_\\theta$ and $\\Theta$ for a point in the equatorial plane at mid-depth where $u_r=0$ and $\\partial_\\phi u_r > 0$.   \n\\begin{table}\n\\begin{center}\n\\begin{tabular}{c|ccc}\n\\hline \\hline \n& FV64 & FV128 &PS\\\\ \\hline\n$E_{mag}$ & 309086.0(1.17\\%) & 311950.2 (0.26\\%) & 312754.7 \\\\\n$E_{kin}$  & 21502.1 (0.61\\%) & 21576.2 (0.27\\%) & 21634.9 \\\\\n$\\Theta$ & 0.3920 (0.31\\%) & 0.3925 (0.18\\%) & 0.3932 \\\\\n$B_{\\theta}$ & 2.1510 (1.43\\%)& 2.1839 (0.07\\%) & 2.1823 \\\\\n$V_{\\phi}$ & -81.23 (0.36\\%)& -80.74 (0.24\\%) & -80.9318 \\\\\n$\\omega$ & 5.6453 (1.55\\%) & 5.4959 (1.13\\%) & 5.5588 \\\\\n\\hline\n$\\Delta t$& $4.0 \\cdot 10^{-6}$ &$4.0 \\cdot 10^{-6}$ & $9.2\\cdot 10^{-6}$ \\\\\n\\hline\n$\\#$ cores & 64 & 25 &100  \\\\\nCPU time/time step (sec)& 381 &3071 & 196\\\\\n\n\\hline\n\\hline\n\\end{tabular}\n\\caption{Benchmark values for the steadily drifting dynamo at $q=8$. FV64 and FV128 refer to results obtained with the FV code with six blocks of $64^3$ and $128^3$ grid points respectively. PS denotes pseudospectral solution. The pseudospectral results were obtained using 200 grid points in radius and a spherical harmonic truncation of $L=100,M=100$. The numbers between brackets give the difference between the respective finite-volume and pseudospectral solution. Also shown are the time integration step $\\Delta t$ and a typical CPU time required to perform one time integration step.}\n\\label{tab:benchmark}\n\\end{center}\n\\end{table}\n\nWe find that the results of the FV code are in good agreement with the spectral ones; the discrepancies for the magnetic `quantities' are considerably smaller than the ones reported in \\cite{jackson2014}. \n\n\\section{Conclusions}\nIn this article we have described the implementation and validation of an unstructured finite-volume code for the solution of the incompressible MHD equations. The main novelty of this numerical tool, is the capability of working with unstructured meshes, which allows for a much broader range of geometries to be considered. The examples discussed in this work were mainly motivated by the study of natural dynamos. Our method, however, is also capable of modeling the complex geometries that are encountered in many dynamo experiments, such as geometries that incorporate the impellers in the VKS and Madison experiment \\citep{monchaux2007generation,nornberg2006} or the blades in the Riga experiment \\citep{gailitis2000detection}. This versatility is the main strength of the FV method. For spherical geometries, however, pseudo-spectral methods remain the \\textit{nec plus ultra} in terms of convergence and computational efficiency.\n\nFurthermore, we have presented a new benchmark case of a thermally driven self-consistent dynamo simulation. This complements earlier works of \\cite{christensen2001numerical,jackson2014} and \\cite{marti2014}. Given that it uses ferromagnetic boundary conditions, it is particularly attractive for testing local codes; a further advantage is that a steadily drifting solution is obtained after less than two decay times, in contrast to the benchmark of \\cite{jackson2014}.\n\nThe main challenge remaining is the implementation of insulating boundary conditions, which are more relevant in the context of planetary physics. \n   \n\\section*{Acknowledgements}\nFunding for this work from the ERC grant 247303 `MFECE' and the SNF grant 200020 143596 is gratefully acknowledged. This work was also supported by a grant from the Swiss National Supercomputing Centre (CSCS) under project IDs s225 and s369 for which we are grateful. We thank D. C\\'ebron for providing some of the results displayed in Table \\ref{tab:decay_geometries}. Finally, we thank two anonymous reviewers for their constructive comments that helped to improve this article. \n\n\\appendix\n\\section{Stability properties of the mixed Adams-Bashforth/Crank-Nicolson scheme} \\label{app:stab}\nIn this appendix, we will demonstrate that the mixed Adams-Bashforth/Crank-Nicolson scheme for the nonlinear terms in the MHD equations is stable, independent of the time step $\\Delta t$. This is in fact an extension of the work of \\cite{ham2007} who showed that this scheme was stable for the incompressible Navier-Stokes equations. As a starting point, we recapitulate their line of thought. It will be useful to first introduce the kinetic energy norm $\\sum_{i} V_i {\\boldsymbol U}_i^2$. \nThe advective term in the Navier-Stokes equations under the mixed Adams-Bashforth/Crank-Nicolson scheme reads: \n\n", "itemtype": "equation", "pos": 66225, "prevtext": "\n\n", "index": 105, "text": "\\begin{equation}\nE_{m} = \\frac{1}{2 Ro }\\iiint {\\boldsymbol b}^2 \\,\\mathrm{d}V. \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E53.m1\" class=\"ltx_Math\" alttext=\"E_{m}=\\frac{1}{2Ro}\\iiint{\\boldsymbol{b}}^{2}\\,\\mathrm{d}V.\" display=\"block\"><mrow><mrow><msub><mi>E</mi><mi>m</mi></msub><mo>=</mo><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><mo>\u2062</mo><mi>R</mi><mo>\u2062</mo><mi>o</mi></mrow></mfrac><mo>\u2062</mo><mrow><mo largeop=\"true\" symmetric=\"true\">\u222d</mo><mrow><mpadded width=\"+1.7pt\"><msup><mi>\ud835\udc83</mi><mn>2</mn></msup></mpadded><mo>\u2062</mo><mrow><mo>d</mo><mi>V</mi></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere the superscripts $AB$ and $CN$ denote a second-order Adams-Bashforth and Crank-Nicolson time discretisation, respectively. We can cast this in the following matrix representation:\n\n", "itemtype": "equation", "pos": 76023, "prevtext": "\n\nAs shown in Figure \\ref{fig:benchmarkPm8}, it was found by \\citet{sheyko_thesis} that, for $q=8$, two different types of self-sustained dynamo behaviour can occur depending on the initial conditions. For initial values of the magnetic energy between $407101$ and $623428$, a quasi-steady dynamo is found, that is, a solution that is time-independent apart from a steady azimuthal drift. In other terms, the solution can be expressed in the form $\\left( {\\boldsymbol u},{\\boldsymbol b}, \\Theta \\right)=f(r,\\theta,\\phi-\\omega t)$. Outside this range, the dynamo is not quasi-steady anymore, but exhibits relaxation oscillations similar to those observed by \\cite{busse2006}.\n\\begin{figure}                 \n  \\begin{center}\n        \\includegraphics[width=\\columnwidth]{fig10.pdf}\n        \\caption{Time series of the magnetic energy $E_m$ for the spectral (blue, dot-dashed) and FV code with $6\\times64^3$ CVs (red, solid) for two different initial magnetic field intensities. For the oscillating solution, an FV run at higher resolution ($6 \\times 128^3$ CVs) is shown as well (black, dashed). Time $t$ is measured in units of magnetic diffusion time.}\n         \\label{fig:benchmarkPm8}                \n  \\end{center}\n\\end{figure}\n\n\\begin{figure}\n\\begin{center}               \n\\includegraphics[width=\\columnwidth]{fig11.pdf}\n    \\caption{Illustration of the cubed grid system used for the convection-driven dynamo system. Note also the stretching of the radial grid point distribution.}              \n    \\label{fig:cubedsphere}  \n  \\end{center}\n\\end{figure}\n\n\nIn Figure \\ref{fig:benchmarkPm8}, we compare results obtained with the present FV code and a reference code for the choice $q=8$. For the FV simulation, we use a so-called cubed-sphere grid system that consists of six equal blocks of hexahedral elements (see Figure \\ref{fig:cubedsphere}). We consider two different resolutions, that consist of blocks of $64^3$ and $128^3$ CVs, respectively. The grid is stretched in the radial direction in order to properly resolve the Ekman boundary layers whose thickness scales as $E^{1/2}$. More specifically, the stretching is such that we have at least five CVs within a radial distance $E^{1/2}$ from the boundaries. A Crank-Nicolson scheme is used to discretise the Coriolis and buoyancy terms, and the time step $\\Delta t = 2 \\cdot 10^{-5}$. The reference code on the other hand is pseudospectral in angle and uses finite-differences in radius. The nonlinear and Coriolis term are integrated in time by means of a second-order accurate predictor-corrector scheme, whereas a Crank-Nicolson scheme is applied for the diffusive terms.\n\nWe see that the FV simulations recover well the two branches of the dynamo solution. The maximum discrepancy between the solutions is about 3.5\\% and 1\\% for the oscillating and steadily solutions, respectively. The structure of the non-oscillatory solution is depicted in Figures \\ref{fig:eq_fv} and \\ref{fig:med_fv}; the meridional planes are chosen such that they contain one of the reference points, that is, one of the blue dots depicted in Figure \\ref{fig:eq_fv}.\n\\begin{figure}                 \n  \\begin{center}\n  \\setlength{\\epsfysize}{7.0cm}\n\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12a.pdf}}  &\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12b.pdf}} &    \\\\  \n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12c.pdf}} &\n      \\setlength{\\epsfysize}{7.0cm}\n      \\subfigure[]{\\epsfbox{fig12d.pdf}} \n    \\end{tabular}\n    \\caption{Equatorial slices of the (steady) benchmark solution. The blue squares correspond to the reference points. (a) $\\Theta$, (b) $b_\\theta$, (c) $u_r$, (d) $u_{\\phi}$.}\n         \\label{fig:eq_fv}                \n  \\end{center}\n\\end{figure}\n\n\\begin{figure}                 \n  \\begin{center}\n  \\setlength{\\epsfysize}{5.50cm}\n    \\begin{tabular}{ccc}\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13a.pdf}}  &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13b.pdf}} &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13c.pdf}}  \\\\\n            \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13d.pdf}}  &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13e.pdf}} &\n      \\setlength{\\epsfysize}{5.50cm}\n      \\subfigure[]{\\epsfbox{fig13f.pdf}}  \n    \\end{tabular}\n    \\caption{Meridional slices of the steady benchmark solution in a plane that contains one of the reference points. (a) $u_r$, (b) $u_\\theta$, (c) $u_\\phi$, (d) $b_{r}$, (e) $b_\\theta$, (f) $b_\\phi$.}\n         \\label{fig:med_fv}                \n  \\end{center}\n\\end{figure}\nIn the same spirit of \\cite{christensen2001numerical} and \\cite{jackson2014}, we suggest that  the quasi-steady solution can act as benchmark solution, as it allows the comparison of well-defined numbers. The final solution is reached within less than one magnetic diffusion time, whereas at least five magnetic diffusion times are required to reach the steady state in the benchmark by \\citet{jackson2014}. Following the same predecessor studies, we report in Table \\ref{tab:benchmark} the total kinetic and magnetic energy as global data and we also provide local data of $u_\\phi,b_\\theta$ and $\\Theta$ for a point in the equatorial plane at mid-depth where $u_r=0$ and $\\partial_\\phi u_r > 0$.   \n\\begin{table}\n\\begin{center}\n\\begin{tabular}{c|ccc}\n\\hline \\hline \n& FV64 & FV128 &PS\\\\ \\hline\n$E_{mag}$ & 309086.0(1.17\\%) & 311950.2 (0.26\\%) & 312754.7 \\\\\n$E_{kin}$  & 21502.1 (0.61\\%) & 21576.2 (0.27\\%) & 21634.9 \\\\\n$\\Theta$ & 0.3920 (0.31\\%) & 0.3925 (0.18\\%) & 0.3932 \\\\\n$B_{\\theta}$ & 2.1510 (1.43\\%)& 2.1839 (0.07\\%) & 2.1823 \\\\\n$V_{\\phi}$ & -81.23 (0.36\\%)& -80.74 (0.24\\%) & -80.9318 \\\\\n$\\omega$ & 5.6453 (1.55\\%) & 5.4959 (1.13\\%) & 5.5588 \\\\\n\\hline\n$\\Delta t$& $4.0 \\cdot 10^{-6}$ &$4.0 \\cdot 10^{-6}$ & $9.2\\cdot 10^{-6}$ \\\\\n\\hline\n$\\#$ cores & 64 & 25 &100  \\\\\nCPU time/time step (sec)& 381 &3071 & 196\\\\\n\n\\hline\n\\hline\n\\end{tabular}\n\\caption{Benchmark values for the steadily drifting dynamo at $q=8$. FV64 and FV128 refer to results obtained with the FV code with six blocks of $64^3$ and $128^3$ grid points respectively. PS denotes pseudospectral solution. The pseudospectral results were obtained using 200 grid points in radius and a spherical harmonic truncation of $L=100,M=100$. The numbers between brackets give the difference between the respective finite-volume and pseudospectral solution. Also shown are the time integration step $\\Delta t$ and a typical CPU time required to perform one time integration step.}\n\\label{tab:benchmark}\n\\end{center}\n\\end{table}\n\nWe find that the results of the FV code are in good agreement with the spectral ones; the discrepancies for the magnetic `quantities' are considerably smaller than the ones reported in \\cite{jackson2014}. \n\n\\section{Conclusions}\nIn this article we have described the implementation and validation of an unstructured finite-volume code for the solution of the incompressible MHD equations. The main novelty of this numerical tool, is the capability of working with unstructured meshes, which allows for a much broader range of geometries to be considered. The examples discussed in this work were mainly motivated by the study of natural dynamos. Our method, however, is also capable of modeling the complex geometries that are encountered in many dynamo experiments, such as geometries that incorporate the impellers in the VKS and Madison experiment \\citep{monchaux2007generation,nornberg2006} or the blades in the Riga experiment \\citep{gailitis2000detection}. This versatility is the main strength of the FV method. For spherical geometries, however, pseudo-spectral methods remain the \\textit{nec plus ultra} in terms of convergence and computational efficiency.\n\nFurthermore, we have presented a new benchmark case of a thermally driven self-consistent dynamo simulation. This complements earlier works of \\cite{christensen2001numerical,jackson2014} and \\cite{marti2014}. Given that it uses ferromagnetic boundary conditions, it is particularly attractive for testing local codes; a further advantage is that a steadily drifting solution is obtained after less than two decay times, in contrast to the benchmark of \\cite{jackson2014}.\n\nThe main challenge remaining is the implementation of insulating boundary conditions, which are more relevant in the context of planetary physics. \n   \n\\section*{Acknowledgements}\nFunding for this work from the ERC grant 247303 `MFECE' and the SNF grant 200020 143596 is gratefully acknowledged. This work was also supported by a grant from the Swiss National Supercomputing Centre (CSCS) under project IDs s225 and s369 for which we are grateful. We thank D. C\\'ebron for providing some of the results displayed in Table \\ref{tab:decay_geometries}. Finally, we thank two anonymous reviewers for their constructive comments that helped to improve this article. \n\n\\appendix\n\\section{Stability properties of the mixed Adams-Bashforth/Crank-Nicolson scheme} \\label{app:stab}\nIn this appendix, we will demonstrate that the mixed Adams-Bashforth/Crank-Nicolson scheme for the nonlinear terms in the MHD equations is stable, independent of the time step $\\Delta t$. This is in fact an extension of the work of \\cite{ham2007} who showed that this scheme was stable for the incompressible Navier-Stokes equations. As a starting point, we recapitulate their line of thought. It will be useful to first introduce the kinetic energy norm $\\sum_{i} V_i {\\boldsymbol U}_i^2$. \nThe advective term in the Navier-Stokes equations under the mixed Adams-Bashforth/Crank-Nicolson scheme reads: \n\n", "index": 107, "text": "\\begin{equation}\nV_i\\left(\\mathbb{C}_U {\\boldsymbol U} \\right)_i = \\sum_{j \\in \\pi_i} \\frac{{\\boldsymbol U}_i^{CN} + {\\boldsymbol U}_j^{CN}}{2}U_{ij}^{AB}, \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E54.m1\" class=\"ltx_Math\" alttext=\"V_{i}\\left(\\mathbb{C}_{U}{\\boldsymbol{U}}\\right)_{i}=\\sum_{j\\in\\pi_{i}}\\frac{{%&#10;\\boldsymbol{U}}_{i}^{CN}+{\\boldsymbol{U}}_{j}^{CN}}{2}U_{ij}^{AB},\" display=\"block\"><mrow><mrow><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\u2102</mi><mi>U</mi></msub><mo>\u2062</mo><mi>\ud835\udc7c</mi></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow><mo>=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>\u2208</mo><msub><mi>\u03c0</mi><mi>i</mi></msub></mrow></munder><mrow><mfrac><mrow><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msubsup><mo>+</mo><msubsup><mi>\ud835\udc7c</mi><mi>j</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msubsup></mrow><mn>2</mn></mfrac><mo>\u2062</mo><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>A</mi><mo>\u2062</mo><mi>B</mi></mrow></msubsup></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe essential point now is that  the coefficient matrix is skew-symmetric, This can be seen as follows. According to eq. (\\ref{incompress-np1}), the diagonal entries are $\\frac{1}{2}\\sum_{j \\in \\pi_{i}} U_{ij}^{AB}=0$ given that $\\sum_{j \\in \\pi_{i}} U_{ij}^{n}=0$ and $\\sum_{j \\in \\pi_{i}} U_{ij}^{n-1}=0$ by construction. Furthermore, the fluxes satisfy $U_{ij}=-U_{ji}$ by definition, that is, $\\mathbb{C_U} = -\\mathbb{C}_U$. \n\nWe can now write the time-advanced scheme \\textcolor{red}{in} in the following form:\n\n", "itemtype": "equation", "pos": 76381, "prevtext": "\nwhere the superscripts $AB$ and $CN$ denote a second-order Adams-Bashforth and Crank-Nicolson time discretisation, respectively. We can cast this in the following matrix representation:\n\n", "index": 109, "text": "\\begin{equation}\\frac{1}{2}\n\\left(\n\\begin{array}{ccccc}\n 0 & ... & ... & ... & ... \\\\\n ... & 0  & ... & U_{ij}^{AB} & ... \\\\\n  ... & ...  & 0 & ... & ... \\\\\n   ... & U_{ji}^{AB}  & ... & 0 & ... \\\\ \n   .. & ...  & ... & ... & 0 \n\\end{array}\n\\right)\n\\left(\n\\begin{array}{c}\n\\vdots \\\\ {\\boldsymbol U}_i^{CN} \\\\ \\vdots \\\\ {\\boldsymbol U}_j^{CN} \\\\ \\vdots\n\\end{array}\n\\right)\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E55.m1\" class=\"ltx_Math\" alttext=\"\\frac{1}{2}\\left(\\begin{array}[]{ccccc}0&amp;...&amp;...&amp;...&amp;...\\\\&#10;...&amp;0&amp;...&amp;U_{ij}^{AB}&amp;...\\\\&#10;...&amp;...&amp;0&amp;...&amp;...\\\\&#10;...&amp;U_{ji}^{AB}&amp;...&amp;0&amp;...\\\\&#10;..&amp;...&amp;...&amp;...&amp;0\\end{array}\\right)\\left(\\begin{array}[]{c}\\vdots\\\\&#10;{\\boldsymbol{U}}_{i}^{CN}\\\\&#10;\\vdots\\\\&#10;{\\boldsymbol{U}}_{j}^{CN}\\\\&#10;\\vdots\\end{array}\\right)\" display=\"block\"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>U</mi><mrow><mi>i</mi><mo>\u2062</mo><mi>j</mi></mrow><mrow><mi>A</mi><mo>\u2062</mo><mi>B</mi></mrow></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><msubsup><mi>U</mi><mrow><mi>j</mi><mo>\u2062</mo><mi>i</mi></mrow><mrow><mi>A</mi><mo>\u2062</mo><mi>B</mi></mrow></msubsup></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><mrow><mi/><mo>.</mo><mo>.</mo></mrow></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u2026</mi></mtd><mtd columnalign=\"center\"><mn>0</mn></mtd></mtr></mtable><mo>)</mo></mrow><mo>\u2062</mo><mrow><mo>(</mo><mtable displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr><mtr><mtd columnalign=\"center\"><msubsup><mi>\ud835\udc7c</mi><mi>j</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msubsup></mtd></mtr><mtr><mtd columnalign=\"center\"><mi mathvariant=\"normal\">\u22ee</mi></mtd></mtr></mtable><mo>)</mo></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nWe now take the dot-product of the above expression with $({\\boldsymbol U}^{\\star}_i + {\\boldsymbol U}^{n}_i)$ and take the sum over all CVs. This yields:\n\n", "itemtype": "equation", "pos": 77284, "prevtext": "\nThe essential point now is that  the coefficient matrix is skew-symmetric, This can be seen as follows. According to eq. (\\ref{incompress-np1}), the diagonal entries are $\\frac{1}{2}\\sum_{j \\in \\pi_{i}} U_{ij}^{AB}=0$ given that $\\sum_{j \\in \\pi_{i}} U_{ij}^{n}=0$ and $\\sum_{j \\in \\pi_{i}} U_{ij}^{n-1}=0$ by construction. Furthermore, the fluxes satisfy $U_{ij}=-U_{ji}$ by definition, that is, $\\mathbb{C_U} = -\\mathbb{C}_U$. \n\nWe can now write the time-advanced scheme \\textcolor{red}{in} in the following form:\n\n", "index": 111, "text": "\\begin{equation}\nV_i\\frac{{\\boldsymbol U}^{\\star}_i-{\\boldsymbol U}^n_i}{\\Delta t } = -V_i\\left(\\mathbb{C}_U {\\boldsymbol U}^{CN} \\right)_{i} = -\\left(\\mathbb{\\tilde C}_U {\\boldsymbol U}^{CN} \\right)_{i}  .\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E56.m1\" class=\"ltx_Math\" alttext=\"V_{i}\\frac{{\\boldsymbol{U}}^{\\star}_{i}-{\\boldsymbol{U}}^{n}_{i}}{\\Delta t}=-V%&#10;_{i}\\left(\\mathbb{C}_{U}{\\boldsymbol{U}}^{CN}\\right)_{i}=-\\left(\\mathbb{\\tilde%&#10;{C}}_{U}{\\boldsymbol{U}}^{CN}\\right)_{i}.\" display=\"block\"><mrow><mrow><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><mfrac><mrow><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>-</mo><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mi>n</mi></msubsup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac></mrow><mo>=</mo><mrow><mo>-</mo><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\u2102</mi><mi>U</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc7c</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>=</mo><mrow><mo>-</mo><msub><mrow><mo>(</mo><mrow><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>U</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc7c</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": " \n Due to the skew-symmetric character of the operator (or matrix) $\\mathbb{\\tilde C}_{U}$ the right-hand side of this expression vanishes, and this implies that the kinetic energy norm is conserved. It follows that the mixed Adams-Bashforth/Crank-Nicolson scheme is stable for the Navier-Stokes equation.\n \nThis  can now be easily extended to the MHD case. To this end, we consider the `MHD' energy norm $\\sum_{i} V_i \\left({\\boldsymbol U}^2_i + {\\boldsymbol B}^2_{i} \\right)$. The time integration schemes for the nonlinear terms in the MHD equations can be written as follows:\n\n", "itemtype": "equation", "pos": -1, "prevtext": "\nWe now take the dot-product of the above expression with $({\\boldsymbol U}^{\\star}_i + {\\boldsymbol U}^{n}_i)$ and take the sum over all CVs. This yields:\n\n", "index": 113, "text": "\\begin{equation}\n \\sum_{i} V_i ({\\boldsymbol U}^{\\star}_i+{\\boldsymbol U}^n_i) \\cdot \\frac{{\\boldsymbol U}^{\\star}-{\\boldsymbol U}^n}{\\Delta t } = -\\frac{1}{2}\\sum_i ({\\boldsymbol U}^{\\star}+{\\boldsymbol U}^n)_i  \\cdot \\left[ \\mathbb{\\tilde C}_U ({\\boldsymbol U}^{\\star}+{\\boldsymbol U}^n) \\right]_i. \n \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E57.m1\" class=\"ltx_Math\" alttext=\"\\sum_{i}V_{i}({\\boldsymbol{U}}^{\\star}_{i}+{\\boldsymbol{U}}^{n}_{i})\\cdot\\frac%&#10;{{\\boldsymbol{U}}^{\\star}-{\\boldsymbol{U}}^{n}}{\\Delta t}=-\\frac{1}{2}\\sum_{i}%&#10;({\\boldsymbol{U}}^{\\star}+{\\boldsymbol{U}}^{n})_{i}\\cdot\\left[\\mathbb{\\tilde{C%&#10;}}_{U}({\\boldsymbol{U}}^{\\star}+{\\boldsymbol{U}}^{n})\\right]_{i}.\" display=\"block\"><mrow><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mi>i</mi></munder><mrow><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>+</mo><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mi>n</mi></msubsup></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>\u22c5</mo><mfrac><mrow><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>-</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac></mrow></mrow><mo>=</mo><mrow><mo>-</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mi>i</mi></munder><mrow><msub><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup></mrow><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msub><mo>\u22c5</mo><msub><mrow><mo>[</mo><mrow><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>U</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>]</mo></mrow><mi>i</mi></msub></mrow></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 78558, "prevtext": " \n Due to the skew-symmetric character of the operator (or matrix) $\\mathbb{\\tilde C}_{U}$ the right-hand side of this expression vanishes, and this implies that the kinetic energy norm is conserved. It follows that the mixed Adams-Bashforth/Crank-Nicolson scheme is stable for the Navier-Stokes equation.\n \nThis  can now be easily extended to the MHD case. To this end, we consider the `MHD' energy norm $\\sum_{i} V_i \\left({\\boldsymbol U}^2_i + {\\boldsymbol B}^2_{i} \\right)$. The time integration schemes for the nonlinear terms in the MHD equations can be written as follows:\n\n", "index": 115, "text": "\\begin{equation}\nV_i\\frac{{\\boldsymbol U}^{\\star}_i-{\\boldsymbol U}^n_i}{\\Delta t } = -V_i \\left(\\mathbb{C}_U {\\boldsymbol U}^{CN} \\right)_{i} + V_i \\left(\\mathbb{C}_B {\\boldsymbol B}^{CN} \\right)_{i} = -\\left(\\mathbb{\\tilde C}_U {\\boldsymbol U}^{CN} \\right)_{i} +  \\left(\\mathbb{\\tilde C}_B {\\boldsymbol B}^{CN} \\right)_{i} ,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E58.m1\" class=\"ltx_Math\" alttext=\"V_{i}\\frac{{\\boldsymbol{U}}^{\\star}_{i}-{\\boldsymbol{U}}^{n}_{i}}{\\Delta t}=-V%&#10;_{i}\\left(\\mathbb{C}_{U}{\\boldsymbol{U}}^{CN}\\right)_{i}+V_{i}\\left(\\mathbb{C}%&#10;_{B}{\\boldsymbol{B}}^{CN}\\right)_{i}=-\\left(\\mathbb{\\tilde{C}}_{U}{\\boldsymbol%&#10;{U}}^{CN}\\right)_{i}+\\left(\\mathbb{\\tilde{C}}_{B}{\\boldsymbol{B}}^{CN}\\right)_%&#10;{i},\" display=\"block\"><mrow><mrow><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><mfrac><mrow><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>-</mo><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mi>n</mi></msubsup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac></mrow><mo>=</mo><mrow><mrow><mo>-</mo><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\u2102</mi><mi>U</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc7c</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>+</mo><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\u2102</mi><mi>B</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc69</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>=</mo><mrow><mrow><mo>-</mo><msub><mrow><mo>(</mo><mrow><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>U</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc7c</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow><mo>+</mo><msub><mrow><mo>(</mo><mrow><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>B</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc69</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nAfter some algebra, we find that\n\n", "itemtype": "equation", "pos": 78900, "prevtext": "\n\n", "index": 117, "text": "\\begin{equation}\nV_i\\frac{{\\boldsymbol B}^{\\star}_i-{\\boldsymbol B}^n_i}{\\Delta t } = -V_i \\left(\\mathbb{C}_U {\\boldsymbol B}^{CN} \\right)_{i} + V_i \\left(\\mathbb{C}_B {\\boldsymbol U}^{CN} \\right)_{i} = - \\left(\\mathbb{\\tilde C}_U {\\boldsymbol B}^{CN} \\right)_{i} + \\left(\\mathbb{\\tilde C}_B {\\boldsymbol U}^{CN} \\right)_{i} .\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E59.m1\" class=\"ltx_Math\" alttext=\"V_{i}\\frac{{\\boldsymbol{B}}^{\\star}_{i}-{\\boldsymbol{B}}^{n}_{i}}{\\Delta t}=-V%&#10;_{i}\\left(\\mathbb{C}_{U}{\\boldsymbol{B}}^{CN}\\right)_{i}+V_{i}\\left(\\mathbb{C}%&#10;_{B}{\\boldsymbol{U}}^{CN}\\right)_{i}=-\\left(\\mathbb{\\tilde{C}}_{U}{\\boldsymbol%&#10;{B}}^{CN}\\right)_{i}+\\left(\\mathbb{\\tilde{C}}_{B}{\\boldsymbol{U}}^{CN}\\right)_%&#10;{i}.\" display=\"block\"><mrow><mrow><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><mfrac><mrow><msubsup><mi>\ud835\udc69</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>-</mo><msubsup><mi>\ud835\udc69</mi><mi>i</mi><mi>n</mi></msubsup></mrow><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac></mrow><mo>=</mo><mrow><mrow><mo>-</mo><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\u2102</mi><mi>U</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc69</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>+</mo><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><msub><mrow><mo>(</mo><mrow><msub><mi>\u2102</mi><mi>B</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc7c</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>=</mo><mrow><mrow><mo>-</mo><msub><mrow><mo>(</mo><mrow><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>U</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc69</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow><mo>+</mo><msub><mrow><mo>(</mo><mrow><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>B</mi></msub><mo>\u2062</mo><msup><mi>\ud835\udc7c</mi><mrow><mi>C</mi><mo>\u2062</mo><mi>N</mi></mrow></msup></mrow><mo>)</mo></mrow><mi>i</mi></msub></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nFollowing similar arguments as those outlined above, the first two terms on the right-hand side of this expression are both strictly zero because of the skew-symmetric nature of $\\mathbb{\\tilde C}_{U}$. Likewise, $\\mathbb{\\tilde C}_B$ is also skew-symmetric and therefore, the last two terms on the right-hand side cancel each other. Thus, we find that the `MHD energy norm' $\\sum_{i} V_i({\\boldsymbol U}_i^2 + {\\boldsymbol B}_i^2)$ is conserved. This implies that no unbounded growth of the total energy can occur, and we can conclude that the mixed Adans-Bashforth/Crank-Nicolson scheme is stable.\n\n\\section{Analytical solution of the decay modes in a full sphere and a spherical shell with pseudo-vacuum boundary conditions} \\label{app:decay}\nWe consider a toroidal-poloidal decomposition of the magnetic field:\n\n", "itemtype": "equation", "pos": 79275, "prevtext": "\nAfter some algebra, we find that\n\n", "index": 119, "text": "\\begin{multline}\n\\frac{1}{\\Delta t}\\sum_{i} V_i \\left\\{ \\left({\\boldsymbol U}^{\\star}_i\\right)^2+\\left({\\boldsymbol B}^{\\star}_i\\right)^2- \\left({\\boldsymbol U}^{n}_i\\right)^2-\\left({\\boldsymbol B}^{n}_i\\right)^2 \\right\\}\\\\  =  \\frac{1}{2}\\sum_{i }\\left\\{ -  ( {\\boldsymbol U}^{\\star}+{\\boldsymbol U}^n)_i  \\cdot \\left[ \\mathbb{ \\tilde C}_U ({\\boldsymbol U}^{\\star}+{\\boldsymbol U}^n) \\right]_i  -  ( {\\boldsymbol B}^{\\star}+{\\boldsymbol B}^n)_i  \\cdot \\left[ \\mathbb{ \\tilde C}_U ({\\boldsymbol B}^{\\star}+{\\boldsymbol B}^n) \\right]_i  \\right. \\\\ \\left. + ( {\\boldsymbol U}^{\\star}+{\\boldsymbol U}^n)_i  \\cdot \\left[ \\mathbb{ \\tilde C}_B ({\\boldsymbol B}^{\\star}+{\\boldsymbol B}^n) \\right]_i  +  ( {\\boldsymbol B}^{\\star}+{\\boldsymbol B}^n)_i  \\cdot \\left[ \\mathbb{ \\tilde C}_B ({\\boldsymbol U}^{\\star}+{\\boldsymbol U}^n) \\right]_i  \\right\\}.\n\\end{multline}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E60.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\frac{1}{\\Delta t}\\sum_{i}V_{i}\\left\\{\\left({\\boldsymbol{U}}^{%&#10;\\star}_{i}\\right)^{2}+\\left({\\boldsymbol{B}}^{\\star}_{i}\\right)^{2}-\\left({%&#10;\\boldsymbol{U}}^{n}_{i}\\right)^{2}-\\left({\\boldsymbol{B}}^{n}_{i}\\right)^{2}%&#10;\\right\\}\\\\&#10;\\displaystyle=\\frac{1}{2}\\sum_{i}\\left\\{-({\\boldsymbol{U}}^{\\star}+{%&#10;\\boldsymbol{U}}^{n})_{i}\\cdot\\left[\\mathbb{\\tilde{C}}_{U}({\\boldsymbol{U}}^{%&#10;\\star}+{\\boldsymbol{U}}^{n})\\right]_{i}-({\\boldsymbol{B}}^{\\star}+{\\boldsymbol%&#10;{B}}^{n})_{i}\\cdot\\left[\\mathbb{\\tilde{C}}_{U}({\\boldsymbol{B}}^{\\star}+{%&#10;\\boldsymbol{B}}^{n})\\right]_{i}\\right.\\\\&#10;\\displaystyle\\left.+({\\boldsymbol{U}}^{\\star}+{\\boldsymbol{U}}^{n})_{i}\\cdot%&#10;\\left[\\mathbb{\\tilde{C}}_{B}({\\boldsymbol{B}}^{\\star}+{\\boldsymbol{B}}^{n})%&#10;\\right]_{i}+({\\boldsymbol{B}}^{\\star}+{\\boldsymbol{B}}^{n})_{i}\\cdot\\left[%&#10;\\mathbb{\\tilde{C}}_{B}({\\boldsymbol{U}}^{\\star}+{\\boldsymbol{U}}^{n})\\right]_{%&#10;i}\\right\\}.\" display=\"block\"><mtable displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mrow><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">\u0394</mi><mo>\u2062</mo><mi>t</mi></mrow></mfrac><mo>\u2062</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mi>i</mi></munder><mrow><msub><mi>V</mi><mi>i</mi></msub><mo>\u2062</mo><mrow><mo>{</mo><mrow><mrow><msup><mrow><mo>(</mo><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo>(</mo><msubsup><mi>\ud835\udc69</mi><mi>i</mi><mo>\u22c6</mo></msubsup><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>-</mo><msup><mrow><mo>(</mo><msubsup><mi>\ud835\udc7c</mi><mi>i</mi><mi>n</mi></msubsup><mo>)</mo></mrow><mn>2</mn></msup><mo>-</mo><msup><mrow><mo>(</mo><msubsup><mi>\ud835\udc69</mi><mi>i</mi><mi>n</mi></msubsup><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>}</mo></mrow></mrow></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"right\"><mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mi>i</mi></munder><mrow><mo>{</mo><mo>-</mo><msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msub><mo>\u22c5</mo><msub><mrow><mo>[</mo><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>U</mi></msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mo>]</mo></mrow><mi>i</mi></msub><mo>-</mo><msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc69</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc69</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msub><mo>\u22c5</mo><msub><mrow><mo>[</mo><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>U</mi></msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc69</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc69</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mo>]</mo></mrow><mi>i</mi></msub></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"right\"><mrow><mo>+</mo><msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msub><mo>\u22c5</mo><msub><mrow><mo>[</mo><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>B</mi></msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc69</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc69</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mo>]</mo></mrow><mi>i</mi></msub><mo>+</mo><msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc69</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc69</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mi>i</mi></msub><mo>\u22c5</mo><msub><mrow><mo>[</mo><msub><mover accent=\"true\"><mi>\u2102</mi><mo stretchy=\"false\">~</mo></mover><mi>B</mi></msub><mrow><mo stretchy=\"false\">(</mo><msup><mi>\ud835\udc7c</mi><mo>\u22c6</mo></msup><mo>+</mo><msup><mi>\ud835\udc7c</mi><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><mo>]</mo></mrow><mi>i</mi></msub><mo>}</mo><mo>.</mo></mrow></mtd></mtr></mtable></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nIt is customary to expand $T$ and $S$ in a series of spherical harmonics:\n\n", "itemtype": "equation", "pos": 80948, "prevtext": "\nFollowing similar arguments as those outlined above, the first two terms on the right-hand side of this expression are both strictly zero because of the skew-symmetric nature of $\\mathbb{\\tilde C}_{U}$. Likewise, $\\mathbb{\\tilde C}_B$ is also skew-symmetric and therefore, the last two terms on the right-hand side cancel each other. Thus, we find that the `MHD energy norm' $\\sum_{i} V_i({\\boldsymbol U}_i^2 + {\\boldsymbol B}_i^2)$ is conserved. This implies that no unbounded growth of the total energy can occur, and we can conclude that the mixed Adans-Bashforth/Crank-Nicolson scheme is stable.\n\n\\section{Analytical solution of the decay modes in a full sphere and a spherical shell with pseudo-vacuum boundary conditions} \\label{app:decay}\nWe consider a toroidal-poloidal decomposition of the magnetic field:\n\n", "index": 121, "text": "\\begin{equation}\n{\\boldsymbol b} = \\nabla \\times T{\\boldsymbol r} + \\nabla \\times \\nabla \\times S{\\boldsymbol r}.  \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E61.m1\" class=\"ltx_Math\" alttext=\"{\\boldsymbol{b}}=\\nabla\\times T{\\boldsymbol{r}}+\\nabla\\times\\nabla\\times S{%&#10;\\boldsymbol{r}}.\" display=\"block\"><mrow><mrow><mi>\ud835\udc83</mi><mo>=</mo><mrow><mrow><mrow><mo>\u2207</mo><mo>\u00d7</mo><mi>T</mi></mrow><mo>\u2062</mo><mi>\ud835\udc93</mi></mrow><mo>+</mo><mrow><mrow><mo>\u2207</mo><mo>\u00d7</mo><mo>\u2207</mo><mo>\u00d7</mo><mi>S</mi></mrow><mo>\u2062</mo><mi>\ud835\udc93</mi></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere the functions  $Y_{lm}$ denote the spherical harmonics of degree $l$ and order $m$. \n\nUsing this decomposition, we can recast the magnetic diffusion equation \n\n", "itemtype": "equation", "pos": 81153, "prevtext": "\nIt is customary to expand $T$ and $S$ in a series of spherical harmonics:\n\n", "index": 123, "text": "\\begin{equation}\nT = \\sum_{l=0}^{\\infty}\\sum_{m=-l}^{l} T_{lm}(r) Y_{lm}(\\theta, \\phi), S = \\sum_{l=0}^{\\infty}\\sum_{m=-l}^{l} S_{lm}(r) Y_{lm}(\\theta, \\phi),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E62.m1\" class=\"ltx_Math\" alttext=\"T=\\sum_{l=0}^{\\infty}\\sum_{m=-l}^{l}T_{lm}(r)Y_{lm}(\\theta,\\phi),S=\\sum_{l=0}^%&#10;{\\infty}\\sum_{m=-l}^{l}S_{lm}(r)Y_{lm}(\\theta,\\phi),\" display=\"block\"><mrow><mrow><mrow><mi>T</mi><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>l</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant=\"normal\">\u221e</mi></munderover><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>m</mi><mo>=</mo><mrow><mo>-</mo><mi>l</mi></mrow></mrow><mi>l</mi></munderover><mrow><msub><mi>T</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>r</mi><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>Y</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo>,</mo><mi>\u03d5</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></mrow><mo>,</mo><mrow><mi>S</mi><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>l</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant=\"normal\">\u221e</mi></munderover><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>m</mi><mo>=</mo><mrow><mo>-</mo><mi>l</mi></mrow></mrow><mi>l</mi></munderover><mrow><msub><mi>S</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>r</mi><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>Y</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b8</mi><mo>,</mo><mi>\u03d5</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nas a set of differential equations for $T_{lm}$ and $S_{lm}$:\n\n", "itemtype": "equation", "pos": 81492, "prevtext": "\nwhere the functions  $Y_{lm}$ denote the spherical harmonics of degree $l$ and order $m$. \n\nUsing this decomposition, we can recast the magnetic diffusion equation \n\n", "index": 125, "text": "\\begin{equation}\n\\frac{\\partial {\\boldsymbol b}}{\\partial t} = \\nabla^2 {\\boldsymbol b},\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E63.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial{\\boldsymbol{b}}}{\\partial t}=\\nabla^{2}{\\boldsymbol{b}},\" display=\"block\"><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mrow><msup><mo>\u2207</mo><mn>2</mn></msup><mo>\u2061</mo><mi>\ud835\udc83</mi></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 81658, "prevtext": "\nas a set of differential equations for $T_{lm}$ and $S_{lm}$:\n\n", "index": 127, "text": "\\begin{equation}\n\\frac{\\partial T_{lm}}{\\partial t} = \\frac{1}{r^2}\\frac{\\partial}{\\partial r} \\left(r^2 \\frac{\\partial T_{lm}}{\\partial r} \\right) - \\frac{l(l+1)}{r^2}T_{lm}, \\label{eq:tor_eq}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E64.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial T_{lm}}{\\partial t}=\\frac{1}{r^{2}}\\frac{\\partial}{\\partial r}%&#10;\\left(r^{2}\\frac{\\partial T_{lm}}{\\partial r}\\right)-\\frac{l(l+1)}{r^{2}}T_{lm},\" display=\"block\"><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msub><mi>T</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mrow><mrow><mfrac><mn>1</mn><msup><mi>r</mi><mn>2</mn></msup></mfrac><mo>\u2062</mo><mfrac><mo>\u2202</mo><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>r</mi></mrow></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>\u2062</mo><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msub><mi>T</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>r</mi></mrow></mfrac></mrow><mo>)</mo></mrow></mrow><mo>-</mo><mrow><mfrac><mrow><mi>l</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mi>r</mi><mn>2</mn></msup></mfrac><mo>\u2062</mo><msub><mi>T</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nThe pseudo-vacuum boundary condition (\\ref{eq:bcb}) in terms of the functions $T_{lm}$ and $S_{lm}$ is the following:\n\n", "itemtype": "equation", "pos": 81867, "prevtext": "\n\n", "index": 129, "text": "\\begin{equation}\n \\frac{\\partial S_{lm}}{\\partial t} = \\frac{1}{r^2}\\frac{\\partial}{\\partial r} \\left(r^2 \\frac{\\partial S_{lm}}{\\partial r} \\right) - \\frac{l(l+1)}{r^2}S_{lm}.  \\label{eq:pol_eq}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E65.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial S_{lm}}{\\partial t}=\\frac{1}{r^{2}}\\frac{\\partial}{\\partial r}%&#10;\\left(r^{2}\\frac{\\partial S_{lm}}{\\partial r}\\right)-\\frac{l(l+1)}{r^{2}}S_{lm}.\" display=\"block\"><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msub><mi>S</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>t</mi></mrow></mfrac><mo>=</mo><mrow><mrow><mfrac><mn>1</mn><msup><mi>r</mi><mn>2</mn></msup></mfrac><mo>\u2062</mo><mfrac><mo>\u2202</mo><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>r</mi></mrow></mfrac><mo>\u2062</mo><mrow><mo>(</mo><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>\u2062</mo><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><msub><mi>S</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>r</mi></mrow></mfrac></mrow><mo>)</mo></mrow></mrow><mo>-</mo><mrow><mfrac><mrow><mi>l</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><msup><mi>r</mi><mn>2</mn></msup></mfrac><mo>\u2062</mo><msub><mi>S</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\n\n", "itemtype": "equation", "pos": 82196, "prevtext": "\nThe pseudo-vacuum boundary condition (\\ref{eq:bcb}) in terms of the functions $T_{lm}$ and $S_{lm}$ is the following:\n\n", "index": 131, "text": "\\begin{equation}\nT_{lm} = 0,  \\label{eq:tor_bc}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E66.m1\" class=\"ltx_Math\" alttext=\"T_{lm}=0,\" display=\"block\"><mrow><mrow><msub><mi>T</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nWe now look for solutions of (\\ref{eq:tor_eq})-(\\ref{eq:tor_bc}) and (\\ref{eq:pol_eq})-(\\ref{eq:pol_bc}) of the form $T_{lm},S_{lm} = f(r)\\exp(-\\sigma t)$. It follows that $T_{lm},S_{lm}$ are of the form:\n\n", "itemtype": "equation", "pos": 82259, "prevtext": "\n\n", "index": 133, "text": "\\begin{equation}\n\\frac{\\partial(r S_{lm})}{\\partial r} = 0.   \\label{eq:pol_bc}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E67.m1\" class=\"ltx_Math\" alttext=\"\\frac{\\partial(rS_{lm})}{\\partial r}=0.\" display=\"block\"><mrow><mrow><mfrac><mrow><mo>\u2202</mo><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>r</mi><mo>\u2062</mo><msub><mi>S</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mrow><mo>\u2202</mo><mo>\u2061</mo><mi>r</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01810.tex", "nexttext": "\nwhere $\\sigma=k^2$ and $j_{l}$ and $y_{l}$ refer to the spherical Bessel and Neumann functions, respectively. In the case of a full sphere geometry, the coefficient $\\beta$ should be zero so that the solution remains regular at the origin $r=0$. The boundary condition at $r=1$ then quantizes the possible values for $k$, and thus for the decay rates $\\sigma$. The slowest toroidal decay rate corresponds to the lowest zero of $j_l$; this gives $k=4.493$ and $\\sigma=20.19$. Similary, we find $\\sigma=7.5279$ for the slowest decaying poloidal eigenmode. \n\nThe eigenvalues and eigenmodes for a spherical shell geometry ($r_i=7/13, r_o=20/13$) are found by imposing the boundary conditions (\\ref{eq:tor_bc})-(\\ref{eq:pol_bc}) at $r=r_i$ and $r=r_o$. For the toroidal mode this gives the conditions:\n\\begin{eqnarray}\n\\alpha j_l(kr_i) + \\beta y_l(kr_i) & = & 0, \\\\\n\\alpha j_l(kr_o) + \\beta y_l(kr_o) & = & 0.\n\\end{eqnarray}\nThis homogeneous system of two equations for $\\alpha,\\beta$ has only non-trivial solutions if the determinant of the coefficient matrix is zero, that is, if $j_l(kr_i) y_l(kr_o)- y_l(kr_i) j_l(kr_o)=0$. The roots of this transcendent equation yield admissible values for $k$ (and thus $\\sigma$). The lowest zero is $k=3.261$, and the toroidal eigenmode with the slowest decay has a decay rate $\\sigma=k^2=10.634$. Along similar lines, we find $\\sigma=2.227904$ for the poloidal mode.\n\\bibliographystyle{gji}\n\\nocite{*}\n\\bibliography{GJI}\n\n", "itemtype": "equation", "pos": 82559, "prevtext": "\nWe now look for solutions of (\\ref{eq:tor_eq})-(\\ref{eq:tor_bc}) and (\\ref{eq:pol_eq})-(\\ref{eq:pol_bc}) of the form $T_{lm},S_{lm} = f(r)\\exp(-\\sigma t)$. It follows that $T_{lm},S_{lm}$ are of the form:\n\n", "index": 135, "text": "\\begin{equation}\nT_{lm},S_{lm} = \\alpha j_{l}(kr) + \\beta y_l(kr),\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E68.m1\" class=\"ltx_Math\" alttext=\"T_{lm},S_{lm}=\\alpha j_{l}(kr)+\\beta y_{l}(kr),\" display=\"block\"><mrow><mrow><mrow><msub><mi>T</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub><mo>,</mo><msub><mi>S</mi><mrow><mi>l</mi><mo>\u2062</mo><mi>m</mi></mrow></msub></mrow><mo>=</mo><mrow><mrow><mi>\u03b1</mi><mo>\u2062</mo><msub><mi>j</mi><mi>l</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>\u2062</mo><mi>r</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>+</mo><mrow><mi>\u03b2</mi><mo>\u2062</mo><msub><mi>y</mi><mi>l</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>k</mi><mo>\u2062</mo><mi>r</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}]