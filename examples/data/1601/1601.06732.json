[{"file": "1601.06732.tex", "nexttext": "\n\nLabels can then be described as $L_i = <\\!\\!P_i, d(x, y), \\delta_{{\\varepsilon}_i}\\!\\!>$.\n\n\\section{A New Model of Concept Composition}\n\\label{sec:cmp}\nExperiments in \\cite{hamp1987} propose that human concept combination can (roughly) be modelled as a weighted sum of attributes such as `has feathers', `talks' (for the concept `Bird'). These attributes differ from quality dimensions in conceptual spaces: they tend to be binary, complex, and multidimensional. We therefore view each attribute as a label in a conceptual space $\\Omega_i$ and combine these labels in a binary space $\\{0,1\\}^n$ illustrated in figure \\ref{fig:binspace}, where a conjunction of such labels $\\tilde{\\alpha} = \\bigwedge_{i = 1}^n\\pm L_i$ maps to a binary vector $\\vec{x}_\\alpha$ taking value $1$ for positive labels $L_i$ and $0$ for negated labels $\\neg L_i$. We treat membership in $\\tilde{\\alpha}$ in the binary space within the label semantics framework. So $\\tilde{\\alpha}$ is described in the binary space by $\\tilde{\\alpha}=<\\!\\!\\vec{x}_\\alpha, d(\\vec{x}, \\vec{x}'), \\delta\\!\\!>$ as before.\n\\begin{figure}[htbp]\n\\tiny\n  \\centering  \n    \\caption{Combining labels in a binary space}\n\\label{fig:binspace}\n\\end{figure}\n\nWe define  a distance metric in the binary space $\\{0,1\\}^n$ as:\n\\begin{dfn}{Weighted Hamming Distance}\\\\\nFor $\\vec{\\lambda} \\in (\\mathbb{R}^+)^n$, $\\forall \\vec{x},\\vec{x}^\\prime \\in \\{0,1\\}^n$, where $(\\cdot)$ is the scalar product, \n", "itemtype": "equation", "pos": 2875, "prevtext": "\n\n\\newtheorem{dfn}{Definition}\n\\newtheorem{lem}[dfn]{Lemma}\n\\newtheorem{prop}[dfn]{Proposition}\n\\newtheorem{thm}[dfn]{Theorem}\n\\newtheorem{cor}[dfn]{Corollary}\n\\newtheorem {exa}[dfn]{Example}\n\n\\maketitle\n\\begin{abstract}\n This thesis investigates the generation of new concepts from combinations of existing concepts as a language evolves. We give a method for combining concepts, and will be investigating the utility of composite concepts in language evolution and thence the utility of concept generation.\n\\end{abstract}\n\n\\section{Introduction}\nHumans are skilled at making sense of novel combinations of concepts, so to create artifical languages for implementation in AI systems, we must model this ability. Standard approaches to combining concepts, e.g. fuzzy set theory, have been shown to be inadequate \\cite{osh1981}. Composite labels frequently have `emergent attributes' \\cite{hamp1987} which cannot be explicated by decomposing the label into its constituent parts. We argue that in this case a new concept is generated. This project aims to determine conditions for such concept generation, using multi-agent models of language evolution.\n\n\\subsection{Thesis Outline}\nThe project divides into three parts. Firstly, we have developed a model of concept combination within the label semantics framework as given in \\cite{lawry2009}. The model is inspired by and reflects results in \\cite{hamp1987}, in which membership in a composite concept can be rendered as the weighted sum of memberships in individual concepts. \n\nSecondly, we must show that compositionality can evolve within a population of interacting agents. Preliminary work in this area examines the ability of a population of agents to converge to a shared set of dimension weights.\n\nThirdly, we will investigate the generation of new unitary concepts from existing composite concepts, building further upon the multi-agent model. \n  \n\\section{Background}\nThis work is based on the label semantics framework \\cite{lawry2004,lawry2009}, together with prototype theory \\cite{rosch}, where membership in a concept is based on proximity to a prototype, and conceptual spaces \\cite{gard2004}. The latter views concepts as regions of a space made up of quality dimensions and equipped with a distance metric, for example the RGB colour space.\n\nLabel semantics proposes that agents use a set of labels $LA = \\{L_1, ..., L_n\\}$ to describe a conceptual space $\\Omega$ with distance metric $d(x, y)$. Labels $L_i$ are associated with prototypes $P_i \\subseteq \\Omega$ and uncertain thresholds ${\\varepsilon}_i$, drawn from probability distributions $\\delta_{{\\varepsilon}_i}$. The threshold ${\\varepsilon}_i$ captures the notion that an element $x \\in \\Omega$ is sufficiently close to $P_i$  to be labelled $L_i$. The appropriateness of a label $L_i$ to describe $x$ is quantified by $\\mu_{L_i}(x)$, given by \n\n", "index": 1, "text": "\n\\[\n\\mu_{L_i}(x) = P(d(x, P_i) \\leq {\\varepsilon}_i) = \\int_{d(x, P_i)}^\\infty  \\delta_{{\\varepsilon}_i}({\\varepsilon}_i)\\mathrm{d}{\\varepsilon}_i \n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\mu_{L_{i}}(x)=P(d(x,P_{i})\\leq{\\varepsilon}_{i})=\\int_{d(x,P_{i})}^{\\infty}%&#10;\\delta_{{\\varepsilon}_{i}}({\\varepsilon}_{i})\\mathrm{d}{\\varepsilon}_{i}\" display=\"block\"><mrow><msub><mi>\u03bc</mi><msub><mi>L</mi><mi>i</mi></msub></msub><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mi>P</mi><mrow><mo stretchy=\"false\">(</mo><mi>d</mi><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><msub><mi>P</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>\u2264</mo><msub><mi>\u03b5</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><msubsup><mo largeop=\"true\" symmetric=\"true\">\u222b</mo><mrow><mi>d</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>,</mo><msub><mi>P</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mi mathvariant=\"normal\">\u221e</mi></msubsup><msub><mi>\u03b4</mi><msub><mi>\u03b5</mi><mi>i</mi></msub></msub><mrow><mo stretchy=\"false\">(</mo><msub><mi>\u03b5</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><mi mathvariant=\"normal\">d</mi><msub><mi>\u03b5</mi><mi>i</mi></msub></mrow></math>", "type": "latex"}, {"file": "1601.06732.tex", "nexttext": "\n\\end{dfn}\n\n\\begin{thm}\n\\label{sumthm}\nLet $\\alpha=\\bigwedge_{i=1}^n \\pm L_i$ and $\\lambda_T = \\sum_{i = 1}^n \\lambda_i$. Let ${\\varepsilon} \\sim U(0,\\lambda_T)$, $d = H_{\\vec{\\lambda}}$. Then:\n\n", "itemtype": "equation", "pos": 4466, "prevtext": "\n\nLabels can then be described as $L_i = <\\!\\!P_i, d(x, y), \\delta_{{\\varepsilon}_i}\\!\\!>$.\n\n\\section{A New Model of Concept Composition}\n\\label{sec:cmp}\nExperiments in \\cite{hamp1987} propose that human concept combination can (roughly) be modelled as a weighted sum of attributes such as `has feathers', `talks' (for the concept `Bird'). These attributes differ from quality dimensions in conceptual spaces: they tend to be binary, complex, and multidimensional. We therefore view each attribute as a label in a conceptual space $\\Omega_i$ and combine these labels in a binary space $\\{0,1\\}^n$ illustrated in figure \\ref{fig:binspace}, where a conjunction of such labels $\\tilde{\\alpha} = \\bigwedge_{i = 1}^n\\pm L_i$ maps to a binary vector $\\vec{x}_\\alpha$ taking value $1$ for positive labels $L_i$ and $0$ for negated labels $\\neg L_i$. We treat membership in $\\tilde{\\alpha}$ in the binary space within the label semantics framework. So $\\tilde{\\alpha}$ is described in the binary space by $\\tilde{\\alpha}=<\\!\\!\\vec{x}_\\alpha, d(\\vec{x}, \\vec{x}'), \\delta\\!\\!>$ as before.\n\\begin{figure}[htbp]\n\\tiny\n  \\centering  \n    \\caption{Combining labels in a binary space}\n\\label{fig:binspace}\n\\end{figure}\n\nWe define  a distance metric in the binary space $\\{0,1\\}^n$ as:\n\\begin{dfn}{Weighted Hamming Distance}\\\\\nFor $\\vec{\\lambda} \\in (\\mathbb{R}^+)^n$, $\\forall \\vec{x},\\vec{x}^\\prime \\in \\{0,1\\}^n$, where $(\\cdot)$ is the scalar product, \n", "index": 3, "text": "\n\\[\nH_{\\vec{\\lambda}}(\\vec{x},\\vec{x}^\\prime)= \\vec{\\lambda}\\cdot|\\vec{x}-\\vec{x}^\\prime|\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"H_{\\vec{\\lambda}}(\\vec{x},\\vec{x}^{\\prime})=\\vec{\\lambda}\\cdot|\\vec{x}-\\vec{x}%&#10;^{\\prime}|\" display=\"block\"><mrow><mrow><msub><mi>H</mi><mover accent=\"true\"><mi>\u03bb</mi><mo stretchy=\"false\">\u2192</mo></mover></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo stretchy=\"false\">\u2192</mo></mover><mo>,</mo><msup><mover accent=\"true\"><mi>x</mi><mo stretchy=\"false\">\u2192</mo></mover><mo>\u2032</mo></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mover accent=\"true\"><mi>\u03bb</mi><mo stretchy=\"false\">\u2192</mo></mover><mo>\u22c5</mo><mrow><mo stretchy=\"false\">|</mo><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"false\">\u2192</mo></mover><mo>-</mo><msup><mover accent=\"true\"><mi>x</mi><mo stretchy=\"false\">\u2192</mo></mover><mo>\u2032</mo></msup></mrow><mo stretchy=\"false\">|</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06732.tex", "nexttext": "\n\\end{thm}\n\nCompound concepts $\\tilde{\\theta}, \\tilde{\\varphi}$ may be combined in a higher level binary space.\nThen $ \\tilde{\\theta}\\bullet \\tilde{\\varphi}$ can be expressed in the continuous space as a weighted sum of $\\tilde{\\theta}$ and $\\tilde{\\varphi}$.\n\\begin{thm}\n\\label{conjthm}\n Let $\\tilde{\\theta} \\bullet \\tilde{\\varphi} = <\\!\\!\\{(1,1)\\}, H_{\\vec{w}}, \\delta\\!\\!>$. Then $\\mu_{\\tilde{\\theta}\\bullet\\tilde{\\varphi}}(\\vec{Y}) = \\sum_{i=1}^n (\\frac{w_1 \\lambda_{\\varphi_T} \\lambda_{\\theta_i} + w_2 \\lambda_{\\theta_T} \\lambda_{\\varphi_i}}{w_T \\lambda_{\\theta_T} \\lambda_{\\varphi_T}}) \\mu_{\\pm L_i}(\\vec{Y})$.\n\\end{thm}\n\nWe have therefore shown that combining labels in a weighted binary space leads naturally to the creation of composite and compound concepts as weighted sums of individual labels, reflecting results in \\cite{hamp1987}. We have further characterised notions of necessary and impossible attributes using ideas from possibility theory.\n\n\\section{Convergence of Dimension Weights Across a Population}\n\\label{sec:conv}\nWe investigate how a population of agents in a multi-agent simulation playing a series of language games might converge to a shared set of dimension weights. Agents with equal labels $L_1 = L_2 = <\\!\\!1, d, U[0,1]\\!\\!>\\in \\Omega_1 = \\Omega_2 = [0, 1]$ ($d$ is Euclidean distance), and randomly initiated weights $\\lambda \\in [0,1]$ engage in a series of dialogues about elements in the conceptual space, adjusting their weights after each dialogue is completed. At each timestep, speaker agents make assertions $\\alpha_i = \\pm L_1 \\wedge \\pm L_2$  about elements $\\vec{x} \\in \\Omega_1 \\times \\Omega_2$ which maximise $\\mu_{\\alpha_i}(\\vec{x}) = \\lambda \\mu_{L_1}(x_1) + (1 - \\lambda) \\mu_{L_2}(x_2)$.\n\nThe listener agent assesses $\\alpha_i$ against its own label set. If $\\mu_{\\alpha_i}(x) \\leq w$, the reliability of the speaker agent, the listener agent updates its label set.\n\nThe update consists in incrementing the dimension weight $\\lambda$ towards a value $A$, so that $\\lambda_{t+1} = \\lambda_t + h(A - \\lambda_t)$ where $h = 10^{-3}$ and\n", "itemtype": "equation", "pos": 4752, "prevtext": "\n\\end{dfn}\n\n\\begin{thm}\n\\label{sumthm}\nLet $\\alpha=\\bigwedge_{i=1}^n \\pm L_i$ and $\\lambda_T = \\sum_{i = 1}^n \\lambda_i$. Let ${\\varepsilon} \\sim U(0,\\lambda_T)$, $d = H_{\\vec{\\lambda}}$. Then:\n\n", "index": 5, "text": "\\begin{gather*}\n\\mu_{\\tilde{\\alpha}}(\\vec{Y})=\\sum_{i=1}^n \\frac{\\lambda_i}{\\lambda_T} \\mu_{\\pm L_i}(Y_i)\n\\end{gather*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\displaystyle\\mu_{\\tilde{\\alpha}}(\\vec{Y})=\\sum_{i=1}^{n}\\frac{\\lambda_{i}}{%&#10;\\lambda_{T}}\\mu_{\\pm L_{i}}(Y_{i})\" display=\"block\"><mrow><mrow><msub><mi>\u03bc</mi><mover accent=\"true\"><mi>\u03b1</mi><mo stretchy=\"false\">~</mo></mover></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>Y</mi><mo stretchy=\"false\">\u2192</mo></mover><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mfrac><msub><mi>\u03bb</mi><mi>i</mi></msub><msub><mi>\u03bb</mi><mi>T</mi></msub></mfrac><mo>\u2062</mo><msub><mi>\u03bc</mi><mrow><mo>\u00b1</mo><msub><mi>L</mi><mi>i</mi></msub></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.06732.tex", "nexttext": "\n\nThis is the quantity that satisfies $\\mu_{\\alpha_i}(x) = w$. If $A < 0$ (or $A > 1$) we set $A = 0$ (or $A = 1$).\n\nThe convergence across the population is measured by the standard deviation (SD) of the $\\lambda$ across the population. \n\nFigure \\ref{fig:cmpeq} shows the results of two sets of simulations across varying values of $w$. The two sets of simulations have distinct distributions of elements encountered within the space.  When $w$ is 0.5 or below, the agents do not converge to shared dimension weights (not shown). When $w > 0.5$, agents do converge to shared dimension weights: SD is low. The weights converged to depend both on the reliability, $w$, of each agent, and the distribution of elements in the conceptual space.\n\n \\begin{figure} [htbp]\n         \\centering\n         \\begin{subfigure}[t]{0.2\\textwidth}\n                 \\centering\n                 \\includegraphics[width=\\textwidth]{cmpeq1.pdf}\n                 \\caption{$x_1 \\sim U[0,1]$, $x_2 \\sim U[0,0.5]$. $\\lambda$ converges to 0.5 for all values of $w$}\n                 \\label{fig:cmpeq1}\n         \\end{subfigure}\n         ~ \n         \\begin{subfigure}[t]{0.2\\textwidth}\n                 \\centering\n                 \\includegraphics[width=\\textwidth]{cmpeq075.pdf}\n                 \\caption{$x_1 \\sim U[0.25,0.75]$, $x_2 \\sim U[0,0.5]$. $\\lambda$ converges to varying values.}\n                 \\label{fig:cmpeq075}\n         \\end{subfigure}\n \t\\caption{Mean SD and $\\lambda$ at time $t = 2000$ for different values of $w$. Each point averages 25 simulations run with 10 agents.}\n \t\\label{fig:cmpeq}\n \\end{figure}\n\nWhen $w = 1$ we can predict the value to which $\\lambda$ will converge. Consider the quantity $A-\\lambda_t$ which determines whether the update is positive or negative at each step.\n\\begin{dfn}\nA \\emph{positive region} $R^+ \\subset \\Omega$ is a set of points $R^+ =\\{\\vec{x} \\in \\Omega: A - \\lambda_t \\geq 0\\}$\n\\end{dfn}\n\n\\begin{thm}\nLet $p^+$ denote the probability of a point $\\vec{x} \\in \\Omega$ falling in a positive region and let $w = 1$ across the population. Then the expected value of $\\lambda$ converges to $p^+$.\n\\end{thm}\n\n\\section{Further Work}\nWe are currently working on analytical results to predict the value of $\\lambda$ to which agents converge. Under certain circumstances, such as the case where $w = 1$, or with an altered updating model, analytic results are possible. We will extend this work to look at the utility of using conjunctive assertions within these simulations.\n\nWork in the third year will focus on examining how new concepts might be generated from the combination of existing ones. We will build on the language evolution model currently in development.\n\n\\bibliographystyle{named}\n\\bibliography{ijcai13}\n\n\n", "itemtype": "equation", "pos": 6957, "prevtext": "\n\\end{thm}\n\nCompound concepts $\\tilde{\\theta}, \\tilde{\\varphi}$ may be combined in a higher level binary space.\nThen $ \\tilde{\\theta}\\bullet \\tilde{\\varphi}$ can be expressed in the continuous space as a weighted sum of $\\tilde{\\theta}$ and $\\tilde{\\varphi}$.\n\\begin{thm}\n\\label{conjthm}\n Let $\\tilde{\\theta} \\bullet \\tilde{\\varphi} = <\\!\\!\\{(1,1)\\}, H_{\\vec{w}}, \\delta\\!\\!>$. Then $\\mu_{\\tilde{\\theta}\\bullet\\tilde{\\varphi}}(\\vec{Y}) = \\sum_{i=1}^n (\\frac{w_1 \\lambda_{\\varphi_T} \\lambda_{\\theta_i} + w_2 \\lambda_{\\theta_T} \\lambda_{\\varphi_i}}{w_T \\lambda_{\\theta_T} \\lambda_{\\varphi_T}}) \\mu_{\\pm L_i}(\\vec{Y})$.\n\\end{thm}\n\nWe have therefore shown that combining labels in a weighted binary space leads naturally to the creation of composite and compound concepts as weighted sums of individual labels, reflecting results in \\cite{hamp1987}. We have further characterised notions of necessary and impossible attributes using ideas from possibility theory.\n\n\\section{Convergence of Dimension Weights Across a Population}\n\\label{sec:conv}\nWe investigate how a population of agents in a multi-agent simulation playing a series of language games might converge to a shared set of dimension weights. Agents with equal labels $L_1 = L_2 = <\\!\\!1, d, U[0,1]\\!\\!>\\in \\Omega_1 = \\Omega_2 = [0, 1]$ ($d$ is Euclidean distance), and randomly initiated weights $\\lambda \\in [0,1]$ engage in a series of dialogues about elements in the conceptual space, adjusting their weights after each dialogue is completed. At each timestep, speaker agents make assertions $\\alpha_i = \\pm L_1 \\wedge \\pm L_2$  about elements $\\vec{x} \\in \\Omega_1 \\times \\Omega_2$ which maximise $\\mu_{\\alpha_i}(\\vec{x}) = \\lambda \\mu_{L_1}(x_1) + (1 - \\lambda) \\mu_{L_2}(x_2)$.\n\nThe listener agent assesses $\\alpha_i$ against its own label set. If $\\mu_{\\alpha_i}(x) \\leq w$, the reliability of the speaker agent, the listener agent updates its label set.\n\nThe update consists in incrementing the dimension weight $\\lambda$ towards a value $A$, so that $\\lambda_{t+1} = \\lambda_t + h(A - \\lambda_t)$ where $h = 10^{-3}$ and\n", "index": 7, "text": "\n\\[\nA = \\frac{w - \\mu_{L_2}(x_2)}{\\mu_{\\pm L_1}(x_1) - \\mu_{\\pm L_2}(x_2)}\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"A=\\frac{w-\\mu_{L_{2}}(x_{2})}{\\mu_{\\pm L_{1}}(x_{1})-\\mu_{\\pm L_{2}}(x_{2})}\" display=\"block\"><mrow><mi>A</mi><mo>=</mo><mfrac><mrow><mi>w</mi><mo>-</mo><mrow><msub><mi>\u03bc</mi><msub><mi>L</mi><mn>2</mn></msub></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mrow><mrow><msub><mi>\u03bc</mi><mrow><mo>\u00b1</mo><msub><mi>L</mi><mn>1</mn></msub></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow><mo>-</mo><mrow><msub><mi>\u03bc</mi><mrow><mo>\u00b1</mo><msub><mi>L</mi><mn>2</mn></msub></mrow></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mfrac></mrow></math>", "type": "latex"}]