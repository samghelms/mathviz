[{"file": "1601.01079.tex", "nexttext": "\nThe equations hold on the condition that $\\textbf{f}^{(i)}$ and $\\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2$ are in the underlying domain $\\mathbb{Z}_{n}$ of Paillier's encryption. That means a visual feature vector  $\\textbf{f}\\in \\mathbb{R}^t$ must be transformed into $\\widetilde{\\textbf{f}}\\in \\mathbb{Z}_{n}^t$. But the authors \\cite{L14} have not specified this process.\n\nBy the way, there is a typo in the description of the decrypting equation of Paillier's cryptosystem (see Ref.\\cite{L14}, page 128). It should be\n$m=\\left(\\frac{c^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right)/\\left(\\frac{g^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right) \\,\\mbox{mod}\\,  n, $\nnot\n$m=\\left(\\frac{c^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right)/\\left(\\frac{g^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right) \\,\\mbox{mod}\\,  n^2 $.\n\n\\item[(2)] \\emph{In the scheme 1, both the client and the server do not make use of  the additive homomorphic property of Paillier's encryption at all}. The  related computations for  the client are  \n", "itemtype": "equation", "pos": 6845, "prevtext": "\n\n \\title{A Note  on ``Confidentiality-Preserving Image Search:\nA Comparative Study Between Homomorphic\nEncryption and Distance-Preserving\nRandomization\"}\n\n \\author{Zhengjun Cao$^1$ and  Lihua Liu$^2$}\n\n     \\footnotetext{$^1$Department of Mathematics, Shanghai University, Shanghai,\n  China.  \\\\\n     $^2$Department of Mathematics, Shanghai Maritime University,\n  China.\n   \\textsf{liulh@shmtu.edu.cn}\n    }\n\n\n \\date{}\\maketitle\n\n\\begin{quotation}\n \\textbf{Abstract}. Recently, Lu et al. have proposed two image search schemes based on additive homomorphic encryption [IEEE Access, 2 (2014), 125-141].  We remark that both two schemes are flawed because:  (1) the first scheme does not make use of the additive homomorphic property at all;  (2) the additive homomorphic encryption in the second scheme is unnecessary and can be replaced by a more efficient symmetric key encryption.\n\n  \\textbf{Keywords.}  Cloud computing,  confidentiality-preserving image search, additive homomorphic encryption, symmetric key encryption.\n \\end{quotation}\n\n\n\\section{Introduction}\n\nRecently, Lu et al. \\cite{L14} have discussed how existing\nadditive homomorphic encryption can be potentially\nused for image search, and proposed two confidentiality-preserving image search schemes based on Paillier's encryption \\cite{P99}.\nIn the proposed model, a client has many images who wants to store the image data online for convenient data access anywhere anytime. The client\n has to encrypt each image and its features and upload the encrypted data to a cloud server.\nIn this note, we remark that the Lu et al.'s schemes are flawed.\n\\section{Review of the Lu et al.'s schemes}\n\nIn the schemes \\cite{L14}, the features of each image are encrypted by any additively homomorphic encryption such as Paillier's cryptosystem \\cite{P99}, which can be described as follows.  Pick an RSA modulus $n=pq$. Set $\\lambda = \\mbox{lcm} (p-1, q-1)$.\n Select $g\\in \\mathbb{Z}^*_{n^2}$ such that  $n\\,|\\,\\mbox{ord}_{n^2}(g)$.\n  Publish $n, g$ and keep $\\lambda$ in secret.   For $m\\in \\mathbb{Z}_{n}$, pick $r\\in \\mathbb{Z}_{n}$,  compute the ciphertext\n  $c=\\mathcal{E}(m)=g^mr^n \\,\\mbox{mod}\\,  n^2.$  Recover $m=\\mathcal{D}(c)=\\left(\\frac{c^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right)/\\left(\\frac{g^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right) \\,\\mbox{mod}\\,  n $.\n\n  Denote the encrypting  function and decrypting function of AES by $E(\\cdot)$ and $D(\\cdot)$, and that of Paillier's cryptosystem  by $\\mathcal{E}(\\cdot)$ and $\\mathcal{D}(\\cdot)$, respectively.  See Table 1 and Table  2  for the details of the two image search schemes.\n\n\\begin{center}\n \\small \\normalsize  \\parskip 0mm\n\nTable 1: The Lu et al.'s scheme 1  \\vspace*{3mm}\n\n \\begin{tabular}{|lcl|}\n   \\hline\n   \\fbox{Client} & & \\fbox{Server} \\\\ \\hline\n Encrypt the image $P^{(i)}$ and its  && \\\\\n feature vector $\\textbf{f}^{(i)}\\in \\mathbb{R}^t$ as & & \\\\\n $\\mathcal{E}(\\textbf{f}^{(i)})=(\\mathcal{E}(f^{(i)}_1), \\cdots, \\mathcal{E}(f^{(i)}_t))$  && Store the encrypted\\\\\nand $E(P^{(i)})$. Upload them. &$ \\xrightarrow[i=1, \\cdots, N]{\\{i, \\mathcal{E}(\\textbf{f}^{(i)}), E(P^{(i)})\\}}$& images and features. \\\\\n \\hline\nGiven an image $ Q$ and  its && \\\\\n feature vector $\\textbf{q}$, ask for&& \\\\\n  all the encrypted features. &$\\xrightarrow{Request}$& \\\\\n  &$\\xleftarrow[i=1, \\cdots, N]{\\{i, \\mathcal{E}(\\textbf{f}^{(i)})\\}}$ &  Return all encrypted features.  \\\\\n Compute  $\\textbf{f}^{(i)}= \\mathcal{D}(\\mathcal{E}(\\textbf{f}^{(i)}))$ and && \\\\\n  the $L_2$ distance  $d_i=\\parallel\\textbf{f}^{(i)}-\\textbf{q} \\parallel$, && \\\\\n   $i=1, \\cdots, N$. Send && \\\\\n  $\\mathcal{I}=\\{j\\,|\\, d_j\\leq \\lambda \\}$, where $\\lambda $ is && \\\\\n  a fault-tolerant parameter. &$\\xrightarrow{\\  \\mathcal{I} \\ }$&  \\\\\n Recover all  & $\\xleftarrow[k\\in \\mathcal{I}]{\\{E(P^{(k)})\\}}$ & Return all $E(P^{(k)}), k\\in \\mathcal{I}.$   \\\\\n  $P^{(k)}=D(E(P^{(k)})), k\\in \\mathcal{I}.$   && \\\\  \\hline\n \\end{tabular}\\end{center}\n\n\n\n\\begin{center}\n  \\small  \\normalsize \\parskip 0mm\n\nTable 2: The Lu et al.'s scheme 2 \\vspace*{3mm}\n\n \\begin{tabular}{|lcl|}\n   \\hline\n   \\fbox{Client} & & \\fbox{Server} \\\\ \\hline\n Encrypt the image $P^{(i)}$ and its  && \\\\\n feature vector $\\textbf{f}^{(i)}\\in \\mathbb{R}^t$ as & & \\\\\n $\\mathcal{E}(\\textbf{f}^{(i)})=(\\mathcal{E}(f^{(i)}_1), \\cdots, \\mathcal{E}(f^{(i)}_t))$  && \\\\\nand $E(P^{(i)})$. Compute && Store the encrypted\\\\\n$\\chi_i=\\mathcal{E}\\left(\\Sigma_{\\ell=1}^{t}(f^{(i)}_{\\ell})^2\\right) $.  Upload them.\n &$ \\xrightarrow[i=1, \\cdots, N]{\\{i, \\chi_i, \\mathcal{E}(\\textbf{f}^{(i)}), E(P^{(i)})\\}}$& images and features. \\\\\n \\hline\nGiven an image $ Q$ and   && Compute \\\\\nits feature vector $\\textbf{q}$, && $h_i= \\left(\\prod_{\\ell=1}^{t} (\\mathcal{E}(f^{(i)}_{\\ell}))^{q_{\\ell}}\\right)^{-2}  $   \\\\\n  send  $\\textbf{q}$ to the server. &$\\xrightarrow{\\ \\textbf{q}\\ }$&  $\\cdot\\mathcal{E}\\left(\\Sigma_{\\ell=1}^{t}q_{\\ell}^2\\right) \\cdot\\chi_i $, \\\\\n  &&  $i=1, \\cdots, N. $ \\\\\n   Compute  $d_i= \\mathcal{D}(h_i)$,   &$\\xleftarrow{h_i, i=1, \\cdots, N}$& Send them back. \\\\\n       $i=1, \\cdots, N$. Randomly      && \\\\\n     pick a set $\\widehat{\\mathcal{I}}\\subset \\{1, \\cdots, N\\}$  && \\\\\n     of an appropriate size. && \\\\\n   Set $\\mathcal{I}'=\\widehat{\\mathcal{I}}\\bigcup \\mathcal{I}$ where && \\\\\n $\\mathcal{I}=\\{j\\,|\\, d_j\\leq \\lambda, 1\\leq j\\leq N \\}$, && \\\\\n $\\lambda $ is a fault-tolerant parameter.\n  &$\\xrightarrow{\\  \\mathcal{I}' \\ }$& \\\\\n Recover all images & $\\xleftarrow[k\\in \\mathcal{I}']{\\{E(P^{(k)})\\}}$ & Return all   $E(P^{(k)}), k\\in \\mathcal{I}'.$   \\\\\n  $P^{(k)}=D(E(P^{(k)})), k\\in \\mathcal{I}.$   && \\\\  \\hline\n \\end{tabular}\\end{center}\n\nNotice that, by the additive homomorphic property of Paillier's encryption, we have\n\\begin{eqnarray*}\n \\mathcal{E}\\left(\\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2\\right)&=& \\mathcal{E}\\left(\\Sigma_{\\ell=1}^{t}(f^{(i)}_{\\ell}-q_{\\ell})^2\\right)\n= \\mathcal{E}\\left(\\Sigma_{\\ell=1}^{t}(f^{(i)}_{\\ell})^2-2\\Sigma_{\\ell=1}^{t}f^{(i)}_{\\ell}q_{\\ell}+\\Sigma_{\\ell=1}^{t}q_{\\ell}^2\\right)\\\\\n  &=& \\mathcal{E}\\left(\\Sigma_{\\ell=1}^{t}(f^{(i)}_{\\ell})^2\\right)\\cdot \\mathcal{E}\\left(-2\\Sigma_{\\ell=1}^{t}f^{(i)}_{\\ell}q_{\\ell}\\right) \\cdot \\mathcal{E}\\left(\\Sigma_{\\ell=1}^{t}q_{\\ell}^2\\right)   \\\\\n   &=& \\chi_i\\cdot\\left(\\prod_{\\ell=1}^{t} (\\mathcal{E}(f^{(i)}_{\\ell}))^{q_{\\ell}}\\right)^{-2} \\cdot  \\mathcal{E}\\left(\\Sigma_{\\ell=1}^{t}q_{\\ell}^2\\right)=h_i,\\\\\n  d_i&=& \\mathcal{D}(h_i)= \\mathcal{D}\\left(\\mathcal{E}( \\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2)\\right)=\\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2.\n  \\end{eqnarray*}\n\n\\section{Analysis of the Lu et al.'s schemes}\n\nWe now show that the Lu et al.'s schemes are flawed.\n\n\\begin{itemize}\n\\item[(1)] \\emph{The authors \\cite{L14} have confused the general arithmetic over the field $\\mathbb{R}$ and the modular arithmetic over the domain $\\mathbb{Z}_{n}$}. In fact, the correctness of the schemes are based on\n\n", "index": 1, "text": "$$\\textbf{f}^{(i)}= \\mathcal{D}(\\mathcal{E}(\\textbf{f}^{(i)})), \\ \\ \\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2=\\mathcal{D}\\left(\\mathcal{E}( \\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2)\\right).$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"\\textbf{f}^{(i)}=\\mathcal{D}(\\mathcal{E}(\\textbf{f}^{(i)})),\\ \\ \\|\\textbf{f}^{%&#10;(i)}-\\textbf{q}\\|^{2}=\\mathcal{D}\\left(\\mathcal{E}(\\|\\textbf{f}^{(i)}-\\textbf{%&#10;q}\\|^{2})\\right).\" display=\"block\"><mrow><mrow><mrow><msup><mtext>\ud835\udc1f</mtext><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\u2130</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mtext>\ud835\udc1f</mtext><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo rspace=\"12.5pt\">,</mo><mrow><msup><mrow><mo>\u2225</mo><mrow><msup><mtext>\ud835\udc1f</mtext><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>-</mo><mtext>\ud835\udc2a</mtext></mrow><mo>\u2225</mo></mrow><mn>2</mn></msup><mo>=</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9f</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\u2130</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mrow><mo>\u2225</mo><mrow><msup><mtext>\ud835\udc1f</mtext><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>-</mo><mtext>\ud835\udc2a</mtext></mrow><mo>\u2225</mo></mrow><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo>)</mo></mrow></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01079.tex", "nexttext": "\n  Actually, the process has no relation to the additive homomorphic property. Thus, in the scheme the Paillier's public key encryption can be reasonably replaced by the more efficient symmetric key encryption  AES.\n\n  It seems that the authors \\cite{L14} have not realized that the computational performance of public-key encryption is inferior to that of\nsymmetric-key encryption.  For example, the authors  wrote \\cite{L14} ``image encryption can be done using state-of-the-art ciphers\nsuch as AES or RSA by treating images as ordinary data\".  We here would like to stress that images should be encrypted by a symmetric key encryption, instead of any public key encryption. In practice, RSA is usually  used for encrypting session keys, not for images. Compared with AES, RSA is fairly inefficient.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \\item[(3)] In the scheme 2, the server has to make use of the additive homomorphic property for computing the encrypted distance $h_i=\\mathcal{E}\\left(\\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2\\right)$. But in such case, the client has still to compute $d_i= \\mathcal{D}(h_i), i=1,\\cdots, N$, which dominate the client's computational cost.  Compared with the revised scheme, we find,  \\emph{the scheme 2 has not truly mitigated the client's computational cost}.  See the Table 3 for the comparisons of the dominated computations for the client in the three schemes.) Apparently, the revised scheme is more efficient because it only needs to perform symmetric key  decryption $N+|\\mathcal{I}|$ times.\n\n      \\begin{center}\n \\small \\normalsize  \\parskip 0mm\n\nTable 3: The dominated computations for the client in the three schemes  \\vspace*{3mm}\n\n     \\begin{tabular}{|l|l|l|}\n   \\hline\n    & Dominated computations & Computational cost  \\\\ \\hline\n  Scheme 1 &  $\\textbf{f}^{(i)}= \\left(\\mathcal{D}(\\mathcal{E}(f_1^{(i)})), \\cdots, \\mathcal{D}(\\mathcal{E}(f_t^{(i)}))\\right),$\n  &   public key  decryption: $tN$ (times)  \\\\\n &\\quad  $i=1, \\cdots, N$. &\\\\\n &  $P^{(k)}=D(E(P^{(k)})), k\\in \\mathcal{I}.$ & symmetric key  decryption: $|\\mathcal{I}|$   \\\\ \\hline\n   Scheme 2 & $d_i= \\mathcal{D}(h_i)$, $i=1, \\cdots, N$.  & public key  decryption: $N$ \\\\\n  &  $P^{(k)}=D(E(P^{(k)})), k\\in \\mathcal{I}.$ & symmetric key  decryption: $|\\mathcal{I}|$\n \\\\ \\hline\n  The revised &  $\\textbf{f}^{(i)}= D(E(\\textbf{f}^{(i)}))$, $i=1, \\cdots, N$. &  \\\\\n  &  $P^{(k)}=D(E(P^{(k)})), k\\in \\mathcal{I}.$  &  symmetric key  decryption: $N+|\\mathcal{I}|$ \\\\  \\hline\n \\end{tabular}\n  \\end{center}\n\n\\end{itemize}\n\\section{Conclusion}\nWe show that the Lu et al.'s schemes for image search are flawed and somewhat misleading. We here want to stress that\nthe computational performance of public-key encryption is inferior to that of\nsymmetric-key encryption. A homomorphic encryption allows anyone to perform some computations on encrypted data, despite not having the secret decryption key. But any computations performed on encrypted data are constrained to the underlying domain (finite domains). The real goal of using modular arithmetic in cryptography is to obscure and  dissipate the redundancies in a plaintext message, not to perform any numerical calculations.\n\n\n\\begin{thebibliography}{4}\n\n  \\normalsize \\small \\parskip 1mm\n\n\\bibitem{L14} W.J. Lu, A. L. Varna and M. Wu, ``Confidentiality-Preserving Image Search:\nA Comparative Study Between Homomorphic Encryption and Distance-Preserving Randomization\", IEEE Access, 2 (2014), 125-141.\n\n\n\\bibitem{P99} P. Paillier, ``Public-Key Cryptosystems Based on Composite Degree Residuosity\nClasses\",  In: Stern, J. (ed.), Proc. of EUROCRYPT 1999, LNCS, vol. 1592, pp. 223-238, 1999.\n\n\n\n\n\\end{thebibliography}\n\n\n\n", "itemtype": "equation", "pos": 8023, "prevtext": "\nThe equations hold on the condition that $\\textbf{f}^{(i)}$ and $\\|\\textbf{f}^{(i)}-\\textbf{q} \\|^2$ are in the underlying domain $\\mathbb{Z}_{n}$ of Paillier's encryption. That means a visual feature vector  $\\textbf{f}\\in \\mathbb{R}^t$ must be transformed into $\\widetilde{\\textbf{f}}\\in \\mathbb{Z}_{n}^t$. But the authors \\cite{L14} have not specified this process.\n\nBy the way, there is a typo in the description of the decrypting equation of Paillier's cryptosystem (see Ref.\\cite{L14}, page 128). It should be\n$m=\\left(\\frac{c^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right)/\\left(\\frac{g^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right) \\,\\mbox{mod}\\,  n, $\nnot\n$m=\\left(\\frac{c^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right)/\\left(\\frac{g^{\\lambda}-1 \\,\\mbox{mod}\\,  n^2}{n}\\right) \\,\\mbox{mod}\\,  n^2 $.\n\n\\item[(2)] \\emph{In the scheme 1, both the client and the server do not make use of  the additive homomorphic property of Paillier's encryption at all}. The  related computations for  the client are  \n", "index": 3, "text": "$$\\textbf{f}^{(i)}= \\mathcal{D}(\\mathcal{E}(\\textbf{f}^{(i)})), \\ i=1, \\cdots, N.$$\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\textbf{f}^{(i)}=\\mathcal{D}(\\mathcal{E}(\\textbf{f}^{(i)})),\\ i=1,\\cdots,N.\" display=\"block\"><mrow><mrow><mrow><msup><mtext>\ud835\udc1f</mtext><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udc9f</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\u2130</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><msup><mtext>\ud835\udc1f</mtext><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo rspace=\"7.5pt\">,</mo><mrow><mi>i</mi><mo>=</mo><mrow><mn>1</mn><mo>,</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>,</mo><mi>N</mi></mrow></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}]