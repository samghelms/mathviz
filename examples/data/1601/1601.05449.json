[{"file": "1601.05449.tex", "nexttext": "\n\nwhere we have used $b$ to represent the base rate component, $K_i$ the influence kernel from individual $i$, $\\ast$ the convolution operation, and $y_i(t)$ the sequence of events emitted by individual $i$ represented as a spike train.\n\nThe function $\\sigma$ is a nonlinear mapping which can be freely chosen within certain constraints;\nthese include that the function must be monotonic and non-negative\n\\cite{Paninski:2004}.\nIf $\\sigma$ is the exponential function, then this has the effect of transforming \\eqref{eqn:lnp} so that the influences combine in multiplicative fashion rather than additive.\nIf $\\sigma$ is the rectifier function $\\max(0, \\cdot)$, this preserves linear additivity except that negative values are clipped away.\nHowever, the rectifier function can be difficult to perform numerical optimisation upon, because a large part of its domain gives zero gradient,\nand often a smooth approximation is used in its place, which we describe shortly.\n\nWithin this simple model, in which animal behaviour is embedded in rather abstract form, it is not immediately clear which nonlinearity should be chosen.\n(Note that the method is rather robust to misspecification, meaning that under mild conditions it yields consistent kernel estimates even if the wrong link function is used \\cite[Section 5]{Paninski:2004}.)\nHence we chose to use these simple nonlinearities and use model comparison to choose between additive and multiplicative models, as was done in \\cite{Pillow:2008}.\nIn early tests we found that the strict rectifier function often failed in optimisation, and so in its place we used the smooth \\textit{softplus} function\n\n\n", "itemtype": "equation", "pos": 50435, "prevtext": "\n\\vspace*{0.35in}\n\n\\begin{flushleft}\n{\\Large\n\n\\textbf\\newline{Detailed temporal structure of communication networks in groups of songbirds}\n}\n\\newline\n\\\\\nDan Stowell\\textsuperscript{1*},\nLisa Gill\\textsuperscript{2},\nDavid Clayton\\textsuperscript{3}\n\\\\\n\\bigskip\n\\bf{1} Centre for Digital Music, Queen Mary University of London, UK\n\\\\\n\\bf{2} Max Planck Institute for Ornithology, Seewiesen, Germany\n\\\\\n\\bf{3} School of Biological and Chemical Sciences, Queen Mary University of London, UK\n\\\\\n\\bigskip\n\n* dan.stowell@qmul.ac.uk\n\n\\end{flushleft}\n\n\\section*{Abstract}\nAnimals in groups often exchange calls, in patterns whose temporal structure\nmay be influenced by contextual factors such as physical location and the social network structure of the group.\nWe introduce a model-based analysis for temporal patterns of animal call timing,\noriginally developed for networks of firing neurons.\nThis has advantages over cross-correlation analysis in that it can correctly handle common-cause confounds\nand provides a generative model of call patterns with explicit parameters for the influences between individuals.\nIt also has advantages over standard Markovian analysis in that it incorporates detailed temporal interactions which affect timing as well as sequencing of calls.\nFurther, a fitted model can be used to generate novel synthetic call sequences.\nWe apply the method to calls recorded from groups of domesticated zebra finch (\\textit{Taenopyggia guttata}) individuals.\nWe find that the communication network in these groups has stable structure that persists from one day to the next,\nand that ``kernels'' reflecting the temporal range of influence have a characteristic structure for a calling individual's effect on itself, its partner, and on others in the group.\nWe further find characteristic patterns of influences by call type as well as by individual.\n\n\n\\vspace{2cm}\n\n\\textbf{Keywords:}\nanimal communication;\nPoisson process;\npoint process;\n\\newline\nlinear-nonlinear Poisson;\ncommunication network;\nsocial network analysis.\n\n\n\n\n\n\n\\section*{Introduction}\n\\label{sec:intro}\n\nMany animals exhibit group calling behaviour.\nPatterns of calling are observable phenomena which reflect individual state\nand are dependent on behavioural context \\cite{Elie:2015,Gill:2015}.\nUnderstanding the dynamics of vocalisation patterns within groups is an important growing topic in animal behaviour \\cite{Greenfield:2006,Kershenbaum:2014b,Gill:2015,Perez:2015}.\nHowever, analysing the structure of the communication network in a group of animals presents a challenge which goes beyond that of analysing calls of isolated individuals or pairs,\nbecause multiple influences converge on an individual in parallel,\nmaking it harder to infer causal connections.\n\nIn this work we introduce a model-based method for inferring the temporal and network structure of interactions between calling individuals\nfrom the timing of call events.\nThe paradigm was originally developed in computational neurology for analysis of spiking neural networks \\cite{Paninski:2004,Pillow:2008}.\nWe adapted the method for the case of animal calls\nand applied it to data from groups of domesticated zebra finch (\\textit{Taenopyggia guttata}),\na communal songbird that is the subject of much current research \\cite{Zann:1996,Warren:2010}.\nWith this approach we were able to represent zebra finch communication networks in a compact model whose attributes reflect fine details of timing and influence strengths between individuals in a group,\nyielding a new data-driven perspective that complements other approaches based on acoustics, neurology or ethology,\nand provides a useful visualisation tool.\n\nBefore describing our study and analysis,\nwe first wish to set our analytical approach in context by discussing methods for modelling animal vocalisation sequences,\nin particular their applicability to vocalisations in groups.\n\n\n\n\\subsection*{Modelling the Processes that Generate Animal Vocalisations}\n\nResearchers analyse animal calling patterns in order to understand the processes that generated them,\nwhether their focus is on intra-individual or inter-individual mechanisms.\nA general paradigm with strong mathematical support is to choose a family of probabilistic generative models that might generate the phenomena of interest, and then to use model selection and/or parameter fitting to decide which model from that family best matches the data.\n\nA good example of this is Markov modelling. A Markov model generates the next symbol in a sequence stochastically but with limited memory: conditional on the most recent $k$ symbols, a $k$th-order Markov model chooses the next symbol independently of all prior history. Markov modelling has been applied widely to animal communications \\cite{Kershenbaum:2014b};\nonce vocalisations have been reduced to symbol sequences, data fitting can determine the transition probabilities between symbols, as well as the model order i.e. the length $k$ of the ``memory'' \\cite{Briefer:2010}.\nA Markov model is usually an extreme simplification of the presumed underlying biological process, and neglects important aspects such as call timing.\nBecause of this, a Markov model is unable to model some notable aspects of vocalisation such as ``bursty'' call patterns.\nHowever it is a broadly useful tool.\nExtensions of this approach augment the model to include unobserved state (the \\textit{hidden Markov model} long used for speech \\cite{Rabiner:1993}, \\cite[Chapter 17]{Murphy:2012}), the structured repetition of symbols (the \\textit{semi-Markov model} \\cite{Kershenbaum:2014,Stowell:2014c}) or time gaps between events (the \\textit{Markov renewal process} \\cite{Ball:2005,Stowell:2013,Lasko:2014}).\nFor our present purposes, an important consideration is that Markovian models do not adapt readily to the case where multiple influences converge on an individual in parallel.\nThey imply that each individual ``remembers'' only the most recent $k$ calls, irrespective of whether they come from socially significant others (e.g. a breeding partner) or from socially insignificant individuals.\n\nCross-correlation analysis can be used to analyse relative timing, but is not derived from a generative model: it is descriptive rather than inferential.\nA particular set of cross-correlation statistics may be compatible with multiple hypotheses about the underlying process (Markovian or otherwise).\nCross-correlation is an appealing alternative to standard Markov modelling because it gives some characterisation of the time gaps between events, not just the event sequences.\nStudies based on cross-correlation typically probe for significant patterns but do not attempt to give a formal model that could have generated those patterns \\cite{TerMaat:2014,Gill:2015}.\nAs one example of potential issues with cross-correlation, a causal network with a chain structure such as A$\\to$B$\\to$C may well create indirect cross-correlation phenomena from A$\\to$C, even where there is no direct causal link (Fig. \\ref{fig:abcexample}),\nwhich would result in a clear instance of the maxim ``correlation is not causation''.\n\n\\begin{figure*}[tp]\n\t\\caption{A synthetic example of indirect causation. A sequence was generated using a simplified A$\\to$B$\\to$C causal model, and then analysed using standard methods and our proposed method. The generation procedure was deliberately designed as not a perfect match to any of the analysis models, so as not to privilege any of them. We show an example timeline of events, along with the cross-correlation plots, and then the influence strengths recovered using each method summarised as a social network diagram. Cross-correlation analysis recovers most of the influences/independences but tends to recover false-positive connections for the indirect link A$\\to$C (see the lower-left panel of the cross-correlation plots). A simple Markov model recovers influences without timing information, and in this case also adds a connection from C back to A to take the place of the baseline event calling rate of A. Our proposed method recovers a good match for the network structure as well as timing information. It adds self-inhibitory feedback on B and C to account for the fact that in this test case a call by A leads to no more than one call by B (and likewise for B$\\to$C). Note that the values recovered by each method are different in kind, and have been rescaled separately for each of the network plots. For further details of this synthetic example see the SI.}\n\t\\centering\n\n\n\n\t\\includegraphics[width=0.99\\linewidth]{fig_abc}\n\t\\label{fig:abcexample}\n\\end{figure*}\n\n\nA probabilistic model that is directly applicable to events on a continuous timeline is the \\textit{Poisson process}\n\\cite{Daley:1988,Dayan:2001}.\nAt its simplest, the (homogeneous) Poisson process outputs events stochastically but at a constant rate, meaning that the event times are random but there is a constant expected number of events per unit time (Fig. \\ref{fig:spikingprocesses}a).\nMost Poisson processes of interest are inhomogeneous, having a rate that can change over time (Fig. \\ref{fig:spikingprocesses}b).\nThis Poisson process model can represent a single stream of events, but in order to capture interactions between individuals or between call types, we need to augment it with coupling such that calls from one individual can modulate the rate of calling of another (Fig. \\ref{fig:spikingprocesses}c).\nThis will be achieved through influence \\textit{kernels} described in the SI and illustrated later,\nwhose effect is that a call from one individual has a modulating `wave' of influence on the rates of others.\nSuch a model can be fit to data by maximum likelihood and these models reflect both the typical time gaps between events and the typical sequencing of one event after another.\nThese coupled processes are not necessarily Markovian, and the modelling focus is slightly different: instead of the turn-by-turn sequencing which underlies Markovian models,\nthe emphasis here is on separate processes each generating calls, happening in parallel, and these processes can mutually influence one another.\n\n\\begin{figure}[t]\n\t\\caption{Schematic illustration of processes generating events: (a) homogeneous Poisson process; (b) inhomogeneous Poisson process; (c) inhomogeneous Poisson process in which all changes in rate are due to the external influence of stimulus events. In each panel, the rate parameter for the process ($\\lambda$) is shown as a filled curve, continuous in time, and an example sequence of events sampled from the process is shown as a sequence of spikes.\n}\n\t\\centering\n\t\\includegraphics[width=0.6\\linewidth]{vec/spikingprocesses}\n\t\\label{fig:spikingprocesses}\n\\end{figure}\n\n\n\n\n\nIn the present study we wished to use exactly these point process models, with interaction kernels, to elucidate the temporal structure of networks of calling birds.\nWe have multiple motivations for doing this.\nThe first is that the information from the fitted model may yield information similar to that which has previously been derived through cross-correlation \\cite{Perez:2015,Gill:2015}, such as the strength of pairwise influences, but with more robustness to common-cause confounds and other issues discussed above.\nA second is that the fitted model may yield more finely nuanced information, and information tied to an explicit model:\nfor example, one individual may have a suppressive effect on its neighbour at some timescales, and an excitatory effect at other timescales.\nAnother is that a fitted model can be used to make further inferences about datasets,\nfor example to predict whether communicating partners are paired or unpaired.\nAnother is that since the model we fit is generative, it can be used to generate new synthetic sequences having the same network characteristics,\nwhich could be used for stimuli in future studies.\n\nTo this end, we conducted one study with a group of female zebra finches in a standardised context,\nand one reanalysis of existing data from a mixed-sex group of zebra finches in a different and varying context.\n\n\n\n\n\\section*{Materials and Methods}\n\\label{sec:methods}\n\n\\subsection*{Ethical Note}\n\nAnimal housing and welfare were in compliance with the European directives for the protection of animals used for scientific purposes (2010/63/EU).\nOur zebra finch audio recordings did not involve any intervention that would be a regulated procedure under the UK Animals (Scientific Procedures) Act 1986. The Named Animal Care and Welfare Officer for Queen Mary University of London (QMUL) oversaw the housing and routine care. \n\nIn this report we also reanalyse data from \\gill \\cite{Gill:2015}. Those data were collected under protocols approved by the Government of Upper Bavaria, and conditions were likewise compliant with 2010/63/EU.\n\n\n\\subsection*{Data Collection}\n\nFour adult female zebra finches (at least 90 days old, with wild-type plumage) were selected from an aviary of the QMUL animal facility. The four birds were housed together in a flight cage with free access to food and water, in a room separate from the main aviary. The group of four birds were housed together for more than two weeks before the recording sessions. The birds were kept on a 12/12h light/dark cycle (7:00--19:00), and the room temperature was 20--21$^{\\circ}$C.\n\nTo perform the recordings, each bird was transferred to an individual cage (of size approx.\\ 40 x 35 x 45 cm) with free access to food and water, and remained in visual and auditory contact with the other birds (at a distance of about 2 m).\nBirds were kept in the individual cages for just over one hour per day (approx 8:00--9:00) for recordings before returning to the group cage.\n\nThe solo cages were arranged in a square pattern so that all birds were approximately equidistant. Since we intended to investigate calling patterns as a function of bird identity, we avoided the potential confound of physical location by placing the birds in cages in different orders each of the three days, choosing the ordering by taking three rows from a four-by-four Latin square.\n\nAudio was recorded during these one-hour sessions with four focal microphones (AKG C451B), one directed at each cage.\nAll audio signals were recorded together onto a Zoom H6n multitrack sound recorder to ensure that the recordings were temporally synchronised.\nRecordings were made at 96 kHz sample rate and 16 bit depth.\nThe first day of this sound recording protocol was used as a test run and for acclimation, and data were not analysed.\nThe second and third days were taken forward for annotation.\n\nWe used a cross-validated semi-automatic process to label the audio events in the recordings. In a first pass, we applied automatic event detection to locate the beginning and end of events, using energy-based detection applied to spectrograms after performing median-filtering. Spectrograms were trimmed to the frequency region of interest (0.5--20 kHz).\nThe four channels of the recording inevitably contained large amounts of ``crosstalk'' as the protocol was designed so that the birds could clearly hear each other. Hence we used the median spectrogram across all channels as a background against which to judge the signal energy.\nRegions of high energy exceeding a minimum duration (8 ms; 2 spectrogram frames or more) were taken forward as candidates to the second stage.\n\nThe second stage of processing was manual refining of the detections. Each 4-channel spectrogram was divided into one-second chunks (with an overlap of 50\\%) and the proposed annotation superimposed.\nAnnotators were then shown the one-second chunks in a random order, so that any variation in attention of the human annotators would not systematically vary across the recording duration.\nFor each channel, annotators could listen to the audio and view spectrograms, confirm or reject the detected events, and label them as calls or other noises (such as wing flaps or cage sounds).\nThey could also label errors such as the merging or splitting of events, or misaligned event boundaries.\nTwo separate annotators manually processed all of the candidate annotations.\nWe used two paid annotators who were both PhD students with critical listening skills (audio engineering backgrounds).\nThese annotators were trained by the first author, using excerpts from the pilot session recordings as examples.\nConsensus decisions were accepted, and deviations from consensus were resolved by the first author.\nFinally, the first author listened through to the full recordings with the annotations superimposed,\nas a check for any remaining anomalies.\n\nFor the present study we then extracted the calling times for those events labelled as zebra finch calls.\nIn this standardised recording environment our female birds did not use a wide variety of call types (cf.\\ \\cite{Zann:1996}), predominantly the `Tet'/`Stack' type with a very small number of `Distance' calls (note that female zebra finches do not sing).\nTherefore in order to provide a clear analysis we did not split calls into different categories.\nThis dataset of call times we refer to as \\zfff.\n\\footnote{Data available from: \\url{https://dx.doi.org/10.6084/m9.figshare.1613791}}\nIn this dataset there were around 2800 calls in each hour-long session (around 12 calls per bird per minute).\n\n\n\\subsection*{Analyses}\n\nWe analysed the call timing information using the GLM point-process model of \\cite{Pillow:2008},\nwith specific configuration described in the SI.\nOur main unit of analysis was each 60-minute recording session as a whole,\nalthough we also analysed each 15-minute segment separately,\nto investigate whether there was continuity or change of communication patterns throughout a session.\nWe determined from preliminary tests that 15 minutes was the smallest region we could use to have enough calls for a stable analysis.\n\nWe used penalised maximum likelihood (maximum \\textit{a posteriori}) optimisation to fit the model parameters to each dataset. \nWe fitted two models to each of our 60-minute sessions---one combining influences in additive fashion, one in multiplicative fashion---and used an odds-ratio test to select the most appropriate model.\nIn all cases the additive model was favoured.\nMore details on the modelling are given in the Supplementary Information.\nOur source code to perform analyses and generate figures is available online.\n\\footnote{Software available from: \\url{https://bitbucket.org/danstowell/callnets-glm}}\n\nThe GLM model, after fitting to a dataset, yields a continuous curve (a ``kernel'') for each directed pairwise influence.\nFor four birds this gives 16 kernels, four of which represent self-self influence and twelve of which represent self-other influence.\nIn order to make quantitative and visual comparisons, we summarised kernels in two main ways.\nWe aggregated self-self and self-other kernels separately to look for general tendencies that might emerge independent of bird identity.\nSeparately we used the magnitude of the strongest peak (positive or negative) as summary statistics to plot communications networks and to test for consistency within/between sessions.\n\nTo test for consistency between sessions, we took the peak strengths from the influence kernels, and measured the Pearson correlation from one day to the next.\nSince self-self and self-other kernels were different in kind (having positive and negative peaks respectively),\nwe analysed them separately, giving $N=12$ for self-other and $N=4$ for self-self.\nTo investigate whether any correlation was due to individual identity, to physical location of the cage, or to chance,\nwe measured the correlation using four different ways of matching one day up with the next day.\nThese four matchings were the combinations given by a Latin square:\none matching compared the same individual across days,\none matching compared the same physical location (and microphone) across days,\nwhile the remaining two were null matchings with no meaningful interpretation.\n\nTo test for consistency within sessions, we took the self-other peak strengths for each 15-minute segment,\nand measured via Pearson correlation how strongly a segment could predict the immediate next segment.\nFor each one-hour session this gives three sequential pairs of segments.\n\nAll of the above analysis was applied to our own \\zfff dataset.\nWe also applied the analysis to a subset of the call data from \\cite{Gill:2015}\nin which inter-individual call timings had been studied in a more complex group setting.\nThese groups were made up of freely behaving zebra finch males (4) and females (4) whose vocalisations were individually recorded via backpack microphones, over a period of three weeks.\nDuring this time, all birds were able to interact physically, and to engage in various activities,\nwhile pair-bonding, nesting and breeding progressed.\nWe used our GLM method as an alternative to the cross-correlation analysis of \\gill,\nto investigate group calling behaviour on a finer timescale, including an investigation of self-self calling patterns.\nAs all individuals in the analysed data formed pair-bonds,\nwe not only distinguished between self-self and self-other interactions as in \\zfff, but\nwe also separated out the self-partner interactions to investigate any consistent patterns emerging specifically within pairs.\nWe were provided with the data for Trial II, days 1, 7, 11, 18\n---the same days as displayed in Fig. 5A of \\cite{Gill:2015}---\nwhich span the different breeding stages of that group.\n\\footnote{Data available from: \\url{https://figshare.com/s/73cbdf96ab156a0f0a69}}\nEach session was just under four hours long.\n\nIn the data of \\gill \\cite{Gill:2015}, calls were categorised into types.\nWe applied our GLM method to all calls together (as with our own data),\nbut since this dataset contained a larger number of calls across various types,\nwe also explored splitting the data according to call type so that each pairwise interaction could have a different kernel for each call type.\nNote that \\gill\\ use five call categories, which implies that for each directed pair we must fit 25 different kernels rather than just one, and so in practice we found that the full analysis by call-type was less stable due to data sparsity issues.\nHence the recovered per-type kernels showed larger variances and the results are in some cases less clear-cut than for the broader aggregate models.\n\n\n\n\n\\section*{Results}\n\\label{sec:results}\n\n\\subsection*{All-Female Group (\\zfff)}\n\nWe first show results from our recordings with four female zebra finches in a standardised context.\nThe model-selection test consistently selected the model in which influences were combined by addition (rather than multiplication).\nThis is in contrast to \\pillow \\cite{Pillow:2008} applying the same method to an analysis of spiking neurons, which selected the multiplicative model.\n\nWe found that influence kernels exhibited consistent temporal characteristics and broadly consistent magnitudes, and that these differed very strongly between self-self and self-other interactions (Fig. \\ref{fig:plot_kernels_ssso}).\nThe confidence intervals, despite aggregating over individuals, are relatively narrow\nwith little overlap between self-self and self-other.\nIndividuals exhibited a pattern of strong self-suppression immediately after calling and for around the next 0.8 seconds,\nfollowed by a slight positive effect thereafter.\nIn contrast, self-other interactions showed a consistent positive peak at around 0.25 seconds, before decaying to around zero at 0.7 seconds,\nindicating a consistent characteristic timescale for calls that occur in response to the calls of others.\nIn this group of females, although the network influences showed consistency there was no evidence for strong structure of the network such as a hierarchy (Fig. \\ref{fig:netplot_callnets}).\n\n\\begin{figure*}[pt]\n\t\\caption{Aggregate view of the influence kernels recovered from our two study sessions with four female zebra finches. \n\n\n\\newline\n\\textbf{HOW TO READ THESE PLOTS:} These plots summarise the kernels across the entire communication network, grouping the kernels according to whether they represent a self-self (red lines) or self-other (blue) connection.\n\nFor each directed pair of birds we inferred a single kernel curve; these plots show the median curve, and the 5-to-95-percentile range, across all possible pairs of individuals in the group.\nHence the filled regions largely indicate the extent of variation among the network connections.\nThe time on the x-axis can be thought of as similar to the ``lag'' in cross-correlation.\nThe y-axis can be thought of as the ``excess calling rate'' caused by a stimulus (although this interpretation is complicated a little by the nonlinearity; see SI for detail).\nImagine that a bird emits a call at time zero. The plot then shows the effect of that call over the next few seconds,\nincreasing and/or decreasing every bird's tendency to call.\nUnlike a Markov model, the call at time zero is not considered to lead to a single call that happens as a consequence of it: another bird might call once, twice or more during the period in which it is strongly stimulated by the call at time zero. (In practice, the strong inhibition we see---the strong negative peak for self-self interactions---often suppresses multiple responding.)\nA flat kernel with a value of zero would correspond to statistical independence, indicating that one bird had no effect on the calling rate of the listener.\nThe influences from multiple individuals are added together by the listener\nbefore being passed through a nonlinearity;\nthe main effect of the nonlinearity (for interpretive purposes) is a soft-thresholding to prevent the rate going below zero.\nFor self-self kernels, the lag includes the lag due to the duration of the call itself (median duration 0.1 s).\n\n}\n\t\\centering\n\t\\includegraphics[width=0.99\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_kernels_ssso}\n\t\\label{fig:plot_kernels_ssso}\n\\end{figure*}\n\n\n\n\nThe self-other peak strengths from one day to the next were strongly predicted by individual identity ($p < 0.001$),\nand not by physical location or by the null combinations (Table \\ref{tbl:plot_analyseadj_between}).\nPhysical location yielded a slightly stronger correlation than the null combinations,\nbut not at a significant level ($p = 0.18$).\nThus, we attribute the variation in inter-individual peak influence strengths (Fig. \\ref{fig:netplot_callnets}) to individual identity.\nThe same was true of self-self peak strengths, predictable by individual identity ($p < 0.01$) but not by the other permutations ($p > 0.05$).\n\n\\begin{table}[t]\n\\centering\n\\caption{Predictability (Pearson correlation) of peak strengths, from one day to the next, measured under four different permutations for aligning the two days. The four permutations correspond to four rows of a Latin square, one of which matched individuals across days, another which matched physical cage locations across days, and two null permutations having no meaningful interpretation.}\n\\label{tbl:plot_analyseadj_between}\n\\begin{tabular}{lllll}\nData permutation & Self-other (N=12) & Self-self (N=4) \\\\\n\\hline\nIndividual & \\textbf{0.85 ***} & \\textbf{0.99 *} \\\\\nLocation & 0.41 & 0.88 \\\\\nNull 1 & -0.12 & -0.92 \\\\\nNull 2 & 0.14 & -0.95\n\\end{tabular}\n\\end{table}\n\n\\begin{figure}[t]\n\t\\caption{Peak influence strengths, plotted as a social network. Standard arrows indicate postive (excitatory) peaks, flat-headed arrows (in this case only seen for the self-self arrows looping back) indicate negative (suppressive) peaks.}\n\t\\centering\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=105mm 155mm 105mm 2mm]{images/netplot_callnets_zf4f}\n\n\t\\label{fig:netplot_callnets}\n\\end{figure}\n\n    \n\nWhen analysing the sessions in 15-minute segments, we found consistency but also variation in the self-other peak strengths: values did not remain constant but often were smoothly-varying with characteristic magnitudes (Fig. \\ref{fig:plot_analyseadj_15seq}).\nThe strengths in each 15-minute segment were predictable from the immediate preceding segment (Pearson correlation 0.51, $p < 10^{-5}$; Fig. \\ref{fig:plot_analyseadj_15seq}),\nconfirming that the between-day consistency can be observed on the finer scale of 15 minute segments despite the observable variation.\nOn this timescale, we were not able to verify that the self-self peaks were as consistent ($p > 0.05$).\n\n\\begin{figure}[t]\n\t\\caption{Inter-individual peak strengths, analysed in subsequent 15-minute time windows. Solid lines connect peak strengths for each directed pair across directly adjacent 15-minute periods, and dotted lines represent the same connection but with a gap from one day to the next.}\n\t\\centering\n\t\\includegraphics[width=0.89\\linewidth,clip,trim=12mm 7mm 14mm 12mm]{images/plot_analyseadj_15seq}\n\t\\label{fig:plot_analyseadj_15seq}\n\\end{figure}\n\n\n\\subsection*{Reanalysis of Gill \\textit{et al.}}\n\nThe groups studied in \\gill were in a very different environment---mixed-sex and larger groups, with the ability to physically interact, to undertake nesting and breeding.\nThis is reflected in some notable differences in the typical influence kernels compared against those from the \\zfff data (Fig. \\ref{fig:plot_kernels_ssso_gill_ind}).\n\n\\begin{figure}[pt]\n\t\\caption{Aggregate kernels as in Fig. \\ref{fig:plot_kernels_ssso} but for the dataset of \\gill. \n Note that the ``self-partner'' category was labelled retrospectively, according to the pair bonds that eventually formed. The pairings had typically not yet formed on the first day.\n}\n\t\\centering\n\t\\includegraphics[width=0.6\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_kernels_ssso_gill_ind}\n\t\\label{fig:plot_kernels_ssso_gill_ind}\n\\end{figure}\n\nAgain the different kernel types show continuity over multiple sessions.\nHere, however, we observed specific developments in the communication network as the pairs progressed through different stages of bonding and breeding.\nOn the first day, when pairings were yet to stabilise, there was little difference between self-other and self-partner influence (note that the ``self-partner'' category was labelled retrospectively, so in the early days it indicates \\textit{eventual} partners).\nAs partnerships formed and developed they took on specific within-pair communication characteristics:\nby day 7, when many of the birds were involved in nest building, communication showed a specific self-partner peak with a timescale around 0.2 s, while the typical influence of non-partner birds (self-other) had reduced down close to independence.\nIn other words, group communication was dominated by within-pair patterns.\nIn the later days this structured communication subsided somewhat,\nalthough self-partner influences continued to be stronger than self-other influences.\nIn the later days, the extra-pair self-other influences showed on average a short-term suppressive effect.\n\nNotably, the self-self influence kernels recovered from these data were rather different from those in the \\zfff recordings.\nThere was again a strong immediate self-inhibition effect,\nbut in the present case this was followed by a self-excitation at around 0.2 s\nwhich was not observed in the \\zfff data.\nThe implication of short-term self-excitation is that calls are being emitted in bursts or sequences.\nThe median self-self influences showed bumpy multimodal curves which suggested that there might be further structure in the patterns of typical gaps in the sequences,\nor that the aggregate plots were merging together different kernels which each had differing timescales.\nWe inspected the detail of individual kernel plots and found that the latter was not the case:\nthere were no observable individual differences in overall self-excitation timescales.\n\n\\begin{figure}[pt]\n\t\\caption{Aggregate kernels for the dataset of \\gill but showing only the within-pair interactions (self-self and self-partner) and further breaking them down by sex.}\n\t\\centering\n\t\\includegraphics[width=0.6\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_kernels_ssso_gill_ind_sexwise}\n\t\\label{fig:plot_kernels_ssso_gill_ind_sexwise}\n\\end{figure}\n\nWhen inspecting the differences between males and females (Fig. \\ref{fig:plot_kernels_ssso_gill_ind_sexwise}),\nwe found this short-term peak in self-excitation was seen more strongly in males.\nThe pattern became clearer when inspecting the kernels derived after separating the calls into behavioural call types.\nIt was observed to lie predominantly in cackle calls, specifically in an individual following a cackle with another cackle (Fig. \\ref{fig:plot_kernels_ssso_gill_ind_4type_cackle}).\nThe kernel plots broken down by call type exhibited more variance than the main plots due to data sparsity,\nbut nevertheless only the cackle$\\to$cackle self-self influence showed this strong rapid peak (at around 0.15 s),\nand this was consistent across the different days analysed.\n\nCackles explained one component of the multi-modal self-self kernels.\nHowever we could not conclude that the overall self-self kernel was explained as merely a sum of unimodal influences varying by call type, as the broken-down kernel plots did not generally resolve to simpler structure.\n\nOther aspects of the kernels broken down by call type confirm the observations of \\gill:\nIn many cases the strongest effect of a particular call type was to induce responses of the same type,\nbut with some influences from one call type to another.\nAround day 7 we observed a tendency for Stacks or Tets from a female to induce Tet responses in the male partner (Fig. \\ref{fig:plot_kernels_ssso_gill_ind_4type_tetstack}),\nas was also remarked upon in \\cite{Gill:2015},\nand for the male Tets to have a notable self-excitatory peak.\nBy day 7 birds were largely in the nest-building and later nesting stages (Fig. 2 of \\cite{Gill:2015}).\n\nNote that dividing the calls into five types gives a 25-fold increase in the number of influence kernels to be recovered,\nwhich may lead to data sparsity in some cases.\nThis is visible in the increased variance of the per-type kernel estimates\n(Fig. \\ref{fig:plot_kernels_ssso_gill_ind_4type_tetstack}, Fig. \\ref{fig:plot_kernels_ssso_gill_ind_4type_cackle}).\nFor this reason we will only discuss per-type kernels in which we observe clear patterns,\nor indicative patterns which triangulate against observations made in related work \\cite{Gill:2015,Elie:2015b}.\n\n\\begin{figure*}[pt]\n\t\\caption{Aggregate kernels specifically for the ``Tets'' and ``Stacks'' of \\gill, and their interactions, on day 7.}\n\t\\centering\n\t\\includegraphics[width=0.99\\linewidth,clip,trim=110mm 170mm 220mm 85mm]{images/plot_kernels_ssso_gill_4type_sexwise}\n\t\\label{fig:plot_kernels_ssso_gill_ind_4type_tetstack}\n\\end{figure*}\n\n\\begin{figure}[pt]\n\t\\caption{Aggregate kernels specifically for the ``Cackles'' of \\gill\\ on day 7.}\n\t\\centering\n\t\\includegraphics[width=0.6\\linewidth,clip,trim=340mm 87mm 110mm 254mm]{images/plot_kernels_ssso_gill_4type_sexwise}\n\t\\label{fig:plot_kernels_ssso_gill_ind_4type_cackle}\n\\end{figure}\n\n\n\n\n\\section*{Discussion}\n\\label{sec:discussion}\n\n\nWhen animals interact in groups, multiple influences converge on each individual in parallel,\nand the effects of these influences depend on social context.\nIn groups of zebra finches we found temporal interaction patterns that were consistent:\nthey persisted over time according to sender/receiver identity,\nand they had characteristic structure depending on the nature of the social bond (self-self, self-partner, self other; male-female, female-male)\nand on contextual status such as breeding stage.\n\nWe characterised these communication networks by fitting a simple general-purpose model which takes account of the parallel known influences converging on an individual.\nThe model is flexible enough to represent a wide range of pairwise influence patterns (kernels),\nincluding kernels which show patterns of suppression \\textit{and} excitation together, depending on relative timing.\n\nWhen reanalysing call data previously presented by \\gill \\cite{Gill:2015}\nin which cross-correlation had been used to identify interactions,\nwe were able to confirm many of the observations,\nbut demonstrated in more detail the temporal structure of interaction patterns, including self-self interactions.\nIn some social contexts (particularly nest-building),\nwithin-pair influences dominate and calling patterns become much less strongly influenced by extra-pair group members.\nThe structure of the communication network changes qualitatively through the different stages of zebra finch breeding activity.\n\nWe also found qualitative differences in communication influence patterns between our female-only group and the mixed-sex group of \\cite{Gill:2015}.\nNote that the groups differed in various ways (presence/absence of mates, ability to interact physically, group size, backpack microphones)\nand so we do not here attribute the differences between the two studies to specific contextual parameters;\nthat remains for future study.\nHowever, the per-sex and per-type plots strongly suggest that sex differences in timing patterns,\nand the presence of specific self-partner interactions, are the dominant factors in the differences seen between the two studies.\n\n\n\\subsection*{Zebra Finch Call Types and their Use in Vocal Interactions}\n\nOur reanalysis adds extra detail to the use of the different call types recorded and studied in \\cite{Gill:2015}.\nAn example is the specific self-excitation pattern observed for Cackle calls (Fig. \\ref{fig:plot_kernels_ssso_gill_ind_4type_cackle}).\nThis is not discussed in \\cite{Gill:2015} because the study focused only on inter-individual timings.\nThe specific pattern we observed corresponds with behavioural observations in the literature:\n``[Cackle] calls are emitted in sequence either by one single partner (especially by the male when leading the nest search; Zann 1996a, b) or by both birds that are then performing soft duets using these calls in combination with Tet calls (Elie et al. 2010)'' \\cite{Elie:2015b}.\nAs well as the self-excitation pattern, we found a short-term self-partner excitation effect, corresponding to the duetting mentioned.\n\nElie et al. \\cite{Elie:2015b} take issue with the categorisation of Tet/Stack calls used by \\cite{TerMaat:2014,Gill:2015}.\nThey propose that the ``Stack'' of \\gill\\ is not the ``Stack'' which Zann observed in wild zebra finches \\cite{Zann:1996},\nbut rather that it is a variant of the ``Tet''.\nThey argue that the ``Tet'' and ``Stack'' are used in very similar behavioural circumstances,\nand so should all be considered under the general category of ``Tet''.\nOn the other hand, their own acoustic analysis finds them to be similar but distinct clusters,\nand so they suggest they could be referred to as ``Tet-M'' and ``Tet-S''\nto avoid confusion with the ``Stack'' of Zann.\n\nIn this light, our analysis may help to illuminate whether the two categories annotated in \\cite{Gill:2015} show different interaction patterns.\nThe question is whether the two call types are behaviourally equivalent.\nIf this were the case, we would certainly expect the Tet$\\to$Tet and Stack$\\to$Stack kernels to have similar characteristics.\nWe might also expect the cross-type influence kernels (Tet$\\to$Stack and Stack$\\to$Tet) to be broadly similar.\nNote that we would not necessarily expect the cross-type kernels to look the same as the within-type kernels:\nfor example the cross-type kernels might show smaller influence in the hypothetical case that Tets and Stacks are behaviourally equivalent but emitted in different states of arousal, and therefore unlikely to happen in close temporal proximity.\n\nContrary to this hypothesis of equivalence, we found indications of differing influence kernels both within and between Tets and Stacks.\nThis was particularly seen on day 7 (Fig. \\ref{fig:plot_kernels_ssso_gill_ind_4type_tetstack}) in which we saw that both Tets and Stacks from a female showed a tendency to inspire a Tet response from a partner within around 0.25 seconds, but this was not seen for Stack responses.\nStacks and Tets also showed differing self-excitation patterns, indicating that the short-term sequencing of bursts had different character.\nOur analysis does not disprove the claim of Elie et al. \\cite{Elie:2015b} that Tets and Stacks lie on a continuum and are used in similar situations.\nHowever it indicates that as well as having observable acoustic differences, Tets and Stacks are used differently within communication interactions on the time-scale of seconds.\n\nElie et al. \\cite{Elie:2015b} describe the Tet call thus:\n``The Tet call is the most frequent vocalization as it appears to be produced in an almost automatic and continuous fashion when zebra finches move around on perches or on the ground. These ``background'' Tet calls form an almost continuous hum and do not appear to produce a particular response in the nearby birds.''\nContrary to this, we find that Tets do have an effect of inducing Tets from a partner on a specific timescale.\nIn this we concur with \\gill \\cite{Gill:2015}.\n\nIt is worth noting that in our presentation we have not focussed on the resting ``base rate'' of calling,\nwhich in our model is the component that causes birds to call in absence of any stimulus.\nThe base rates here took values of approximately $\\pm 0.15$ per individual;\nthe peak influence spikes were on a similar or larger scale and thus had a non-trivial effect compared against the base rate.\nA particular appeal of our modelling approach here is that it can identify components of influence even in the presence of a base calling rate.\n\n\n\n\\subsection*{Reflections on GLM Point Process Methodology}\n\nThe GLM point process method we have used is relatively generic---it can be applied to neurons as much as to calling animals---\nand as we have shown, it is flexible enough to capture a variety of phenomena which are pertinent to the understanding of animal calling interactions.\nIt can capture specific timescales and strengths of influence, both positive and negative and mixed,\nbetween individuals, including asymmetric influences (A$\\to$B can be different from B$\\to$A),\nand provides a useful representation separating specific influences out from the calling base rate.\nIt can reproduce bursty/sequential calling phenomena in individuals or groups.\nThe method has a number of advantages over cross-correlation analysis.\nDirected causation is directly modelled rather than implicit.\n(This should not be interpreted as claiming that the method uncovers the full set of factors having causal influence on an individual:\nthe model abstracts over physiological detail, and characterises the relative strengths of the causal factors proposed by the analyst.)\nMultiple convergent influences are simultaneously modelled as well as a default base-rate.\nThanks to this, spurious links due to common-cause effects are less likely to occur.\n\nThe method is not specialised for strict sequencing:\nfor example, if birds always emitted exactly three cackles in a sequence,\nthis could not be modelled.\nIn fact this limitation is in common with the standard Markov model.\nFuture modelling advances may add useful generalisations, for example the incorporation of hidden state variables.\nStrict sequencing can be described in a hidden Markov model or a semi-Markov model,\nbut those are in general suitable only for independent individuals and not a good fit for situations with multiple influences within a group.\n\nThe point process model we have described here is closely related to a set of self-stimulating statistical models called ``Hawkes processes''\n\\cite{Hall:2014,Moore:2015b}.\nFor example, the method of \\cite{Hall:2014} has an appealing property of ``streaming'' performance,\nmeaning that the network characteristics can adapt continuously through time as the network evolves.\nHowever their model has important limitations which the GLM model does not.\nIt does not incorporate the nonlinearity which allows for flexibility and ensures that the model remains meaningful in the presence of negative influences (which otherwise could yield meaningless negative calling rates).\nMore importantly, under their model every link in the network must have the \\textit{same} kernel shape and only the magnitudes can vary.\nWe have demonstrated clearly in this work that zebra finch calling networks require, at minimum, different kernels for self-self, self-partner and self-other interactions,\nwhich have dramatically different shapes.\n\nOur method models each calling individual as an inhomogeneous Poisson process, where the changes in calling rate are due to external influences.\nAn alternative approach is to model each individual (slightly more simply) as an inhomogenous Poisson process (Fig. \\ref{fig:spikingprocesses}b),\nand then look for correlations among their inferred underlying calling rates.\nAn advantage of that approach would be to accommodate smooth modulations in the base-rate of calling;\nhowever this comes at the significant cost of probing the modelled rates only indirectly for evidence of causal influence (much as in cross-correlation analysis),\nrather than directly fitting a causal model to the observed data.\n\nLooking slightly more broadly, there are some existing methods in the animal behaviour literature that have rough analogies to our approach, but using different types of behavioural data.\nPsorakis \\cite{Psorakis:2015} use spatio-temporal proximity of animals as indirect indicators of affiliation, which are then used to infer a social network graph.\nNote that the method there can only infer undirected (symmetric) connections between pairs of individuals, not directed connections as in the case of calling patterns here.\nAnother rough analogy is with \\cite{Nagy:2010} who infer pigeon hierarchy from delays in flock movement responses.\nIn that case the observed data are continuous movement data and temporal cross-correlations in movements are the clues used, instead of discrete events, to infer networks.\n\nThe data size requirements of the GLM point process model are reasonable for our purposes,\nas indicated by our ability to recover stable repeatable influence kernels with 15, 60, or 180 minutes of data.\n(See also the SI for a simulation test on data size requirements).\nThe approach requires the same amount of data as does cross-correlation.\nWe note that dividing the calls down by call type as well as by individual\ncan lead quite quickly to data sparsity issues.\nThis is seen in the slightly rough nature of the median kernels and higher variance in Fig. \\ref{fig:plot_kernels_ssso_gill_ind_4type_tetstack}\nversus Fig. \\ref{fig:plot_kernels_ssso_gill_ind}.\nThis is of course true for other analysis methods as well.\nThe GLM analysis has been applied to data sets having hundreds of neurons,\nand so it has the ability to scale to larger groups than we have studied \\cite{Pillow:2008}.\n\nThe computation required to fit these models is larger than to run a cross-correlation test.\nIn our largest data fit, analysing one of the almost four-hour sessions from \\cite{Gill:2015} and breaking each of the eight individuals' calls down into five types\n---yielding a 40-by-40 fully-connected network of influences to infer---\nthis took seven hours on an ordinary laptop.\nAnalysis can be made faster if some connections can be ruled out \\textit{a priori},\nsuch as the influence from whines to distance calls,\nwhich we know from behavioural observations, previous work \\cite{Gill:2015,Elie:2015} and the present study\ndo not show any notable influence.\n\nThe paradigm that we have applied in this study is relatively abstract and generic.\nThis has two implications.\nFirst, it means that the fitted models can and should be compared against behavioural observations and against any more customised behavioural and/or physiological models for the species being studied, to explore the convergence of these different sources of evidence.\nSecond, it means that this approach is not limited to songbirds, nor to communal species, and may find application in other taxa\nsuch as mammals or territorial songbirds.\n\nThe GLM model is generative, which allows for interesting experimental designs that can be considered in future,\nsuch as generating large numbers of novel group call sequences as stimuli,\nsynthesising background ``crowd'' sounds,\nor creating group interactions in which live individuals interact in real time with automatic conversational participants.\n\n\n\n\n\n\\section*{Acknowledgments}\n\nWe thank\nRichard E. Turner\nand Rob Lachlan\nfor useful discussions that influenced the work presented here.\nThanks also to Maeve McMahon for lots of assistance with the zebra finch recording study.\nWe thank Jonathan Pillow for making the GLM code available and for implementation advice.\n\n\\section*{Funding}\nThis work was supported by\nEPSRC Early Career research fellowship EP/L020505/1.\n\n\n\n\n\\section*{Data Accessibility}\n\nOur call timing data is publicly available via Figshare:\n\n\\begin{itemize}\n\\item\n\\zfff: https://dx.doi.org/10.6084/m9.figshare.1613791\n\\item\n\\gill\\ data subset: https://figshare.com/s/73cbdf96ab156a0f0a69\n\\end{itemize}\n\nOur source code to perform analyses and generate figures is available online via:\n\\url{https://bitbucket.org/danstowell/callnets-glm}\n\n\n\n\n\\section*{Competing Interests}\n\nWe have no competing interests.\n\n\n\n\n\\section*{Authors' Contributions}\nDS conceived and designed the study, carried out the lab work (\\zfff\\ dataset), performed data analysis and drafted the manuscript;\nLG provided data, participated in data analysis and helped draft the manuscript;\nDC participated in the design of the study, provided zebra finch resources, participated in data analysis and helped draft the manuscript.\nAll authors gave final approval for publication.\n\n\n\n\n\n\n\n\n\\bibliographystyle{vancouver}\n\\bibliography{../../refs}\n\n\n\\clearpage\n\\appendix\n\n\\section*{Supporting Information}\n\n\n\n\\subsection*{GLM point process model fitting}\n\nOur use of the GLM point process model broadly follows that of \\pillow \\cite{Pillow:2008}.\nHere we describe specific configuration choices and adaptations we made to the model.\n\n\\subsubsection*{Choice of nonlinearity}\n\nIn the GLM point process model, the instantaneous firing rate $\\lambda$ is given by a \\textit{linear-nonlinear} link function, meaning that influences are linearly summed and then passed through a nonlinearity:\n\n\n", "index": 1, "text": "\\begin{equation}\n\t\\label{eqn:lnp}\n\t\\lambda(t) = \\sigma\\left(b + \\sum_i{K_i \\ast y_i(t)}\\right)\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"\\lambda(t)=\\sigma\\left(b+\\sum_{i}{K_{i}\\ast y_{i}(t)}\\right)\" display=\"block\"><mrow><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mi>\u03c3</mi><mo>\u2062</mo><mrow><mo>(</mo><mrow><mi>b</mi><mo>+</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mi>i</mi></munder><mrow><mrow><msub><mi>K</mi><mi>i</mi></msub><mo>\u2217</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow><mo>)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.05449.tex", "nexttext": "\n\nwhere we introduced the constant scaling factor $c$ to bring the function closer to the rectifier nonlinearity.\nThe softplus function is not scale-invariant and so its effect (and hence the desirable choice of $c$) depends on the dynamic range of the data.\nWe used $c=10$, chosen to be large enough to bring the function close to a true rectifier effect without leading to numerical optimisation problems (Figure \\ref{fig:plot_nonlins}).\n\n\\begin{figure}[tp]\n\t\\caption{Nonlinearity functions.}\n\t\\centering\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_nonlins}\n\t\\label{fig:plot_nonlins}\n\\end{figure}\n\nWhen given an input of zero, our softplus nonlinearity yields a rate of around 0.07 (one call expected every 15 seconds).\nNegative inputs suppress the rate even further: in theory the rate never quite reaches zero, while with the machine precision used here, a zero rate of emission is produced from an input of around $-4$ or less.\nPositive inputs become increasingly close to the identity mapping; any input larger than around 0.3 is within 1 per cent deviation from identity.\n\nTypical values of the base-rate parameter $b$ in fitted models were approximately around $\\pm 0.15$.\nThe inter-individual variation in $b$ was smaller than the general scale of the influence kernels.\n\n\\subsubsection*{Kernel basis functions}\n\n\\begin{figure}[tp]\n\t\\caption{The raised-cosine basis functions used to compose each kernel.}\n\t\\centering\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_basisfuncs_r}\n\t\\label{fig:plot_basisfuncs_r}\n\\end{figure}\n\nThe model works by parametrically combining a set of basis functions to create each kernel.\nThis keeps the dimensionality of the model tractable while allowing for great flexibility in the range of kernels possible.\nWe used a set of raised cosine functions (Figure \\ref{fig:plot_basisfuncs_r}),\ndistributed in a warped arrangement to offer more detail at short time lags.\nIn initial tests we first used 8 basis functions.\nWe varied the warping factor to inspect whether the choice of bases had a strong influence on the resulting kernel fits.\nWe found that with 8 basis functions the placement of the bases had an observable effect on the undulations of the median fitted kernels,\nbut if we increased to 16 basis functions the recovered kernels were much more stable to the exact choice of basis.\nWe therefore used 16 basis functions for the main analyses.\nThe same set of basis functions was used for all network connections, including self-self and self-other.\n\n\n\\subsubsection*{Regularisation}\n\nThe model fitting method finds a single point estimate of the best fitting parameters.\nThis is done by maximum likelihood in \\cite{Pillow:2008},\nbut it can also be done by maximum \\textit{a posteriori} (MAP; also referred to as a type of penalised maximum likelihood) within the same framework\n\\cite{Paninski:2004}.\nIt is widely known that maximum likelihood methods are vulnerable to overfitting in the presence of limited data.\nWe therefore used MAP regularisation in the GLM model to help prevent overfitting at small data sizes and to stabilise the fitted parameter estimates.\n\nWe used standard $L_2$ (Euclidean) regularisation when fitting the model, which is equivalent to a zero-centred Gaussian prior on the coefficients (Figure \\ref{fig:plot_basisfuncs_s}).\nWe did not regularise the parameter $b$---the fixed base-rate for each individual to emit an event in absence of stimulation---allowing it to take any value with equal prior probability.\n\n\\begin{figure}[tp]\n\t\\caption{Ten randomly-sampled examples of kernels from the prior distribution of the GLM model (i.e. without any exposure to data), to illustrate the range of kernels that can be fitted and also some qualities of the prior.\nNote the symmetry of the prior distribution around zero, and the relative smoothness of kernels at long lag times---because the basis functions are distributed exponentially with respect to lag time.}\n\t\\centering\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_basisfuncs_s}\n\t\\label{fig:plot_basisfuncs_s}\n\\end{figure}\n\n\n\n\n\\subsection*{Synthetic A$\\to$B$\\to$C example and data size tests}\n\\label{sec:abc}\n\nThe A$\\to$B$\\to$C synthetic example given in Figure \\ref{fig:abcexample} was generated from a simplified model that is not an exact match to the GLM or MRP generative models,\nin order to provide a clear example of indirect causation and to examine how the various analyses behave.\nFirst, `A' events were generated from a homogeneous Poisson process with fixed rate of 0.1 Hz.\nThen, for the two links in the causal chain, A$\\to$B and B$\\to$C,\neach possible source event generated a target event with a probability of 0.9,\nand if it did so, with a time gap drawn from a log-Gaussian distribution with log-mean 0.75 and log-standard deviation 0.5 (using the natural logarithm).\nThe parameter values here were manually chosen to be on a similar timescale as zebra finch calls,\nbut not intended to be a likely zebra finch scenario, rather to demonstrate the common-cause phenomenon.\n\nThe generative model just described does not quite match the GLM point process model since no more than one event can be generated as a result of any other event, and there is no nonlinearity in the influence on rates.\nNor does it match a pure Markov model: although each A$\\to$B$\\to$C sequence considered on its own is Markovian, the process can generate overlapping sequences meaning the overall sequence has no upper bound on its history dependence.\nThis was therefore a useful test of how the different analysis procedures respond to data coming from a simple causal chain.\n\nUsing this procedure, a timeline of length 96,000 seconds was generated.\n\nFor cross-correlation, we used a custom Python script to implement cross-correlation with a maximum lag of 2.5 seconds.\nSpike data were smoothed using a Hann window of duration 200 ms.\n\n\n\n\n\\paragraph{Data size tests}\n\nIn order to get a practical impression of the data size requirements of the GLM method compared against cross-correlation,\nwe applied both methods to the synthetic A$\\to$B$\\to$C model\nwhile varying the number of data points fed into the analysis.\nThis way we could guarantee that the source of data was a stationary system with unchanging characteristics,\nand inspect convergence as data size increased.\n\nThe analysis models are not designed to recover the same information, so they are not suitable for numerical comparison (e.g. mean squared error).\nUnder the A$\\to$B$\\to$C model there are six inter-individual interactions to analyse,\nor three if undirected pairs are considered.\nWe visualised the fitted parameters by allocating each of the three pairings to a colour (red/green/blue) and superimposing the three cross-correlation curves.\nThe GLM model recovers six inter-individual kernels so we concatenated each kernel with its kernel in the opposite direction, to produce three shapes that could be colour-mapped in the same way.\n\nWe visualised the parameters recovered from the cross-correlation and GLM models, and also the GLM model without regularisation (i.e. maximum likelihood rather than maximum \\textit{a posteriori} fitting) (Figure \\ref{fig:datasizeconvergence}).\n\n\\begin{figure}[tp]\n\t\\caption{Visualisations of the cross-correlation curves and the inter-individual influence kernels recovered from data generated by the ABC model, as a function of the volume of data fed in to the algorithms. Plots show cross-correlation (upper), GLM (middle) and GLM without regularisation (lower). In each case the kernels/cross-correlations are superimposed as channels of an RGB image, and then normalised for dynamic range. The lower plot appears bolder because the unregularised GLM tended to dramatically large parameter values when overfitting to small datasets.}\n\t\\centering\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 110mm]{images/plot_callnets_sizetest_abc_xcorr}\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 110mm]{images/plot_callnets_sizetest_abc_glm_reg}\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 110mm]{images/plot_callnets_sizetest_abc_glm_unreg}\n\t\\label{fig:datasizeconvergence}\n\\end{figure}\n\nWe found that both cross-correlation and the GLM model converged at approximately 1024 data points.\nAs expected, the use of regularisation in the GLM model helped prevent overfitting at small data sizes, and to stabilise the fitted parameter estimates.\nWe therefore used this same regularisation for all fits reported in the paper.\n\n\n\\subsection*{Simulating from the fitted models}\n\nSince our model is generative, we can draw newly simulated event sequences from the fitted models,\nwhich will thus be qualitatively similar to the original material.\nThese sequences can be of arbitrary length and could even be generated in online (real-time) fashion.\nWe can also use resimulation as another approach to inspecting and validating the fitted models.\n\nAs a simple illustration of this, we resimulated 600 seconds of calls using the models fitted to the \\zfff data.\nWe resimulated the group (Figure \\ref{fig:plot_timeline_session2fullsof_resimulated}),\nand also we resimulated a single individual taken out of the group context,\ni.e.\\ with only base-rate and self-self effects (Figure \\ref{fig:plot_timeline_session2fullsof_resimulated_asolo}).\n\nBetween these two different simulations, the effect of group interactions was visible in the data:\nthe same virtual individual produced calls at a rate of one per 14 seconds when simulated alone,\nand at a rate of one every 6.5 seconds when simulated in the group.\n(The real data contained a call from that individual every 4.6 seconds.)\nThe resimulated group data replicates qualitative aspects of the real data (Figure \\ref{fig:plot_timeline_session2a})\nsuch as the bursty communal calling, though appearing slightly less dense.\n\n\\begin{figure}[tp]\n\t\\caption{Timeline plot of an excerpt from Session 2 of \\zfff.}\n\t\\centering\n\t\\includegraphics[width=0.89\\linewidth,clip,trim=20mm 10mm 18mm 10mm]{images/plot_timeline_session2a}\n\t\\label{fig:plot_timeline_session2a}\n\\end{figure}\n\\begin{figure}[tp]\n\t\\caption{Timeline plot of artificial data resimulated from fitted model for Session 2 of \\zfff.}\n\t\\centering\n\t\\includegraphics[width=0.89\\linewidth,clip,trim=20mm 10mm 18mm 10mm]{images/plot_timeline_session2fullsof_resimulated}\n\t\\label{fig:plot_timeline_session2fullsof_resimulated}\n\\end{figure}\n\\begin{figure}[tp]\n\t\\caption{Timeline plot of artificial data resimulated from fitted model for Session 2 of \\zfff, in this case with only one virtual bird and no group.}\n\t\\centering\n\t\\includegraphics[width=0.89\\linewidth,clip,trim=20mm 10mm 18mm 10mm]{images/plot_timeline_session2fullsof_resimulated_asolo}\n\t\\label{fig:plot_timeline_session2fullsof_resimulated_asolo}\n\\end{figure}\n\n\nRe-running the GLM fitting procedure on the resimulated data for the group recovered kernels with the same shapes as in the source model (Figure \\ref{fig:plot_kernels_ssso_resim}).\n\n\n\n\n\n\n\n\n\n\n\n\\subsection*{Further plots from datasets}\n\n\nFor the \\zfff dataset, overall calling rates per individual ranged from 468 to 888 calls per hour (Table \\ref{tbl:callcounts}),\nand rates exhibited some modulation across each hour (Figure \\ref{fig:kdeplot}).\nA composite of all the influence kernels fitted to the dataset is shown in Figure \\ref{fig:plot_kernels_ssso_allcurves}.\n\n\\begin{table}[tp]\n\t\\caption{Total calls emitted by each bird in the \\zfff recording study.}\n\t\\centering\n\t\\begin{tabular}{rrr}\nIndividual & Calls in Day 2 session & Calls in Day 3 session \\\\\n\\hline\n1 & 761 & 736 \\\\\n2 & 888 & 468 \\\\\n3 & 481 & 850 \\\\\n4 & 856 & 612 \\\\\n\t\\end{tabular}\n\t\\label{tbl:callcounts}\n\\end{table}\n\n\\begin{figure}[tp]\n\t\\caption{Density plots of the calling rates of each bird in the \\zfff recording study. Rates are calculated from call times using kernel density estimation with a bandwidth of 15 seconds.}\n\t\\centering\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/kdeplot_session2}\n\t\\includegraphics[width=0.8\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/kdeplot_session3}\n\t\\label{fig:kdeplot}\n\\end{figure}\n\n\n\n\n\n\nFor completeness we show the fitted kernels for all possible call-type interactions, for a specific day of interest in the \\gill dataset (Figure \\ref{fig:plot_kernels_ssso_gill_ind_4type}).\n\n\n\\clearpage\n\n\n\\begin{figure*}[pt]\n\t\\caption{Kernels recovered from the resimulated data.}\n\t\\centering\n\t\\includegraphics[width=0.89\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_kernels_ssso_resim}\n\t\\label{fig:plot_kernels_ssso_resim}\n\\end{figure*}\n\n\n\\begin{figure*}[tp]\n\t\\caption{Aggregate view of the influence kernels recovered from our two study sessions with four female zebra finches, as Figure \\ref{fig:plot_kernels_ssso} but showing every one of the 16 curves fitted to each session, rather than confidence intervals.}\n\t\\centering\n\t\\includegraphics[width=0.89\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_kernels_ssso_allcurves}\n\t\\label{fig:plot_kernels_ssso_allcurves}\n\\end{figure*}\n\n\n\n\\begin{figure*}[pt]\n\t\\caption{Aggregate kernels for all possible call-type interactions, for the data of \\gill on day 7.}\n\t\\centering\n\t\\includegraphics[width=0.999\\linewidth,clip,trim=0mm 0mm 0mm 0mm]{images/plot_kernels_ssso_gill_4type}\n\t\\label{fig:plot_kernels_ssso_gill_ind_4type}\n\\end{figure*}\n\n\n\n\n\n", "itemtype": "equation", "pos": 52192, "prevtext": "\n\nwhere we have used $b$ to represent the base rate component, $K_i$ the influence kernel from individual $i$, $\\ast$ the convolution operation, and $y_i(t)$ the sequence of events emitted by individual $i$ represented as a spike train.\n\nThe function $\\sigma$ is a nonlinear mapping which can be freely chosen within certain constraints;\nthese include that the function must be monotonic and non-negative\n\\cite{Paninski:2004}.\nIf $\\sigma$ is the exponential function, then this has the effect of transforming \\eqref{eqn:lnp} so that the influences combine in multiplicative fashion rather than additive.\nIf $\\sigma$ is the rectifier function $\\max(0, \\cdot)$, this preserves linear additivity except that negative values are clipped away.\nHowever, the rectifier function can be difficult to perform numerical optimisation upon, because a large part of its domain gives zero gradient,\nand often a smooth approximation is used in its place, which we describe shortly.\n\nWithin this simple model, in which animal behaviour is embedded in rather abstract form, it is not immediately clear which nonlinearity should be chosen.\n(Note that the method is rather robust to misspecification, meaning that under mild conditions it yields consistent kernel estimates even if the wrong link function is used \\cite[Section 5]{Paninski:2004}.)\nHence we chose to use these simple nonlinearities and use model comparison to choose between additive and multiplicative models, as was done in \\cite{Pillow:2008}.\nIn early tests we found that the strict rectifier function often failed in optimisation, and so in its place we used the smooth \\textit{softplus} function\n\n\n", "index": 3, "text": "\\begin{equation}\n\t\\lambda(x) = \\log(1 + \\exp(cx))/c\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"\\lambda(x)=\\log(1+\\exp(cx))/c\" display=\"block\"><mrow><mrow><mi>\u03bb</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mi>log</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mn>1</mn><mo>+</mo><mrow><mi>exp</mi><mo>\u2061</mo><mrow><mo stretchy=\"false\">(</mo><mrow><mi>c</mi><mo>\u2062</mo><mi>x</mi></mrow><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo stretchy=\"false\">)</mo></mrow></mrow><mo>/</mo><mi>c</mi></mrow></mrow></math>", "type": "latex"}]