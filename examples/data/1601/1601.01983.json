[{"file": "1601.01983.tex", "nexttext": "\nwhere ${\\bf h}_{kj}[n]\\sim {\\cal C}{\\cal N}(0,g_{kj}{\\bf I})$ denotes the  channel between the antenna of the $k$-th active user and the $M$ antennas of RRH site  $j$. The ${\\bf h}_{kj}[n]$'s are independent in $k,j,n$. We assume that RRH site $j$ does not know a priori the $g_{kj}$'s. ${\\bf W}_j[n]$ represents noise compromising of IID ${\\cal C}{\\cal N}(0,N_o/\\gamma_{\\rm p})$ entries, where $N_o$ denotes the thermal noise power.\n\n\nIn the system we consider RRH $j$ has available for (potential) transmission to user $k$ in RB $n$ a coded packet $u_k[n]$ (common across all RRHs). We focus on linear precoding options whereby, during the data transmission portion of the RB $n$,\nRRH site $j$ transmits the following $M\\times 1$ vector signal over its $M$-dimensional array\n\n", "itemtype": "equation", "pos": 9236, "prevtext": "\n\\title{ RRH based Massive MIMO \\\\ with ``on the Fly'' Pilot Contamination Control}\n\\author{\\IEEEauthorblockN{Ozgun Y. Bursalioglu, Chenwei Wang, Haralabos Papadopoulos}\n\\IEEEauthorblockA{Wireless Systems Project, MNTG\\\\\nDocomo Innovations Inc. Palo Alto, CA, 94304, USA\\\\\n obursalioglu, cwang, hpapadopoulos@docomoinnovations.com\\\\\n} \n\\and\n\\IEEEauthorblockN{Giuseppe Caire}\n\\IEEEauthorblockA{Communications and Information Theory Group, \\\\\nTechnische Universit{\\\"a}t Berlin, 10587 Berlin, Germany\\\\\ncaire@win.tu-berlin.de} \n}\n\n\n\n\\maketitle\n\n\\begin{abstract}\n\\vspace{-0cm}\n Dense large-scale antenna deployments are one of the most promising technologies for delivering very large  throughputs per unit area in the downlink (DL) of cellular networks.  We consider such a dense deployment involving a distributed system formed by multi-antenna remote radio head (RRH) units connected to the same fronthaul serving a geographical area. Knowledge of the DL channel between each active user and its nearby  RRH antennas is most efficiently obtained at the RRHs via reciprocity based training, that is, by estimating a user's channel using uplink (UL) pilots  transmitted by the user, and exploiting the UL/DL channel reciprocity.  \n\nWe consider aggressive pilot reuse across an RRH system, whereby  a single pilot dimension is simultaneously assigned to multiple active users. We introduce a novel coded pilot approach, which allows each RRH unit to detect pilot collisions, i.e., when more than a single user in its proximity uses the same pilot dimensions. Thanks to the proposed coded pilot approach, pilot contamination can be substantially avoided. As shown, such strategy can yield densification benefits in the form of increased multiplexing gain per UL pilot dimension with respect to conventional reuse schemes and some recent approaches assigning pseudorandom pilot vectors to the active users.\n\n\\end{abstract}\n\n\n\n\\begin{keywords}\nMultiuser MIMO, massive MIMO, small cells,  channel reciprocity, pilot contamination, interference mitigation, channel estimation.\n\\end{keywords}\n\n\n\n\\vspace{-0.2cm}\n\\section{Introduction}\n\\label{section:introduction}\n\\vspace{-0.15cm}\nDense large-scale MIMO deployments are an attractive option for providing the vast throughputs per unit area needed to cope with the explosive growth in wireless traffic.\nSmall cells \\cite{andrews-femtocell-survey}  enable  dense spatial resource reuse, i.e.,  coexistence of spatially separated short-range links on the same channel resource.  \nCombined with large antenna arrays to spatially multiplex many users on the same channel resource \\cite{marzetta-massive,Huh11}, dense deployments can potentially provide 100-fold or higher increases in throughput per unit area and bandwidth. Such dense massive MIMO operation is possible  at higher frequencies (e.g., 6-60 GHz), where large numbers of antennas can be packed in a  small form factor, \\cite{adhikary-mmWave-jsac}, \\cite{rappaport-mmWave}. \n\nIn order to achieve large spectral efficiencies in the downlink (DL) via multiuser (MU) MIMO, \nchannel state information at the transmitter (CSIT) is needed. Following the massive MIMO approach  \\cite{marzetta-massive},  \nCSIT can be obtained  from the users' uplink (UL) pilots via Time-Division Duplexing (TDD) and  UL/DL radio-channel reciprocity.  This  allows training large antenna arrays by allocating as few UL pilot dimensions as the number of single-antenna users simultaneously served.\n\n\nAlthough from the point of view of training a massive array at a single site the pilot efficiency of reciprocity-based training  is very attractive, to enable operation in a dense antenna-site environment the uplink pilot dimensions need to be aggressively  reused. However, having nearby users transmit the same pilots  can lead to significant pilot contamination at nearby sites and can  greatly impact performance.\n\nIn \\cite{marzetta-massive}, for example, a macro-cellular network is considered and spatial pilot-reuse of 7 is advocated to alleviate pilot contamination. Such a large pilot-reuse distance, however, is equivalent to a very poor spatial reuse of resources. In \\cite{Huh11} geographical scheduling across the cellular network is exploited to optimize the spatial reuse and the MIMO method separately at cell-center and cell-edge locations throughout the cellular layout. \n\n As a result, high spectral efficiencies can be achieved with reuse-one pilot assignments  to cell-center users, while reuse-3 can be exploited at the cell-edge. \n \nAnother line of work to avoid pilot contamination includes exploiting the knowledge of covariance matrices to allocate pilot resources to users based on their  support of angle of arrival \\cite{Gesbert-aoa}. Unlike \\cite{Gesbert-aoa}, we schedule users randomly.\n\n\nPilot assignment in dense antenna-site deployments  is much more challenging. First, due to the typically irregular antenna-site layouts different user terminals may train different numbers of nearby antennas. Unlike the symmetric macro scenario considered in \\cite{Huh11}, there are no simple geographic rules that result in scheduling users across the network with symmetric pilot-contamination characteristics, thereby making the problem of\noptimized coordinated scheduling and pilot assignments across the network a non-trivial one. \n\n\n\nIn this work, we consider aggressive reuse of the pilot dimensions across a remote radio head (RRH) system.  The combination of aggressive pilot reuse and random user scheduling inherently results in pilot contamination and pilot collisions at different RRH sites. By assigning the same pilot dimension to multiple users across the RRH coverage area for simultaneous UL pilot transmission, and by employing fast user proximity detection at each RRH site based on these transmissions, different RRH sites can  serve the packets of multiple users  whose codes are aligned on the same pilot dimension. As a result, densification benefits can be achieved and the multiplexing gain of the system can be substantially increased compared to traditional schemes. \n\nA distributed massive MIMO system with single antenna at each location is considered in \\cite{Larsson-Marzetta}, whereby multiple users broadcast pilots over the same pilot dimensions causing pilot contamination. \\cite{Larsson-Marzetta} proposes a greedy algorithm for pilot code design and a power allocation optimization between each antenna and user to mitigate pilot contamination. Our work is different from \\cite{Larsson-Marzetta} in that it relies on pilot allignment, and fast user proximity detection at each fast RRH site (which can also be viewed as a decentralized RRH-site selection method for each user's packet). More important, unlike \\cite{Larsson-Marzetta}, we also advocate the use of large antenna arrays at each RRH site as a means for reducing the number of RRH sites needed to achieve a certain multiplexing gain. As we demonstrate, by leveraging the inherently narrow angular spread in the user channels, large antenna arrays at each RRH site, aggressive pilot reuse, and fast user RRH-sector proximity detection,   large increases in multiplexing gains can be harvested at a fraction of the RRH sites required by single antenna RRH deployments such as \\cite{Larsson-Marzetta}.  \n\n\n\n\\section{System Model}\n\\label{sec_system_model}\nWe consider a setting involving an RRH system  comprised of  $N$  $M$-antenna radio heads uniformly (and randomly) distributed over a square wrap-around geographical region ${\\cal A}$ with area $A$.  The RRH system serves a large set ${\\cal K}_{\\rm tot}$ of user terminals (uniformly and randomly distributed over the RRH coverage region)  via reciprocity-based MIMO over OFDM. \n\n\nWe assume a slotted system according to which the  RRH system schedules users for transmission over scheduling slots.  Each slot comprises a subset of concurrent resource blocks (RBs), with each RB corresponding to a contiguous block of OFDM resource elements (REs). Without loss of generality we consider a quasistatic channel model where the user-channels remain fixed within any RB, but are independent across RBs. \n\nWe  consider a  generic scheduling slot $t$, and assume that the users with indices  from ${\\cal K}(t)\\subset{\\cal K}_{\\rm tot}$ are active in this slot for some preselected scheduling size $K=|{\\cal K}(t)|$. We let $L$ denote the number of RBs in the slot and $Q$ the number of dimensions (REs)  allocated  for uplink pilots in each RB. \nThe $k$-th active user (for any given $k\\in {\\cal K}(t)$) broadcasts a $Q\\times 1$ uplink pilot in pilot RE $n$ given by  $\\sqrt{\\gamma_{\\rm p}}{\\bf a}_{k}[n]$, where ${\\bf a}_{k}[n]$ denotes the unit-norm normalized version of the UL pilot vector assigned to the user by the RRH system and where $\\gamma_{\\rm p}$ represents the a priori known UL pilot transmit energy.\n\nThe received signal at the $M$-dimensional array of RRH site $j$ from all pilot transmissions during the $Q$  pilots REs  on RB $n$ can be expressed (after rescaling by $1/\\sqrt{\\gamma_{\\rm p}}$) in the form of the following $q\\times M$ matrix (The dependence on $t$ for ${\\bf Y}_j[n], \\,{\\bf x}_j[n], $ etc. is suppressed in (\\ref{Ymj-pilots})--(\\ref{received-signal-userk}).)\n\n", "index": 1, "text": "\\begin{equation}\n\\label{Ymj-pilots}\n{\\bf Y}_j[n] = \\sum_{k={\\cal K}(t)} {\\bf a}_{k}[n] {\\bf h}^{\\sf T}_{kj}[n]  +{\\bf W}_j[n]\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E1.m1\" class=\"ltx_Math\" alttext=\"{\\bf Y}_{j}[n]=\\sum_{k={\\cal K}(t)}{\\bf a}_{k}[n]{\\bf h}^{\\sf T}_{kj}[n]+{\\bf W%&#10;}_{j}[n]\" display=\"block\"><mrow><mrow><msub><mi>\ud835\udc18</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>k</mi><mo>=</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udca6</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></munder><mrow><msub><mi>\ud835\udc1a</mi><mi>k</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msubsup><mi>\ud835\udc21</mi><mrow><mi>k</mi><mo>\u2062</mo><mi>j</mi></mrow><mi>\ud835\uddb3</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mrow><mo>+</mo><mrow><msub><mi>\ud835\udc16</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nwhere   ${\\bf v}_{k}[n]$ denotes the  precoding vector for user $k$ and ${\\cal S}_j(t)\\subset{\\cal K}(t)$ is a suitably chosen subset of active users.\nThe set  ${\\cal S}_j(t)$ for which RRH $j$ transmits their packet at slot $t$ and the precoding vectors  $\\{{\\bf v}_k\\}$  are chosen based on the received signal over the $Q$ UL pilot REs in RB $n$.  The received signal at active user $k$ during the data-transmission portion is  \n\n", "itemtype": "equation", "pos": 10154, "prevtext": "\nwhere ${\\bf h}_{kj}[n]\\sim {\\cal C}{\\cal N}(0,g_{kj}{\\bf I})$ denotes the  channel between the antenna of the $k$-th active user and the $M$ antennas of RRH site  $j$. The ${\\bf h}_{kj}[n]$'s are independent in $k,j,n$. We assume that RRH site $j$ does not know a priori the $g_{kj}$'s. ${\\bf W}_j[n]$ represents noise compromising of IID ${\\cal C}{\\cal N}(0,N_o/\\gamma_{\\rm p})$ entries, where $N_o$ denotes the thermal noise power.\n\n\nIn the system we consider RRH $j$ has available for (potential) transmission to user $k$ in RB $n$ a coded packet $u_k[n]$ (common across all RRHs). We focus on linear precoding options whereby, during the data transmission portion of the RB $n$,\nRRH site $j$ transmits the following $M\\times 1$ vector signal over its $M$-dimensional array\n\n", "index": 3, "text": "\\begin{equation}\n\\label{precoding-signal-BSj}\n{\\bf x}_j[n] = \\sum_{k\\in{\\cal S}_j(t)} {\\bf v}_{k}[n] u_{k}[n]\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E2.m1\" class=\"ltx_Math\" alttext=\"{\\bf x}_{j}[n]=\\sum_{k\\in{\\cal S}_{j}(t)}{\\bf v}_{k}[n]u_{k}[n]\" display=\"block\"><mrow><mrow><msub><mi>\ud835\udc31</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><munder><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>k</mi><mo>\u2208</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></munder><mrow><msub><mi>\ud835\udc2f</mi><mi>k</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msub><mi>u</mi><mi>k</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nwhere $w^{\\rm DL}_k[n]\\sim {\\cal C}{\\cal N}(0,N_o)$ represents thermal noise.  \n\nIn general, for a RRH system with a sufficiently large coverage area, each user pilot is received at  ``sufficiently'' high power by  only a fraction of RRH sites  in the proximity of the users, i.e., only by RRH sites with sufficiently large $g_{kj}$'s.  For simplicity we consider a distance-based user RRH-site  proximity model, according to which a user pilot is received at  ``sufficiently'' high power by RRH site $j$ if the distance between the user and the RRH site is less than  $r_o$, for some value $r_o$. As a result, a user can be served by only the RRH sites within a distance $r_o$ from the user. Given that a user  can also be interfered by RRH sites within a distance $r_o$, we assume that a user can be served if and only if the user experiences  {\\em no} pilot contamination by any RRH site within distance $r_o$ to the user. \n\nThis modeling abstraction is reasonable for reciprocity-based DL MIMO transmission (as the pilot contamination from a RRH site to  a user depends on the large-scale  channel strength between the RRH and the user \\cite{marzetta-massive}) and corresponds to  neglecting pilot contamination from RRH sites at distances larger than $r_o$.  It is especially justified for milimeter Wave (mmWave) channels, where the blocking probability grows such rapidly with distance that it is reasonable to assume that beyond a certain distance no signal is received, despite the purely distance-based pathloss which, although sharply decreasing function of distance, may be nevertheless non-zero. \nLetting ${\\cal K}_j(t)\\subset {\\cal K}(t)$ denote the subset of  active users in proximity of RRH $j$ in slot $t$,  the set of active users served by RRH $j$ must thus satisfy ${\\cal S}_j(t)\\subset {\\cal K}_j(t)$.\n\nWe  focus on pilot schemes where the $Q$ pilot REs in an RB are split into disjoint groups of $q$ pilot dimensions (there are $Q/q$ such groups). When $q>1$, the users sharing a group of $q$ pilot REs are assigned pseudorandomly generated codewords. \n\nThe scenario is illustrated via the toy example in Fig.~\\ref{fig_rrh_reqs} involving $q=Q=1$, an RRH system with 6 RRH sites, serving  3 active user terminals (UTs). The 3 UTs broadcast pilots on the same pilot RE on an RB in slot $t$. As it can be seen in the figure, RRH 1 can serve none of the UTs as it is not in the proximity of any of the  UTs. In contrast, RRH sites  2 and 3 are in proximity of only  UT 1 and transmit the same coded packet $u_1[n]$ to UT 1. Similarly,  RRH 4 transmits $u_2[n]$ to  UT 2. In contrast, RRH sites 5 and 6 are in the vicinity of multiple UTs (pilot collision event) and thus serve {\\em none} of the UTs. It is also evident that UT 3 is not served in the given scheduling slot as its transmitted pilot is contaminated (collided) at each RRH in its proximity by other user terminals. Then, ${\\cal S}_2(t)={\\cal S}_3(t)=\\{1\\}$, ${\\cal S}_4(t)=\\{2\\}$, and ${\\cal S}_1(t)={\\cal S}_5(t)={\\cal S}_6(t) = \\emptyset$. In summary,  three active UTs broadcast pilots on a common pilot RE, and the 6 RRH-site  system can serve two of these UTs yielding an instantaneous multiplexing gain equal to 2. \n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=4cm]{rrh-requirements3.pdf}}\n\\vspace*{-.1in}\n\\caption{$q=Q=1$, 3 active user terminals (UTs) and 6 RRH sites.}\n\\label{fig_rrh_reqs}\n\\vspace*{-.2in}\n\\end{figure}\n\nWe consider a user $k$ as  ``served'' by the RRH system at $t$, if its packet is transmitted by {\\em at least one} RRH site in its vicinity, i.e., if and only if $\\exists j$ s.t., $k\\in {\\cal S}_j(t)$.  Then, letting ${\\cal S}(t)=\\cup_j{\\cal S}_j(t)$, the multiplexing gain of the RRH system in slot $t$ is given by $|{\\cal S}(t)|$. An implicit assumption in calling this the RRH-system instantaneous multiplexing gain is that for any user $k\\in {\\cal S}(t)$, any RRH $j'$ within distance $r_o$  must also {\\em not create} pilot contamination at user $k$. When user codes are aligned on a single pilot RE then no RRH serves active users in a pilot dimension when multiple active users in the pilot dimension are in the proximity of the RRH. \n\nSimilarly, consider the case where a set of active users share  $Q = q>1$ pilot REs on an RB and assume the users are assigned pseudorandom pilots over the $q$ pilot REs on an RB so that the pilots of any $q$ active users are linearly independent. In the same spirit as in the $q=1$ case, the RRH serves all the active UTs (on the shared $q$ pilot REs) in proximity of the RRH, if no more than $q$ UTs  are in the proximity of the RRH, and serves no UTs otherwise.  Then for $q=Q$,\n\\vspace{-0.2cm}\n\n", "itemtype": "equation", "pos": 10711, "prevtext": "\nwhere   ${\\bf v}_{k}[n]$ denotes the  precoding vector for user $k$ and ${\\cal S}_j(t)\\subset{\\cal K}(t)$ is a suitably chosen subset of active users.\nThe set  ${\\cal S}_j(t)$ for which RRH $j$ transmits their packet at slot $t$ and the precoding vectors  $\\{{\\bf v}_k\\}$  are chosen based on the received signal over the $Q$ UL pilot REs in RB $n$.  The received signal at active user $k$ during the data-transmission portion is  \n\n", "index": 5, "text": "\\begin{equation}\n\\label{received-signal-userk}\ny^{\\rm DL}_k[n] = \\sum_{j=1}^N  {\\bf h}^{\\sf T}_{kj}[n] {\\bf x}_{j} [n] +w^{\\rm DL}_k[n] \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E3.m1\" class=\"ltx_Math\" alttext=\"y^{\\rm DL}_{k}[n]=\\sum_{j=1}^{N}{\\bf h}^{\\sf T}_{kj}[n]{\\bf x}_{j}[n]+w^{\\rm DL%&#10;}_{k}[n]\" display=\"block\"><mrow><mrow><msubsup><mi>y</mi><mi>k</mi><mi>DL</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><msubsup><mi>\ud835\udc21</mi><mrow><mi>k</mi><mo>\u2062</mo><mi>j</mi></mrow><mi>\ud835\uddb3</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msub><mi>\ud835\udc31</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mrow><mo>+</mo><mrow><msubsup><mi>w</mi><mi>k</mi><mi>DL</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\n\\vspace{-0.6cm}\n\n\\section{Multiplexing Gains with Genie-Aided Proximity Detection }\n\\vspace{-0.15cm}\nWe next consider the genie-aided scenario according to which each RRH {\\em knows} the identities and the pilot codes of the active user terminals that are in its proximity. A method for achieving such knowledge based on coded UL pilots is presented in Sec.~\\ref{sec_codes}. We  investigate the average multiplexing gains per pilot RE that can be obtained over coverage area ${\\cal A}$ during a sufficiently large number of scheduling slots, $T$. Given that the multiplexing gains per dimension for the $Q/q = 1$ setting are the same as those for the $Q/q>1$ setting it suffices to study the multiplexing gains per RE in the case $q=Q$: \n\n", "itemtype": "equation", "pos": 15533, "prevtext": "\nwhere $w^{\\rm DL}_k[n]\\sim {\\cal C}{\\cal N}(0,N_o)$ represents thermal noise.  \n\nIn general, for a RRH system with a sufficiently large coverage area, each user pilot is received at  ``sufficiently'' high power by  only a fraction of RRH sites  in the proximity of the users, i.e., only by RRH sites with sufficiently large $g_{kj}$'s.  For simplicity we consider a distance-based user RRH-site  proximity model, according to which a user pilot is received at  ``sufficiently'' high power by RRH site $j$ if the distance between the user and the RRH site is less than  $r_o$, for some value $r_o$. As a result, a user can be served by only the RRH sites within a distance $r_o$ from the user. Given that a user  can also be interfered by RRH sites within a distance $r_o$, we assume that a user can be served if and only if the user experiences  {\\em no} pilot contamination by any RRH site within distance $r_o$ to the user. \n\nThis modeling abstraction is reasonable for reciprocity-based DL MIMO transmission (as the pilot contamination from a RRH site to  a user depends on the large-scale  channel strength between the RRH and the user \\cite{marzetta-massive}) and corresponds to  neglecting pilot contamination from RRH sites at distances larger than $r_o$.  It is especially justified for milimeter Wave (mmWave) channels, where the blocking probability grows such rapidly with distance that it is reasonable to assume that beyond a certain distance no signal is received, despite the purely distance-based pathloss which, although sharply decreasing function of distance, may be nevertheless non-zero. \nLetting ${\\cal K}_j(t)\\subset {\\cal K}(t)$ denote the subset of  active users in proximity of RRH $j$ in slot $t$,  the set of active users served by RRH $j$ must thus satisfy ${\\cal S}_j(t)\\subset {\\cal K}_j(t)$.\n\nWe  focus on pilot schemes where the $Q$ pilot REs in an RB are split into disjoint groups of $q$ pilot dimensions (there are $Q/q$ such groups). When $q>1$, the users sharing a group of $q$ pilot REs are assigned pseudorandomly generated codewords. \n\nThe scenario is illustrated via the toy example in Fig.~\\ref{fig_rrh_reqs} involving $q=Q=1$, an RRH system with 6 RRH sites, serving  3 active user terminals (UTs). The 3 UTs broadcast pilots on the same pilot RE on an RB in slot $t$. As it can be seen in the figure, RRH 1 can serve none of the UTs as it is not in the proximity of any of the  UTs. In contrast, RRH sites  2 and 3 are in proximity of only  UT 1 and transmit the same coded packet $u_1[n]$ to UT 1. Similarly,  RRH 4 transmits $u_2[n]$ to  UT 2. In contrast, RRH sites 5 and 6 are in the vicinity of multiple UTs (pilot collision event) and thus serve {\\em none} of the UTs. It is also evident that UT 3 is not served in the given scheduling slot as its transmitted pilot is contaminated (collided) at each RRH in its proximity by other user terminals. Then, ${\\cal S}_2(t)={\\cal S}_3(t)=\\{1\\}$, ${\\cal S}_4(t)=\\{2\\}$, and ${\\cal S}_1(t)={\\cal S}_5(t)={\\cal S}_6(t) = \\emptyset$. In summary,  three active UTs broadcast pilots on a common pilot RE, and the 6 RRH-site  system can serve two of these UTs yielding an instantaneous multiplexing gain equal to 2. \n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=4cm]{rrh-requirements3.pdf}}\n\\vspace*{-.1in}\n\\caption{$q=Q=1$, 3 active user terminals (UTs) and 6 RRH sites.}\n\\label{fig_rrh_reqs}\n\\vspace*{-.2in}\n\\end{figure}\n\nWe consider a user $k$ as  ``served'' by the RRH system at $t$, if its packet is transmitted by {\\em at least one} RRH site in its vicinity, i.e., if and only if $\\exists j$ s.t., $k\\in {\\cal S}_j(t)$.  Then, letting ${\\cal S}(t)=\\cup_j{\\cal S}_j(t)$, the multiplexing gain of the RRH system in slot $t$ is given by $|{\\cal S}(t)|$. An implicit assumption in calling this the RRH-system instantaneous multiplexing gain is that for any user $k\\in {\\cal S}(t)$, any RRH $j'$ within distance $r_o$  must also {\\em not create} pilot contamination at user $k$. When user codes are aligned on a single pilot RE then no RRH serves active users in a pilot dimension when multiple active users in the pilot dimension are in the proximity of the RRH. \n\nSimilarly, consider the case where a set of active users share  $Q = q>1$ pilot REs on an RB and assume the users are assigned pseudorandom pilots over the $q$ pilot REs on an RB so that the pilots of any $q$ active users are linearly independent. In the same spirit as in the $q=1$ case, the RRH serves all the active UTs (on the shared $q$ pilot REs) in proximity of the RRH, if no more than $q$ UTs  are in the proximity of the RRH, and serves no UTs otherwise.  Then for $q=Q$,\n\\vspace{-0.2cm}\n\n", "index": 7, "text": "\\begin{equation}\n\\label{Sjtq}\n{\\cal S}_j(t) = {\\cal S}_j(t;q) =\n\\begin{cases}\n\\emptyset & \\text{if $|{\\cal K}_j(t)|>q$}\\\\\n{\\cal K}_j(t) & \\text{if $|{\\cal K}_j(t)|\\leq q$}\\\n\\end{cases}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E4.m1\" class=\"ltx_Math\" alttext=\"{\\cal S}_{j}(t)={\\cal S}_{j}(t;q)=\\begin{cases}\\emptyset&amp;\\text{if $|{\\cal K}_{%&#10;j}(t)|&gt;q$}\\\\&#10;{\\cal K}_{j}(t)&amp;\\text{if $|{\\cal K}_{j}(t)|\\leq q$}\\end{cases}\" display=\"block\"><mrow><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>;</mo><mi>q</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mi mathvariant=\"normal\">\u2205</mi></mtd><mtd columnalign=\"left\"><mrow><mtext>if\u00a0</mtext><mrow><mrow><mo stretchy=\"false\">|</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udca6</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">|</mo></mrow><mo>&gt;</mo><mi>q</mi></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udca6</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mtext>if\u00a0</mtext><mrow><mrow><mo stretchy=\"false\">|</mo><mrow><msub><mi class=\"ltx_font_mathcaligraphic\">\ud835\udca6</mi><mi>j</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">|</mo></mrow><mo>\u2264</mo><mi>q</mi></mrow></mrow></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nwith ${\\cal S}(t;q) = \\cup_j{\\cal S}_j(t;q)$.\nThe maximum multiplexing gain per pilot RE for a given $q=Q$ scheme is given by\n\n", "itemtype": "equation", "pos": 16471, "prevtext": "\n\\vspace{-0.6cm}\n\n\\section{Multiplexing Gains with Genie-Aided Proximity Detection }\n\\vspace{-0.15cm}\nWe next consider the genie-aided scenario according to which each RRH {\\em knows} the identities and the pilot codes of the active user terminals that are in its proximity. A method for achieving such knowledge based on coded UL pilots is presented in Sec.~\\ref{sec_codes}. We  investigate the average multiplexing gains per pilot RE that can be obtained over coverage area ${\\cal A}$ during a sufficiently large number of scheduling slots, $T$. Given that the multiplexing gains per dimension for the $Q/q = 1$ setting are the same as those for the $Q/q>1$ setting it suffices to study the multiplexing gains per RE in the case $q=Q$: \n\n", "index": 9, "text": "\\begin{equation}\\label{mq}\nm_{q}(K,N) = \\lim_{T\\to \\infty}\\frac{1}{Tq}\\sum_{t = 1}^T |{\\cal S}(t;q)|,\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E5.m1\" class=\"ltx_Math\" alttext=\"m_{q}(K,N)=\\lim_{T\\to\\infty}\\frac{1}{Tq}\\sum_{t=1}^{T}|{\\cal S}(t;q)|,\" display=\"block\"><mrow><mrow><mrow><msub><mi>m</mi><mi>q</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>K</mi><mo>,</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munder><mo movablelimits=\"false\">lim</mo><mrow><mi>T</mi><mo>\u2192</mo><mi mathvariant=\"normal\">\u221e</mi></mrow></munder><mo>\u2061</mo><mrow><mfrac><mn>1</mn><mrow><mi>T</mi><mo>\u2062</mo><mi>q</mi></mrow></mfrac><mo>\u2062</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mrow><mo stretchy=\"false\">|</mo><mrow><mi class=\"ltx_font_mathcaligraphic\">\ud835\udcae</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>t</mi><mo>;</mo><mi>q</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo stretchy=\"false\">|</mo></mrow></mrow></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nwith the optimizing active-user scheduling size given by\n\n\n", "itemtype": "equation", "pos": 16714, "prevtext": "\nwith ${\\cal S}(t;q) = \\cup_j{\\cal S}_j(t;q)$.\nThe maximum multiplexing gain per pilot RE for a given $q=Q$ scheme is given by\n\n", "index": 11, "text": "\\begin{equation}\n\\label{mq-opt}\nm_q^*(N) =\\max_K m_{q}(K,N)\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E6.m1\" class=\"ltx_Math\" alttext=\"m_{q}^{*}(N)=\\max_{K}m_{q}(K,N)\" display=\"block\"><mrow><mrow><msubsup><mi>m</mi><mi>q</mi><mo>*</mo></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><munder><mi>max</mi><mi>K</mi></munder><mo>\u2061</mo><msub><mi>m</mi><mi>q</mi></msub></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>K</mi><mo>,</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\n\\vspace{-0.5cm}\n\n\n\n\n\n\n\n\n\\subsection{Upper Bounds based on Structured Scheduling}\n\nUpper bounds on the multiplexing gain per pilot RE can be obtained by assuming that the region ${\\cal A}$ is blanketed with infinitely many RRH sites and users and assuming the ability to freely schedule users on suitably chosen locations. For this upper bound we focus on $q =Q= 1$. On a given slot, our aim is to schedule in ${\\cal A}$ as many as users possible that can be served by an RRH without causing pilot contamination to other users, thereby obtaining an upper-bound on the multiplexing gains per pilot RE with  randomly scheduled users and randomly placed RRHs. Since the area is completely covered by RRHs, a scheduled user can be served as long as it has an infinitesimal area in its disc of radius $r_0$ with no other user disc overlaping. This can be achieved by packing as many discs as possible over the coverage area ${\\cal A}$ with a non-overlapped area per  disc. \n\nAs explained next, the maximum packing can be obtained by putting the discs on a hexagonal lattice. In particular, consider a hexagonal lattice in the form of two sets of offset square-grid sub-lattices. Letting $d = 2r_0$ denote the diameter of the user discs with area of size  $D= (\\pi/4) d^2$, we consider spacing the lattice points at a distance of $d/\\sqrt{\\beta}$. Such lattice examples for various values of $ \\beta \\in \\{ 0.5,1.5,2\\}$ are shown in Fig. \\ref{fig_beta15} where blue and black circles simply correspond to the two set of discs on the two square sub-lattices. To avoid ``edge\" effects we scale the area ${\\cal A}$ to ``match\" the lattice. Assume that $c^2$ discs are spaced on each of the blue and black rectangular sub-lattice (See Fig. \\ref{fig_beta15} with $c = 3$ examples) and that there is one scheduled user at the center of each disc.  With this lattice-based scheduling there are $K_{{\\cal L}}(\\beta) = 2 c^2$ many scheduled users in each slot. For a given $ \\beta$, $A = c^2 d^2 /\\beta$ and the set of active users is $K_{{\\cal L}}(\\beta) = (\\pi/2)\\beta( A/D)$.  As the figure illustrates, for $\\beta<2$, all active users are served as there is at least a point within each active users disc  that is not overlapped by  other user discs. Since for $\\beta>2$, no scheduled user can be served (as any point in its region  is covered by other user discs), the multiplexing gains per dimension are maximized with $\\beta=2$ yielding an upper bound on the multiplexing gain equal to $m_{\\rm max}= \\pi A/D$.\n\nNext consider lattice-based scheduling in the case of  finite $N$, there is a trade-off between the number of active users and the probability that a user is served. At one extreme of $ \\beta = 0.5$,  scheduled users are so sparsely located that active user discs do not overlap. In this case as long as an RRH site falls within a user's disc, any scheduled user is served. As we increase $ \\beta$ from 0.5 to 2 the area where the BS has to fall for the user to be served (e.g., the gray area in Fig.\\ref{fig_beta15}-$\\beta = 1.5$) shrinks and eventually becomes a single point at $ \\beta = 2$. Clearly, as $ \\beta$  is increased, more users are scheduled but the probability that a user can be served becomes smaller. \n\nThe maximum multiplexing gain  per RE in a lattice based user scheduling for finite $N$ is given by: \n\n", "itemtype": "equation", "pos": 16847, "prevtext": "\nwith the optimizing active-user scheduling size given by\n\n\n", "index": 13, "text": "\\begin{equation*}\nK^*_q(N) = {\\mathop{\\rm arg\\,max}}_K m_{q}(K,N)\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex1.m1\" class=\"ltx_Math\" alttext=\"K^{*}_{q}(N)={\\mathop{\\rm arg\\,max}}_{K}m_{q}(K,N)\" display=\"block\"><mrow><mrow><msubsup><mi>K</mi><mi>q</mi><mo>*</mo></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><munder><mrow><mpadded width=\"+1.7pt\"><mi>arg</mi></mpadded><mo movablelimits=\"false\">\u2062</mo><mi>max</mi></mrow><mi>K</mi></munder><mrow><msub><mi>m</mi><mi>q</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>K</mi><mo>,</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nwhere $p_1(\\beta,N)$ is the probability that at least one RRH can serve a user assuming a scheduling lattice with spacing $d/\\sqrt{\\beta}$. An RRH site can serve a user if it falls in the region of the user disc where other user discs overlap. Letting $\\lambda(\\beta)$ denote the area  of this  region, the probability of an RRH site fall within this region is given by $p_1(\\beta,N) =  1 - [1-\\lambda(\\beta)/A]^{N}$.\n\nAs seen in Fig. \\ref{fig_beta15}, for large values of $\\beta$, we can approximate this region by the smallest square that includes that area.The square has sides equal to $ d\\sqrt{2/\\beta}-d$, so the area of interest is given by $ \\lambda(\\beta) \\approx d^2 (\\sqrt{2/\\beta}-1)^2 = (4/\\pi) D (\\sqrt{2/\\beta}-1)^2 $. \n\n\n\n\\begin{figure}\n\\centering\n\\centerline{\\hspace{-0cm}\\includegraphics[width=3.1cm]{beta05}\\hspace{-0.1cm}\\includegraphics[width=3.1cm]{test}\\hspace{-0.1cm}\\includegraphics[width=3.1cm]{beta20}}\n\\vspace*{-.2in}\n\\caption{Lattice based user scheduling with $c = 3$}\n\\label{fig_beta15}\n\n\\end{figure}\n\n\n\n\n\n\\subsection{Random Scheduling Simulations}\nFig. \\ref{fig_MG_vs_N_curves} compares  the upper bound $m_{\\rm max} $, $m^{*\\rm LU}_{1}(N) $ and the performance of the baseline scheme where  only 1 user per RE per RB is served by the system. For high enough number of RRHs where each user has at least one RRH in its vicinity, the baseline scheme has an average multiplexing gain of $1$ per pilot RE. Besides, for various $q$ values, $100$ frames with random user scheduling and random RRH site locations  are run for each $K$ and $N$. The simulated multiplexing gain per pilot RE $m_q(K,N)$ and $m_q^{*}(N)$ (as in (\\ref{mq}) \\& (\\ref{mq-opt})) are obtained. \n\nWe first focus on the $q = 1$ case. As expected, $m_{\\rm max} $ is an upper bound to both $m_1^{*}(N)$ (Sim. $q = 1$ curve) and  $m^{*\\rm LU}_{1}(N) $ (lattice based scheduling). It can be seen that as the number of RRH, $N$, increases the ratio of  $m_{\\rm max}$ to $m_1^{*}(N)$, empirically converges to $\\pi/2$. We can also observe that $m^{*\\rm LU}_{1}(N)$ approaches $m_{\\rm max} $ as $N$ increases and the lattice based scheduling has better performance than random scheduling. \nFig.  \\ref{fig_MG_vs_N_curves} also shows  $m^{*\\rm LR}_{1}(N) $, the multiplexing gains per dimension in the case where the RRH sites are placed one a lattice (similar to the earlier described user lattice) with random UEs scheduling. As seen,  the benefits from careful placement of the RRH sites are only marginal with respect to random RRH site placement.\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7.5cm]{MG_vs_N_curves}}\n\\vspace*{-.1in}\n\\caption{$A/D = 10$ and $Q = 8$}\n\\label{fig_MG_vs_N_curves}\n\\vspace*{-.2in}\n\\end{figure}\n\n Fig. \\ref{fig_MG_vs_N_curves}  also shows the multiplexing gains for random UE scheduling and random placement of the RRH sites, with $q=2$, 4, and 8. As seen, aligning user codes in a single pilot dimension (i.e., $q = 1$) yields higher multiplexing gains per RE than the $q=2$, 4, or 8. \n\nFigs.~\\ref{fig_MG_vs_NK_curves} and \\ref{fig_MG_vs_collision_prov} shed some light into why $q=1$ performs best. \nFig.~\\ref{fig_MG_vs_NK_curves} shows the multiplexing gains per RE  as a function of the number of scheduled users per RE. Inspection reveals that the optimal number of active-users per dimension, $K^*_q(N)/q$,  decreases with increasing $q$ values. Fig.~\\ref{fig_MG_vs_collision_prov} shows the active-user collision probability (see (\\ref{Sjtq})), as a function of the number of scheduled users per RE, and provides some insight into the trend observed in Fig.~\\ref{fig_MG_vs_NK_curves}. While at small numbers of active users per RE, the collision probability is lower at larger $q$ values (see figure inset), in the performance-optimizing regime of large numbers of active-users per dimension,  the collision probability is much lower for $q=1$.  To further understand this, consider a system with $Q>1$ pilot REs per RB,  with $q=1$ and $q=Q$. For $q=Q$ RRH $j$ serves no user  if $|{\\cal K}_j(t)|$ exceeds $Q$.  In contrast, with $q=1$, some users may be served even when  $|{\\cal K}_j(t)|$ exceeds $Q$, as a user is only interfered by the subset of users sharing the same pilot dimension. Effectively, the benefits of the $q = 1$ system can be attributed to ``pilot interference alignment'' of the other-group user pilots away from the user's direction. \n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7cm]{MG_vs_NK_curves}}\n\n\\caption{$N$ = 2048}\n\\label{fig_MG_vs_NK_curves}\n\n\\end{figure}\n\\begin{figure}\n\n\\centering\n\\centerline{\\includegraphics[width=7cm]{MG_vs_collision_prov}}\n\n\\caption{$N$ = 2048}\n\\label{fig_MG_vs_collision_prov}\n\n\\end{figure}\n\n\\subsection{Finite Angular Spreads}\n\nAlthough aggressive pilot reuse and fast user proximity detection can offer substantial increases in multiplexing gains with respect to conventional pilot-assignment schemes, these gains come at a large cost in the number of RRH-sites required. As the earlier examples reveal, the increase in multiplexing gains is sub-logarithimic in the number of RRH sites required.  In this section we leverage the presence of antenna arrays at each RRH site to improve  the number of RRH sites vs. multiplexing gain trade-offs. We remark that placing many array elements on a small footprint at each RRH unit becomes increasingly feasible at higher (e.g., mmWave) frequencies and allows RRH-site sectorization.  Sectorization is a well known technique that increases the spectral efficiency per site in cellular networks by partitioning each site radially into sectors and reusing the spectral resources in each sector\\cite{valenzuela-sector}.   \n\nWe assume a simplified scenario where the  channel of any given user  in the proximity of a given RRH site (i.e. within distance $r_o$) has a finite angular spread $\\theta>0$.  An RRH can separate the received pilot observations (\\ref{Ymj-pilots}) into angular ``sectors'' by appropriate  spatial filtering on ${\\bf Y}_j[n]$ (for a given sector this may correspond to, e.g.,  projecting ${\\bf Y}_j[n]$ onto a set of DFT vectors spanning a sector's angular frequency range).  \n\nNote that an active user in the proximity of an RRH site (e.g. within distance $r_o$) will  appear to be present (i.e., its pilot will be received at sufficiently high power) on only the subset of the RRH site sectors that have (significant) overlap with the user's angular spectrum support. Consequently we assume that user $k$ is in proximity of a sector $s$ of RRH $j$, if the distance between user $k$ and RRH $j$ is less than $r_o$, {\\em and} if the intersection of the supports of the angular spectrum of user $k$ and  sector $s$ of RRH $j$ is non-empty.  We can thus consider straighforward extensions of the techniques of the preceding section replacing the notion of RRH sites with RRH-site sectors. For instance, in the system with $q=Q=1$, an RRH-site sector can serve an active user if it is the only active user in proximity to the RRH-site sector. \n\nIn Fig. \\ref{fig_sectors}, a sectorization abstraction is shown where we plot two RRHs within the proximity of one UT with angular spread $\\theta$. Each RRH site has $6$ sectors shown by regions between two consecutive arrows. In this figure,  the UT is in the proximity of one of the sectors of RRH 1 while it is in the proximity of two sectors of RRH 2 as shown by letter $\\sf H$. \n\n\n\n\nFig. \\ref{fig_Sector_vs_NumSites} illustrates the benefits of sectorization comparing against the omni-scenario in Fig. \\ref{fig_MG_vs_N_curves} with $q = 1$ and $Q = 8$. The figure considers user angular spreads of $\\theta=\\pi$ (as in Fig. \\ref{fig_MG_vs_N_curves}) and $\\theta = \\pi/6$. As expected, for $\\theta=\\pi$ we get the ``omni'' performance in Fig. \\ref{fig_MG_vs_N_curves}  with $S = 1$ and  $S = 8$ sectors. When the user-angular spread, however, is $\\theta = \\pi/6$, sectorization provides substantial gains. Indeed, the multiplexing gain obtained by $10^4$ RRHs  (see Fig. \\ref{fig_MG_vs_N_curves}) can be obtained by $45$ RRH sites if $S = 4$ sectors are used,  by $30$ sites if $S = 6$ and by $23$ sites if $S = 8$.\n\nIn this section, we exploited the narrow angular spread of user channels by considering sectorization. In \\cite{Gesbert-aoa}, the same characteristic of user channels is used to carefully design user schedules. In contrast, here, RRH-sector proximity detection combined with aggressive pilot reuse allows us to randomly schedule users while still maintaining high multiplexing gains.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=6cm]{sectors2}}\n\n\\caption{Two RRHs are shown within $r_0$ distance from UT. UT is in the proximity of a sector if its angular spectrum support overlaps with the sector. The sectors where the UT is in the proximity are denoted by $\\sf H$, the others are denoted by $\\sf L$. }\n\\label{fig_sectors}\n\n\\end{figure}\n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7.5cm]{Sector_vs_NumSites}}\n\n\\caption{$q = 1, Q = 8$}\n\\label{fig_Sector_vs_NumSites}\n\n\\end{figure}\n\n\n\n\n\\section{Pilot Coding for Fast Proximity Detection}\n\\label{sec_codes}\nIn this section we present codes for active-user proximity detection.  Following the approach in \\cite{marzetta-massive}  each scheduling slot spans the whole bandwidth and comprises the totality of a set of consecutive OFDM symbols. The time-duration of a slot is within the coherence time of the user channels and that  the maximum user-channel multipath spread is $L$ samples long (with $L$ not exceeding the OFDM circular prefix). $L$ pilot dimensions per user (on distinct OFDM tones) are needed to learn a user's channel over the whole bandwidth for the duration of such a scheduling slot\\footnote{In practice, $\\bar L =  L+\\Delta,\\Delta>0$ many pilot dimensions can be used to ensure the quality of channel estimation based on any $\\bar L$ random pilot locations over OFDM block. In this case, the analysis provided in this section will be valid by using $\\bar L$ instead of $L$.}. In terms of the required training overheads to learn a user's channel, this setting is equivalent  to the abstracted scenario in the previous section whereby each scheduling slot comprises $L$ concurrent RBs and the user channels are quasistatic over each RB \\cite{marzetta-massive}.  Furthermore, the $Q$ pilot dimensions per RB (of the previous section) correspond here to assuming that within each scheduling slot a set of $QL$ orthogonal pilot vectors (spanning $QL$ OFDM time-frequency REs) are allocated for UL training.\n\n\n\nSince at least $L$ UL pilot dimensions are required for learning a users' channel, we consider the case whereby a set of $L'=L+\\ell>L$ pilot dimensions (for some $\\ell>0$ to be determined) are aggressively assigned to a set of $K$ active users across the RRH coverage area. Without loss of generality, we assume that these pilot dimensions correspond to a set of $L'$ REs (on distinct tones) in the OFDM plane. We enumerate the pilot REs shared by an active group from 1 to $L'$ and consider ``on-off'' type pilot codes. The $k$-th active user pilot pattern  is specified by means of an $L'\\times 1$ binary vector ${\\bf b}_k$, describing whether or not user $k$ transmits a pilot in each of the $L'$ RBs in the scheduling slot. Let $b_k[n] = \\{{\\bf b}_k\\}_n$, then user $k$ transmits  a pilot on shared pilot RE $n$ if  $b_k[n] =1$ and remains silent if $b_k[n]=0$.  In Fig.~\\ref{fig_code_pilots}, a simple example is shown with $L = 5$ and $\\ell = 3$ where two users share $8$ pilot dimensions.  \n\nFig.~\\ref{fig_code_pilots} (a) shows the received pilot energy at an RRH if only the first user is in the proximity of this RRH while (b) shows the received pilot energy if only the second user is in the proximity of this RRH. The probability of any pilot dimension being in deep fade is negligible due to large $M$ and coherent combining, and noise floor is easily distinguished from any received pilot energy. Then the individual received pilot energy plots (Fig.~\\ref{fig_code_pilots} (a) \\& (b)) can be also seen as a visualization of the on-off pilot pattern for each user. The specific on-off code assignment to each user in this example lets two users' pilots overlap at pilot dimensions $5, 7$ and $8$. The received pilot energy at a nearby RRH (within $r_0$ distance to both users) is the superimposition of two pilot sequences, shown in Fig.~\\ref{fig_code_pilots}~(c).\n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7cm]{coded-pilot}}\n\n\\caption{Received pilot energy}\n\\label{fig_code_pilots}\n\n\\end{figure}\n\nNext we consider user proximity detection at a fixed RRH site and suppressing the dependence of variables on RRH site index. Let $z_k=1$ if user $k$ is within distance $r_o$ of RRH $j$, and $z_k=0$  otherwise. \nAccording to the example in Fig.~\\ref{fig_rrh_reqs}, to enable proximity detection,  the detection mechanism based on a set of active-user codewords must satisfy the following:\n\\begin{itemize}\n\\item if multiple users are within distance $r_o$ of the RRH site (i.e., if $\\sum_{k=1}^K z_k>1$), the RRH must be able to determine that there is a pilot collision;\n\\item if a single active user is within distance $r_o$ of the RRH site (i.e., if $\\sum_{k=1}^K z_k=1$), the RRH must be able to identify that a single user is in proximity and the identity of that user  (i.e., the $k$ index for which $z_k=1$);\n\\item the RRH must also be able to identify when no users are in proximity of the RRH.\n\\end{itemize}\nWe also note that if a single active user on these $L'$ pilot dimensions is the proximity of the RRH and is detected by the RRH, the user can be served by the RRH provided the user channel can be estimated, that is, provided the user has transmitted  a pilot over at least  $L$ out of of  $L'$ shared pilot REs (i.e., the user codeword must have at least  $L$ ones). Note that, the code example in Fig.~\\ref{fig_code_pilots} with two users satisfies these conditions. If the RRH observes higher than noise floor energy at more than $3$ locations, it rightfully declares a collision (the case seen in Fig.~\\ref{fig_code_pilots} (c)). If it observes exactly $3$ ``off\" pilot dimensions, by matching the on-off pattern it decides who the unique user is (Fig.~\\ref{fig_code_pilots} (a) or (b)). In case it observes no received pilot energy in any of the pilot dimensions, it declares there are no users in its proximity signaling at these pilot dimensions.\n\nInspired by the received pilot energy example shown in Fig.~\\ref{fig_code_pilots}, the pilot energy detection at an RRH can be seen ``OR\"-type channel  (formal justification is also provided at the end of the section),  whereby an RRH receives an ``$1$'' (indicating sufficiently high received power) if at least one active user transmitting a pilot is in the proximity of the RRH and $0$ otherwise. Specifically,  for all $1\\le n \\le L'$, the RRH at pilot RE $n$ observes the following:\n \n", "itemtype": "equation", "pos": 20255, "prevtext": "\n\\vspace{-0.5cm}\n\n\n\n\n\n\n\n\n\\subsection{Upper Bounds based on Structured Scheduling}\n\nUpper bounds on the multiplexing gain per pilot RE can be obtained by assuming that the region ${\\cal A}$ is blanketed with infinitely many RRH sites and users and assuming the ability to freely schedule users on suitably chosen locations. For this upper bound we focus on $q =Q= 1$. On a given slot, our aim is to schedule in ${\\cal A}$ as many as users possible that can be served by an RRH without causing pilot contamination to other users, thereby obtaining an upper-bound on the multiplexing gains per pilot RE with  randomly scheduled users and randomly placed RRHs. Since the area is completely covered by RRHs, a scheduled user can be served as long as it has an infinitesimal area in its disc of radius $r_0$ with no other user disc overlaping. This can be achieved by packing as many discs as possible over the coverage area ${\\cal A}$ with a non-overlapped area per  disc. \n\nAs explained next, the maximum packing can be obtained by putting the discs on a hexagonal lattice. In particular, consider a hexagonal lattice in the form of two sets of offset square-grid sub-lattices. Letting $d = 2r_0$ denote the diameter of the user discs with area of size  $D= (\\pi/4) d^2$, we consider spacing the lattice points at a distance of $d/\\sqrt{\\beta}$. Such lattice examples for various values of $ \\beta \\in \\{ 0.5,1.5,2\\}$ are shown in Fig. \\ref{fig_beta15} where blue and black circles simply correspond to the two set of discs on the two square sub-lattices. To avoid ``edge\" effects we scale the area ${\\cal A}$ to ``match\" the lattice. Assume that $c^2$ discs are spaced on each of the blue and black rectangular sub-lattice (See Fig. \\ref{fig_beta15} with $c = 3$ examples) and that there is one scheduled user at the center of each disc.  With this lattice-based scheduling there are $K_{{\\cal L}}(\\beta) = 2 c^2$ many scheduled users in each slot. For a given $ \\beta$, $A = c^2 d^2 /\\beta$ and the set of active users is $K_{{\\cal L}}(\\beta) = (\\pi/2)\\beta( A/D)$.  As the figure illustrates, for $\\beta<2$, all active users are served as there is at least a point within each active users disc  that is not overlapped by  other user discs. Since for $\\beta>2$, no scheduled user can be served (as any point in its region  is covered by other user discs), the multiplexing gains per dimension are maximized with $\\beta=2$ yielding an upper bound on the multiplexing gain equal to $m_{\\rm max}= \\pi A/D$.\n\nNext consider lattice-based scheduling in the case of  finite $N$, there is a trade-off between the number of active users and the probability that a user is served. At one extreme of $ \\beta = 0.5$,  scheduled users are so sparsely located that active user discs do not overlap. In this case as long as an RRH site falls within a user's disc, any scheduled user is served. As we increase $ \\beta$ from 0.5 to 2 the area where the BS has to fall for the user to be served (e.g., the gray area in Fig.\\ref{fig_beta15}-$\\beta = 1.5$) shrinks and eventually becomes a single point at $ \\beta = 2$. Clearly, as $ \\beta$  is increased, more users are scheduled but the probability that a user can be served becomes smaller. \n\nThe maximum multiplexing gain  per RE in a lattice based user scheduling for finite $N$ is given by: \n\n", "index": 15, "text": "\\begin{equation}\n\\label{eq_m_LU_star}\nm^{*\\rm LU}_{1}(N) =  \\max_{\\beta} K(\\beta)  p_1(\\beta,N), \n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E7.m1\" class=\"ltx_Math\" alttext=\"m^{*\\rm LU}_{1}(N)=\\max_{\\beta}K(\\beta)p_{1}(\\beta,N),\" display=\"block\"><mrow><mrow><mrow><msubsup><mi>m</mi><mn>1</mn><mrow><mi/><mo>*</mo><mi>LU</mi></mrow></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><munder><mi>max</mi><mi>\u03b2</mi></munder><mo>\u2061</mo><mi>K</mi></mrow><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b2</mi><mo stretchy=\"false\">)</mo></mrow><mo>\u2062</mo><msub><mi>p</mi><mn>1</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>\u03b2</mi><mo>,</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\n\nThe simplest codes that enable active-user proximity detection are comprised of $K\\le L+1$ codewords (corresponding to the case $\\ell=1$) given by\n\n", "itemtype": "equation", "pos": 35322, "prevtext": "\nwhere $p_1(\\beta,N)$ is the probability that at least one RRH can serve a user assuming a scheduling lattice with spacing $d/\\sqrt{\\beta}$. An RRH site can serve a user if it falls in the region of the user disc where other user discs overlap. Letting $\\lambda(\\beta)$ denote the area  of this  region, the probability of an RRH site fall within this region is given by $p_1(\\beta,N) =  1 - [1-\\lambda(\\beta)/A]^{N}$.\n\nAs seen in Fig. \\ref{fig_beta15}, for large values of $\\beta$, we can approximate this region by the smallest square that includes that area.The square has sides equal to $ d\\sqrt{2/\\beta}-d$, so the area of interest is given by $ \\lambda(\\beta) \\approx d^2 (\\sqrt{2/\\beta}-1)^2 = (4/\\pi) D (\\sqrt{2/\\beta}-1)^2 $. \n\n\n\n\\begin{figure}\n\\centering\n\\centerline{\\hspace{-0cm}\\includegraphics[width=3.1cm]{beta05}\\hspace{-0.1cm}\\includegraphics[width=3.1cm]{test}\\hspace{-0.1cm}\\includegraphics[width=3.1cm]{beta20}}\n\\vspace*{-.2in}\n\\caption{Lattice based user scheduling with $c = 3$}\n\\label{fig_beta15}\n\n\\end{figure}\n\n\n\n\n\n\\subsection{Random Scheduling Simulations}\nFig. \\ref{fig_MG_vs_N_curves} compares  the upper bound $m_{\\rm max} $, $m^{*\\rm LU}_{1}(N) $ and the performance of the baseline scheme where  only 1 user per RE per RB is served by the system. For high enough number of RRHs where each user has at least one RRH in its vicinity, the baseline scheme has an average multiplexing gain of $1$ per pilot RE. Besides, for various $q$ values, $100$ frames with random user scheduling and random RRH site locations  are run for each $K$ and $N$. The simulated multiplexing gain per pilot RE $m_q(K,N)$ and $m_q^{*}(N)$ (as in (\\ref{mq}) \\& (\\ref{mq-opt})) are obtained. \n\nWe first focus on the $q = 1$ case. As expected, $m_{\\rm max} $ is an upper bound to both $m_1^{*}(N)$ (Sim. $q = 1$ curve) and  $m^{*\\rm LU}_{1}(N) $ (lattice based scheduling). It can be seen that as the number of RRH, $N$, increases the ratio of  $m_{\\rm max}$ to $m_1^{*}(N)$, empirically converges to $\\pi/2$. We can also observe that $m^{*\\rm LU}_{1}(N)$ approaches $m_{\\rm max} $ as $N$ increases and the lattice based scheduling has better performance than random scheduling. \nFig.  \\ref{fig_MG_vs_N_curves} also shows  $m^{*\\rm LR}_{1}(N) $, the multiplexing gains per dimension in the case where the RRH sites are placed one a lattice (similar to the earlier described user lattice) with random UEs scheduling. As seen,  the benefits from careful placement of the RRH sites are only marginal with respect to random RRH site placement.\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7.5cm]{MG_vs_N_curves}}\n\\vspace*{-.1in}\n\\caption{$A/D = 10$ and $Q = 8$}\n\\label{fig_MG_vs_N_curves}\n\\vspace*{-.2in}\n\\end{figure}\n\n Fig. \\ref{fig_MG_vs_N_curves}  also shows the multiplexing gains for random UE scheduling and random placement of the RRH sites, with $q=2$, 4, and 8. As seen, aligning user codes in a single pilot dimension (i.e., $q = 1$) yields higher multiplexing gains per RE than the $q=2$, 4, or 8. \n\nFigs.~\\ref{fig_MG_vs_NK_curves} and \\ref{fig_MG_vs_collision_prov} shed some light into why $q=1$ performs best. \nFig.~\\ref{fig_MG_vs_NK_curves} shows the multiplexing gains per RE  as a function of the number of scheduled users per RE. Inspection reveals that the optimal number of active-users per dimension, $K^*_q(N)/q$,  decreases with increasing $q$ values. Fig.~\\ref{fig_MG_vs_collision_prov} shows the active-user collision probability (see (\\ref{Sjtq})), as a function of the number of scheduled users per RE, and provides some insight into the trend observed in Fig.~\\ref{fig_MG_vs_NK_curves}. While at small numbers of active users per RE, the collision probability is lower at larger $q$ values (see figure inset), in the performance-optimizing regime of large numbers of active-users per dimension,  the collision probability is much lower for $q=1$.  To further understand this, consider a system with $Q>1$ pilot REs per RB,  with $q=1$ and $q=Q$. For $q=Q$ RRH $j$ serves no user  if $|{\\cal K}_j(t)|$ exceeds $Q$.  In contrast, with $q=1$, some users may be served even when  $|{\\cal K}_j(t)|$ exceeds $Q$, as a user is only interfered by the subset of users sharing the same pilot dimension. Effectively, the benefits of the $q = 1$ system can be attributed to ``pilot interference alignment'' of the other-group user pilots away from the user's direction. \n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7cm]{MG_vs_NK_curves}}\n\n\\caption{$N$ = 2048}\n\\label{fig_MG_vs_NK_curves}\n\n\\end{figure}\n\\begin{figure}\n\n\\centering\n\\centerline{\\includegraphics[width=7cm]{MG_vs_collision_prov}}\n\n\\caption{$N$ = 2048}\n\\label{fig_MG_vs_collision_prov}\n\n\\end{figure}\n\n\\subsection{Finite Angular Spreads}\n\nAlthough aggressive pilot reuse and fast user proximity detection can offer substantial increases in multiplexing gains with respect to conventional pilot-assignment schemes, these gains come at a large cost in the number of RRH-sites required. As the earlier examples reveal, the increase in multiplexing gains is sub-logarithimic in the number of RRH sites required.  In this section we leverage the presence of antenna arrays at each RRH site to improve  the number of RRH sites vs. multiplexing gain trade-offs. We remark that placing many array elements on a small footprint at each RRH unit becomes increasingly feasible at higher (e.g., mmWave) frequencies and allows RRH-site sectorization.  Sectorization is a well known technique that increases the spectral efficiency per site in cellular networks by partitioning each site radially into sectors and reusing the spectral resources in each sector\\cite{valenzuela-sector}.   \n\nWe assume a simplified scenario where the  channel of any given user  in the proximity of a given RRH site (i.e. within distance $r_o$) has a finite angular spread $\\theta>0$.  An RRH can separate the received pilot observations (\\ref{Ymj-pilots}) into angular ``sectors'' by appropriate  spatial filtering on ${\\bf Y}_j[n]$ (for a given sector this may correspond to, e.g.,  projecting ${\\bf Y}_j[n]$ onto a set of DFT vectors spanning a sector's angular frequency range).  \n\nNote that an active user in the proximity of an RRH site (e.g. within distance $r_o$) will  appear to be present (i.e., its pilot will be received at sufficiently high power) on only the subset of the RRH site sectors that have (significant) overlap with the user's angular spectrum support. Consequently we assume that user $k$ is in proximity of a sector $s$ of RRH $j$, if the distance between user $k$ and RRH $j$ is less than $r_o$, {\\em and} if the intersection of the supports of the angular spectrum of user $k$ and  sector $s$ of RRH $j$ is non-empty.  We can thus consider straighforward extensions of the techniques of the preceding section replacing the notion of RRH sites with RRH-site sectors. For instance, in the system with $q=Q=1$, an RRH-site sector can serve an active user if it is the only active user in proximity to the RRH-site sector. \n\nIn Fig. \\ref{fig_sectors}, a sectorization abstraction is shown where we plot two RRHs within the proximity of one UT with angular spread $\\theta$. Each RRH site has $6$ sectors shown by regions between two consecutive arrows. In this figure,  the UT is in the proximity of one of the sectors of RRH 1 while it is in the proximity of two sectors of RRH 2 as shown by letter $\\sf H$. \n\n\n\n\nFig. \\ref{fig_Sector_vs_NumSites} illustrates the benefits of sectorization comparing against the omni-scenario in Fig. \\ref{fig_MG_vs_N_curves} with $q = 1$ and $Q = 8$. The figure considers user angular spreads of $\\theta=\\pi$ (as in Fig. \\ref{fig_MG_vs_N_curves}) and $\\theta = \\pi/6$. As expected, for $\\theta=\\pi$ we get the ``omni'' performance in Fig. \\ref{fig_MG_vs_N_curves}  with $S = 1$ and  $S = 8$ sectors. When the user-angular spread, however, is $\\theta = \\pi/6$, sectorization provides substantial gains. Indeed, the multiplexing gain obtained by $10^4$ RRHs  (see Fig. \\ref{fig_MG_vs_N_curves}) can be obtained by $45$ RRH sites if $S = 4$ sectors are used,  by $30$ sites if $S = 6$ and by $23$ sites if $S = 8$.\n\nIn this section, we exploited the narrow angular spread of user channels by considering sectorization. In \\cite{Gesbert-aoa}, the same characteristic of user channels is used to carefully design user schedules. In contrast, here, RRH-sector proximity detection combined with aggressive pilot reuse allows us to randomly schedule users while still maintaining high multiplexing gains.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=6cm]{sectors2}}\n\n\\caption{Two RRHs are shown within $r_0$ distance from UT. UT is in the proximity of a sector if its angular spectrum support overlaps with the sector. The sectors where the UT is in the proximity are denoted by $\\sf H$, the others are denoted by $\\sf L$. }\n\\label{fig_sectors}\n\n\\end{figure}\n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7.5cm]{Sector_vs_NumSites}}\n\n\\caption{$q = 1, Q = 8$}\n\\label{fig_Sector_vs_NumSites}\n\n\\end{figure}\n\n\n\n\n\\section{Pilot Coding for Fast Proximity Detection}\n\\label{sec_codes}\nIn this section we present codes for active-user proximity detection.  Following the approach in \\cite{marzetta-massive}  each scheduling slot spans the whole bandwidth and comprises the totality of a set of consecutive OFDM symbols. The time-duration of a slot is within the coherence time of the user channels and that  the maximum user-channel multipath spread is $L$ samples long (with $L$ not exceeding the OFDM circular prefix). $L$ pilot dimensions per user (on distinct OFDM tones) are needed to learn a user's channel over the whole bandwidth for the duration of such a scheduling slot\\footnote{In practice, $\\bar L =  L+\\Delta,\\Delta>0$ many pilot dimensions can be used to ensure the quality of channel estimation based on any $\\bar L$ random pilot locations over OFDM block. In this case, the analysis provided in this section will be valid by using $\\bar L$ instead of $L$.}. In terms of the required training overheads to learn a user's channel, this setting is equivalent  to the abstracted scenario in the previous section whereby each scheduling slot comprises $L$ concurrent RBs and the user channels are quasistatic over each RB \\cite{marzetta-massive}.  Furthermore, the $Q$ pilot dimensions per RB (of the previous section) correspond here to assuming that within each scheduling slot a set of $QL$ orthogonal pilot vectors (spanning $QL$ OFDM time-frequency REs) are allocated for UL training.\n\n\n\nSince at least $L$ UL pilot dimensions are required for learning a users' channel, we consider the case whereby a set of $L'=L+\\ell>L$ pilot dimensions (for some $\\ell>0$ to be determined) are aggressively assigned to a set of $K$ active users across the RRH coverage area. Without loss of generality, we assume that these pilot dimensions correspond to a set of $L'$ REs (on distinct tones) in the OFDM plane. We enumerate the pilot REs shared by an active group from 1 to $L'$ and consider ``on-off'' type pilot codes. The $k$-th active user pilot pattern  is specified by means of an $L'\\times 1$ binary vector ${\\bf b}_k$, describing whether or not user $k$ transmits a pilot in each of the $L'$ RBs in the scheduling slot. Let $b_k[n] = \\{{\\bf b}_k\\}_n$, then user $k$ transmits  a pilot on shared pilot RE $n$ if  $b_k[n] =1$ and remains silent if $b_k[n]=0$.  In Fig.~\\ref{fig_code_pilots}, a simple example is shown with $L = 5$ and $\\ell = 3$ where two users share $8$ pilot dimensions.  \n\nFig.~\\ref{fig_code_pilots} (a) shows the received pilot energy at an RRH if only the first user is in the proximity of this RRH while (b) shows the received pilot energy if only the second user is in the proximity of this RRH. The probability of any pilot dimension being in deep fade is negligible due to large $M$ and coherent combining, and noise floor is easily distinguished from any received pilot energy. Then the individual received pilot energy plots (Fig.~\\ref{fig_code_pilots} (a) \\& (b)) can be also seen as a visualization of the on-off pilot pattern for each user. The specific on-off code assignment to each user in this example lets two users' pilots overlap at pilot dimensions $5, 7$ and $8$. The received pilot energy at a nearby RRH (within $r_0$ distance to both users) is the superimposition of two pilot sequences, shown in Fig.~\\ref{fig_code_pilots}~(c).\n\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7cm]{coded-pilot}}\n\n\\caption{Received pilot energy}\n\\label{fig_code_pilots}\n\n\\end{figure}\n\nNext we consider user proximity detection at a fixed RRH site and suppressing the dependence of variables on RRH site index. Let $z_k=1$ if user $k$ is within distance $r_o$ of RRH $j$, and $z_k=0$  otherwise. \nAccording to the example in Fig.~\\ref{fig_rrh_reqs}, to enable proximity detection,  the detection mechanism based on a set of active-user codewords must satisfy the following:\n\\begin{itemize}\n\\item if multiple users are within distance $r_o$ of the RRH site (i.e., if $\\sum_{k=1}^K z_k>1$), the RRH must be able to determine that there is a pilot collision;\n\\item if a single active user is within distance $r_o$ of the RRH site (i.e., if $\\sum_{k=1}^K z_k=1$), the RRH must be able to identify that a single user is in proximity and the identity of that user  (i.e., the $k$ index for which $z_k=1$);\n\\item the RRH must also be able to identify when no users are in proximity of the RRH.\n\\end{itemize}\nWe also note that if a single active user on these $L'$ pilot dimensions is the proximity of the RRH and is detected by the RRH, the user can be served by the RRH provided the user channel can be estimated, that is, provided the user has transmitted  a pilot over at least  $L$ out of of  $L'$ shared pilot REs (i.e., the user codeword must have at least  $L$ ones). Note that, the code example in Fig.~\\ref{fig_code_pilots} with two users satisfies these conditions. If the RRH observes higher than noise floor energy at more than $3$ locations, it rightfully declares a collision (the case seen in Fig.~\\ref{fig_code_pilots} (c)). If it observes exactly $3$ ``off\" pilot dimensions, by matching the on-off pattern it decides who the unique user is (Fig.~\\ref{fig_code_pilots} (a) or (b)). In case it observes no received pilot energy in any of the pilot dimensions, it declares there are no users in its proximity signaling at these pilot dimensions.\n\nInspired by the received pilot energy example shown in Fig.~\\ref{fig_code_pilots}, the pilot energy detection at an RRH can be seen ``OR\"-type channel  (formal justification is also provided at the end of the section),  whereby an RRH receives an ``$1$'' (indicating sufficiently high received power) if at least one active user transmitting a pilot is in the proximity of the RRH and $0$ otherwise. Specifically,  for all $1\\le n \\le L'$, the RRH at pilot RE $n$ observes the following:\n \n", "index": 17, "text": "\\begin{equation}\n \\label{or-channel-eqn}\n \\epsilon[n]  = {\\rm OR}(z_1 b_1[n], z_2 b_2[n], \\cdots, z_K b_K[n]) \\ , \n \\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E8.m1\" class=\"ltx_Math\" alttext=\"\\epsilon[n]={\\rm OR}(z_{1}b_{1}[n],z_{2}b_{2}[n],\\cdots,z_{K}b_{K}[n])\\ ,\" display=\"block\"><mrow><mrow><mrow><mi>\u03f5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mi>OR</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mrow><msub><mi>z</mi><mn>1</mn></msub><mo>\u2062</mo><msub><mi>b</mi><mn>1</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>,</mo><mrow><msub><mi>z</mi><mn>2</mn></msub><mo>\u2062</mo><msub><mi>b</mi><mn>2</mn></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>,</mo><mi mathvariant=\"normal\">\u22ef</mi><mo>,</mo><mrow><msub><mi>z</mi><mi>K</mi></msub><mo>\u2062</mo><msub><mi>b</mi><mi>K</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo rspace=\"7.5pt\" stretchy=\"false\">)</mo></mrow></mrow></mrow><mo>,</mo></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\n\n\nIt can be verified that for the user-proximity  model (\\ref{or-channel-eqn}), the observations $\\{\\epsilon[n]; \\ \\  1\\le n \\le L'\\}$ satisfy the following:\n\n", "itemtype": "equation", "pos": 35601, "prevtext": "\n\nThe simplest codes that enable active-user proximity detection are comprised of $K\\le L+1$ codewords (corresponding to the case $\\ell=1$) given by\n\n", "index": 19, "text": "\\begin{equation}\n\\label{max-eff-codes}\nb^{(1)}_k[n] = 1 -\\delta[k-n], \\;\\text {for $1\\le k\\le K$.}\n\\end{equation}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.E9.m1\" class=\"ltx_Math\" alttext=\"b^{(1)}_{k}[n]=1-\\delta[k-n],\\;\\text{for $1\\leq k\\leq K$.}\" display=\"block\"><mrow><mrow><msubsup><mi>b</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mrow><mn>1</mn><mo>-</mo><mrow><mi>\u03b4</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mrow><mi>k</mi><mo>-</mo><mi>n</mi></mrow><mo stretchy=\"false\">]</mo></mrow></mrow></mrow><mo rspace=\"5.3pt\">,</mo><mrow><mtext>for\u00a0</mtext><mrow><mn>1</mn><mo>\u2264</mo><mi>k</mi><mo>\u2264</mo><mi>K</mi></mrow><mtext>.</mtext></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\n\nConsequently, if the RRH receives the all 1's pattern (active-user pilot collision) or the all 0's pattern (no active user is close by) it does not send any user data. If, however, it receives a pattern $\\epsilon[n] = 1-\\delta[n-k_o]$, it can identify the single user in proximity as user $k_o$.  Effectively, a single user is present when there is exactly one zero observed, and the index of the pilot RE where a  zero is observed  identifies the user  in proximity (as this is the only user that did not transmit a pilot on the given pilot RE). Subsequently, when user $k_o$ is identified as the single user in proximity, the set of $L$ pilot observations on the $L$ pilot REs except  pilot RE $k_o$ allow the RRH to estimate the user channel across the whole bandwidth and thus serve the user in the data portion of the scheduling slot.  \n\n\n\nSince $L+1$ pilot REs are used per user, as opposed to the minimum required of $L$, the pilot code efficiency is $\\eta= L/(L+1)$. Furthermore,  letting $K_{\\rm max}$ denote the number of code codewords, the maximum number of active users that can be supported on the common set of $L'$ pilot REs by a given code  is $K_{\\rm max}$.  For the code  in (\\ref{max-eff-codes}), $ K_{\\rm max}=L+1$ users.\n\nExtensions of the code in (\\ref{max-eff-codes}) can be developed that trade off  $\\eta$ with  $ K_{\\rm max}$. One such family of codes that includes the code in (\\ref{max-eff-codes}) is parametrized by a pair of integers $L$ and $\\ell$ with  $\\ell\\ge 1$. The code for a given $(\\ell, L)$ pair is the constant weight code comprising all  binary codewords of length $L'=L+\\ell$, with $L$ ones and $\\ell$ zeros. The active users using such a code share $L'=L+\\ell$ REs for UL training.\n\nConsider using such a code for a fixed $\\ell$  and assume each active user (sharing the $L+\\ell$ REs for UL training) is assigned a unique codeword. For the model (\\ref{or-channel-eqn}), it can be readily verified that if more than 1 active users are in the proximity of the RRH, then there are at most $\\ell-1$ zeros in $\\{\\epsilon[n]\\}$, while the presence and identity of a single user in proximity are readily recovered at the RRH from the set of $\\ell$ values of $n$ for which $\\epsilon[n]=0$. Also, the observations on the $L$ pilot REs where the detected user has ones in its codeword allow the RRH to estimate the active user channel over the whole bandwidth and serve the user. Clearly, $K^{(\\ell)}_{\\rm max} = {L+\\ell \\choose \\ell}$,  and $\\eta^{(\\ell)} = L/(L+\\ell)$.\n\nGiven a  target value for $K$, the number of active users on a set of pilot REs, we may select the code\n(among the ones for which $K^{(\\ell)}_{\\rm max}\\ge K $) that yields the highest efficiency. This is equivalent to finding the lowest $\\ell$  for which   $K\\le {L+\\ell \\choose \\ell}$. Hence, the highest efficiency for a given $K$ is given by\n\n\\vspace{-0.5cm}\n\n", "itemtype": "equation", "pos": 35873, "prevtext": "\n\n\nIt can be verified that for the user-proximity  model (\\ref{or-channel-eqn}), the observations $\\{\\epsilon[n]; \\ \\  1\\le n \\le L'\\}$ satisfy the following:\n\n", "index": 21, "text": "\\begin{equation*}\n \\epsilon[n]   =\\begin{cases} 1 & \\text{if $\\sum_{k=1}^K z_k>1$} \\\\ 1\\!-\\!\\delta[n\\!-\\!k_o] & \\text{if $z_k=\\delta[k\\!-\\!k_o]$ for some $k_o$} \\\\ 0 & \\text{if $z_k=0$ for all $1\\le k \\le K$} \\end{cases}.\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex2.m1\" class=\"ltx_Math\" alttext=\"\\epsilon[n]=\\begin{cases}1&amp;\\text{if $\\sum_{k=1}^{K}z_{k}&gt;1$}\\\\&#10;1\\!-\\!\\delta[n\\!-\\!k_{o}]&amp;\\text{if $z_{k}=\\delta[k\\!-\\!k_{o}]$ for some $k_{o}%&#10;$}\\\\&#10;0&amp;\\text{if $z_{k}=0$ for all $1\\leq k\\leq K$}\\end{cases}.\" display=\"block\"><mrow><mrow><mrow><mi>\u03f5</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mrow><mtext>if\u00a0</mtext><mrow><mrow><mstyle displaystyle=\"false\"><msubsup><mo largeop=\"true\" symmetric=\"true\">\u2211</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup></mstyle><msub><mi>z</mi><mi>k</mi></msub></mrow><mo>&gt;</mo><mn>1</mn></mrow></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mrow><mpadded width=\"-1.7pt\"><mn>1</mn></mpadded><mo rspace=\"0.8pt\">-</mo><mrow><mi>\u03b4</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mrow><mpadded width=\"-1.7pt\"><mi>n</mi></mpadded><mo rspace=\"0.8pt\">-</mo><msub><mi>k</mi><mi>o</mi></msub></mrow><mo stretchy=\"false\">]</mo></mrow></mrow></mrow></mtd><mtd columnalign=\"left\"><mrow><mtext>if\u00a0</mtext><mrow><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><mrow><mi>\u03b4</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mrow><mpadded width=\"-1.7pt\"><mi>k</mi></mpadded><mo rspace=\"0.8pt\">-</mo><msub><mi>k</mi><mi>o</mi></msub></mrow><mo stretchy=\"false\">]</mo></mrow></mrow></mrow><mtext>\u00a0for some\u00a0</mtext><msub><mi>k</mi><mi>o</mi></msub></mrow></mtd></mtr><mtr><mtd columnalign=\"left\"><mn>0</mn></mtd><mtd columnalign=\"left\"><mrow><mtext>if\u00a0</mtext><mrow><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><mn>0</mn></mrow><mtext>\u00a0for all\u00a0</mtext><mrow><mn>1</mn><mo>\u2264</mo><mi>k</mi><mo>\u2264</mo><mi>K</mi></mrow></mrow></mtd></mtr></mtable></mrow></mrow><mo>.</mo></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\n\n\nSubsequently, the achieved net multiplexing gains by the RRH system is given by $m_{\\rm net} (K,L) = m(K) \\,\\eta^*(K;L) \\ .$\n\nFig.~\\ref{fig_code_eff} shows the maximum efficiency possible with the given family of codes as a function of $K$, for various values of $L$.  As seen, even small values of $L$ provides high efficiencies.\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7cm]{code_efficiency_vs_K_mp}}\n\\vspace*{-.30in}\n\\caption{Code Efficiency vs. number of active users per pilot dimension for various values of $L$ .}\n\\label{fig_code_eff}\n\\vspace*{-.2in}\n\\end{figure}\n\\vspace{-0.04cm}\nFinally, it is worth justifying the use of the OR channel in (\\ref{or-channel-eqn}) at  RRH site $j$.   Given an $L$-tap channel $\\tilde{{\\bf h}}_{k}[\\tau]$ between user $k$ and  RRH site $j$ (suppressing again the dependence of variables on $j$), the channel response on  tone $n$ is given by\n", "itemtype": "equation", "pos": 38982, "prevtext": "\n\nConsequently, if the RRH receives the all 1's pattern (active-user pilot collision) or the all 0's pattern (no active user is close by) it does not send any user data. If, however, it receives a pattern $\\epsilon[n] = 1-\\delta[n-k_o]$, it can identify the single user in proximity as user $k_o$.  Effectively, a single user is present when there is exactly one zero observed, and the index of the pilot RE where a  zero is observed  identifies the user  in proximity (as this is the only user that did not transmit a pilot on the given pilot RE). Subsequently, when user $k_o$ is identified as the single user in proximity, the set of $L$ pilot observations on the $L$ pilot REs except  pilot RE $k_o$ allow the RRH to estimate the user channel across the whole bandwidth and thus serve the user in the data portion of the scheduling slot.  \n\n\n\nSince $L+1$ pilot REs are used per user, as opposed to the minimum required of $L$, the pilot code efficiency is $\\eta= L/(L+1)$. Furthermore,  letting $K_{\\rm max}$ denote the number of code codewords, the maximum number of active users that can be supported on the common set of $L'$ pilot REs by a given code  is $K_{\\rm max}$.  For the code  in (\\ref{max-eff-codes}), $ K_{\\rm max}=L+1$ users.\n\nExtensions of the code in (\\ref{max-eff-codes}) can be developed that trade off  $\\eta$ with  $ K_{\\rm max}$. One such family of codes that includes the code in (\\ref{max-eff-codes}) is parametrized by a pair of integers $L$ and $\\ell$ with  $\\ell\\ge 1$. The code for a given $(\\ell, L)$ pair is the constant weight code comprising all  binary codewords of length $L'=L+\\ell$, with $L$ ones and $\\ell$ zeros. The active users using such a code share $L'=L+\\ell$ REs for UL training.\n\nConsider using such a code for a fixed $\\ell$  and assume each active user (sharing the $L+\\ell$ REs for UL training) is assigned a unique codeword. For the model (\\ref{or-channel-eqn}), it can be readily verified that if more than 1 active users are in the proximity of the RRH, then there are at most $\\ell-1$ zeros in $\\{\\epsilon[n]\\}$, while the presence and identity of a single user in proximity are readily recovered at the RRH from the set of $\\ell$ values of $n$ for which $\\epsilon[n]=0$. Also, the observations on the $L$ pilot REs where the detected user has ones in its codeword allow the RRH to estimate the active user channel over the whole bandwidth and serve the user. Clearly, $K^{(\\ell)}_{\\rm max} = {L+\\ell \\choose \\ell}$,  and $\\eta^{(\\ell)} = L/(L+\\ell)$.\n\nGiven a  target value for $K$, the number of active users on a set of pilot REs, we may select the code\n(among the ones for which $K^{(\\ell)}_{\\rm max}\\ge K $) that yields the highest efficiency. This is equivalent to finding the lowest $\\ell$  for which   $K\\le {L+\\ell \\choose \\ell}$. Hence, the highest efficiency for a given $K$ is given by\n\n\\vspace{-0.5cm}\n\n", "index": 23, "text": "\\begin{equation*}\n\\label{max-code-eff-vs-K}\n\\eta^*\\!(K;\\!L)\\!  =\\!\n\\begin{cases}\n1 \\!&\\!\\! \\text{if $K=1$}\\\\\n\\frac{L}{L+\\ell} \\!&\\! \\!\\text{if ${L\\!+\\!\\ell\\!-\\!1 \\choose \\ell-1}\\!< \\!K\\!\\le\\!{L\\!+\\!\\ell \\choose \\ell}$ for some $ \\ell\\!\\ge \\!1$}\n\\end{cases}\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex3.m1\" class=\"ltx_Math\" alttext=\"\\eta^{*}\\!(K;\\!L)\\!=\\!\\begin{cases}1&amp;\\!\\!\\text{if $K=1$}\\\\&#10;\\frac{L}{L+\\ell}&amp;\\!\\!\\text{if ${L\\!+\\!\\ell\\!-\\!1\\choose\\ell-1}\\!&lt;\\!K\\!\\leq\\!{L%&#10;\\!+\\!\\ell\\choose\\ell}$ for some $\\ell\\!\\geq\\!1$}\\end{cases}\" display=\"block\"><mrow><mrow><mpadded width=\"-1.7pt\"><msup><mi>\u03b7</mi><mo>*</mo></msup></mpadded><mo>\u2062</mo><mrow><mo stretchy=\"false\">(</mo><mi>K</mi><mo rspace=\"0.8pt\">;</mo><mi>L</mi><mo rspace=\"0.8pt\" stretchy=\"false\">)</mo></mrow></mrow><mo rspace=\"0.8pt\">=</mo><mrow><mo>{</mo><mtable columnspacing=\"5pt\" displaystyle=\"true\" rowspacing=\"0pt\"><mtr><mtd columnalign=\"left\"><mn>1</mn></mtd><mtd columnalign=\"left\"><mpadded lspace=\"-3.4pt\" width=\"-3.4pt\"><mrow><mtext>if\u00a0</mtext><mrow><mi>K</mi><mo>=</mo><mn>1</mn></mrow></mrow></mpadded></mtd></mtr><mtr><mtd columnalign=\"left\"><mstyle displaystyle=\"false\"><mfrac><mi>L</mi><mrow><mi>L</mi><mo>+</mo><mi mathvariant=\"normal\">\u2113</mi></mrow></mfrac></mstyle></mtd><mtd columnalign=\"left\"><mpadded lspace=\"-3.4pt\" width=\"-3.4pt\"><mrow><mtext>if\u00a0</mtext><mrow><mpadded width=\"-1.7pt\"><mrow><mo>(</mo><mstyle displaystyle=\"false\"><mfrac linethickness=\"0pt\"><mrow><mrow><mpadded width=\"-1.7pt\"><mi>L</mi></mpadded><mo rspace=\"0.8pt\">+</mo><mpadded width=\"-1.7pt\"><mi mathvariant=\"normal\">\u2113</mi></mpadded></mrow><mo rspace=\"0.8pt\">-</mo><mn>1</mn></mrow><mrow><mi mathvariant=\"normal\">\u2113</mi><mo>-</mo><mn>1</mn></mrow></mfrac></mstyle><mo>)</mo></mrow></mpadded><mo rspace=\"0.8pt\">&lt;</mo><mpadded width=\"-1.7pt\"><mi>K</mi></mpadded><mo rspace=\"0.8pt\">\u2264</mo><mrow><mo>(</mo><mstyle displaystyle=\"false\"><mfrac linethickness=\"0pt\"><mrow><mpadded width=\"-1.7pt\"><mi>L</mi></mpadded><mo rspace=\"0.8pt\">+</mo><mi mathvariant=\"normal\">\u2113</mi></mrow><mi mathvariant=\"normal\">\u2113</mi></mfrac></mstyle><mo>)</mo></mrow></mrow><mtext>\u00a0for some\u00a0</mtext><mrow><mpadded width=\"-1.7pt\"><mi mathvariant=\"normal\">\u2113</mi></mpadded><mo rspace=\"0.8pt\">\u2265</mo><mn>1</mn></mrow></mrow></mpadded></mtd></mtr></mtable></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nwhere $2\\pi/N$ is the OFDM tone spacing.\nAssuming also that the $\\tilde{{\\bf h}}_{k}[\\tau]$'s are independent in $k$ and $\\tau$, and that $\\tilde{{\\bf h}}_{k}[\\tau]\\sim{\\cal C}{\\cal N}(0, \\rho_{k,\\tau}{\\bf I})$ with $\\rho_{k,\\tau}$ unknown we have $g_{k} = \\sum_{\\tau=0}^{L-1} \\rho_{k,\\tau}$.\n\nNext, note that the observation on the $n$-th pilot RE ($n$-th OFDM tone) is given by the $Q=1$ specialization of (\\ref{Ymj-pilots})\n\n", "itemtype": "equation", "pos": 40158, "prevtext": "\n\n\nSubsequently, the achieved net multiplexing gains by the RRH system is given by $m_{\\rm net} (K,L) = m(K) \\,\\eta^*(K;L) \\ .$\n\nFig.~\\ref{fig_code_eff} shows the maximum efficiency possible with the given family of codes as a function of $K$, for various values of $L$.  As seen, even small values of $L$ provides high efficiencies.\n\\begin{figure}\n\\centering\n\\centerline{\\includegraphics[width=7cm]{code_efficiency_vs_K_mp}}\n\\vspace*{-.30in}\n\\caption{Code Efficiency vs. number of active users per pilot dimension for various values of $L$ .}\n\\label{fig_code_eff}\n\\vspace*{-.2in}\n\\end{figure}\n\\vspace{-0.04cm}\nFinally, it is worth justifying the use of the OR channel in (\\ref{or-channel-eqn}) at  RRH site $j$.   Given an $L$-tap channel $\\tilde{{\\bf h}}_{k}[\\tau]$ between user $k$ and  RRH site $j$ (suppressing again the dependence of variables on $j$), the channel response on  tone $n$ is given by\n", "index": 25, "text": "\n\\[\n{\\bf h}_{k}[n] = \\sum_{\\tau=0}^{L-1} \\tilde{{\\bf h}}_{k}[\\tau]e^{-j\\frac{2\\pi}{N}n\\tau}\n\\]\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex4.m1\" class=\"ltx_Math\" alttext=\"{\\bf h}_{k}[n]=\\sum_{\\tau=0}^{L-1}\\tilde{{\\bf h}}_{k}[\\tau]e^{-j\\frac{2\\pi}{N}%&#10;n\\tau}\" display=\"block\"><mrow><mrow><msub><mi>\ud835\udc21</mi><mi>k</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>\u03c4</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>L</mi><mo>-</mo><mn>1</mn></mrow></munderover><mrow><msub><mover accent=\"true\"><mi>\ud835\udc21</mi><mo stretchy=\"false\">~</mo></mover><mi>k</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>\u03c4</mi><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msup><mi>e</mi><mrow><mo>-</mo><mrow><mi>j</mi><mo>\u2062</mo><mfrac><mrow><mn>2</mn><mo>\u2062</mo><mi>\u03c0</mi></mrow><mi>N</mi></mfrac><mo>\u2062</mo><mi>n</mi><mo>\u2062</mo><mi>\u03c4</mi></mrow></mrow></msup></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nwith $b_k[n]$ denoting the pilot of user $k$ on the $n$-th RE (with $b_k[n]\\in\\{0,1\\}$).   The RRH site first obtains the sample-average received energy per antenna estimate $\\hat{{\\cal E}}[n] =\\| {\\bf y}[n] \\|^2/M$.\n\nNoting that ${\\mbox{\\bb E}}\\left[\\hat{{\\cal E}}[n]\\right] = \\sum_{k=1}^{K} b_k[n] g_{k} +N_o$,\na hypothesis test of the form\n\n", "itemtype": "equation", "pos": 40680, "prevtext": "\nwhere $2\\pi/N$ is the OFDM tone spacing.\nAssuming also that the $\\tilde{{\\bf h}}_{k}[\\tau]$'s are independent in $k$ and $\\tau$, and that $\\tilde{{\\bf h}}_{k}[\\tau]\\sim{\\cal C}{\\cal N}(0, \\rho_{k,\\tau}{\\bf I})$ with $\\rho_{k,\\tau}$ unknown we have $g_{k} = \\sum_{\\tau=0}^{L-1} \\rho_{k,\\tau}$.\n\nNext, note that the observation on the $n$-th pilot RE ($n$-th OFDM tone) is given by the $Q=1$ specialization of (\\ref{Ymj-pilots})\n\n", "index": 27, "text": "\\begin{equation*}\n\\label{yvj-pilots}\n{\\bf y}[n] = \\sum_{k=1}^{K} b_{k}[n] {\\bf h}^{\\sf T}_{k}[n]  +{\\bf w}[n]\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex5.m1\" class=\"ltx_Math\" alttext=\"{\\bf y}[n]=\\sum_{k=1}^{K}b_{k}[n]{\\bf h}^{\\sf T}_{k}[n]+{\\bf w}[n]\" display=\"block\"><mrow><mrow><mi>\ud835\udc32</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mrow><mrow><munderover><mo largeop=\"true\" movablelimits=\"false\" symmetric=\"true\">\u2211</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mrow><msub><mi>b</mi><mi>k</mi></msub><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><mo>\u2062</mo><msubsup><mi>\ud835\udc21</mi><mi>k</mi><mi>\ud835\uddb3</mi></msubsup><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mrow><mo>+</mo><mrow><mi>\ud835\udc30</mi><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow></mrow></mrow></math>", "type": "latex"}, {"file": "1601.01983.tex", "nexttext": "\nfor some appropriately defined threshold enables proximity detection. For the abstracted example of Sec.~\\ref{sec_system_model},  where a user's large scale gain $g_{k}=z_{k}g$, i.e., it is a non-zero value $g$ if the user  $k$ is within $r_o$ distance of the RRH  $j$ and zero otherwise, setting the threshold to $\\Gamma=0.5g+N_o$, and taking the limit $M\\to\\infty$ yields $\\hat{\\epsilon}[n] = \\epsilon[n]$, with $\\epsilon[n]$ from (\\ref{or-channel-eqn}).\n\n\n\n\n\n\n\n\n\n\n\\bibliographystyle{IEEEtran}\n\\bibliography{IEEEabrv,refs}\n\n\n\n\n", "itemtype": "equation", "pos": 41149, "prevtext": "\nwith $b_k[n]$ denoting the pilot of user $k$ on the $n$-th RE (with $b_k[n]\\in\\{0,1\\}$).   The RRH site first obtains the sample-average received energy per antenna estimate $\\hat{{\\cal E}}[n] =\\| {\\bf y}[n] \\|^2/M$.\n\nNoting that ${\\mbox{\\bb E}}\\left[\\hat{{\\cal E}}[n]\\right] = \\sum_{k=1}^{K} b_k[n] g_{k} +N_o$,\na hypothesis test of the form\n\n", "index": 29, "text": "\\begin{equation*}\n\\hat{{\\cal E}}[n]\n\\quad\\mathop{\\gtreqless}_{\\hat{\\epsilon}[n]=0}^{\\hat{\\epsilon}[n]=1}\\quad \\Gamma\n\\end{equation*}\n", "mathml": "<math xmlns=\"http://www.w3.org/1998/Math/MathML\" id=\"S0.Ex6.m1\" class=\"ltx_Math\" alttext=\"\\hat{{\\cal E}}[n]\\quad\\mathop{\\gtreqless}_{\\hat{\\epsilon}[n]=0}^{\\hat{\\epsilon%&#10;}[n]=1}\\quad\\Gamma\" display=\"block\"><mrow><mrow><mover accent=\"true\"><mi class=\"ltx_font_mathcaligraphic\">\u2130</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><munderover><mo movablelimits=\"false\">\u22db</mo><mrow><mrow><mover accent=\"true\"><mi>\u03f5</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mn>0</mn></mrow><mrow><mrow><mover accent=\"true\"><mi>\u03f5</mi><mo stretchy=\"false\">^</mo></mover><mo>\u2062</mo><mrow><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow></mrow><mo>=</mo><mn>1</mn></mrow></munderover><mo mathvariant=\"italic\" separator=\"true\">\u2003</mo><mi mathvariant=\"normal\">\u0393</mi></mrow></math>", "type": "latex"}]